{"version":3,"sources":["webpack:///src/app/apps/email/app.state.ts","webpack:///src/app/apps/email/mail-compose/mail-compose.component.ts","webpack:///src/app/apps/email/mail-compose/mail-compose.component.html","webpack:///src/app/apps/email/mail-detail/mail-detail.component.ts","webpack:///src/app/apps/email/mail-detail/mail-detail.component.html","webpack:///src/app/apps/email/mail-list/mail-list.component.ts","webpack:///src/app/apps/email/mail-list/mail-list.component.html","webpack:///src/app/apps/email/mail.component.ts","webpack:///src/app/apps/email/mail.component.html","webpack:///src/app/apps/email/mail.module.ts","webpack:///src/app/apps/email/mail.service.ts","webpack:///src/app/apps/email/pipes/mail-search.pipe.ts","webpack:///src/app/apps/email/pipes/pipes.module.ts"],"names":["AppState","_data","_dataStream$","asObservable","_subscriptions","Map","subscribe","data","_onEvent","event","value","current","next","callback","subscribers","get","push","set","forEach","call","MailComposeComponent","selector","encapsulation","None","templateUrl","MailDetailComponent","service","route","router","replyMessage","params","switchMap","getMail","mail","emit","id","then","trash","sent","draft","starred","navigate","MailListComponent","state","events","unSelectAll","searchText","val","markAllAsRead","markAllAsUnRead","deleteAllCheckedMail","getMails","mails","type","getInboxMails","getStarredMails","getSentMails","getDraftMails","getTrashMails","toggleStatus","isAllSelected","result","selected","every","unread","toggleAll","MailComponent","markAsRead","markAsUnRead","deleteChecked","status","snapshot","firstChild","setTimeout","notifyDataChanged","openClleft","getBack","setAsRead","setAsUnRead","deleteCheckedMail","styleUrls","providers","routes","path","component","children","redirectTo","pathMatch","MailModule","forChild","imports","declarations","Mail","sender","senderMail","subject","date","body","attachment","attachments","Mails","mailsPromise","Promise","resolve","MailService","filter","find","MailSearchPipe","args","RegExp","search","name","PipesModule","exports"],"mappings":"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","file":"apps-email-mail-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class AppState {\r\n\r\n  private _data = new Subject<Object>();\r\n  private _dataStream$ = this._data.asObservable();\r\n\r\n  private _subscriptions: Map<string, Array<Function>> = new Map<string, Array<Function>>();\r\n\r\n  constructor() {\r\n    this._dataStream$.subscribe((data) => this._onEvent(data));\r\n  }\r\n\r\n  notifyDataChanged(event, value) {\r\n\r\n    const current = this._data[event];\r\n    if (current !== value) {\r\n      this._data[event] = value;\r\n\r\n      this._data.next({\r\n        event: event,\r\n        data: this._data[event]\r\n      });\r\n    }\r\n  }\r\n\r\n  subscribe(event: string, callback: Function) {\r\n    const subscribers = this._subscriptions.get(event) || [];\r\n    subscribers.push(callback);\r\n\r\n    this._subscriptions.set(event, subscribers);\r\n  }\r\n\r\n  _onEvent(data: any) {\r\n    const subscribers = this._subscriptions.get(data['event']) || [];\r\n\r\n    subscribers.forEach((callback) => {\r\n      callback.call(null, data['data']);\r\n    });\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mail-compose',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './mail-compose.component.html'\r\n})\r\nexport class MailComposeComponent { }\r\n","<div class=\"card-body compose\">\r\n\r\n    <form method=\"get\" action=\"#\">\r\n        <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"To\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Cc / Bcc\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Subject\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <textarea class=\"form-control\" placeholder=\"Message\" rows=\"10\"></textarea>\r\n        </div>\r\n        <div class=\"form-group pull-right\">\r\n            <a [routerLink]=\"['../mail-list/inbox']\" class=\"btn btn-secondary mr-2\">Cancel</a>\r\n            <button class=\"btn btn-main\" type=\"submit\">Send</button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Mail, MailService } from '../mail.service';\r\nimport { Output, Input } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mail-detail',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './mail-detail.component.html'\r\n})\r\nexport class MailDetailComponent implements OnInit {\r\n  public mail: Mail;\r\n\r\n  @Output() replyMessage = new EventEmitter();\r\n\r\n  constructor(private service: MailService, private route: ActivatedRoute, private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params.switchMap((params: Params) => this.service.getMail(+params['id'])).subscribe((mail: Mail) => (this.mail = mail));\r\n  }\r\n\r\n  goToReply(mail): void {\r\n    this.replyMessage.emit(mail);\r\n  }\r\n\r\n  trash(id) {\r\n    this.service.getMail(id).then(mail => {\r\n      mail.trash = true;\r\n      mail.sent = false;\r\n      mail.draft = false;\r\n      mail.starred = false;\r\n    });\r\n    this.router.navigate(['apps/email/mail-list/inbox']);\r\n  }\r\n}\r\n","<div *ngIf=\"mail\">  \r\n    <div class=\"card-body\">\r\n        <h4 class=\"mb-3\">{{mail.subject}}</h4>\r\n        \r\n        <div class=\"d-flex mt-4 mb-4\">\r\n            <div class=\"round mr-2 flex-shrink-0\">\r\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"\">\r\n                <span class=\"font-bold\">{{mail.sender}}</span>\r\n                <span *ngIf=\"mail.senderMail\" class=\"email text-truncate d-block w-75\">&lt;{{mail.senderMail}}&gt;</span>\r\n                <span class=\"receiver\">to me</span>\r\n            </div>\r\n\r\n            <div class=\"ml-auto\">\r\n                <span class=\"mail-date\"> {{mail.date}} </span>\r\n                \r\n            </div>\r\n        </div>\r\n        <div [innerHTML]=\"mail.body\" class=\"mailbox-body\"></div>\r\n\r\n        <div class=\"mail-attachments\" *ngIf=\"mail.attachments.length > 0\">\r\n            <hr/>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-6\">                    \r\n                    <p>\r\n                        <strong>{{mail.attachments.length}} attachments</strong> &nbsp;-&nbsp; \r\n                        <a href=\"#\">Download all attachments</a>&nbsp;&nbsp;&nbsp;\r\n                        <a href=\"#\">View all Images</a>\r\n                    </p>\r\n                    <section *ngFor=\"let attachment of mail.attachments; let i = index\" class=\"attachment\">\r\n                        <img src=\"{{attachment}}\" alt=\"\">\r\n                        <h5 class=\"title\">image-{{i + 1}}.jpg</h5>\r\n                        <p>\r\n                            457K  &nbsp;&nbsp;\r\n                            <a href=\"#\">View</a> &nbsp;&nbsp;\r\n                            <a href=\"#\">Download</a>\r\n                        </p>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport { Router, ActivatedRoute, Params, NavigationEnd } from '@angular/router';\r\nimport { Mail, MailService } from '../mail.service';\r\nimport { AppState } from '../app.state';\r\n\r\n@Component({\r\n  selector: 'app-inbox-list',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './mail-list.component.html'\r\n})\r\nexport class MailListComponent implements OnInit {\r\n  public mails: Observable<Mail[]>;\r\n  public type: string;\r\n  public isAllSelected: boolean;\r\n  public searchText: string;\r\n\r\n  constructor(private service: MailService, private route: ActivatedRoute, public router: Router, private state: AppState) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.unSelectAll();\r\n        this.searchText = '';\r\n      }\r\n    });\r\n\r\n    this.state.subscribe('markAsRead', val => {\r\n      this.markAllAsRead();\r\n    });\r\n\r\n    this.state.subscribe('markAsUnRead', val => {\r\n      this.markAllAsUnRead();\r\n    });\r\n\r\n    this.state.subscribe('deleteChecked', val => {\r\n      this.deleteAllCheckedMail();\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMails();\r\n  }\r\n\r\n  public getMails() {\r\n    this.mails = this.route.params.switchMap((params: Params) => {\r\n      this.type = params['type'];\r\n      switch (this.type) {\r\n        case 'inbox':\r\n          return this.service.getInboxMails();\r\n        case 'starred':\r\n          return this.service.getStarredMails();\r\n        case 'sent':\r\n          return this.service.getSentMails();\r\n        case 'drafts':\r\n          return this.service.getDraftMails();\r\n        case 'trash':\r\n          return this.service.getTrashMails();\r\n        default:\r\n          return this.service.getInboxMails();\r\n      }\r\n    });\r\n  }\r\n\r\n  public toggleAll() {\r\n    const toggleStatus = !this.isAllSelected;\r\n    this.mails.subscribe(result => {\r\n      result.forEach(mail => {\r\n        mail.selected = toggleStatus;\r\n      });\r\n    });\r\n  }\r\n\r\n  public toggleOne() {\r\n    this.mails.subscribe(result => {\r\n      this.isAllSelected = result.every(mail => {\r\n        return mail.selected === true;\r\n      });\r\n    });\r\n  }\r\n\r\n  public unSelectAll() {\r\n    this.isAllSelected = false;\r\n    if (this.mails) {\r\n      this.mails.subscribe(result => {\r\n        result.forEach(mail => {\r\n          mail.selected = false;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  public markAllAsRead() {\r\n    this.mails.subscribe(result => {\r\n      result.forEach(mail => {\r\n        // tslint:disable-next-line:curly\r\n        if (mail.selected) mail.unread = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  public markAllAsUnRead() {\r\n    this.mails.subscribe(result => {\r\n      result.forEach(mail => {\r\n        // tslint:disable-next-line:curly\r\n        if (mail.selected) mail.unread = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  public deleteAllCheckedMail() {\r\n    this.mails.subscribe(result => {\r\n      result.forEach(mail => {\r\n        if (mail.selected) {\r\n          mail.trash = true;\r\n          mail.sent = false;\r\n          mail.draft = false;\r\n          mail.starred = false;\r\n        }\r\n      });\r\n    });\r\n    this.getMails();\r\n    this.isAllSelected = false;\r\n  }\r\n\r\n  public goToDetail(mail: Mail) {\r\n    mail.unread = false;\r\n    this.router.navigate(['apps/email/mail-list/' + this.type, mail.id]);\r\n  }\r\n\r\n  public changeStarStatus(mail: Mail) {\r\n    mail.starred = !mail.starred;\r\n  }\r\n}\r\n","<div class=\"d-flex mailbox-header-bar p-3 bg-white border-bottom align-items-center\">\r\n    <div class=\"custom-control custom-checkbox\">\r\n        <input id=\"toggle-all\" class=\"custom-control-input\" type=\"checkbox\" [(ngModel)]=\"isAllSelected\" (click)=\"toggleAll()\">\r\n        <label for=\"toggle-all\" class=\"custom-control-label\">Check all</label>\r\n    </div>\r\n\r\n    <div class=\"ml-auto\">\r\n        <input class=\"form-control form-control-sm\" id=\"table-search-input\" [(ngModel)]=\"searchText\" type=\"text\"\r\n            placeholder=\"Search mail...\">\r\n    </div>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <table class=\"table table-hover no-wrap\">\r\n        <tbody>\r\n            <tr *ngFor=\"let mail of mails | async | MailSearch : searchText\" [ngClass]=\"{'unread': mail.unread, 'selected': mail.selected}\">\r\n                <td class=\"mail-checkbox pl-3 width-50\">\r\n                    <div class=\"custom-control custom-checkbox mycustomcheckbox\">\r\n                        <input id=\"checkbox{{mail.id}}\" class=\"custom-control-input\" type=\"checkbox\" [(ngModel)]=\"mail.selected\"\r\n                            (ngModelChange)=\"toggleOne()\">\r\n                        <label attr.for=\"checkbox{{mail.id}}\" class=\"custom-control-label\"></label>\r\n                    </div>\r\n                </td>\r\n                <td class=\"mail-star width-50\" *ngIf=\"router.url != '/apps/email/mail-list/trash'\">\r\n                    <i class=\"font-18 mdi\" [ngClass]=\"{'mdi-star': mail.starred, 'mdi-star-outline': !mail.starred}\"\r\n                        (click)=\"changeStarStatus(mail)\"></i>\r\n                </td>\r\n                <td (click)=\"goToDetail(mail)\" class=\"sender\">{{ mail.sender }}</td>\r\n                <td (click)=\"goToDetail(mail)\" class=\"subject\" [innerHTML]=\"mail.subject\"></td>\r\n                <td (click)=\"goToDetail(mail)\" class=\"attachment\"><i *ngIf=\"mail.attachment\" class=\"fa fa-paperclip\"></i></td>\r\n                <td (click)=\"goToDetail(mail)\" class=\"date\">{{mail.date}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd, Params } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Mail, MailService } from './mail.service';\r\nimport { AppState } from './app.state';\r\n\r\n@Component({\r\n  selector: 'app-mail',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './mail.component.html',\r\n  styleUrls: ['./mail.component.scss'],\r\n  providers: [MailService]\r\n})\r\nexport class MailComponent {\r\n  public mails: Observable<Mail[]>;\r\n  public id: number;\r\n  public type: string;\r\n  public markAsRead = false;\r\n  public markAsUnRead = false;\r\n  public deleteChecked = false;\r\n\r\n  constructor(private service: MailService, private route: ActivatedRoute, public router: Router, private state: AppState) {\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.id = this.route.snapshot.firstChild.params['id'];\r\n        this.type = this.route.snapshot.firstChild.params['type'];\r\n        setTimeout(() => {\r\n          // jQuery('[data-toggle=\"tooltip\"]').tooltip({ trigger: 'hover' });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  status = false;\r\n\r\n  public getBack() {\r\n    if (this.type) {\r\n      this.router.navigate(['apps/email/mail-list/' + this.type]);\r\n    } else {\r\n      this.router.navigate(['apps/email/mail-list/inbox']);\r\n    }\r\n  }\r\n\r\n  public trash() {\r\n    // jQuery('[data-toggle=\"tooltip\"]').tooltip('hide');\r\n    this.service.getMail(this.id).then(mail => {\r\n      mail.trash = true;\r\n      mail.sent = false;\r\n      mail.draft = false;\r\n      mail.starred = false;\r\n    });\r\n    this.router.navigate(['apps/email/mail-list/inbox']);\r\n  }\r\n\r\n  public setAsRead() {\r\n    this.markAsRead = !this.markAsRead;\r\n    this.state.notifyDataChanged('markAsRead', this.markAsRead);\r\n  }\r\n\r\n  public setAsUnRead() {\r\n    this.markAsUnRead = !this.markAsUnRead;\r\n    this.state.notifyDataChanged('markAsUnRead', this.markAsUnRead);\r\n  }\r\n\r\n  public deleteCheckedMail() {\r\n    this.deleteChecked = !this.deleteChecked;\r\n    this.state.notifyDataChanged('deleteChecked', this.deleteChecked);\r\n  }\r\n\r\n  public openClleft() {\r\n    this.status = !this.status;\r\n  }\r\n}\r\n","<div class=\"email-container pr-3 pl-3\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-3 col-md-2 bg-info\">\r\n\r\n            <h3 class=\"mb-0 mt-3 text-white\"> Mailbox <a class=\"text-white float-right custom-control-button\" (click)=\"openClleft()\"\r\n                    href=\"javascript:void(0)\"><i class=\"ti-menu\"></i></a> </h3>\r\n        </div>\r\n        <div class=\"col-sm-9 col-md-10 bg-info\">\r\n            <div class=\"pb-3 pt-3 d-flex\">\r\n                <div class=\"b-btn mr-1\" [style.display]=\"(id || !type) ? 'inline-block' : 'none'\" data-toggle=\"tooltip\"\r\n                    data-placement=\"top\" data-animation=\"false\" title=\"Back to {{type}}\">\r\n                    <button (click)=\"getBack()\" type=\"button\" class=\"btn btn-dark btn-sm\">\r\n                        <i class=\"fa fa-arrow-left\"></i>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"b-btn mr-1\" *ngIf=\"id\" data-toggle=\"tooltip\" data-placement=\"top\" data-animation=\"false\"\r\n                    title=\"Delete\">\r\n                    <button (click)=\"trash()\" type=\"button\" class=\"btn btn-dark btn-sm\">\r\n                        <i class=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"b-btn mr-1\" [style.display]=\"(router.url == '/apps/email/mail-compose' || id) ? 'none' : 'inline-block'\"\r\n                    data-toggle=\"tooltip\" data-placement=\"top\" data-animation=\"false\" title=\"Refresh\">\r\n                    <button type=\"button\" class=\"btn btn-dark btn-sm\"><span class=\"fas fa-sync-alt\"></span></button>\r\n                </div>\r\n\r\n                <div ngbDropdown class=\"btn-group\" [style.display]=\"(router.url == '/apps/email/mail-compose') ? 'none' : 'block'\">\r\n                    <button class=\"btn btn-warning btn-sm\" type=\"button\" ngbDropdownToggle aria-controls=\"dropdown-basic\">\r\n                        More\r\n                    </button>\r\n                    <div class=\"\" id=\"dropdown-basic\" ngbDropdownMenu>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"setAsRead()\">Mark as read</a>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"setAsUnRead()\">Mark as unread</a>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"deleteCheckedMail()\">Delete</a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"ml-auto\">\r\n                    <span class=\"mr-1 text-white\"><b>1</b>–<b>50</b> of <b>50</b></span>\r\n                    <div class=\"btn-group btn-group-sm\">\r\n                        <button type=\"button\" class=\"btn btn-dark\">\r\n                            <span class=\"fa fa-chevron-left\"></span>\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-dark\">\r\n                            <span class=\"fa fa-chevron-right\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2 bg-white  b-r\">\r\n            <div class=\"inbox-panel\" [ngClass]=\"status ? 'showlpanel' : ''\">\r\n\r\n                <a [routerLink]=\"['mail-compose']\" class=\"btn btn-danger btn-sm btn-block mt-3\" role=\"button\">COMPOSE</a>\r\n\r\n                <ul class=\"list-group mt-3 custom-group\">\r\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\"><a [routerLink]=\"['mail-list/inbox']\">\r\n                            Inbox </a><span class=\"badge badge-info badge-pill\">3</span></li>\r\n                    <li class=\"list-group-item\"><a [routerLink]=\"['mail-list/starred']\">Starred</a></li>\r\n                    <li class=\"list-group-item\"><a [routerLink]=\"['mail-list/sent']\">Sent Mail</a></li>\r\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center\"><a [routerLink]=\"['mail-list/drafts']\">Drafts</a><span\r\n                            class=\"badge badge-info badge-pill\">2</span></li>\r\n                    <li class=\"list-group-item\"><a [routerLink]=\"['mail-list/trash']\">Trash</a></li>\r\n                </ul>\r\n                <hr />\r\n                <ul class=\"list-group custom-group\">\r\n                    <li class=\"list-group-item\"><span class=\"fa fa-circle text-danger mr-1\"></span><a href=\"#\">Notes</a></li>\r\n                    <li class=\"list-group-item\"><span class=\"fa fa-circle text-warning mr-1\"></span><a href=\"#\">Personal</a></li>\r\n                    <li class=\"list-group-item\"><span class=\"fa fa-circle text-info mr-1\"></span><a href=\"#\">Travel</a></li>\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-10 bg-light-part\">\r\n            <div class=\"inbox-right-panel\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PipesModule } from './pipes/pipes.module';\r\nimport { AppState } from './app.state';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { MailComponent } from './mail.component';\r\nimport { MailComposeComponent } from './mail-compose/mail-compose.component';\r\nimport { MailListComponent } from './mail-list/mail-list.component';\r\nimport { MailDetailComponent } from './mail-detail/mail-detail.component';\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '',\r\n        component: MailComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'mail-list/inbox', pathMatch: 'full' },\r\n            { path: 'mail-list/:type', component: MailListComponent },\r\n            { path: 'mail-compose', component: MailComposeComponent },\r\n            { path: 'mail-list/:type/:id', component: MailDetailComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        PipesModule,\r\n        NgbModule,\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    declarations: [\r\n        MailComponent,\r\n        MailComposeComponent,\r\n        MailListComponent,\r\n        MailDetailComponent\r\n    ],\r\n    providers: [AppState]\r\n})\r\nexport class MailModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport class Mail {\r\n  constructor(\r\n    public id: number,\r\n    public sender: string,\r\n    public senderMail: string,\r\n    public subject: string,\r\n    public date: string,\r\n    public body: string,\r\n    public attachment: boolean,\r\n    public attachments: string[],\r\n    public unread: boolean,\r\n    public sent: boolean,\r\n    public starred: boolean,\r\n    public draft: boolean,\r\n    public trash: boolean,\r\n    public selected: boolean\r\n  ) {}\r\n}\r\n\r\nconst Mails = [\r\n  new Mail(\r\n    1,\r\n    'Seth Wright',\r\n    'info@wrappixel.com',\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.',\r\n    '6:08 PM',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    true,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    2,\r\n    'Leo Jons',\r\n    'info@wrappixel.com',\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.',\r\n    '12:55 PM',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    true,\r\n    ['assets/images/gallery/chair.png', 'assets/images/gallery/chair2.png'],\r\n    true,\r\n    false,\r\n    true,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    3,\r\n    'Aron Shaur',\r\n    'info@wrappixel.com',\r\n    'consectetuer adipiscing elit.',\r\n    '01.11.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    4,\r\n    'Emily Rhodes',\r\n    'info@wrappixel.com',\r\n    'Aenean commodo ligula eget dolor. Aenean massa.',\r\n    '21.07.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    true,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(5, 'Draft', '', 'no subject', '2:14 PM', '', false, [], false, false, false, true, false, false),\r\n  new Mail(\r\n    6,\r\n    'Draft',\r\n    '',\r\n    'Please confirm your account for furthur process',\r\n    'Jan 7',\r\n    'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elementum interdum ex, sed aliquet nisl maximus imperdiet.',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    true,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    7,\r\n    'Kendra',\r\n    'info@wrappixel.com',\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa.',\r\n    '27.05.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    8,\r\n    'Jimmy Fallon',\r\n    'info@wrappixel.com',\r\n    'consectetuer adipiscing elit.',\r\n    '14.05.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    true,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    9,\r\n    'Sam Tighe',\r\n    'info@wrappixel.com',\r\n    'Aenean commodo ligula eget dolor. Aenean massa.',\r\n    '03.05.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    10,\r\n    'Saul',\r\n    'info@wrappixel.com',\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa.',\r\n    '30.04.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    true,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    11,\r\n    'Nathan James',\r\n    'info@wrappixel.com',\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit.',\r\n    '24.04.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    12,\r\n    'Mia Green',\r\n    'info@wrappixel.com',\r\n    'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa.',\r\n    '11.04.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  ),\r\n  new Mail(\r\n    13,\r\n    'Mario Gomez',\r\n    'info@wrappixel.com',\r\n    'Download the freebies from the site wrappixel.com all the admin template for free',\r\n    '24.02.2018',\r\n    '<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.</p>',\r\n    false,\r\n    [],\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    false\r\n  )\r\n];\r\n\r\nconst mailsPromise = Promise.resolve(Mails);\r\n\r\n@Injectable()\r\nexport class MailService {\r\n  public getInboxMails() {\r\n    return mailsPromise.then(mails => mails.filter(mail => mail.sent === false && mail.draft === false && mail.trash === false));\r\n  }\r\n\r\n  public getStarredMails() {\r\n    return mailsPromise.then(mails => mails.filter(mail => mail.starred === true));\r\n  }\r\n\r\n  public getSentMails() {\r\n    return mailsPromise.then(mails => mails.filter(mail => mail.sent === true));\r\n  }\r\n\r\n  public getDraftMails() {\r\n    return mailsPromise.then(mails => mails.filter(mail => mail.draft === true));\r\n  }\r\n\r\n  public getTrashMails() {\r\n    return mailsPromise.then(mails => mails.filter(mail => mail.trash === true));\r\n  }\r\n\r\n  public getMail(id: number | string) {\r\n    return mailsPromise.then(mails => mails.find(mail => mail.id === +id));\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'MailSearch'\r\n})\r\nexport class MailSearchPipe implements PipeTransform {\r\n  transform(value, args?): Array<any> {\r\n    const searchText = new RegExp(args, 'ig');\r\n    if (value) {\r\n      return value.filter(mail => {\r\n        if (mail.sender || mail.subject) {\r\n          if (mail.sender.search(searchText) !== -1 || mail.subject.search(searchText) !== -1) {\r\n            return true;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { MailSearchPipe } from './mail-search.pipe';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        MailSearchPipe\r\n    ],\r\n    exports: [\r\n        MailSearchPipe\r\n    ]\r\n})\r\nexport class PipesModule { }\r\n"]}