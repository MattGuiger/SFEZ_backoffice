{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js","webpack:///src/app/form/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/form/confirm-dialog/confirm-dialog.component.html"],"names":["_c0","_c1","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_elementRef","_MatButtonMixinBase","MatButton","elementRef","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","classList","add","nativeElement","monitor","color","stopMonitoring","origin","options","focusVia","disableRipple","disabled","attributes","some","attribute","hasAttribute","ɵfac","MatButton_Factory","t","ɵcmp","type","selectors","viewQuery","MatButton_Query","rf","ctx","_t","ripple","first","hostAttrs","hostVars","hostBindings","MatButton_HostBindings","inputs","exportAs","features","attrs","ngContentSelectors","decls","vars","consts","template","MatButton_Template","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","String","decorators","args","propDecorators","selector","host","None","OnPush","MatAnchor","focusMonitor","animationMode","event","preventDefault","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","$event","_haltDisabledEvents","tabIndex","toString","MatAnchor_Template","MatButtonModule","ɵmod","ɵinj","factory","MatButtonModule_Factory","imports","ngJitMode","declarations","exports","MatDialogContainer_ng_template_0_Template","DialogPosition","MatDialogConfig","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","maxWidth","data","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","throwMatDialogContentAlreadyAttachedError","Error","MatDialogContainer","_focusTrapFactory","_changeDetectorRef","_document","_config","_elementFocusedBeforeDialogWasOpened","_state","_animationStateChanged","attachDomPortal","portal","_portalOutlet","hasAttached","_setupFocusTrap","_ariaLabelledBy","attachComponentPortal","attachTemplatePortal","_containsFocus","focusWasTrapped","_focusTrap","focusInitialElement","focus","focusInitialElementWhenReady","toFocus","activeElement","element","body","contains","destroy","create","Promise","resolve","then","toState","_trapFocus","_restoreFocus","emit","markForCheck","MatDialogContainer_Factory","MatDialogContainer_Query","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","MatDialogContainer_Template","animation","undefined","Default","animations","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_overlayRef","_containerInstance","id","_afterOpened","_afterClosed","_beforeClosed","pipe","phaseName","subscribe","next","complete","clearTimeout","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","dispose","keydownEvents","keyCode","close","backdropClick","_recaptureFocus","dialogResult","detachBackdrop","setTimeout","totalTime","_startExitAnimation","asObservable","position","strategy","_getPositionStrategy","left","right","centerHorizontally","top","bottom","centerVertically","updatePosition","classes","addPanelClass","removePanelClass","getConfig","positionStrategy","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","MatDialog","_overlay","_injector","_location","_defaultOptions","scrollStrategy","_parentDialog","_overlayContainer","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","openDialogs","length","_afterAllClosed","_scrollStrategy","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","overlayRef","_createOverlay","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","push","afterClosed","_removeOpenDialog","afterOpened","_closeDialogs","find","dialog","overlayConfig","_getOverlayConfig","dialogConfig","state","global","direction","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","viewContainerRef","injector","parent","providers","useValue","containerPortal","componentFactoryResolver","containerRef","attach","instance","$implicit","_createInjector","contentRef","updateSize","get","value","change","index","indexOf","splice","forEach","previousValue","setAttribute","removeAttribute","clear","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","set","getAttribute","dialogs","MatDialog_Factory","ɵprov","token","defaultOptions","Object","assign","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","changes","proxiedChange","currentValue","MatDialogClose_Factory","ɵdir","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogTitle","_dialogRef","container","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","MatDialogModule","MatDialogModule_Factory","entryComponents","MatSelect_span_4_Template","ctx_r2","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r3","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r8","_panelDoneAnimatingStream","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","ctx_r4","_getPanelTheme","_transformOrigin","_triggerFontSize","multiple","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","reposition","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","source","MatSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_viewportRuler","_ngZone","_dir","_parentFormField","scrollStrategyFactory","_liveAnnouncer","defaults","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","optionSelectionChanges","map","option","onSelectionChange","onStable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","panelOpen","overlayDir","offsetX","_triggerRect","trigger","getBoundingClientRect","_initKeyManager","changed","added","select","removed","deselect","_resetOptions","_initializeSelection","updateErrorState","_keyManager","withTypeAhead","_typeaheadDebounceInterval","open","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayElement","style","_isRtl","_setSelectionByValue","fn","isDisabled","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","selected","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_value","Array","isArray","_selectValue","_sortValues","correspondingOption","setActiveItem","error","console","warn","withVerticalOrientation","withAllowedModifierKeys","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","join","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","reduce","result","current","itemHeight","items","_getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","ariaLabelledby","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","group","leftOverflow","rightOverflow","round","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","_placeholder","newValue","writeValue","selectedOptions","reverse","isEmpty","MatSelect_Factory","contentQueries","MatSelect_ContentQueries","dirIndex","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","required","errorState","_getAriaActiveDescendant","compareWith","errorStateMatcher","outputs","useExisting","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","descendants","MatSelectModule","MatSelectModule_Factory","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","multi","MatSliderChange","MatSliderBase","_MatSliderMixinBase","document","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_vertical","input","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","EMPTY","_pointerDown","isTouchEvent","button","_runInsideZone","oldValue","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_pointerPositionOnStart","_emitInputEvent","_emitChangeEvent","_pointerMove","_pointerUp","pointerPositionOnStart","currentPointerPosition","_removeGlobalEvents","x","y","_windowBlur","_runOutsizeZone","addEventListener","_blurHostElement","_getDirection","vertical","_invertAxis","removeEventListener","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","_increment","_a","defaultView","window","triggerEvent","isTouch","moveEventName","endEventName","_getWindow","numSteps","_clamp","step","pos","offset","size","posComponent","percent","_shouldInvertMouseCoords","exactValue","_calculateValue","closestValue","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","percentage","_sliderWrapper","blur","run","runOutsideAngular","v","_calculatePercentage","_roundToDecimal","split","pop","parseFloat","toFixed","displayWith","invert","_isMinValue","thumbLabel","axis","scale","sign","_thumbGap","display","tickSize","backgroundSize","rotate","side","invertOffset","MatSlider_Factory","MatSlider_Query","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","MatSlider_blur_HostBindingHandler","MatSlider_keydown_HostBindingHandler","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","MatSlider_Template","_trackBackgroundStyles","_trackFillStyles","_ticksContainerStyles","_ticksStyles","_thumbContainerStyles","displayValue","point","touches","changedTouches","clientX","clientY","MatSliderModule","MatSliderModule_Factory","ConfirmDialogComponent","title","message","onDismiss","onConfirm","templateUrl","ConfirmDialogModel"],"mappings":"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","file":"default~form-forms-module~menuitems-menuitems-module-es5.js","sourcesContent":["import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._setupFocusTrap();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._setupFocusTrap();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._setupFocusTrap();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves focus back into the dialog if it was moved out.\n     * @return {?}\n     */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            /** @type {?} */\n            const focusWasTrapped = this._focusTrap.focusInitialElement();\n            if (!focusWasTrapped) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Sets up the focus trand and saves a reference to the\n     * element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _setupFocusTrap() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Returns whether focus is inside the dialog.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const activeElement = this._document.activeElement;\n        return element === activeElement || element.contains(activeElement);\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n        _overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => this._finishDialogClose()), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     * @private\n     * @return {?}\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, Inject, NgZone, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n * @type {?}\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n * @type {?}\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n * @type {?}\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlider)),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nclass MatSliderChange {\n}\nif (false) {\n    /**\n     * The MatSlider that changed.\n     * @type {?}\n     */\n    MatSliderChange.prototype.source;\n    /**\n     * The new value of the source slider.\n     * @type {?}\n     */\n    MatSliderChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSlider.\n/**\n * \\@docs-private\n */\nclass MatSliderBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSliderBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} tabIndex\n     * @param {?=} _animationMode\n     * @param {?=} _ngZone\n     * @param {?=} document\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _animationMode, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._animationMode = _animationMode;\n        this._ngZone = _ngZone;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /**\n         * Event emitted when the slider value has changed.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the slider thumb moves.\n         */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /**\n         * The size of a tick interval as a percentage of the size of the track.\n         */\n        this._tickIntervalPercent = 0;\n        /**\n         * The dimensions of the slider.\n         */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Subscription to the Directionality change EventEmitter.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Called when the user has put their pointer down on the slider.\n         */\n        this._pointerDown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._runInsideZone((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const oldValue = this.value;\n                /** @type {?} */\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = this.value;\n                this._pointerPositionOnStart = pointerPosition;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                    this._emitChangeEvent();\n                }\n            }));\n        });\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                /** @type {?} */\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        });\n        /**\n         * Called when the user has lifted their pointer. Bound on the document level.\n         */\n        this._pointerUp = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isSliding) {\n                /** @type {?} */\n                const pointerPositionOnStart = this._pointerPositionOnStart;\n                /** @type {?} */\n                const currentPointerPosition = getPointerPositionOnPage(event);\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled &&\n                    pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n                    pointerPositionOnStart.y !== currentPointerPosition.y)) {\n                    this._emitChangeEvent();\n                }\n            }\n        });\n        /**\n         * Called when the window has lost focus.\n         */\n        this._windowBlur = (/**\n         * @return {?}\n         */\n        () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        });\n        this._document = document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._runOutsizeZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        }));\n    }\n    /**\n     * Whether the slider is inverted.\n     * @return {?}\n     */\n    get invert() { return this._invert; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /**\n     * The maximum value that the slider can have.\n     * @return {?}\n     */\n    get max() { return this._max; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The minimum value that the slider can have.\n     * @return {?}\n     */\n    get min() { return this._min; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The values at which the thumb will snap.\n     * @return {?}\n     */\n    get step() { return this._step; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = (/** @type {?} */ (this._step.toString().split('.').pop())).length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Whether or not to show the thumb label.\n     * @return {?}\n     */\n    get thumbLabel() { return this._thumbLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     * @return {?}\n     */\n    get tickInterval() { return this._tickInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, (/** @type {?} */ (this._tickInterval)));\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /**\n     * Value of the slider.\n     * @return {?}\n     */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        if (v !== this._value) {\n            /** @type {?} */\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the slider is vertical.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /**\n     * The value to be used for display purposes.\n     * @return {?}\n     */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith((/** @type {?} */ (this.value)));\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /**\n     * set focus to the host element\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /**\n     * blur the host element\n     * @return {?}\n     */\n    blur() {\n        this._blurHostElement();\n    }\n    /**\n     * The percentage of the slider that coincides with the value.\n     * @return {?}\n     */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     * @return {?}\n     */\n    get _invertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /**\n     * Whether the slider is at its minimum value.\n     * @return {?}\n     */\n    get _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     * @return {?}\n     */\n    get _thumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /**\n     * CSS styles for the track background element.\n     * @return {?}\n     */\n    get _trackBackgroundStyles() {\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n        };\n    }\n    /**\n     * CSS styles for the track fill element.\n     * @return {?}\n     */\n    get _trackFillStyles() {\n        /** @type {?} */\n        const percent = this.percent;\n        /** @type {?} */\n        const axis = this.vertical ? 'Y' : 'X';\n        /** @type {?} */\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        /** @type {?} */\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /**\n     * CSS styles for the ticks container element.\n     * @return {?}\n     */\n    get _ticksContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        /** @type {?} */\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /**\n     * CSS styles for the ticks element.\n     * @return {?}\n     */\n    get _ticksStyles() {\n        /** @type {?} */\n        let tickSize = this._tickIntervalPercent * 100;\n        /** @type {?} */\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        /** @type {?} */\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        /** @type {?} */\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        /** @type {?} */\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue && this._thumbGap) {\n            /** @type {?} */\n            let side;\n            if (this.vertical) {\n                side = this._invertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = this._invertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._thumbGap}px`;\n        }\n        return styles;\n    }\n    /**\n     * @return {?}\n     */\n    get _thumbContainerStyles() {\n        /** @type {?} */\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        /** @type {?} */\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        /** @type {?} */\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     * @return {?}\n     */\n    _shouldInvertMouseCoords() {\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    }\n    /**\n     * The language direction for this slider element.\n     * @private\n     * @return {?}\n     */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        (origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        }));\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    /**\n     * @return {?}\n     */\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    /**\n     * @return {?}\n     */\n    _onBlur() {\n        this.onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        /** @type {?} */\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    /**\n     * @return {?}\n     */\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     * @private\n     * @param {?} triggerEvent\n     * @return {?}\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        /** @type {?} */\n        const document = this._document;\n        if (typeof document !== 'undefined' && document) {\n            /** @type {?} */\n            const isTouch = isTouchEvent(triggerEvent);\n            /** @type {?} */\n            const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n            /** @type {?} */\n            const endEventName = isTouch ? 'touchend' : 'mouseup';\n            document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n            document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n            if (isTouch) {\n                document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n            }\n        }\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Removes any global event listeners that we may have added.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalEvents() {\n        /** @type {?} */\n        const document = this._document;\n        if (typeof document !== 'undefined' && document) {\n            document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n            document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n            document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n            document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n            document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @private\n     * @param {?} numSteps\n     * @return {?}\n     */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @private\n     * @param {?} pos\n     * @return {?}\n     */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        /** @type {?} */\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        /** @type {?} */\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        /** @type {?} */\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        /** @type {?} */\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            /** @type {?} */\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            /** @type {?} */\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @private\n     * @return {?}\n     */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @private\n     * @return {?}\n     */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            /** @type {?} */\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            /** @type {?} */\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            /** @type {?} */\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            /** @type {?} */\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /**\n     * Creates a slider change object from the specified value.\n     * @private\n     * @param {?=} value\n     * @return {?}\n     */\n    _createChangeEvent(value = this.value) {\n        /** @type {?} */\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @private\n     * @param {?} percentage\n     * @return {?}\n     */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /**\n     * Return a number between two numbers.\n     * @private\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @private\n     * @return {?}\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @private\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Blurs the native element.\n     * @private\n     * @return {?}\n     */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Runs a callback inside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runInsideZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.run(fn) : fn();\n    }\n    /**\n     * Runs a callback outside of the NgZone, if possible.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _runOutsizeZone(fn) {\n        // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n        this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._invertAxis)(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue)(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue && ctx._thumbGap && ctx._invertAxis)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackBackgroundStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._trackFillStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksContainerStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._ticksStyles);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._thumbContainerStyles);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_invertAxis',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_trackBackgroundStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_invert;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_max;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_min;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_step;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_thumbLabel;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_tickInterval;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_value;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatSlider.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._invert;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._max;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._min;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._step;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._thumbLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickInterval;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._value;\n    /**\n     * Function that will be used to format the value before it is displayed\n     * in the thumb label. Can be used to format very large number in order\n     * for them to fit into the slider thumb.\n     * @type {?}\n     */\n    MatSlider.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._vertical;\n    /**\n     * Event emitted when the slider value has changed.\n     * @type {?}\n     */\n    MatSlider.prototype.change;\n    /**\n     * Event emitted when the slider thumb moves.\n     * @type {?}\n     */\n    MatSlider.prototype.input;\n    /**\n     * Emits when the raw value of the slider changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSlider.prototype.valueChange;\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @type {?}\n     */\n    MatSlider.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._percent;\n    /**\n     * Whether or not the thumb is sliding.\n     * Used to determine if there should be a transition for the thumb and fill track.\n     * @type {?}\n     */\n    MatSlider.prototype._isSliding;\n    /**\n     * Whether or not the slider is active (clicked or sliding).\n     * Used to shrink and grow the thumb as according to the Material Design spec.\n     * @type {?}\n     */\n    MatSlider.prototype._isActive;\n    /**\n     * The size of a tick interval as a percentage of the size of the track.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._tickIntervalPercent;\n    /**\n     * The dimensions of the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._controlValueAccessorChangeFn;\n    /**\n     * Decimal places to round to, based on the step amount.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._roundToDecimal;\n    /**\n     * Subscription to the Directionality change EventEmitter.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dirChangeSubscription;\n    /**\n     * The value of the slider when the slide start event fires.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._valueOnSlideStart;\n    /**\n     * Position of the pointer when the dragging started.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerPositionOnStart;\n    /**\n     * Reference to the inner slider wrapper element.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._sliderWrapper;\n    /**\n     * Keeps track of the last pointer event that was captured by the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._lastPointerEvent;\n    /**\n     * Used to subscribe to global move and end events\n     * @type {?}\n     * @protected\n     */\n    MatSlider.prototype._document;\n    /**\n     * Called when the user has put their pointer down on the slider.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerDown;\n    /**\n     * Called when the user has moved their pointer after\n     * starting to drag. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerMove;\n    /**\n     * Called when the user has lifted their pointer. Bound on the document level.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._pointerUp;\n    /**\n     * Called when the window has lost focus.\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._windowBlur;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._dir;\n    /** @type {?} */\n    MatSlider.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSlider.prototype._ngZone;\n}\n/**\n * Returns whether an event is a touch event.\n * @param {?} event\n * @return {?}\n */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the coordinates of a touch or mouse event relative to the viewport.\n * @param {?} event\n * @return {?}\n */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    /** @type {?} */\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/slider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/slider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map","// import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n//   styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel) {\n    // Update view with given values\n    this.title = data.title;\n    this.message = data.message;\n  }\n\n  ngOnInit() {\n  }\n\n  onConfirm(): void {\n    // Close the dialog, return true\n    this.dialogRef.close(true);\n  }\n\n  onDismiss(): void {\n    // Close the dialog, return false\n    this.dialogRef.close(false);\n  }\n}\n\n/**\n * Class to represent confirm dialog model.\n *\n * It has been kept here to keep it as part of shared component.\n */\nexport class ConfirmDialogModel {\n\n  constructor(public title: string, public message: string) {\n  }\n}\n","<h1 mat-dialog-title>\n    {{title}}\n  </h1>\n  \n  <div mat-dialog-content>\n    <p>{{message}}</p>\n  </div>\n  \n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onDismiss()\">No</button>\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">Yes</button>\n  </div>"]}