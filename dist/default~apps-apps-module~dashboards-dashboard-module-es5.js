function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~apps-apps-module~dashboards-dashboard-module"], {
  /***/
  "./node_modules/@mattlewis92/dom-autoscroller/dist/bundle.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/@mattlewis92/dom-autoscroller/dist/bundle.js ***!
    \*******************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesMattlewis92DomAutoscrollerDistBundleJs(module, exports, __webpack_require__) {
    "use strict";

    function _interopDefault(ex) {
      return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
    }

    var typeFunc = __webpack_require__(
    /*! type-func */
    "./node_modules/type-func/dist/bundle.js");

    var domSet = __webpack_require__(
    /*! dom-set */
    "./node_modules/dom-set/dist/bundle.js");

    var domPlane = __webpack_require__(
    /*! dom-plane */
    "./node_modules/dom-plane/dist/bundle.js");

    var mousemoveDispatcher = _interopDefault(__webpack_require__(
    /*! dom-mousemove-dispatcher */
    "./node_modules/dom-mousemove-dispatcher/dist/bundle.js"));

    var prefix = ['webkit', 'moz', 'ms', 'o'];

    var requestFrame = function () {
      if (typeof window === "undefined") {
        return function () {};
      }

      for (var i = 0, limit = prefix.length; i < limit && !window.requestAnimationFrame; ++i) {
        window.requestAnimationFrame = window[prefix[i] + 'RequestAnimationFrame'];
      }

      if (!window.requestAnimationFrame) {
        var lastTime = 0;

        window.requestAnimationFrame = function (callback) {
          var now = new Date().getTime();
          var ttc = Math.max(0, 16 - now - lastTime);
          var timer = window.setTimeout(function () {
            return callback(now + ttc);
          }, ttc);
          lastTime = now + ttc;
          return timer;
        };
      }

      return window.requestAnimationFrame.bind(window);
    }();

    var cancelFrame = function () {
      if (typeof window === "undefined") {
        return function () {};
      }

      for (var i = 0, limit = prefix.length; i < limit && !window.cancelAnimationFrame; ++i) {
        window.cancelAnimationFrame = window[prefix[i] + 'CancelAnimationFrame'] || window[prefix[i] + 'CancelRequestAnimationFrame'];
      }

      if (!window.cancelAnimationFrame) {
        window.cancelAnimationFrame = function (timer) {
          window.clearTimeout(timer);
        };
      }

      return window.cancelAnimationFrame.bind(window);
    }();

    function AutoScroller(elements, options) {
      if (options === void 0) options = {};
      var self = this;
      var maxSpeed = 4,
          scrolling = false;
      this.margin = options.margin || -1; //this.scrolling = false;

      this.scrollWhenOutside = options.scrollWhenOutside || false;
      var point = {},
          pointCB = domPlane.createPointCB(point),
          dispatcher = mousemoveDispatcher(),
          down = false;
      window.addEventListener('mousemove', pointCB, false);
      window.addEventListener('touchmove', pointCB, false);

      if (!isNaN(options.maxSpeed)) {
        maxSpeed = options.maxSpeed;
      }

      this.autoScroll = typeFunc["boolean"](options.autoScroll);
      this.syncMove = typeFunc["boolean"](options.syncMove, false);

      this.destroy = function (forceCleanAnimation) {
        window.removeEventListener('mousemove', pointCB, false);
        window.removeEventListener('touchmove', pointCB, false);
        window.removeEventListener('mousedown', onDown, false);
        window.removeEventListener('touchstart', onDown, false);
        window.removeEventListener('mouseup', onUp, false);
        window.removeEventListener('touchend', onUp, false);
        window.removeEventListener('pointerup', onUp, false);
        window.removeEventListener('mouseleave', onMouseOut, false);
        window.removeEventListener('mousemove', onMove, false);
        window.removeEventListener('touchmove', onMove, false);
        window.removeEventListener('scroll', setScroll, true);
        elements = [];

        if (forceCleanAnimation) {
          cleanAnimation();
        }
      };

      this.add = function () {
        var element = [],
            len = arguments.length;

        while (len--) {
          element[len] = arguments[len];
        }

        domSet.addElements.apply(void 0, [elements].concat(element));
        return this;
      };

      this.remove = function () {
        var element = [],
            len = arguments.length;

        while (len--) {
          element[len] = arguments[len];
        }

        return domSet.removeElements.apply(void 0, [elements].concat(element));
      };

      var hasWindow = null,
          windowAnimationFrame;

      if (Object.prototype.toString.call(elements) !== '[object Array]') {
        elements = [elements];
      }

      (function (temp) {
        elements = [];
        temp.forEach(function (element) {
          if (element === window) {
            hasWindow = window;
          } else {
            self.add(element);
          }
        });
      })(elements);

      Object.defineProperties(this, {
        down: {
          get: function get() {
            return down;
          }
        },
        maxSpeed: {
          get: function get() {
            return maxSpeed;
          }
        },
        point: {
          get: function get() {
            return point;
          }
        },
        scrolling: {
          get: function get() {
            return scrolling;
          }
        }
      });
      var n = 0,
          current = null,
          animationFrame;
      window.addEventListener('mousedown', onDown, false);
      window.addEventListener('touchstart', onDown, false);
      window.addEventListener('mouseup', onUp, false);
      window.addEventListener('touchend', onUp, false);
      /*
      IE does not trigger mouseup event when scrolling.
      It is a known issue that Microsoft won't fix.
      https://connect.microsoft.com/IE/feedback/details/783058/scrollbar-trigger-mousedown-but-not-mouseup
      IE supports pointer events instead
      */

      window.addEventListener('pointerup', onUp, false);
      window.addEventListener('mousemove', onMove, false);
      window.addEventListener('touchmove', onMove, false);
      window.addEventListener('mouseleave', onMouseOut, false);
      window.addEventListener('scroll', setScroll, true);

      function setScroll(e) {
        for (var i = 0; i < elements.length; i++) {
          if (elements[i] === e.target) {
            scrolling = true;
            break;
          }
        }

        if (scrolling) {
          requestFrame(function () {
            return scrolling = false;
          });
        }
      }

      function onDown() {
        down = true;
      }

      function onUp() {
        down = false;
        cleanAnimation();
      }

      function cleanAnimation() {
        cancelFrame(animationFrame);
        cancelFrame(windowAnimationFrame);
      }

      function onMouseOut() {
        down = false;
      }

      function getTarget(target) {
        if (!target) {
          return null;
        }

        if (current === target) {
          return target;
        }

        if (domSet.hasElement(elements, target)) {
          return target;
        }

        while (target = target.parentNode) {
          if (domSet.hasElement(elements, target)) {
            return target;
          }
        }

        return null;
      }

      function getElementUnderPoint() {
        var underPoint = null;

        for (var i = 0; i < elements.length; i++) {
          if (inside(point, elements[i])) {
            underPoint = elements[i];
          }
        }

        return underPoint;
      }

      function onMove(event) {
        if (!self.autoScroll()) {
          return;
        }

        if (event['dispatched']) {
          return;
        }

        var target = event.target,
            body = document.body;

        if (current && !inside(point, current)) {
          if (!self.scrollWhenOutside) {
            current = null;
          }
        }

        if (target && target.parentNode === body) {
          //The special condition to improve speed.
          target = getElementUnderPoint();
        } else {
          target = getTarget(target);

          if (!target) {
            target = getElementUnderPoint();
          }
        }

        if (target && target !== current) {
          current = target;
        }

        if (hasWindow) {
          cancelFrame(windowAnimationFrame);
          windowAnimationFrame = requestFrame(scrollWindow);
        }

        if (!current) {
          return;
        }

        cancelFrame(animationFrame);
        animationFrame = requestFrame(scrollTick);
      }

      function scrollWindow() {
        autoScroll(hasWindow);
        cancelFrame(windowAnimationFrame);
        windowAnimationFrame = requestFrame(scrollWindow);
      }

      function scrollTick() {
        if (!current) {
          return;
        }

        autoScroll(current);
        cancelFrame(animationFrame);
        animationFrame = requestFrame(scrollTick);
      }

      function autoScroll(el) {
        var rect = domPlane.getClientRect(el),
            scrollx,
            scrolly;

        if (point.x < rect.left + self.margin) {
          scrollx = Math.floor(Math.max(-1, (point.x - rect.left) / self.margin - 1) * self.maxSpeed);
        } else if (point.x > rect.right - self.margin) {
          scrollx = Math.ceil(Math.min(1, (point.x - rect.right) / self.margin + 1) * self.maxSpeed);
        } else {
          scrollx = 0;
        }

        if (point.y < rect.top + self.margin) {
          scrolly = Math.floor(Math.max(-1, (point.y - rect.top) / self.margin - 1) * self.maxSpeed);
        } else if (point.y > rect.bottom - self.margin) {
          scrolly = Math.ceil(Math.min(1, (point.y - rect.bottom) / self.margin + 1) * self.maxSpeed);
        } else {
          scrolly = 0;
        }

        if (self.syncMove()) {
          /*
          Notes about mousemove event dispatch.
          screen(X/Y) should need to be updated.
          Some other properties might need to be set.
          Keep the syncMove option default false until all inconsistencies are taken care of.
          */
          dispatcher.dispatch(el, {
            pageX: point.pageX + scrollx,
            pageY: point.pageY + scrolly,
            clientX: point.x + scrollx,
            clientY: point.y + scrolly
          });
        }

        setTimeout(function () {
          if (scrolly) {
            scrollY(el, scrolly);
          }

          if (scrollx) {
            scrollX(el, scrollx);
          }
        });
      }

      function scrollY(el, amount) {
        if (el === window) {
          window.scrollTo(el.pageXOffset, el.pageYOffset + amount);
        } else {
          el.scrollTop += amount;
        }
      }

      function scrollX(el, amount) {
        if (el === window) {
          window.scrollTo(el.pageXOffset + amount, el.pageYOffset);
        } else {
          el.scrollLeft += amount;
        }
      }
    }

    function AutoScrollerFactory(element, options) {
      return new AutoScroller(element, options);
    }

    function inside(point, el, rect) {
      if (!rect) {
        return domPlane.pointInside(point, el);
      } else {
        return point.y > rect.top && point.y < rect.bottom && point.x > rect.left && point.x < rect.right;
      }
    }
    /*
    git remote add origin https://github.com/hollowdoor/dom_autoscroller.git
    git push -u origin master
    */


    module.exports = AutoScrollerFactory; //# sourceMappingURL=bundle.js.map

    /***/
  },

  /***/
  "./node_modules/angular-calendar/__ivy_ngcc__/fesm2015/angular-calendar.js":
  /*!*********************************************************************************!*\
    !*** ./node_modules/angular-calendar/__ivy_ngcc__/fesm2015/angular-calendar.js ***!
    \*********************************************************************************/

  /*! exports provided: DAYS_OF_WEEK, CalendarA11y, CalendarAngularDateFormatter, CalendarCommonModule, CalendarDateFormatter, CalendarDayModule, CalendarDayViewComponent, CalendarEventTimesChangedEventType, CalendarEventTitleFormatter, CalendarModule, CalendarMomentDateFormatter, CalendarMonthModule, CalendarMonthViewComponent, CalendarNativeDateFormatter, CalendarUtils, CalendarView, CalendarWeekModule, CalendarWeekViewComponent, DateAdapter, MOMENT, collapseAnimation, getWeekViewPeriod, ɵa, ɵb, ɵc, ɵd, ɵe, ɵf, ɵg, ɵh, ɵi, ɵj, ɵk, ɵl, ɵm, ɵn, ɵo, ɵp, ɵq, ɵr, ɵs */

  /***/
  function node_modulesAngularCalendar__ivy_ngcc__Fesm2015AngularCalendarJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarA11y", function () {
      return CalendarA11y;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarAngularDateFormatter", function () {
      return CalendarAngularDateFormatter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarCommonModule", function () {
      return CalendarCommonModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarDateFormatter", function () {
      return CalendarDateFormatter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarDayModule", function () {
      return CalendarDayModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarDayViewComponent", function () {
      return CalendarDayViewComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarEventTimesChangedEventType", function () {
      return CalendarEventTimesChangedEventType;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarEventTitleFormatter", function () {
      return CalendarEventTitleFormatter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarModule", function () {
      return CalendarModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarMomentDateFormatter", function () {
      return CalendarMomentDateFormatter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarMonthModule", function () {
      return CalendarMonthModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarMonthViewComponent", function () {
      return CalendarMonthViewComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarNativeDateFormatter", function () {
      return CalendarNativeDateFormatter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarUtils", function () {
      return CalendarUtils;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarView", function () {
      return CalendarView;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarWeekModule", function () {
      return CalendarWeekModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarWeekViewComponent", function () {
      return CalendarWeekViewComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DateAdapter", function () {
      return DateAdapter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MOMENT", function () {
      return MOMENT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "collapseAnimation", function () {
      return collapseAnimation;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getWeekViewPeriod", function () {
      return getWeekViewPeriod;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵa", function () {
      return CalendarOpenDayEventsComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵb", function () {
      return CalendarEventActionsComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵc", function () {
      return CalendarEventTitleComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵd", function () {
      return CalendarTooltipWindowComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵe", function () {
      return CalendarTooltipDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵf", function () {
      return CalendarPreviousViewDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵg", function () {
      return CalendarNextViewDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵh", function () {
      return CalendarTodayDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵi", function () {
      return CalendarDatePipe;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵj", function () {
      return CalendarEventTitlePipe;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵk", function () {
      return CalendarA11yPipe;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵl", function () {
      return ClickDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵm", function () {
      return KeydownEnterDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵn", function () {
      return CalendarMonthCellComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵo", function () {
      return CalendarMonthViewHeaderComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵp", function () {
      return CalendarWeekViewHeaderComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵq", function () {
      return CalendarWeekViewEventComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵr", function () {
      return CalendarWeekViewHourSegmentComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵs", function () {
      return CalendarWeekViewCurrentTimeMarkerComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/angular-calendar/node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var positioning__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! positioning */
    "./node_modules/positioning/dist/entry.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var calendar_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! calendar-utils */
    "./node_modules/calendar-utils/calendar-utils.js");
    /* harmony import */


    var angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! angular-draggable-droppable */
    "./node_modules/angular-draggable-droppable/__ivy_ngcc__/fesm2015/angular-draggable-droppable.js");
    /* harmony import */


    var angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! angular-resizable-element */
    "./node_modules/angular-resizable-element/__ivy_ngcc__/fesm2015/angular-resizable-element.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DAYS_OF_WEEK", function () {
      return calendar_utils__WEBPACK_IMPORTED_MODULE_6__["DAYS_OF_WEEK"];
    });
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/__ivy_ngcc__/fesm2015/animations.js");

    var _c0 = function _c0(a0) {
      return {
        action: a0
      };
    };

    function CalendarEventActionsComponent_ng_template_0_span_0_a_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "a", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mwlClick", function CalendarEventActionsComponent_ng_template_0_span_0_a_1_Template_a_mwlClick_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r10);

          var action_r7 = ctx.$implicit;

          var event_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).event;

          return action_r7.onClick({
            event: event_r3,
            sourceEvent: $event
          });
        })("mwlKeydownEnter", function CalendarEventActionsComponent_ng_template_0_span_0_a_1_Template_a_mwlKeydownEnter_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r10);

          var action_r7 = ctx.$implicit;

          var event_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).event;

          return action_r7.onClick({
            event: event_r3,
            sourceEvent: $event
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var action_r7 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", action_r7.cssClass)("innerHtml", action_r7.label, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](1, 3, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](6, _c0, action_r7), "actionButtonLabel"));
      }
    }

    function CalendarEventActionsComponent_ng_template_0_span_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarEventActionsComponent_ng_template_0_span_0_a_1_Template, 2, 8, "a", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        var event_r3 = ctx_r13.event;
        var trackByActionId_r4 = ctx_r13.trackByActionId;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", event_r3.actions)("ngForTrackBy", trackByActionId_r4);
      }
    }

    function CalendarEventActionsComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarEventActionsComponent_ng_template_0_span_0_Template, 2, 2, "span", 2);
      }

      if (rf & 2) {
        var event_r3 = ctx.event;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", event_r3.actions);
      }
    }

    function CalendarEventActionsComponent_ng_template_2_Template(rf, ctx) {}

    var _c1 = function _c1(a0, a1) {
      return {
        event: a0,
        trackByActionId: a1
      };
    };

    var _c2 = function _c2() {
      return {};
    };

    function CalendarEventTitleComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "span", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarEventTitle");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "calendarA11y");
      }

      if (rf & 2) {
        var event_r3 = ctx.event;
        var view_r4 = ctx.view;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](1, 2, event_r3.title, view_r4, event_r3), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-hidden", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](2, 6, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](9, _c2), "hideEventTitle"));
      }
    }

    function CalendarEventTitleComponent_ng_template_2_Template(rf, ctx) {}

    var _c3 = function _c3(a0, a1) {
      return {
        event: a0,
        view: a1
      };
    };

    function CalendarTooltipWindowComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](2, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var contents_r3 = ctx.contents;
        var placement_r4 = ctx.placement;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", "cal-tooltip-" + placement_r4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHtml", contents_r3, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"]);
      }
    }

    function CalendarTooltipWindowComponent_ng_template_2_Template(rf, ctx) {}

    var _c4 = function _c4(a0, a1, a2) {
      return {
        contents: a0,
        placement: a1,
        event: a2
      };
    };

    var _c5 = function _c5(a0) {
      return {
        backgroundColor: a0
      };
    };

    function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mwl-calendar-month-cell", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mwlClick", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_mwlClick_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r5);

          var day_r3 = ctx.$implicit;

          var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r4.dayClicked.emit({
            day: day_r3,
            sourceEvent: $event
          });
        })("mwlKeydownEnter", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_mwlKeydownEnter_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r5);

          var day_r3 = ctx.$implicit;

          var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r6.dayClicked.emit({
            day: day_r3,
            sourceEvent: $event
          });
        })("highlightDay", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_highlightDay_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r5);

          var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r7.toggleDayHighlight($event.event, true);
        })("unhighlightDay", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_unhighlightDay_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r5);

          var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r8.toggleDayHighlight($event.event, false);
        })("drop", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_drop_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r5);

          var day_r3 = ctx.$implicit;

          var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r9.eventDropped(day_r3, $event.dropData.event, $event.dropData.draggedFrom);
        })("eventClicked", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_eventClicked_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r5);

          var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r10.eventClicked.emit({
            event: $event.event,
            sourceEvent: $event.sourceEvent
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var day_r3 = ctx.$implicit;

        var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", day_r3 == null ? null : day_r3.cssClass)("day", day_r3)("openDay", ctx_r2.openDay)("locale", ctx_r2.locale)("tooltipPlacement", ctx_r2.tooltipPlacement)("tooltipAppendToBody", ctx_r2.tooltipAppendToBody)("tooltipTemplate", ctx_r2.tooltipTemplate)("tooltipDelay", ctx_r2.tooltipDelay)("customTemplate", ctx_r2.cellTemplate)("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](15, _c5, day_r3.backgroundColor))("clickListenerDisabled", ctx_r2.dayClicked.observers.length === 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("tabindex", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](1, 12, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](17, _c2), "monthCellTabIndex"));
      }
    }

    function CalendarMonthViewComponent_div_3_Template(rf, ctx) {
      if (rf & 1) {
        var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template, 2, 18, "mwl-calendar-month-cell", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](3, "slice");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "mwl-calendar-open-day-events", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("eventClicked", function CalendarMonthViewComponent_div_3_Template_mwl_calendar_open_day_events_eventClicked_4_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r11.eventClicked.emit({
            event: $event.event,
            sourceEvent: $event.sourceEvent
          });
        })("drop", function CalendarMonthViewComponent_div_3_Template_mwl_calendar_open_day_events_drop_4_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r13.eventDropped(ctx_r13.openDay, $event.dropData.event, $event.dropData.draggedFrom);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var rowIndex_r1 = ctx.$implicit;

        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](3, 9, ctx_r0.view.days, rowIndex_r1, rowIndex_r1 + ctx_r0.view.totalDaysVisibleInWeek))("ngForTrackBy", ctx_r0.trackByDate);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("locale", ctx_r0.locale)("isOpen", ctx_r0.openRowIndex === rowIndex_r1)("events", ctx_r0.openDay == null ? null : ctx_r0.openDay.events)("date", ctx_r0.openDay == null ? null : ctx_r0.openDay.date)("customTemplate", ctx_r0.openDayEventsTemplate)("eventTitleTemplate", ctx_r0.eventTitleTemplate)("eventActionsTemplate", ctx_r0.eventActionsTemplate);
      }
    }

    function CalendarMonthViewHeaderComponent_ng_template_0_div_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CalendarMonthViewHeaderComponent_ng_template_0_div_1_Template_div_click_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r9);

          var day_r7 = ctx.$implicit;

          var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r8.columnHeaderClicked.emit({
            isoDayNumber: day_r7.day,
            sourceEvent: $event
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "calendarDate");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var day_r7 = ctx.$implicit;

        var locale_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().locale;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-past", day_r7.isPast)("cal-today", day_r7.isToday)("cal-future", day_r7.isFuture)("cal-weekend", day_r7.isWeekend);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", day_r7.cssClass);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](2, 10, day_r7.date, "monthViewColumnHeader", locale_r4), " ");
      }
    }

    function CalendarMonthViewHeaderComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarMonthViewHeaderComponent_ng_template_0_div_1_Template, 3, 14, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var days_r3 = ctx.days;
        var trackByWeekDayHeaderDate_r5 = ctx.trackByWeekDayHeaderDate;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", days_r3)("ngForTrackBy", trackByWeekDayHeaderDate_r5);
      }
    }

    function CalendarMonthViewHeaderComponent_ng_template_2_Template(rf, ctx) {}

    var _c6 = function _c6(a0, a1, a2) {
      return {
        days: a0,
        locale: a1,
        trackByWeekDayHeaderDate: a2
      };
    };

    function CalendarMonthCellComponent_ng_template_0_span_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "span", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var day_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().day;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](day_r3.badgeTotal);
      }
    }

    var _c7 = function _c7(a0, a1) {
      return {
        event: a0,
        draggedFrom: a1
      };
    };

    var _c8 = function _c8(a0, a1) {
      return {
        x: a0,
        y: a1
      };
    };

    var _c9 = function _c9() {
      return {
        delay: 300,
        delta: 30
      };
    };

    function CalendarMonthCellComponent_ng_template_0_div_7_div_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mouseenter", function CalendarMonthCellComponent_ng_template_0_div_7_div_1_Template_div_mouseenter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r22);

          var event_r19 = ctx.$implicit;

          var highlightDay_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).highlightDay;

          return highlightDay_r7.emit({
            event: event_r19
          });
        })("mouseleave", function CalendarMonthCellComponent_ng_template_0_div_7_div_1_Template_div_mouseleave_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r22);

          var event_r19 = ctx.$implicit;

          var unhighlightDay_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).unhighlightDay;

          return unhighlightDay_r8.emit({
            event: event_r19
          });
        })("mwlClick", function CalendarMonthCellComponent_ng_template_0_div_7_div_1_Template_div_mwlClick_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r22);

          var event_r19 = ctx.$implicit;

          var eventClicked_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).eventClicked;

          return eventClicked_r9.emit({
            event: event_r19,
            sourceEvent: $event
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarEventTitle");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var event_r19 = ctx.$implicit;

        var ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        var tooltipPlacement_r6 = ctx_r27.tooltipPlacement;
        var tooltipTemplate_r10 = ctx_r27.tooltipTemplate;
        var tooltipAppendToBody_r11 = ctx_r27.tooltipAppendToBody;
        var tooltipDelay_r12 = ctx_r27.tooltipDelay;
        var day_r3 = ctx_r27.day;
        var validateDrag_r14 = ctx_r27.validateDrag;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-draggable", event_r19.draggable);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](22, _c5, event_r19.color == null ? null : event_r19.color.primary))("ngClass", event_r19 == null ? null : event_r19.cssClass)("mwlCalendarTooltip", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](1, 15, event_r19.title, "monthTooltip", event_r19))("tooltipPlacement", tooltipPlacement_r6)("tooltipEvent", event_r19)("tooltipTemplate", tooltipTemplate_r10)("tooltipAppendToBody", tooltipAppendToBody_r11)("tooltipDelay", tooltipDelay_r12)("dropData", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](24, _c7, event_r19, day_r3))("dragAxis", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](27, _c8, event_r19.draggable, event_r19.draggable))("validateDrag", validateDrag_r14)("touchStartLongPress", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](30, _c9));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-hidden", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](2, 19, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](31, _c2), "hideMonthCellEvents"));
      }
    }

    function CalendarMonthCellComponent_ng_template_0_div_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarMonthCellComponent_ng_template_0_div_7_div_1_Template, 3, 32, "div", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        var day_r3 = ctx_r28.day;
        var trackByEventId_r13 = ctx_r28.trackByEventId;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", day_r3.events)("ngForTrackBy", trackByEventId_r13);
      }
    }

    var _c10 = function _c10(a0, a1) {
      return {
        day: a0,
        locale: a1
      };
    };

    function CalendarMonthCellComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "span", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, CalendarMonthCellComponent_ng_template_0_span_3_Template, 2, 1, "span", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](6, "calendarDate");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](7, CalendarMonthCellComponent_ng_template_0_div_7_Template, 2, 2, "div", 6);
      }

      if (rf & 2) {
        var day_r3 = ctx.day;
        var locale_r5 = ctx.locale;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](1, 4, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](11, _c10, day_r3, locale_r5), "monthCell"));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", day_r3.badgeTotal > 0);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](6, 7, day_r3.date, "monthViewDayNumber", locale_r5));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", day_r3.events.length > 0);
      }
    }

    function CalendarMonthCellComponent_ng_template_2_Template(rf, ctx) {}

    var _c11 = function _c11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
      return {
        day: a0,
        openDay: a1,
        locale: a2,
        tooltipPlacement: a3,
        highlightDay: a4,
        unhighlightDay: a5,
        eventClicked: a6,
        tooltipTemplate: a7,
        tooltipAppendToBody: a8,
        tooltipDelay: a9,
        trackByEventId: a10,
        validateDrag: a11
      };
    };

    var _c12 = function _c12(a0) {
      return {
        event: a0
      };
    };

    var _c13 = function _c13(a0, a1) {
      return {
        event: a0,
        locale: a1
      };
    };

    function CalendarOpenDayEventsComponent_ng_template_0_div_0_div_5_Template(rf, ctx) {
      if (rf & 1) {
        var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 7);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "span", 8);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "mwl-calendar-event-title", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mwlClick", function CalendarOpenDayEventsComponent_ng_template_0_div_0_div_5_Template_mwl_calendar_event_title_mwlClick_3_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var event_r10 = ctx.$implicit;

          var eventClicked_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).eventClicked;

          return eventClicked_r4.emit({
            event: event_r10,
            sourceEvent: $event
          });
        })("mwlKeydownEnter", function CalendarOpenDayEventsComponent_ng_template_0_div_0_div_5_Template_mwl_calendar_event_title_mwlKeydownEnter_3_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var event_r10 = ctx.$implicit;

          var eventClicked_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).eventClicked;

          return eventClicked_r4.emit({
            event: event_r10,
            sourceEvent: $event
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](4, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](5, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](6, "mwl-calendar-event-actions", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var event_r10 = ctx.$implicit;

        var validateDrag_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2).validateDrag;

        var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-draggable", event_r10.draggable);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", event_r10 == null ? null : event_r10.cssClass)("dropData", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](16, _c12, event_r10))("dragAxis", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](18, _c8, event_r10.draggable, event_r10.draggable))("validateDrag", validateDrag_r7)("touchStartLongPress", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](21, _c9));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](22, _c5, event_r10.color == null ? null : event_r10.color.primary));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("event", event_r10)("customTemplate", ctx_r9.eventTitleTemplate);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](4, 13, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](24, _c13, event_r10, ctx_r9.locale), "eventDescription"));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("event", event_r10)("customTemplate", ctx_r9.eventActionsTemplate);
      }
    }

    var _c14 = function _c14(a0, a1) {
      return {
        date: a0,
        locale: a1
      };
    };

    function CalendarOpenDayEventsComponent_ng_template_0_div_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "span", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](3, "span", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](4, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, CalendarOpenDayEventsComponent_ng_template_0_div_0_div_5_Template, 7, 27, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        var events_r3 = ctx_r17.events;
        var trackByEventId_r6 = ctx_r17.trackByEventId;

        var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("@collapse", undefined);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](2, 5, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](11, _c14, ctx_r8.date, ctx_r8.locale), "openDayEventsAlert"));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](4, 8, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](14, _c14, ctx_r8.date, ctx_r8.locale), "openDayEventsLandmark"));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", events_r3)("ngForTrackBy", trackByEventId_r6);
      }
    }

    function CalendarOpenDayEventsComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarOpenDayEventsComponent_ng_template_0_div_0_Template, 6, 17, "div", 2);
      }

      if (rf & 2) {
        var isOpen_r5 = ctx.isOpen;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", isOpen_r5);
      }
    }

    function CalendarOpenDayEventsComponent_ng_template_2_Template(rf, ctx) {}

    var _c15 = function _c15(a0, a1, a2, a3, a4) {
      return {
        events: a0,
        eventClicked: a1,
        isOpen: a2,
        trackByEventId: a3,
        validateDrag: a4
      };
    };

    function CalendarWeekViewComponent_div_2_div_4_Template(rf, ctx) {
      if (rf & 1) {
        var _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 13);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("drop", function CalendarWeekViewComponent_div_2_div_4_Template_div_drop_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r9);

          var day_r7 = ctx.$implicit;

          var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r8.eventDropped($event, day_r7.date, true);
        })("dragEnter", function CalendarWeekViewComponent_div_2_div_4_Template_div_dragEnter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r9);

          var day_r7 = ctx.$implicit;

          var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r10.dateDragEnter(day_r7.date);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }
    }

    var _c16 = function _c16() {
      return {
        left: true
      };
    };

    function CalendarWeekViewComponent_div_2_div_5_div_2_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 22);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("resizeEdges", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](1, _c16));
      }
    }

    var _c17 = function _c17() {
      return {
        right: true
      };
    };

    function CalendarWeekViewComponent_div_2_div_5_div_2_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 23);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("resizeEdges", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](1, _c17));
      }
    }

    var _c18 = function _c18(a0, a1) {
      return {
        left: a0,
        right: a1
      };
    };

    var _c19 = function _c19(a0, a1) {
      return {
        event: a0,
        calendarId: a1
      };
    };

    var _c20 = function _c20(a0) {
      return {
        x: a0
      };
    };

    function CalendarWeekViewComponent_div_2_div_5_div_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 17, 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("resizeStart", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_div_resizeStart_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var allDayEvent_r14 = ctx.$implicit;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          var ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r18.allDayEventResizeStarted(_r12, allDayEvent_r14, $event);
        })("resizing", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_div_resizing_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var allDayEvent_r14 = ctx.$implicit;

          var ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r20.allDayEventResizing(allDayEvent_r14, $event, ctx_r20.dayColumnWidth);
        })("resizeEnd", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_div_resizeEnd_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var allDayEvent_r14 = ctx.$implicit;

          var ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r21.allDayEventResizeEnded(allDayEvent_r14);
        })("dragStart", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_div_dragStart_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          var ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r22.dragStarted(_r12, _r15);
        })("dragging", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_div_dragging_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r23.allDayEventDragMove();
        })("dragEnd", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_div_dragEnd_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var allDayEvent_r14 = ctx.$implicit;

          var ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r24.dragEnded(allDayEvent_r14, $event, ctx_r24.dayColumnWidth);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewComponent_div_2_div_5_div_2_div_2_Template, 1, 2, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "mwl-calendar-week-view-event", 20);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("eventClicked", function CalendarWeekViewComponent_div_2_div_5_div_2_Template_mwl_calendar_week_view_event_eventClicked_3_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r19);

          var allDayEvent_r14 = ctx.$implicit;

          var ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r25.eventClicked.emit({
            event: allDayEvent_r14.event,
            sourceEvent: $event.sourceEvent
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, CalendarWeekViewComponent_div_2_div_5_div_2_div_4_Template, 1, 2, "div", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var allDayEvent_r14 = ctx.$implicit;

        var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("width", 100 / ctx_r13.days.length * allDayEvent_r14.span, "%")("margin-left", 100 / ctx_r13.days.length * allDayEvent_r14.offset, "%");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-draggable", allDayEvent_r14.event.draggable && ctx_r13.allDayEventResizes.size === 0)("cal-starts-within-week", !allDayEvent_r14.startsBeforeWeek)("cal-ends-within-week", !allDayEvent_r14.endsAfterWeek);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", allDayEvent_r14.event == null ? null : allDayEvent_r14.event.cssClass)("resizeSnapGrid", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](30, _c18, ctx_r13.dayColumnWidth, ctx_r13.dayColumnWidth))("validateResize", ctx_r13.validateResize)("dropData", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](33, _c19, allDayEvent_r14.event, ctx_r13.calendarId))("dragAxis", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](36, _c8, allDayEvent_r14.event.draggable && ctx_r13.allDayEventResizes.size === 0, !ctx_r13.snapDraggedEvents && allDayEvent_r14.event.draggable && ctx_r13.allDayEventResizes.size === 0))("dragSnapGrid", ctx_r13.snapDraggedEvents ? _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction1"](39, _c20, ctx_r13.dayColumnWidth) : _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](41, _c2))("validateDrag", ctx_r13.validateDrag)("touchStartLongPress", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](42, _c9));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", (allDayEvent_r14.event == null ? null : allDayEvent_r14.event.resizable == null ? null : allDayEvent_r14.event.resizable.beforeStart) && !allDayEvent_r14.startsBeforeWeek);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("locale", ctx_r13.locale)("weekEvent", allDayEvent_r14)("tooltipPlacement", ctx_r13.tooltipPlacement)("tooltipTemplate", ctx_r13.tooltipTemplate)("tooltipAppendToBody", ctx_r13.tooltipAppendToBody)("tooltipDelay", ctx_r13.tooltipDelay)("customTemplate", ctx_r13.eventTemplate)("eventTitleTemplate", ctx_r13.eventTitleTemplate)("eventActionsTemplate", ctx_r13.eventActionsTemplate)("daysInWeek", ctx_r13.daysInWeek);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", (allDayEvent_r14.event == null ? null : allDayEvent_r14.event.resizable == null ? null : allDayEvent_r14.event.resizable.afterEnd) && !allDayEvent_r14.endsAfterWeek);
      }
    }

    function CalendarWeekViewComponent_div_2_div_5_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 14, 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewComponent_div_2_div_5_div_2_Template, 5, 43, "div", 16);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var eventRow_r11 = ctx.$implicit;

        var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", eventRow_r11.row)("ngForTrackBy", ctx_r6.trackByWeekAllDayEvent);
      }
    }

    function CalendarWeekViewComponent_div_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 8, 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("dragEnter", function CalendarWeekViewComponent_div_2_Template_div_dragEnter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r27);

          var ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r26.dragEnter("allDay");
        })("dragLeave", function CalendarWeekViewComponent_div_2_Template_div_dragLeave_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r27);

          var ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

          return ctx_r28.dragLeave("allDay");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](3, "div", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, CalendarWeekViewComponent_div_2_div_4_Template, 1, 0, "div", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, CalendarWeekViewComponent_div_2_div_5_Template, 3, 2, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.allDayEventsLabelTemplate);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r0.days)("ngForTrackBy", ctx_r0.trackByWeekDayHeaderDate);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r0.view.allDayEventRows)("ngForTrackBy", ctx_r0.trackById);
      }
    }

    function CalendarWeekViewComponent_div_4_div_1_mwl_calendar_week_view_hour_segment_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "mwl-calendar-week-view-hour-segment", 28);
      }

      if (rf & 2) {
        var segment_r33 = ctx.$implicit;

        var ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("height", ctx_r32.hourSegmentHeight, "px");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("segment", segment_r33)("segmentHeight", ctx_r32.hourSegmentHeight)("locale", ctx_r32.locale)("customTemplate", ctx_r32.hourSegmentTemplate)("isTimeLabel", true)("daysInWeek", ctx_r32.daysInWeek);
      }
    }

    function CalendarWeekViewComponent_div_4_div_1_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarWeekViewComponent_div_4_div_1_mwl_calendar_week_view_hour_segment_1_Template, 1, 8, "mwl-calendar-week-view-hour-segment", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var hour_r30 = ctx.$implicit;
        var odd_r31 = ctx.odd;

        var ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-hour-odd", odd_r31);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", hour_r30.segments)("ngForTrackBy", ctx_r29.trackByHourSegment);
      }
    }

    function CalendarWeekViewComponent_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarWeekViewComponent_div_4_div_1_Template, 2, 4, "div", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx_r1.view.hourColumns[0].hours)("ngForTrackBy", ctx_r1.trackByHour);
      }
    }

    var _c21 = function _c21() {
      return {
        left: true,
        top: true
      };
    };

    function CalendarWeekViewComponent_div_7_div_3_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 22);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("resizeEdges", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](1, _c21));
      }
    }

    function CalendarWeekViewComponent_div_7_div_3_ng_template_3_Template(rf, ctx) {}

    function CalendarWeekViewComponent_div_7_div_3_ng_template_4_Template(rf, ctx) {
      if (rf & 1) {
        var _r46 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mwl-calendar-week-view-event", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("eventClicked", function CalendarWeekViewComponent_div_7_div_3_ng_template_4_Template_mwl_calendar_week_view_event_eventClicked_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r46);

          var timeEvent_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;

          var ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r44.eventClicked.emit({
            event: timeEvent_r37.event,
            sourceEvent: $event.sourceEvent
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var timeEvent_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;

        var column_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().$implicit;

        var ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("locale", ctx_r42.locale)("weekEvent", timeEvent_r37)("tooltipPlacement", ctx_r42.tooltipPlacement)("tooltipTemplate", ctx_r42.tooltipTemplate)("tooltipAppendToBody", ctx_r42.tooltipAppendToBody)("tooltipDisabled", ctx_r42.dragActive || ctx_r42.timeEventResizes.size > 0)("tooltipDelay", ctx_r42.tooltipDelay)("customTemplate", ctx_r42.eventTemplate)("eventTitleTemplate", ctx_r42.eventTitleTemplate)("eventActionsTemplate", ctx_r42.eventActionsTemplate)("column", column_r34)("daysInWeek", ctx_r42.daysInWeek);
      }
    }

    var _c22 = function _c22() {
      return {
        right: true,
        bottom: true
      };
    };

    function CalendarWeekViewComponent_div_7_div_3_div_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 23);
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("resizeEdges", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](1, _c22));
      }
    }

    var _c23 = function _c23(a0, a1, a2, a3) {
      return {
        left: a0,
        right: a1,
        top: a2,
        bottom: a3
      };
    };

    function CalendarWeekViewComponent_div_7_div_3_Template(rf, ctx) {
      if (rf & 1) {
        var _r50 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 33, 18);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("resizeStart", function CalendarWeekViewComponent_div_7_div_3_Template_div_resizeStart_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r50);

          var timeEvent_r37 = ctx.$implicit;

          var ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](6);

          return ctx_r49.timeEventResizeStarted(_r2, timeEvent_r37, $event);
        })("resizing", function CalendarWeekViewComponent_div_7_div_3_Template_div_resizing_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r50);

          var timeEvent_r37 = ctx.$implicit;

          var ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r51.timeEventResizing(timeEvent_r37, $event);
        })("resizeEnd", function CalendarWeekViewComponent_div_7_div_3_Template_div_resizeEnd_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r50);

          var timeEvent_r37 = ctx.$implicit;

          var ctx_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r52.timeEventResizeEnded(timeEvent_r37);
        })("dragStart", function CalendarWeekViewComponent_div_7_div_3_Template_div_dragStart_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r50);

          var timeEvent_r37 = ctx.$implicit;

          var _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          var ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](6);

          return ctx_r53.dragStarted(_r2, _r38, timeEvent_r37);
        })("dragging", function CalendarWeekViewComponent_div_7_div_3_Template_div_dragging_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r50);

          var timeEvent_r37 = ctx.$implicit;

          var ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r54.dragMove(timeEvent_r37, $event);
        })("dragEnd", function CalendarWeekViewComponent_div_7_div_3_Template_div_dragEnd_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r50);

          var timeEvent_r37 = ctx.$implicit;

          var ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

          return ctx_r55.dragEnded(timeEvent_r37, $event, ctx_r55.dayColumnWidth, true);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewComponent_div_7_div_3_div_2_Template, 1, 2, "div", 19);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, CalendarWeekViewComponent_div_7_div_3_ng_template_3_Template, 0, 0, "ng-template", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, CalendarWeekViewComponent_div_7_div_3_ng_template_4_Template, 1, 12, "ng-template", null, 35, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](6, CalendarWeekViewComponent_div_7_div_3_div_6_Template, 1, 2, "div", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var timeEvent_r37 = ctx.$implicit;

        var _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](5);

        var ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("top", timeEvent_r37.top, "px")("height", timeEvent_r37.height, "px")("left", timeEvent_r37.left, "%")("width", timeEvent_r37.width, "%");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-draggable", timeEvent_r37.event.draggable && ctx_r35.timeEventResizes.size === 0)("cal-starts-within-day", !timeEvent_r37.startsBeforeDay)("cal-ends-within-day", !timeEvent_r37.endsAfterDay);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", timeEvent_r37.event.cssClass)("hidden", timeEvent_r37.height === 0 && timeEvent_r37.width === 0)("resizeSnapGrid", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction4"](29, _c23, ctx_r35.dayColumnWidth, ctx_r35.dayColumnWidth, ctx_r35.eventSnapSize || ctx_r35.hourSegmentHeight, ctx_r35.eventSnapSize || ctx_r35.hourSegmentHeight))("validateResize", ctx_r35.validateResize)("allowNegativeResizes", true)("dropData", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](34, _c19, timeEvent_r37.event, ctx_r35.calendarId))("dragAxis", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](37, _c8, timeEvent_r37.event.draggable && ctx_r35.timeEventResizes.size === 0, timeEvent_r37.event.draggable && ctx_r35.timeEventResizes.size === 0))("dragSnapGrid", ctx_r35.snapDraggedEvents ? _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](40, _c8, ctx_r35.dayColumnWidth, ctx_r35.eventSnapSize || ctx_r35.hourSegmentHeight) : _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](43, _c2))("touchStartLongPress", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](44, _c9))("ghostDragEnabled", !ctx_r35.snapDraggedEvents)("ghostElementTemplate", _r41)("validateDrag", ctx_r35.validateDrag);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", (timeEvent_r37.event == null ? null : timeEvent_r37.event.resizable == null ? null : timeEvent_r37.event.resizable.beforeStart) && !timeEvent_r37.startsBeforeDay);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", _r41);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", (timeEvent_r37.event == null ? null : timeEvent_r37.event.resizable == null ? null : timeEvent_r37.event.resizable.afterEnd) && !timeEvent_r37.endsAfterDay);
      }
    }

    function CalendarWeekViewComponent_div_7_div_4_mwl_calendar_week_view_hour_segment_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r61 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mwl-calendar-week-view-hour-segment", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mwlClick", function CalendarWeekViewComponent_div_7_div_4_mwl_calendar_week_view_hour_segment_1_Template_mwl_calendar_week_view_hour_segment_mwlClick_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r61);

          var segment_r59 = ctx.$implicit;

          var ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r60.hourSegmentClicked.emit({
            date: segment_r59.date,
            sourceEvent: $event
          });
        })("drop", function CalendarWeekViewComponent_div_7_div_4_mwl_calendar_week_view_hour_segment_1_Template_mwl_calendar_week_view_hour_segment_drop_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r61);

          var segment_r59 = ctx.$implicit;

          var ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r62.eventDropped($event, segment_r59.date, false);
        })("dragEnter", function CalendarWeekViewComponent_div_7_div_4_mwl_calendar_week_view_hour_segment_1_Template_mwl_calendar_week_view_hour_segment_dragEnter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r61);

          var segment_r59 = ctx.$implicit;

          var ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

          return ctx_r63.dateDragEnter(segment_r59.date);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var segment_r59 = ctx.$implicit;

        var ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("height", ctx_r58.hourSegmentHeight, "px");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("segment", segment_r59)("segmentHeight", ctx_r58.hourSegmentHeight)("locale", ctx_r58.locale)("customTemplate", ctx_r58.hourSegmentTemplate)("daysInWeek", ctx_r58.daysInWeek)("clickListenerDisabled", ctx_r58.hourSegmentClicked.observers.length === 0)("dragOverClass", !ctx_r58.dragActive || !ctx_r58.snapDraggedEvents ? "cal-drag-over" : null)("isTimeLabel", ctx_r58.daysInWeek === 1);
      }
    }

    function CalendarWeekViewComponent_div_7_div_4_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarWeekViewComponent_div_7_div_4_mwl_calendar_week_view_hour_segment_1_Template, 1, 10, "mwl-calendar-week-view-hour-segment", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var hour_r56 = ctx.$implicit;
        var odd_r57 = ctx.odd;

        var ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-hour-odd", odd_r57);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", hour_r56.segments)("ngForTrackBy", ctx_r36.trackByHourSegment);
      }
    }

    function CalendarWeekViewComponent_div_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "mwl-calendar-week-view-current-time-marker", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, CalendarWeekViewComponent_div_7_div_3_Template, 7, 45, "div", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, CalendarWeekViewComponent_div_7_div_4_Template, 2, 4, "div", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var column_r34 = ctx.$implicit;

        var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("columnDate", column_r34.date)("dayStartHour", ctx_r3.dayStartHour)("dayStartMinute", ctx_r3.dayStartMinute)("dayEndHour", ctx_r3.dayEndHour)("dayEndMinute", ctx_r3.dayEndMinute)("hourSegments", ctx_r3.hourSegments)("hourSegmentHeight", ctx_r3.hourSegmentHeight)("customTemplate", ctx_r3.currentTimeMarkerTemplate);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", column_r34.events)("ngForTrackBy", ctx_r3.trackByWeekTimeEvent);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", column_r34.hours)("ngForTrackBy", ctx_r3.trackByHour);
      }
    }

    function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mwlClick", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_mwlClick_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var day_r10 = ctx.$implicit;

          var dayHeaderClicked_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().dayHeaderClicked;

          return dayHeaderClicked_r5.emit({
            day: day_r10,
            sourceEvent: $event
          });
        })("drop", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_drop_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var day_r10 = ctx.$implicit;

          var eventDropped_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().eventDropped;

          return eventDropped_r6.emit({
            event: $event.dropData.event,
            newStart: day_r10.date
          });
        })("dragEnter", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_dragEnter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r12);

          var day_r10 = ctx.$implicit;

          var dragEnter_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().dragEnter;

          return dragEnter_r8.emit({
            date: day_r10.date
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "b");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](3, "calendarDate");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "br");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "span");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](7, "calendarDate");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var day_r10 = ctx.$implicit;

        var locale_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().locale;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-past", day_r10.isPast)("cal-today", day_r10.isToday)("cal-future", day_r10.isFuture)("cal-weekend", day_r10.isWeekend);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", day_r10.cssClass);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](3, 11, day_r10.date, "weekViewColumnHeader", locale_r4));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](7, 15, day_r10.date, "weekViewColumnSubHeader", locale_r4));
      }
    }

    function CalendarWeekViewHeaderComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](1, CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template, 8, 19, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var days_r3 = ctx.days;
        var trackByWeekDayHeaderDate_r7 = ctx.trackByWeekDayHeaderDate;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", days_r3)("ngForTrackBy", trackByWeekDayHeaderDate_r7);
      }
    }

    function CalendarWeekViewHeaderComponent_ng_template_2_Template(rf, ctx) {}

    var _c24 = function _c24(a0, a1, a2, a3, a4, a5) {
      return {
        days: a0,
        locale: a1,
        dayHeaderClicked: a2,
        eventDropped: a3,
        dragEnter: a4,
        trackByWeekDayHeaderDate: a5
      };
    };

    var _c25 = function _c25(a0, a1) {
      return {
        backgroundColor: a0,
        borderColor: a1
      };
    };

    function CalendarWeekViewEventComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        var _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mwlClick", function CalendarWeekViewEventComponent_ng_template_0_Template_div_mwlClick_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r13);

          var eventClicked_r5 = ctx.eventClicked;
          return eventClicked_r5.emit({
            sourceEvent: $event
          });
        })("mwlKeydownEnter", function CalendarWeekViewEventComponent_ng_template_0_Template_div_mwlKeydownEnter_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵrestoreView"](_r13);

          var eventClicked_r5 = ctx.eventClicked;
          return eventClicked_r5.emit({
            sourceEvent: $event
          });
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarEventTitle");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](3, "mwl-calendar-event-actions", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, " ");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](5, "mwl-calendar-event-title", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var weekEvent_r3 = ctx.weekEvent;
        var tooltipPlacement_r4 = ctx.tooltipPlacement;
        var tooltipTemplate_r6 = ctx.tooltipTemplate;
        var tooltipAppendToBody_r7 = ctx.tooltipAppendToBody;
        var tooltipDisabled_r8 = ctx.tooltipDisabled;
        var tooltipDelay_r9 = ctx.tooltipDelay;
        var daysInWeek_r11 = ctx.daysInWeek;

        var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](20, _c25, weekEvent_r3.event.color == null ? null : weekEvent_r3.event.color.secondary, weekEvent_r3.event.color == null ? null : weekEvent_r3.event.color.primary))("mwlCalendarTooltip", !tooltipDisabled_r8 ? _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](1, 13, weekEvent_r3.event.title, daysInWeek_r11 === 1 ? "dayTooltip" : "weekTooltip", weekEvent_r3.tempEvent || weekEvent_r3.event) : "")("tooltipPlacement", tooltipPlacement_r4)("tooltipEvent", weekEvent_r3.tempEvent || weekEvent_r3.event)("tooltipTemplate", tooltipTemplate_r6)("tooltipAppendToBody", tooltipAppendToBody_r7)("tooltipDelay", tooltipDelay_r9);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](2, 17, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](23, _c13, weekEvent_r3.tempEvent || weekEvent_r3.event, ctx_r1.locale), "eventDescription"));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("event", weekEvent_r3.tempEvent || weekEvent_r3.event)("customTemplate", ctx_r1.eventActionsTemplate);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("event", weekEvent_r3.tempEvent || weekEvent_r3.event)("customTemplate", ctx_r1.eventTitleTemplate)("view", daysInWeek_r11 === 1 ? "day" : "week");
      }
    }

    function CalendarWeekViewEventComponent_ng_template_2_Template(rf, ctx) {}

    var _c26 = function _c26(a0, a1, a2, a3, a4, a5, a6, a7, a8) {
      return {
        weekEvent: a0,
        tooltipPlacement: a1,
        eventClicked: a2,
        tooltipTemplate: a3,
        tooltipAppendToBody: a4,
        tooltipDisabled: a5,
        tooltipDelay: a6,
        column: a7,
        daysInWeek: a8
      };
    };

    function CalendarWeekViewHourSegmentComponent_ng_template_0_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 4);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](2, "calendarDate");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();

        var segment_r3 = ctx_r9.segment;
        var daysInWeek_r7 = ctx_r9.daysInWeek;
        var locale_r4 = ctx_r9.locale;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind3"](2, 1, segment_r3.displayDate, daysInWeek_r7 === 1 ? "dayViewHour" : "weekViewHour", locale_r4), " ");
      }
    }

    function CalendarWeekViewHourSegmentComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](1, "calendarA11y");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewHourSegmentComponent_ng_template_0_div_2_Template, 3, 5, "div", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var segment_r3 = ctx.segment;
        var segmentHeight_r5 = ctx.segmentHeight;
        var isTimeLabel_r6 = ctx.isTimeLabel;
        var daysInWeek_r7 = ctx.daysInWeek;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("height", segmentHeight_r5, "px");

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-hour-start", segment_r3.isStart)("cal-after-hour-start", !segment_r3.isStart);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngClass", segment_r3.cssClass);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-hidden", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind2"](1, 9, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](12, _c2), daysInWeek_r7 === 1 ? "hideDayHourSegment" : "hideWeekHourSegment"));

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", isTimeLabel_r6);
      }
    }

    function CalendarWeekViewHourSegmentComponent_ng_template_2_Template(rf, ctx) {}

    var _c27 = function _c27(a0, a1, a2, a3, a4) {
      return {
        segment: a0,
        locale: a1,
        segmentHeight: a2,
        isTimeLabel: a3,
        daysInWeek: a4
      };
    };

    function CalendarWeekViewCurrentTimeMarkerComponent_ng_template_0_div_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 3);
      }

      if (rf & 2) {
        var topPx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]().topPx;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstyleProp"]("top", topPx_r9, "px");
      }
    }

    function CalendarWeekViewCurrentTimeMarkerComponent_ng_template_0_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarWeekViewCurrentTimeMarkerComponent_ng_template_0_div_0_Template, 1, 2, "div", 2);
      }

      if (rf & 2) {
        var isVisible_r8 = ctx.isVisible;

        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", isVisible_r8);
      }
    }

    function CalendarWeekViewCurrentTimeMarkerComponent_ng_template_2_Template(rf, ctx) {}

    var _c28 = function _c28(a0, a1, a2, a3, a4, a5, a6) {
      return {
        columnDate: a0,
        dayStartHour: a1,
        dayStartMinute: a2,
        dayEndHour: a3,
        dayEndMinute: a4,
        isVisible: a5,
        topPx: a6
      };
    };

    var CalendarEventActionsComponent = function CalendarEventActionsComponent() {
      _classCallCheck(this, CalendarEventActionsComponent);

      this.trackByActionId = function (index, action) {
        return action.id ? action.id : action;
      };
    };

    CalendarEventActionsComponent.ɵfac = function CalendarEventActionsComponent_Factory(t) {
      return new (t || CalendarEventActionsComponent)();
    };

    CalendarEventActionsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarEventActionsComponent,
      selectors: [["mwl-calendar-event-actions"]],
      inputs: {
        event: "event",
        customTemplate: "customTemplate"
      },
      decls: 3,
      vars: 5,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "cal-event-actions", 4, "ngIf"], [1, "cal-event-actions"], ["class", "cal-event-action", "href", "javascript:;", "tabindex", "0", "role", "button", 3, "ngClass", "innerHtml", "mwlClick", "mwlKeydownEnter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["href", "javascript:;", "tabindex", "0", "role", "button", 1, "cal-event-action", 3, "ngClass", "innerHtml", "mwlClick", "mwlKeydownEnter"]],
      template: function CalendarEventActionsComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarEventActionsComponent_ng_template_0_Template, 1, 1, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarEventActionsComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c1, ctx.event, ctx.trackByActionId));
        }
      },
      directives: function directives() {
        return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], ClickDirective, KeydownEnterDirective];
      },
      pipes: function pipes() {
        return [CalendarA11yPipe];
      },
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarEventActionsComponent.prototype, "event", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarEventActionsComponent.prototype, "customTemplate", void 0);

    var CalendarEventTitleComponent = function CalendarEventTitleComponent() {
      _classCallCheck(this, CalendarEventTitleComponent);
    };

    CalendarEventTitleComponent.ɵfac = function CalendarEventTitleComponent_Factory(t) {
      return new (t || CalendarEventTitleComponent)();
    };

    CalendarEventTitleComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarEventTitleComponent,
      selectors: [["mwl-calendar-event-title"]],
      inputs: {
        event: "event",
        customTemplate: "customTemplate",
        view: "view"
      },
      decls: 3,
      vars: 5,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "cal-event-title", 3, "innerHTML"]],
      template: function CalendarEventTitleComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarEventTitleComponent_ng_template_0_Template, 3, 10, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarEventTitleComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction2"](2, _c3, ctx.event, ctx.view));
        }
      },
      directives: function directives() {
        return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"]];
      },
      pipes: function pipes() {
        return [CalendarEventTitlePipe, CalendarA11yPipe];
      },
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarEventTitleComponent.prototype, "event", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarEventTitleComponent.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarEventTitleComponent.prototype, "view", void 0);

    var CalendarTooltipWindowComponent = function CalendarTooltipWindowComponent() {
      _classCallCheck(this, CalendarTooltipWindowComponent);
    };

    CalendarTooltipWindowComponent.ɵfac = function CalendarTooltipWindowComponent_Factory(t) {
      return new (t || CalendarTooltipWindowComponent)();
    };

    CalendarTooltipWindowComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarTooltipWindowComponent,
      selectors: [["mwl-calendar-tooltip-window"]],
      inputs: {
        contents: "contents",
        placement: "placement",
        event: "event",
        customTemplate: "customTemplate"
      },
      decls: 3,
      vars: 6,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "cal-tooltip", 3, "ngClass"], [1, "cal-tooltip-arrow"], [1, "cal-tooltip-inner", 3, "innerHtml"]],
      template: function CalendarTooltipWindowComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarTooltipWindowComponent_ng_template_0_Template, 3, 2, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarTooltipWindowComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction3"](2, _c4, ctx.contents, ctx.placement, ctx.event));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"]],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarTooltipWindowComponent.prototype, "contents", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarTooltipWindowComponent.prototype, "placement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarTooltipWindowComponent.prototype, "event", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarTooltipWindowComponent.prototype, "customTemplate", void 0);

    var CalendarTooltipDirective =
    /*#__PURE__*/
    function () {
      function CalendarTooltipDirective(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document //tslint:disable-line
      ) {
        _classCallCheck(this, CalendarTooltipDirective);

        this.elementRef = elementRef;
        this.injector = injector;
        this.renderer = renderer;
        this.viewContainerRef = viewContainerRef;
        this.document = document;
        this.placement = 'auto'; // tslint:disable-line no-input-rename

        this.delay = null; // tslint:disable-line no-input-rename

        this.cancelTooltipDelay$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);
      }

      _createClass(CalendarTooltipDirective, [{
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          if (this.tooltipRef && (changes.contents || changes.customTemplate || changes.event)) {
            this.tooltipRef.instance.contents = this.contents;
            this.tooltipRef.instance.customTemplate = this.customTemplate;
            this.tooltipRef.instance.event = this.event;
            this.tooltipRef.changeDetectorRef.markForCheck();

            if (!this.contents) {
              this.hide();
            }
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.hide();
        }
      }, {
        key: "onMouseOver",
        value: function onMouseOver() {
          var _this2 = this;

          var delay$ = this.delay === null ? Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["of"])('now') : Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["timer"])(this.delay);
          delay$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.cancelTooltipDelay$)).subscribe(function () {
            _this2.show();
          });
        }
      }, {
        key: "onMouseOut",
        value: function onMouseOut() {
          this.hide();
        }
      }, {
        key: "show",
        value: function show() {
          var _this3 = this;

          if (!this.tooltipRef && this.contents) {
            this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);
            this.tooltipRef.instance.contents = this.contents;
            this.tooltipRef.instance.customTemplate = this.customTemplate;
            this.tooltipRef.instance.event = this.event;

            if (this.appendToBody) {
              this.document.body.appendChild(this.tooltipRef.location.nativeElement);
            }

            requestAnimationFrame(function () {
              _this3.positionTooltip();
            });
          }
        }
      }, {
        key: "hide",
        value: function hide() {
          if (this.tooltipRef) {
            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));
            this.tooltipRef = null;
          }

          this.cancelTooltipDelay$.next();
        }
      }, {
        key: "positionTooltip",
        value: function positionTooltip() {
          var previousPositions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

          if (this.tooltipRef) {
            this.tooltipRef.changeDetectorRef.detectChanges();
            this.tooltipRef.instance.placement = Object(positioning__WEBPACK_IMPORTED_MODULE_3__["positionElements"])(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody); // keep re-positioning the tooltip until the arrow position doesn't make a difference

            if (previousPositions.indexOf(this.tooltipRef.instance.placement) === -1) {
              this.positionTooltip([].concat(_toConsumableArray(previousPositions), [this.tooltipRef.instance.placement]));
            }
          }
        }
      }]);

      return CalendarTooltipDirective;
    }();

    CalendarTooltipDirective.ɵfac = function CalendarTooltipDirective_Factory(t) {
      return new (t || CalendarTooltipDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]));
    };

    CalendarTooltipDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
      type: CalendarTooltipDirective,
      selectors: [["", "mwlCalendarTooltip", ""]],
      hostBindings: function CalendarTooltipDirective_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("mouseenter", function CalendarTooltipDirective_mouseenter_HostBindingHandler() {
            return ctx.onMouseOver();
          })("mouseleave", function CalendarTooltipDirective_mouseleave_HostBindingHandler() {
            return ctx.onMouseOut();
          });
        }
      },
      inputs: {
        placement: ["tooltipPlacement", "placement"],
        delay: ["tooltipDelay", "delay"],
        contents: ["mwlCalendarTooltip", "contents"],
        customTemplate: ["tooltipTemplate", "customTemplate"],
        event: ["tooltipEvent", "event"],
        appendToBody: ["tooltipAppendToBody", "appendToBody"]
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]]
    });

    CalendarTooltipDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]]
        }]
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('mwlCalendarTooltip')], CalendarTooltipDirective.prototype, "contents", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipPlacement')], CalendarTooltipDirective.prototype, "placement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipTemplate')], CalendarTooltipDirective.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipEvent')], CalendarTooltipDirective.prototype, "event", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipAppendToBody')], CalendarTooltipDirective.prototype, "appendToBody", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])('tooltipDelay')], CalendarTooltipDirective.prototype, "delay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('mouseenter')], CalendarTooltipDirective.prototype, "onMouseOver", null);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('mouseleave')], CalendarTooltipDirective.prototype, "onMouseOut", null);
    CalendarTooltipDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]))], CalendarTooltipDirective);

    var DateAdapter = function DateAdapter() {
      _classCallCheck(this, DateAdapter);
    };

    var CalendarView;

    (function (CalendarView) {
      CalendarView["Month"] = "month";
      CalendarView["Week"] = "week";
      CalendarView["Day"] = "day";
    })(CalendarView || (CalendarView = {}));

    var validateEvents = function validateEvents(events) {
      var warn = function warn() {
        var _console;

        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }

        return (_console = console).warn.apply(_console, ['angular-calendar'].concat(args));
      };

      return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["validateEvents"])(events, warn);
    };

    function isInside(outer, inner) {
      return Math.floor(outer.left) <= Math.ceil(inner.left) && Math.floor(inner.left) <= Math.ceil(outer.right) && Math.floor(outer.left) <= Math.ceil(inner.right) && Math.floor(inner.right) <= Math.ceil(outer.right) && Math.floor(outer.top) <= Math.ceil(inner.top) && Math.floor(inner.top) <= Math.ceil(outer.bottom) && Math.floor(outer.top) <= Math.ceil(inner.bottom) && Math.floor(inner.bottom) <= Math.ceil(outer.bottom);
    }

    function roundToNearest(amount, precision) {
      return Math.round(amount / precision) * precision;
    }

    var trackByEventId = function trackByEventId(index, event) {
      return event.id ? event.id : event;
    };

    var trackByWeekDayHeaderDate = function trackByWeekDayHeaderDate(index, day) {
      return day.date.toISOString();
    };

    var trackByHourSegment = function trackByHourSegment(index, segment) {
      return segment.date.toISOString();
    };

    var trackByHour = function trackByHour(index, hour) {
      return hour.segments[0].date.toISOString();
    };

    var trackByWeekAllDayEvent = function trackByWeekAllDayEvent(index, weekEvent) {
      return weekEvent.event.id ? weekEvent.event.id : weekEvent.event;
    };

    var trackByWeekTimeEvent = function trackByWeekTimeEvent(index, weekEvent) {
      return weekEvent.event.id ? weekEvent.event.id : weekEvent.event;
    };

    var MINUTES_IN_HOUR = 60;

    function getPixelAmountInMinutes(hourSegments, hourSegmentHeight) {
      return MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);
    }

    function getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize) {
      var draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);
      var pixelAmountInMinutes = getPixelAmountInMinutes(hourSegments, hourSegmentHeight);
      return draggedInPixelsSnapSize * pixelAmountInMinutes;
    }

    function getMinimumEventHeightInMinutes(hourSegments, hourSegmentHeight) {
      return getPixelAmountInMinutes(hourSegments, hourSegmentHeight) * hourSegmentHeight;
    }

    function getDefaultEventEnd(dateAdapter, event, minimumMinutes) {
      if (event.end) {
        return event.end;
      } else {
        return dateAdapter.addMinutes(event.start, minimumMinutes);
      }
    }

    function addDaysWithExclusions(dateAdapter, date, days, excluded) {
      var daysCounter = 0;
      var daysToAdd = 0;
      var changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;
      var result = date;

      while (daysToAdd <= Math.abs(days)) {
        result = changeDays(date, daysCounter);
        var day = dateAdapter.getDay(result);

        if (excluded.indexOf(day) === -1) {
          daysToAdd++;
        }

        daysCounter++;
      }

      return result;
    }

    function isDraggedWithinPeriod(newStart, newEnd, period) {
      var end = newEnd || newStart;
      return period.start <= newStart && newStart <= period.end || period.start <= end && end <= period.end;
    }

    function shouldFireDroppedEvent(dropEvent, date, allDay, calendarId) {
      return dropEvent.dropData && dropEvent.dropData.event && (dropEvent.dropData.calendarId !== calendarId || dropEvent.dropData.event.allDay && !allDay || !dropEvent.dropData.event.allDay && allDay);
    }

    function getWeekViewPeriod(dateAdapter, viewDate, weekStartsOn) {
      var excluded = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
      var daysInWeek = arguments.length > 4 ? arguments[4] : undefined;
      var viewStart = daysInWeek ? dateAdapter.startOfDay(viewDate) : dateAdapter.startOfWeek(viewDate, {
        weekStartsOn: weekStartsOn
      });
      var endOfWeek = dateAdapter.endOfWeek(viewDate, {
        weekStartsOn: weekStartsOn
      });

      while (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 && viewStart < endOfWeek) {
        viewStart = dateAdapter.addDays(viewStart, 1);
      }

      if (daysInWeek) {
        var viewEnd = dateAdapter.endOfDay(addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded));
        return {
          viewStart: viewStart,
          viewEnd: viewEnd
        };
      } else {
        var _viewEnd = endOfWeek;

        while (excluded.indexOf(dateAdapter.getDay(_viewEnd)) > -1 && _viewEnd > viewStart) {
          _viewEnd = dateAdapter.subDays(_viewEnd, 1);
        }

        return {
          viewStart: viewStart,
          viewEnd: _viewEnd
        };
      }
    }

    function isWithinThreshold(_ref2) {
      var x = _ref2.x,
          y = _ref2.y;
      var DRAG_THRESHOLD = 1;
      return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;
    }
    /**
     * Change the view date to the previous view. For example:
     *
     * ```typescript
     * <button
     *  mwlCalendarPreviousView
     *  [(viewDate)]="viewDate"
     *  [view]="view">
     *  Previous
     * </button>
     * ```
     */


    var CalendarPreviousViewDirective =
    /*#__PURE__*/
    function () {
      function CalendarPreviousViewDirective(dateAdapter) {
        _classCallCheck(this, CalendarPreviousViewDirective);

        this.dateAdapter = dateAdapter;
        /**
         * Days to skip when going back by 1 day
         */

        this.excludeDays = [];
        /**
         * Called when the view date is changed
         */

        this.viewDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      }
      /**
       * @hidden
       */


      _createClass(CalendarPreviousViewDirective, [{
        key: "onClick",
        value: function onClick() {
          var subFn = {
            day: this.dateAdapter.subDays,
            week: this.dateAdapter.subWeeks,
            month: this.dateAdapter.subMonths
          }[this.view];

          if (this.view === CalendarView.Day) {
            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -1, this.excludeDays));
          } else if (this.view === CalendarView.Week && this.daysInWeek) {
            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -this.daysInWeek, this.excludeDays));
          } else {
            this.viewDateChange.emit(subFn(this.viewDate, 1));
          }
        }
      }]);

      return CalendarPreviousViewDirective;
    }();

    CalendarPreviousViewDirective.ɵfac = function CalendarPreviousViewDirective_Factory(t) {
      return new (t || CalendarPreviousViewDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DateAdapter));
    };

    CalendarPreviousViewDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
      type: CalendarPreviousViewDirective,
      selectors: [["", "mwlCalendarPreviousView", ""]],
      hostBindings: function CalendarPreviousViewDirective_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CalendarPreviousViewDirective_click_HostBindingHandler() {
            return ctx.onClick();
          });
        }
      },
      inputs: {
        excludeDays: "excludeDays",
        view: "view",
        viewDate: "viewDate",
        daysInWeek: "daysInWeek"
      },
      outputs: {
        viewDateChange: "viewDateChange"
      }
    });

    CalendarPreviousViewDirective.ctorParameters = function () {
      return [{
        type: DateAdapter
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarPreviousViewDirective.prototype, "view", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarPreviousViewDirective.prototype, "viewDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarPreviousViewDirective.prototype, "excludeDays", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarPreviousViewDirective.prototype, "daysInWeek", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarPreviousViewDirective.prototype, "viewDateChange", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click')], CalendarPreviousViewDirective.prototype, "onClick", null);
    /**
     * Change the view date to the next view. For example:
     *
     * ```typescript
     * <button
     *  mwlCalendarNextView
     *  [(viewDate)]="viewDate"
     *  [view]="view">
     *  Next
     * </button>
     * ```
     */

    var CalendarNextViewDirective =
    /*#__PURE__*/
    function () {
      function CalendarNextViewDirective(dateAdapter) {
        _classCallCheck(this, CalendarNextViewDirective);

        this.dateAdapter = dateAdapter;
        /**
         * Days to skip when going forward by 1 day
         */

        this.excludeDays = [];
        /**
         * Called when the view date is changed
         */

        this.viewDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      }
      /**
       * @hidden
       */


      _createClass(CalendarNextViewDirective, [{
        key: "onClick",
        value: function onClick() {
          var addFn = {
            day: this.dateAdapter.addDays,
            week: this.dateAdapter.addWeeks,
            month: this.dateAdapter.addMonths
          }[this.view];

          if (this.view === CalendarView.Day) {
            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, 1, this.excludeDays));
          } else if (this.view === CalendarView.Week && this.daysInWeek) {
            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, this.daysInWeek, this.excludeDays));
          } else {
            this.viewDateChange.emit(addFn(this.viewDate, 1));
          }
        }
      }]);

      return CalendarNextViewDirective;
    }();

    CalendarNextViewDirective.ɵfac = function CalendarNextViewDirective_Factory(t) {
      return new (t || CalendarNextViewDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DateAdapter));
    };

    CalendarNextViewDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
      type: CalendarNextViewDirective,
      selectors: [["", "mwlCalendarNextView", ""]],
      hostBindings: function CalendarNextViewDirective_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CalendarNextViewDirective_click_HostBindingHandler() {
            return ctx.onClick();
          });
        }
      },
      inputs: {
        excludeDays: "excludeDays",
        view: "view",
        viewDate: "viewDate",
        daysInWeek: "daysInWeek"
      },
      outputs: {
        viewDateChange: "viewDateChange"
      }
    });

    CalendarNextViewDirective.ctorParameters = function () {
      return [{
        type: DateAdapter
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarNextViewDirective.prototype, "view", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarNextViewDirective.prototype, "viewDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarNextViewDirective.prototype, "excludeDays", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarNextViewDirective.prototype, "daysInWeek", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarNextViewDirective.prototype, "viewDateChange", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click')], CalendarNextViewDirective.prototype, "onClick", null);
    /**
     * Change the view date to the current day. For example:
     *
     * ```typescript
     * <button
     *  mwlCalendarToday
     *  [(viewDate)]="viewDate">
     *  Today
     * </button>
     * ```
     */

    var CalendarTodayDirective =
    /*#__PURE__*/
    function () {
      function CalendarTodayDirective(dateAdapter) {
        _classCallCheck(this, CalendarTodayDirective);

        this.dateAdapter = dateAdapter;
        /**
         * Called when the view date is changed
         */

        this.viewDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      }
      /**
       * @hidden
       */


      _createClass(CalendarTodayDirective, [{
        key: "onClick",
        value: function onClick() {
          this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));
        }
      }]);

      return CalendarTodayDirective;
    }();

    CalendarTodayDirective.ɵfac = function CalendarTodayDirective_Factory(t) {
      return new (t || CalendarTodayDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DateAdapter));
    };

    CalendarTodayDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
      type: CalendarTodayDirective,
      selectors: [["", "mwlCalendarToday", ""]],
      hostBindings: function CalendarTodayDirective_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function CalendarTodayDirective_click_HostBindingHandler() {
            return ctx.onClick();
          });
        }
      },
      inputs: {
        viewDate: "viewDate"
      },
      outputs: {
        viewDateChange: "viewDateChange"
      }
    });

    CalendarTodayDirective.ctorParameters = function () {
      return [{
        type: DateAdapter
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarTodayDirective.prototype, "viewDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarTodayDirective.prototype, "viewDateChange", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('click')], CalendarTodayDirective.prototype, "onClick", null);
    /**
     * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.
     */

    var CalendarAngularDateFormatter =
    /*#__PURE__*/
    function () {
      function CalendarAngularDateFormatter(dateAdapter) {
        _classCallCheck(this, CalendarAngularDateFormatter);

        this.dateAdapter = dateAdapter;
      }
      /**
       * The month view header week day labels
       */


      _createClass(CalendarAngularDateFormatter, [{
        key: "monthViewColumnHeader",
        value: function monthViewColumnHeader(_ref3) {
          var date = _ref3.date,
              locale = _ref3.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE', locale);
        }
        /**
         * The month view cell day number
         */

      }, {
        key: "monthViewDayNumber",
        value: function monthViewDayNumber(_ref4) {
          var date = _ref4.date,
              locale = _ref4.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'd', locale);
        }
        /**
         * The month view title
         */

      }, {
        key: "monthViewTitle",
        value: function monthViewTitle(_ref5) {
          var date = _ref5.date,
              locale = _ref5.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'LLLL y', locale);
        }
        /**
         * The week view header week day labels
         */

      }, {
        key: "weekViewColumnHeader",
        value: function weekViewColumnHeader(_ref6) {
          var date = _ref6.date,
              locale = _ref6.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE', locale);
        }
        /**
         * The week view sub header day and month labels
         */

      }, {
        key: "weekViewColumnSubHeader",
        value: function weekViewColumnSubHeader(_ref7) {
          var date = _ref7.date,
              locale = _ref7.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'MMM d', locale);
        }
        /**
         * The week view title
         */

      }, {
        key: "weekViewTitle",
        value: function weekViewTitle(_ref8) {
          var date = _ref8.date,
              locale = _ref8.locale,
              weekStartsOn = _ref8.weekStartsOn,
              excludeDays = _ref8.excludeDays,
              daysInWeek = _ref8.daysInWeek;

          var _getWeekViewPeriod = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek),
              viewStart = _getWeekViewPeriod.viewStart,
              viewEnd = _getWeekViewPeriod.viewEnd;

          var format = function format(dateToFormat, showYear) {
            return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);
          };

          return "".concat(format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()), " - ").concat(format(viewEnd, true));
        }
        /**
         * The time formatting down the left hand side of the week view
         */

      }, {
        key: "weekViewHour",
        value: function weekViewHour(_ref9) {
          var date = _ref9.date,
              locale = _ref9.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'h a', locale);
        }
        /**
         * The time formatting down the left hand side of the day view
         */

      }, {
        key: "dayViewHour",
        value: function dayViewHour(_ref10) {
          var date = _ref10.date,
              locale = _ref10.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'h a', locale);
        }
        /**
         * The day view title
         */

      }, {
        key: "dayViewTitle",
        value: function dayViewTitle(_ref11) {
          var date = _ref11.date,
              locale = _ref11.locale;
          return Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE, MMMM d, y', locale);
        }
      }]);

      return CalendarAngularDateFormatter;
    }();

    CalendarAngularDateFormatter.ɵfac = function CalendarAngularDateFormatter_Factory(t) {
      return new (t || CalendarAngularDateFormatter)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DateAdapter));
    };

    CalendarAngularDateFormatter.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
      token: CalendarAngularDateFormatter,
      factory: CalendarAngularDateFormatter.ɵfac
    });

    CalendarAngularDateFormatter.ctorParameters = function () {
      return [{
        type: DateAdapter
      }];
    };
    /**
     * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href="http://momentjs.com/" target="_blank">moment</a>.
     *
     * If you wish, you may override any of the defaults via angulars DI. For example:
     *
     * ```typescript
     * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';
     * import { formatDate } from '@angular/common';
     * import { Injectable } from '@angular/core';
     *
     * @Injectable()
     * class CustomDateFormatter extends CalendarDateFormatter {
     *
     *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {
     *     return formatDate(date, 'EEE', locale); // use short week days
     *   }
     *
     * }
     *
     * // in your component that uses the calendar
     * providers: [{
     *   provide: CalendarDateFormatter,
     *   useClass: CustomDateFormatter
     * }]
     * ```
     */


    var CalendarDateFormatter =
    /*#__PURE__*/
    function (_CalendarAngularDateF) {
      _inherits(CalendarDateFormatter, _CalendarAngularDateF);

      var _super = _createSuper(CalendarDateFormatter);

      function CalendarDateFormatter() {
        _classCallCheck(this, CalendarDateFormatter);

        return _super.apply(this, arguments);
      }

      return CalendarDateFormatter;
    }(CalendarAngularDateFormatter);

    CalendarDateFormatter.ɵfac = function CalendarDateFormatter_Factory(t) {
      return ɵCalendarDateFormatter_BaseFactory(t || CalendarDateFormatter);
    };

    CalendarDateFormatter.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
      token: CalendarDateFormatter,
      factory: CalendarDateFormatter.ɵfac
    });
    /**
     * This pipe is primarily for rendering the current view title. Example usage:
     * ```typescript
     * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`
     * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}
     * ```
     */

    var CalendarDatePipe =
    /*#__PURE__*/
    function () {
      function CalendarDatePipe(dateFormatter, locale) {
        _classCallCheck(this, CalendarDatePipe);

        this.dateFormatter = dateFormatter;
        this.locale = locale;
      }

      _createClass(CalendarDatePipe, [{
        key: "transform",
        value: function transform(date, method) {
          var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale;
          var weekStartsOn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
          var excludeDays = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
          var daysInWeek = arguments.length > 5 ? arguments[5] : undefined;

          if (typeof this.dateFormatter[method] === 'undefined') {
            var allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarDateFormatter.prototype)).filter(function (iMethod) {
              return iMethod !== 'constructor';
            });
            throw new Error("".concat(method, " is not a valid date formatter. Can only be one of ").concat(allowedMethods.join(', ')));
          }

          return this.dateFormatter[method]({
            date: date,
            locale: locale,
            weekStartsOn: weekStartsOn,
            excludeDays: excludeDays,
            daysInWeek: daysInWeek
          });
        }
      }]);

      return CalendarDatePipe;
    }();

    CalendarDatePipe.ɵfac = function CalendarDatePipe_Factory(t) {
      return new (t || CalendarDatePipe)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](CalendarDateFormatter), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]));
    };

    CalendarDatePipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefinePipe"]({
      name: "calendarDate",
      type: CalendarDatePipe,
      pure: true
    });

    CalendarDatePipe.ctorParameters = function () {
      return [{
        type: CalendarDateFormatter
      }, {
        type: String,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
        }]
      }];
    };

    CalendarDatePipe = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]))], CalendarDatePipe);
    /**
     * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:
     *
     * ```typescript
     * import { Injectable } from '@angular/core';
     * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';
     *
     * @Injectable()
     * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {
     *
     *   month(event: CalendarEvent): string {
     *     return `Custom prefix: ${event.title}`;
     *   }
     *
     * }
     *
     * // in your component
     * providers: [{
     *  provide: CalendarEventTitleFormatter,
     *  useClass: CustomEventTitleFormatter
     * }]
     * ```
     */

    var CalendarEventTitleFormatter =
    /*#__PURE__*/
    function () {
      function CalendarEventTitleFormatter() {
        _classCallCheck(this, CalendarEventTitleFormatter);
      }

      _createClass(CalendarEventTitleFormatter, [{
        key: "month",

        /**
         * The month view event title.
         */
        value: function month(event, title) {
          return event.title;
        }
        /**
         * The month view event tooltip. Return a falsey value from this to disable the tooltip.
         */

      }, {
        key: "monthTooltip",
        value: function monthTooltip(event, title) {
          return event.title;
        }
        /**
         * The week view event title.
         */

      }, {
        key: "week",
        value: function week(event, title) {
          return event.title;
        }
        /**
         * The week view event tooltip. Return a falsey value from this to disable the tooltip.
         */

      }, {
        key: "weekTooltip",
        value: function weekTooltip(event, title) {
          return event.title;
        }
        /**
         * The day view event title.
         */

      }, {
        key: "day",
        value: function day(event, title) {
          return event.title;
        }
        /**
         * The day view event tooltip. Return a falsey value from this to disable the tooltip.
         */

      }, {
        key: "dayTooltip",
        value: function dayTooltip(event, title) {
          return event.title;
        }
      }]);

      return CalendarEventTitleFormatter;
    }();

    var CalendarEventTitlePipe =
    /*#__PURE__*/
    function () {
      function CalendarEventTitlePipe(calendarEventTitle) {
        _classCallCheck(this, CalendarEventTitlePipe);

        this.calendarEventTitle = calendarEventTitle;
      }

      _createClass(CalendarEventTitlePipe, [{
        key: "transform",
        value: function transform(title, titleType, event) {
          return this.calendarEventTitle[titleType](event, title);
        }
      }]);

      return CalendarEventTitlePipe;
    }();

    CalendarEventTitlePipe.ɵfac = function CalendarEventTitlePipe_Factory(t) {
      return new (t || CalendarEventTitlePipe)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](CalendarEventTitleFormatter));
    };

    CalendarEventTitlePipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefinePipe"]({
      name: "calendarEventTitle",
      type: CalendarEventTitlePipe,
      pure: true
    });

    CalendarEventTitlePipe.ctorParameters = function () {
      return [{
        type: CalendarEventTitleFormatter
      }];
    };

    var ClickDirective =
    /*#__PURE__*/
    function () {
      function ClickDirective(renderer, elm, document) {
        _classCallCheck(this, ClickDirective);

        this.renderer = renderer;
        this.elm = elm;
        this.document = document;
        this.clickListenerDisabled = false;
        this.click = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](); // tslint:disable-line

        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
      }

      _createClass(ClickDirective, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this4 = this;

          if (!this.clickListenerDisabled) {
            this.listen().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (event) {
              event.stopPropagation();

              _this4.click.emit(event);
            });
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.destroy$.next();
        }
      }, {
        key: "listen",
        value: function listen() {
          var _this5 = this;

          return new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"](function (observer) {
            return _this5.renderer.listen(_this5.elm.nativeElement, 'click', function (event) {
              observer.next(event);
            });
          });
        }
      }]);

      return ClickDirective;
    }();

    ClickDirective.ɵfac = function ClickDirective_Factory(t) {
      return new (t || ClickDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]));
    };

    ClickDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
      type: ClickDirective,
      selectors: [["", "mwlClick", ""]],
      inputs: {
        clickListenerDisabled: "clickListenerDisabled"
      },
      outputs: {
        click: "mwlClick"
      }
    });

    ClickDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]]
        }]
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], ClickDirective.prototype, "clickListenerDisabled", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('mwlClick')], ClickDirective.prototype, "click", void 0);
    ClickDirective = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]))], ClickDirective);

    var KeydownEnterDirective =
    /*#__PURE__*/
    function () {
      function KeydownEnterDirective() {
        _classCallCheck(this, KeydownEnterDirective);

        this.keydown = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](); // tslint:disable-line
      }

      _createClass(KeydownEnterDirective, [{
        key: "onKeyPress",
        value: function onKeyPress(event) {
          if (event.keyCode === 13 || event.which === 13 || event.key === 'Enter') {
            event.preventDefault();
            event.stopPropagation();
            this.keydown.emit(event);
          }
        }
      }]);

      return KeydownEnterDirective;
    }();

    KeydownEnterDirective.ɵfac = function KeydownEnterDirective_Factory(t) {
      return new (t || KeydownEnterDirective)();
    };

    KeydownEnterDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
      type: KeydownEnterDirective,
      selectors: [["", "mwlKeydownEnter", ""]],
      hostBindings: function KeydownEnterDirective_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("keydown", function KeydownEnterDirective_keydown_HostBindingHandler($event) {
            return ctx.onKeyPress($event);
          });
        }
      },
      outputs: {
        keydown: "mwlKeydownEnter"
      }
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])('mwlKeydownEnter')], KeydownEnterDirective.prototype, "keydown", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('keydown', ['$event'])], KeydownEnterDirective.prototype, "onKeyPress", null);

    var CalendarUtils =
    /*#__PURE__*/
    function () {
      function CalendarUtils(dateAdapter) {
        _classCallCheck(this, CalendarUtils);

        this.dateAdapter = dateAdapter;
      }

      _createClass(CalendarUtils, [{
        key: "getMonthView",
        value: function getMonthView(args) {
          return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["getMonthView"])(this.dateAdapter, args);
        }
      }, {
        key: "getWeekViewHeader",
        value: function getWeekViewHeader(args) {
          return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["getWeekViewHeader"])(this.dateAdapter, args);
        }
      }, {
        key: "getWeekView",
        value: function getWeekView(args) {
          return Object(calendar_utils__WEBPACK_IMPORTED_MODULE_6__["getWeekView"])(this.dateAdapter, args);
        }
      }]);

      return CalendarUtils;
    }();

    CalendarUtils.ɵfac = function CalendarUtils_Factory(t) {
      return new (t || CalendarUtils)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DateAdapter));
    };

    CalendarUtils.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
      token: CalendarUtils,
      factory: CalendarUtils.ɵfac
    });

    CalendarUtils.ctorParameters = function () {
      return [{
        type: DateAdapter
      }];
    };
    /**
     * This class is responsible for adding accessibility to the calendar.
     * You may override any of its methods via angulars DI to suit your requirements.
     * For example:
     *
     * ```typescript
     * import { A11yParams, CalendarA11y } from 'angular-calendar';
     * import { formatDate, I18nPluralPipe } from '@angular/common';
     * import { Injectable } from '@angular/core';
     *
     * // adding your own a11y params
     * export interface CustomA11yParams extends A11yParams {
     *   isDrSuess?: boolean;
     * }
     *
     * @Injectable()
     * export class CustomCalendarA11y extends CalendarA11y {
     *   constructor(protected i18nPlural: I18nPluralPipe) {
     *     super(i18nPlural);
     *   }
     *
     *   // overriding a function
     *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {
     *     if (isDrSuess) {
     *       return `
     *         ${formatDate(date, 'EEEE MMMM d', locale)}
     *          Today you are you! That is truer than true! There is no one alive
     *          who is you-er than you!
     *       `;
     *     }
     *   }
     * }
     *
     * // in your component that uses the calendar
     * providers: [{
     *  provide: CalendarA11y,
     *  useClass: CustomCalendarA11y
     * }]
     * ```
     */


    var CalendarA11y =
    /*#__PURE__*/
    function () {
      function CalendarA11y(i18nPlural) {
        _classCallCheck(this, CalendarA11y);

        this.i18nPlural = i18nPlural;
      }
      /**
       * Aria label for the badges/date of a cell
       * @example: `Saturday October 19 1 event click to expand`
       */


      _createClass(CalendarA11y, [{
        key: "monthCell",
        value: function monthCell(_ref12) {
          var day = _ref12.day,
              locale = _ref12.locale;

          if (day.badgeTotal > 0) {
            return "\n        ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(day.date, 'EEEE MMMM d', locale), ",\n        ").concat(this.i18nPlural.transform(day.badgeTotal, {
              '=0': 'No events',
              '=1': 'One event',
              other: '# events'
            }), ",\n         click to expand\n      ");
          } else {
            return "".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(day.date, 'EEEE MMMM d', locale));
          }
        }
        /**
         * Aria label for the open day events start landmark
         * @example: `Saturday October 19 expanded view`
         */

      }, {
        key: "openDayEventsLandmark",
        value: function openDayEventsLandmark(_ref13) {
          var date = _ref13.date,
              locale = _ref13.locale;
          return "\n      Beginning of expanded view for ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE MMMM dd', locale), "\n    ");
        }
        /**
         * Aria label for alert that a day in the month view was expanded
         * @example: `Saturday October 19 expanded`
         */

      }, {
        key: "openDayEventsAlert",
        value: function openDayEventsAlert(_ref14) {
          var date = _ref14.date,
              locale = _ref14.locale;
          return "".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(date, 'EEEE MMMM dd', locale), " expanded");
        }
        /**
         * Descriptive aria label for an event
         * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`
         */

      }, {
        key: "eventDescription",
        value: function eventDescription(_ref15) {
          var event = _ref15.event,
              locale = _ref15.locale;

          if (event.allDay === true) {
            return this.allDayEventDescription({
              event: event,
              locale: locale
            });
          }

          var aria = "\n      ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.start, 'EEEE MMMM dd', locale), ",\n      ").concat(event.title, ", from ").concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.start, 'hh:mm a', locale), "\n    ");

          if (event.end) {
            return aria + " to ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.end, 'hh:mm a', locale));
          }

          return aria;
        }
        /**
         * Descriptive aria label for an all day event
         * @example:
         * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`
         */

      }, {
        key: "allDayEventDescription",
        value: function allDayEventDescription(_ref16) {
          var event = _ref16.event,
              locale = _ref16.locale;
          var aria = "\n      ".concat(event.title, ", event spans multiple days:\n      start time ").concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.start, 'MMMM dd hh:mm a', locale), "\n    ");

          if (event.end) {
            return aria + ", stop time ".concat(Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["formatDate"])(event.end, 'MMMM d hh:mm a', locale));
          }

          return aria + ", no stop time";
        }
        /**
         * Aria label for the calendar event actions icons
         * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons
         */

      }, {
        key: "actionButtonLabel",
        value: function actionButtonLabel(_ref17) {
          var action = _ref17.action;
          return action.a11yLabel;
        }
        /**
         * @returns {number} Tab index to be given to month cells
         */

      }, {
        key: "monthCellTabIndex",
        value: function monthCellTabIndex() {
          return 0;
        }
        /**
         * @returns true if the events inside the month cell should be aria-hidden
         */

      }, {
        key: "hideMonthCellEvents",
        value: function hideMonthCellEvents() {
          return true;
        }
        /**
         * @returns true if event titles should be aria-hidden (global)
         */

      }, {
        key: "hideEventTitle",
        value: function hideEventTitle() {
          return true;
        }
        /**
         * @returns true if hour segments in the week view should be aria-hidden
         */

      }, {
        key: "hideWeekHourSegment",
        value: function hideWeekHourSegment() {
          return true;
        }
        /**
         * @returns true if hour segments in the day view should be aria-hidden
         */

      }, {
        key: "hideDayHourSegment",
        value: function hideDayHourSegment() {
          return true;
        }
      }]);

      return CalendarA11y;
    }();

    CalendarA11y.ɵfac = function CalendarA11y_Factory(t) {
      return new (t || CalendarA11y)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]));
    };

    CalendarA11y.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
      token: CalendarA11y,
      factory: CalendarA11y.ɵfac
    });

    CalendarA11y.ctorParameters = function () {
      return [{
        type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]
      }];
    };
    /**
     * This pipe is primarily for rendering aria labels. Example usage:
     * ```typescript
     * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier
     * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}
     * ```
     */


    var CalendarA11yPipe =
    /*#__PURE__*/
    function () {
      function CalendarA11yPipe(calendarA11y, locale) {
        _classCallCheck(this, CalendarA11yPipe);

        this.calendarA11y = calendarA11y;
        this.locale = locale;
      }

      _createClass(CalendarA11yPipe, [{
        key: "transform",
        value: function transform(a11yParams, method) {
          a11yParams.locale = a11yParams.locale || this.locale;

          if (typeof this.calendarA11y[method] === 'undefined') {
            var allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter(function (iMethod) {
              return iMethod !== 'constructor';
            });
            throw new Error("".concat(method, " is not a valid a11y method. Can only be one of ").concat(allowedMethods.join(', ')));
          }

          return this.calendarA11y[method](a11yParams);
        }
      }]);

      return CalendarA11yPipe;
    }();

    CalendarA11yPipe.ɵfac = function CalendarA11yPipe_Factory(t) {
      return new (t || CalendarA11yPipe)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](CalendarA11y), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]));
    };

    CalendarA11yPipe.ɵpipe = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefinePipe"]({
      name: "calendarA11y",
      type: CalendarA11yPipe,
      pure: true
    });

    CalendarA11yPipe.ctorParameters = function () {
      return [{
        type: CalendarA11y
      }, {
        type: String,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
        }]
      }];
    };

    CalendarA11yPipe = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]))], CalendarA11yPipe);
    var MOMENT = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["InjectionToken"]('Moment');
    /**
     * This will use <a href="http://momentjs.com/" target="_blank">moment</a> to do all date formatting. To use this class:
     *
     * ```typescript
     * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';
     * import moment from 'moment';
     *
     * // in your component
     * provide: [{
     *   provide: MOMENT, useValue: moment
     * }, {
     *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter
     * }]
     *
     * ```
     */

    var CalendarMomentDateFormatter =
    /*#__PURE__*/
    function () {
      /**
       * @hidden
       */
      function CalendarMomentDateFormatter(moment, dateAdapter) {
        _classCallCheck(this, CalendarMomentDateFormatter);

        this.moment = moment;
        this.dateAdapter = dateAdapter;
      }
      /**
       * The month view header week day labels
       */


      _createClass(CalendarMomentDateFormatter, [{
        key: "monthViewColumnHeader",
        value: function monthViewColumnHeader(_ref18) {
          var date = _ref18.date,
              locale = _ref18.locale;
          return this.moment(date).locale(locale).format('dddd');
        }
        /**
         * The month view cell day number
         */

      }, {
        key: "monthViewDayNumber",
        value: function monthViewDayNumber(_ref19) {
          var date = _ref19.date,
              locale = _ref19.locale;
          return this.moment(date).locale(locale).format('D');
        }
        /**
         * The month view title
         */

      }, {
        key: "monthViewTitle",
        value: function monthViewTitle(_ref20) {
          var date = _ref20.date,
              locale = _ref20.locale;
          return this.moment(date).locale(locale).format('MMMM YYYY');
        }
        /**
         * The week view header week day labels
         */

      }, {
        key: "weekViewColumnHeader",
        value: function weekViewColumnHeader(_ref21) {
          var date = _ref21.date,
              locale = _ref21.locale;
          return this.moment(date).locale(locale).format('dddd');
        }
        /**
         * The week view sub header day and month labels
         */

      }, {
        key: "weekViewColumnSubHeader",
        value: function weekViewColumnSubHeader(_ref22) {
          var date = _ref22.date,
              locale = _ref22.locale;
          return this.moment(date).locale(locale).format('MMM D');
        }
        /**
         * The week view title
         */

      }, {
        key: "weekViewTitle",
        value: function weekViewTitle(_ref23) {
          var _this6 = this;

          var date = _ref23.date,
              locale = _ref23.locale,
              weekStartsOn = _ref23.weekStartsOn,
              excludeDays = _ref23.excludeDays,
              daysInWeek = _ref23.daysInWeek;

          var _getWeekViewPeriod2 = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek),
              viewStart = _getWeekViewPeriod2.viewStart,
              viewEnd = _getWeekViewPeriod2.viewEnd;

          var format = function format(dateToFormat, showYear) {
            return _this6.moment(dateToFormat).locale(locale).format('MMM D' + (showYear ? ', YYYY' : ''));
          };

          return "".concat(format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()), " - ").concat(format(viewEnd, true));
        }
        /**
         * The time formatting down the left hand side of the week view
         */

      }, {
        key: "weekViewHour",
        value: function weekViewHour(_ref24) {
          var date = _ref24.date,
              locale = _ref24.locale;
          return this.moment(date).locale(locale).format('ha');
        }
        /**
         * The time formatting down the left hand side of the day view
         */

      }, {
        key: "dayViewHour",
        value: function dayViewHour(_ref25) {
          var date = _ref25.date,
              locale = _ref25.locale;
          return this.moment(date).locale(locale).format('ha');
        }
        /**
         * The day view title
         */

      }, {
        key: "dayViewTitle",
        value: function dayViewTitle(_ref26) {
          var date = _ref26.date,
              locale = _ref26.locale;
          return this.moment(date).locale(locale).format('dddd, D MMMM, YYYY');
        }
      }]);

      return CalendarMomentDateFormatter;
    }();

    CalendarMomentDateFormatter.ɵfac = function CalendarMomentDateFormatter_Factory(t) {
      return new (t || CalendarMomentDateFormatter)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](MOMENT), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DateAdapter));
    };

    CalendarMomentDateFormatter.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
      token: CalendarMomentDateFormatter,
      factory: CalendarMomentDateFormatter.ɵfac
    });

    CalendarMomentDateFormatter.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [MOMENT]
        }]
      }, {
        type: DateAdapter
      }];
    };

    CalendarMomentDateFormatter = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(MOMENT))], CalendarMomentDateFormatter);
    /**
     * This will use <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank">Intl</a> API to do all date formatting.
     *
     * You will need to include a <a href="https://github.com/andyearnshaw/Intl.js/">polyfill</a> for older browsers.
     */

    var CalendarNativeDateFormatter =
    /*#__PURE__*/
    function () {
      function CalendarNativeDateFormatter(dateAdapter) {
        _classCallCheck(this, CalendarNativeDateFormatter);

        this.dateAdapter = dateAdapter;
      }
      /**
       * The month view header week day labels
       */


      _createClass(CalendarNativeDateFormatter, [{
        key: "monthViewColumnHeader",
        value: function monthViewColumnHeader(_ref27) {
          var date = _ref27.date,
              locale = _ref27.locale;
          return new Intl.DateTimeFormat(locale, {
            weekday: 'long'
          }).format(date);
        }
        /**
         * The month view cell day number
         */

      }, {
        key: "monthViewDayNumber",
        value: function monthViewDayNumber(_ref28) {
          var date = _ref28.date,
              locale = _ref28.locale;
          return new Intl.DateTimeFormat(locale, {
            day: 'numeric'
          }).format(date);
        }
        /**
         * The month view title
         */

      }, {
        key: "monthViewTitle",
        value: function monthViewTitle(_ref29) {
          var date = _ref29.date,
              locale = _ref29.locale;
          return new Intl.DateTimeFormat(locale, {
            year: 'numeric',
            month: 'long'
          }).format(date);
        }
        /**
         * The week view header week day labels
         */

      }, {
        key: "weekViewColumnHeader",
        value: function weekViewColumnHeader(_ref30) {
          var date = _ref30.date,
              locale = _ref30.locale;
          return new Intl.DateTimeFormat(locale, {
            weekday: 'long'
          }).format(date);
        }
        /**
         * The week view sub header day and month labels
         */

      }, {
        key: "weekViewColumnSubHeader",
        value: function weekViewColumnSubHeader(_ref31) {
          var date = _ref31.date,
              locale = _ref31.locale;
          return new Intl.DateTimeFormat(locale, {
            day: 'numeric',
            month: 'short'
          }).format(date);
        }
        /**
         * The week view title
         */

      }, {
        key: "weekViewTitle",
        value: function weekViewTitle(_ref32) {
          var date = _ref32.date,
              locale = _ref32.locale,
              weekStartsOn = _ref32.weekStartsOn,
              excludeDays = _ref32.excludeDays,
              daysInWeek = _ref32.daysInWeek;

          var _getWeekViewPeriod3 = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek),
              viewStart = _getWeekViewPeriod3.viewStart,
              viewEnd = _getWeekViewPeriod3.viewEnd;

          var format = function format(dateToFormat, showYear) {
            return new Intl.DateTimeFormat(locale, {
              day: 'numeric',
              month: 'short',
              year: showYear ? 'numeric' : undefined
            }).format(dateToFormat);
          };

          return "".concat(format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()), " - ").concat(format(viewEnd, true));
        }
        /**
         * The time formatting down the left hand side of the week view
         */

      }, {
        key: "weekViewHour",
        value: function weekViewHour(_ref33) {
          var date = _ref33.date,
              locale = _ref33.locale;
          return new Intl.DateTimeFormat(locale, {
            hour: 'numeric'
          }).format(date);
        }
        /**
         * The time formatting down the left hand side of the day view
         */

      }, {
        key: "dayViewHour",
        value: function dayViewHour(_ref34) {
          var date = _ref34.date,
              locale = _ref34.locale;
          return new Intl.DateTimeFormat(locale, {
            hour: 'numeric'
          }).format(date);
        }
        /**
         * The day view title
         */

      }, {
        key: "dayViewTitle",
        value: function dayViewTitle(_ref35) {
          var date = _ref35.date,
              locale = _ref35.locale;
          return new Intl.DateTimeFormat(locale, {
            day: 'numeric',
            month: 'long',
            year: 'numeric',
            weekday: 'long'
          }).format(date);
        }
      }]);

      return CalendarNativeDateFormatter;
    }();

    CalendarNativeDateFormatter.ɵfac = function CalendarNativeDateFormatter_Factory(t) {
      return new (t || CalendarNativeDateFormatter)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](DateAdapter));
    };

    CalendarNativeDateFormatter.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
      token: CalendarNativeDateFormatter,
      factory: CalendarNativeDateFormatter.ɵfac
    });

    CalendarNativeDateFormatter.ctorParameters = function () {
      return [{
        type: DateAdapter
      }];
    };

    var CalendarEventTimesChangedEventType;

    (function (CalendarEventTimesChangedEventType) {
      CalendarEventTimesChangedEventType["Drag"] = "drag";
      CalendarEventTimesChangedEventType["Drop"] = "drop";
      CalendarEventTimesChangedEventType["Resize"] = "resize";
    })(CalendarEventTimesChangedEventType || (CalendarEventTimesChangedEventType = {}));

    var CalendarCommonModule_1;
    /**
     * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:
     *
     * ```typescript
     * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';
     *
     * @NgModule({
     *   imports: [
     *     CalendarCommonModule.forRoot(),
     *     CalendarMonthModule
     *   ]
     * })
     * class MyModule {}
     * ```
     *
     */

    var CalendarCommonModule = CalendarCommonModule_1 =
    /*#__PURE__*/
    function () {
      function CalendarCommonModule() {
        _classCallCheck(this, CalendarCommonModule);
      }

      _createClass(CalendarCommonModule, null, [{
        key: "forRoot",
        value: function forRoot(dateAdapter) {
          var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          return {
            ngModule: CalendarCommonModule_1,
            providers: [dateAdapter, config.eventTitleFormatter || CalendarEventTitleFormatter, config.dateFormatter || CalendarDateFormatter, config.utils || CalendarUtils, config.a11y || CalendarA11y]
          };
        }
      }]);

      return CalendarCommonModule;
    }();

    CalendarCommonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
      type: CalendarCommonModule
    });
    CalendarCommonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
      factory: function CalendarCommonModule_Factory(t) {
        return new (t || CalendarCommonModule)();
      },
      providers: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]],
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]]]
    });
    /**
     * Shows all events on a given month. Example usage:
     *
     * ```typescript
     * <mwl-calendar-month-view
     *  [viewDate]="viewDate"
     *  [events]="events">
     * </mwl-calendar-month-view>
     * ```
     */

    var CalendarMonthViewComponent =
    /*#__PURE__*/
    function () {
      /**
       * @hidden
       */
      function CalendarMonthViewComponent(cdr, utils, locale, dateAdapter) {
        var _this7 = this;

        _classCallCheck(this, CalendarMonthViewComponent);

        this.cdr = cdr;
        this.utils = utils;
        this.dateAdapter = dateAdapter;
        /**
         * An array of events to display on view.
         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63
         */

        this.events = [];
        /**
         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view
         */

        this.excludeDays = [];
        /**
         * Whether the events list for the day of the `viewDate` option is visible or not
         */

        this.activeDayIsOpen = false;
        /**
         * The placement of the event tooltip
         */

        this.tooltipPlacement = 'auto';
        /**
         * Whether to append tooltips to the body or next to the trigger element
         */

        this.tooltipAppendToBody = true;
        /**
         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip
         * will be displayed immediately.
         */

        this.tooltipDelay = null;
        /**
         * An output that will be called before the view is rendered for the current month.
         * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template
         */

        this.beforeViewRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when the day cell is clicked
         */

        this.dayClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when the event title is clicked
         */

        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when a header week day is clicked. Returns ISO day number.
         */

        this.columnHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when an event is dragged and dropped
         */

        this.eventTimesChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * @hidden
         */

        this.trackByRowOffset = function (index, offset) {
          return _this7.view.days.slice(offset, _this7.view.totalDaysVisibleInWeek).map(function (day) {
            return day.date.toISOString();
          }).join('-');
        };
        /**
         * @hidden
         */


        this.trackByDate = function (index, day) {
          return day.date.toISOString();
        };

        this.locale = locale;
      }
      /**
       * @hidden
       */


      _createClass(CalendarMonthViewComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this8 = this;

          if (this.refresh) {
            this.refreshSubscription = this.refresh.subscribe(function () {
              _this8.refreshAll();

              _this8.cdr.markForCheck();
            });
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          var refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays;
          var refreshBody = changes.viewDate || changes.events || changes.excludeDays || changes.weekendDays;

          if (refreshHeader) {
            this.refreshHeader();
          }

          if (changes.events) {
            validateEvents(this.events);
          }

          if (refreshBody) {
            this.refreshBody();
          }

          if (refreshHeader || refreshBody) {
            this.emitBeforeViewRender();
          }

          if (changes.activeDayIsOpen || changes.viewDate || changes.events || changes.excludeDays || changes.activeDay) {
            this.checkActiveDayIsOpen();
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.refreshSubscription) {
            this.refreshSubscription.unsubscribe();
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "toggleDayHighlight",
        value: function toggleDayHighlight(event, isHighlighted) {
          this.view.days.forEach(function (day) {
            if (isHighlighted && day.events.indexOf(event) > -1) {
              day.backgroundColor = event.color && event.color.secondary || '#D1E8FF';
            } else {
              delete day.backgroundColor;
            }
          });
        }
        /**
         * @hidden
         */

      }, {
        key: "eventDropped",
        value: function eventDropped(droppedOn, event, draggedFrom) {
          if (droppedOn !== draggedFrom) {
            var year = this.dateAdapter.getYear(droppedOn.date);
            var month = this.dateAdapter.getMonth(droppedOn.date);
            var date = this.dateAdapter.getDate(droppedOn.date);
            var newStart = this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(event.start, year), month), date);
            var newEnd;

            if (event.end) {
              var secondsDiff = this.dateAdapter.differenceInSeconds(newStart, event.start);
              newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);
            }

            this.eventTimesChanged.emit({
              event: event,
              newStart: newStart,
              newEnd: newEnd,
              day: droppedOn,
              type: CalendarEventTimesChangedEventType.Drop
            });
          }
        }
      }, {
        key: "refreshHeader",
        value: function refreshHeader() {
          this.columnHeaders = this.utils.getWeekViewHeader({
            viewDate: this.viewDate,
            weekStartsOn: this.weekStartsOn,
            excluded: this.excludeDays,
            weekendDays: this.weekendDays
          });
        }
      }, {
        key: "refreshBody",
        value: function refreshBody() {
          this.view = this.utils.getMonthView({
            events: this.events,
            viewDate: this.viewDate,
            weekStartsOn: this.weekStartsOn,
            excluded: this.excludeDays,
            weekendDays: this.weekendDays
          });
        }
      }, {
        key: "checkActiveDayIsOpen",
        value: function checkActiveDayIsOpen() {
          var _this9 = this;

          if (this.activeDayIsOpen === true) {
            var activeDay = this.activeDay || this.viewDate;
            this.openDay = this.view.days.find(function (day) {
              return _this9.dateAdapter.isSameDay(day.date, activeDay);
            });
            var index = this.view.days.indexOf(this.openDay);
            this.openRowIndex = Math.floor(index / this.view.totalDaysVisibleInWeek) * this.view.totalDaysVisibleInWeek;
          } else {
            this.openRowIndex = null;
            this.openDay = null;
          }
        }
      }, {
        key: "refreshAll",
        value: function refreshAll() {
          this.refreshHeader();
          this.refreshBody();
          this.emitBeforeViewRender();
          this.checkActiveDayIsOpen();
        }
      }, {
        key: "emitBeforeViewRender",
        value: function emitBeforeViewRender() {
          if (this.columnHeaders && this.view) {
            this.beforeViewRender.emit({
              header: this.columnHeaders,
              body: this.view.days,
              period: this.view.period
            });
          }
        }
      }]);

      return CalendarMonthViewComponent;
    }();

    CalendarMonthViewComponent.ɵfac = function CalendarMonthViewComponent_Factory(t) {
      return new (t || CalendarMonthViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](CalendarUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DateAdapter));
    };

    CalendarMonthViewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarMonthViewComponent,
      selectors: [["mwl-calendar-month-view"]],
      inputs: {
        events: "events",
        excludeDays: "excludeDays",
        activeDayIsOpen: "activeDayIsOpen",
        tooltipPlacement: "tooltipPlacement",
        tooltipAppendToBody: "tooltipAppendToBody",
        tooltipDelay: "tooltipDelay",
        locale: "locale",
        viewDate: "viewDate",
        activeDay: "activeDay",
        refresh: "refresh",
        tooltipTemplate: "tooltipTemplate",
        weekStartsOn: "weekStartsOn",
        headerTemplate: "headerTemplate",
        cellTemplate: "cellTemplate",
        openDayEventsTemplate: "openDayEventsTemplate",
        eventTitleTemplate: "eventTitleTemplate",
        eventActionsTemplate: "eventActionsTemplate",
        weekendDays: "weekendDays"
      },
      outputs: {
        beforeViewRender: "beforeViewRender",
        dayClicked: "dayClicked",
        eventClicked: "eventClicked",
        columnHeaderClicked: "columnHeaderClicked",
        eventTimesChanged: "eventTimesChanged"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]],
      decls: 4,
      vars: 5,
      consts: [["role", "grid", 1, "cal-month-view"], [3, "days", "locale", "customTemplate", "columnHeaderClicked"], [1, "cal-days"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "cal-cell-row"], ["mwlDroppable", "", "dragOverClass", "cal-drag-over", 3, "ngClass", "day", "openDay", "locale", "tooltipPlacement", "tooltipAppendToBody", "tooltipTemplate", "tooltipDelay", "customTemplate", "ngStyle", "clickListenerDisabled", "mwlClick", "mwlKeydownEnter", "highlightDay", "unhighlightDay", "drop", "eventClicked", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDroppable", "", "dragOverClass", "cal-drag-over", 3, "locale", "isOpen", "events", "date", "customTemplate", "eventTitleTemplate", "eventActionsTemplate", "eventClicked", "drop"], ["mwlDroppable", "", "dragOverClass", "cal-drag-over", 3, "ngClass", "day", "openDay", "locale", "tooltipPlacement", "tooltipAppendToBody", "tooltipTemplate", "tooltipDelay", "customTemplate", "ngStyle", "clickListenerDisabled", "mwlClick", "mwlKeydownEnter", "highlightDay", "unhighlightDay", "drop", "eventClicked"]],
      template: function CalendarMonthViewComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "mwl-calendar-month-view-header", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("columnHeaderClicked", function CalendarMonthViewComponent_Template_mwl_calendar_month_view_header_columnHeaderClicked_1_listener($event) {
            return ctx.columnHeaderClicked.emit($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](3, CalendarMonthViewComponent_div_3_Template, 5, 13, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("days", ctx.columnHeaders)("locale", ctx.locale)("customTemplate", ctx.headerTemplate);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.view.rowOffsets)("ngForTrackBy", ctx.trackByRowOffset);
        }
      },
      directives: function directives() {
        return [CalendarMonthViewHeaderComponent, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], CalendarOpenDayEventsComponent, angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["ɵa"], CalendarMonthCellComponent, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], ClickDirective, KeydownEnterDirective];
      },
      pipes: function pipes() {
        return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["SlicePipe"], CalendarA11yPipe];
      },
      encapsulation: 2
    });

    CalendarMonthViewComponent.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
      }, {
        type: CalendarUtils
      }, {
        type: String,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
        }]
      }, {
        type: DateAdapter
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "viewDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "events", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "excludeDays", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "activeDayIsOpen", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "activeDay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "refresh", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "tooltipPlacement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "tooltipTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "tooltipAppendToBody", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "tooltipDelay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "weekStartsOn", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "headerTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "cellTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "openDayEventsTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "eventTitleTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "eventActionsTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewComponent.prototype, "weekendDays", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthViewComponent.prototype, "beforeViewRender", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthViewComponent.prototype, "dayClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthViewComponent.prototype, "eventClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthViewComponent.prototype, "columnHeaderClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthViewComponent.prototype, "eventTimesChanged", void 0);
    CalendarMonthViewComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]))], CalendarMonthViewComponent);

    var CalendarMonthViewHeaderComponent = function CalendarMonthViewHeaderComponent() {
      _classCallCheck(this, CalendarMonthViewHeaderComponent);

      this.columnHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;
    };

    CalendarMonthViewHeaderComponent.ɵfac = function CalendarMonthViewHeaderComponent_Factory(t) {
      return new (t || CalendarMonthViewHeaderComponent)();
    };

    CalendarMonthViewHeaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarMonthViewHeaderComponent,
      selectors: [["mwl-calendar-month-view-header"]],
      inputs: {
        days: "days",
        locale: "locale",
        customTemplate: "customTemplate"
      },
      outputs: {
        columnHeaderClicked: "columnHeaderClicked"
      },
      decls: 3,
      vars: 6,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["role", "row", 1, "cal-cell-row", "cal-header"], ["class", "cal-cell", "tabindex", "0", "role", "columnheader", 3, "cal-past", "cal-today", "cal-future", "cal-weekend", "ngClass", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["tabindex", "0", "role", "columnheader", 1, "cal-cell", 3, "ngClass", "click"]],
      template: function CalendarMonthViewHeaderComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarMonthViewHeaderComponent_ng_template_0_Template, 2, 2, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarMonthViewHeaderComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction3"](2, _c6, ctx.days, ctx.locale, ctx.trackByWeekDayHeaderDate));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"]],
      pipes: [CalendarDatePipe],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewHeaderComponent.prototype, "days", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewHeaderComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthViewHeaderComponent.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthViewHeaderComponent.prototype, "columnHeaderClicked", void 0);

    var CalendarMonthCellComponent = function CalendarMonthCellComponent() {
      _classCallCheck(this, CalendarMonthCellComponent);

      this.highlightDay = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.unhighlightDay = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.trackByEventId = trackByEventId;
      this.validateDrag = isWithinThreshold;
    };

    CalendarMonthCellComponent.ɵfac = function CalendarMonthCellComponent_Factory(t) {
      return new (t || CalendarMonthCellComponent)();
    };

    CalendarMonthCellComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarMonthCellComponent,
      selectors: [["mwl-calendar-month-cell"]],
      hostAttrs: [1, "cal-cell", "cal-day-cell"],
      hostVars: 18,
      hostBindings: function CalendarMonthCellComponent_HostBindings(rf, ctx) {
        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-past", ctx.day.isPast)("cal-today", ctx.day.isToday)("cal-future", ctx.day.isFuture)("cal-weekend", ctx.day.isWeekend)("cal-in-month", ctx.day.inMonth)("cal-out-month", !ctx.day.inMonth)("cal-has-events", ctx.day.events.length > 0)("cal-open", ctx.day === ctx.openDay)("cal-event-highlight", !!ctx.day.backgroundColor);
        }
      },
      inputs: {
        day: "day",
        openDay: "openDay",
        locale: "locale",
        tooltipPlacement: "tooltipPlacement",
        tooltipAppendToBody: "tooltipAppendToBody",
        customTemplate: "customTemplate",
        tooltipTemplate: "tooltipTemplate",
        tooltipDelay: "tooltipDelay"
      },
      outputs: {
        highlightDay: "highlightDay",
        unhighlightDay: "unhighlightDay",
        eventClicked: "eventClicked"
      },
      decls: 3,
      vars: 15,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "cal-cell-top"], ["aria-hidden", "true"], ["class", "cal-day-badge", 4, "ngIf"], [1, "cal-day-number"], ["class", "cal-events", 4, "ngIf"], [1, "cal-day-badge"], [1, "cal-events"], ["class", "cal-event", "mwlDraggable", "", "dragActiveClass", "cal-drag-active", 3, "ngStyle", "ngClass", "mwlCalendarTooltip", "tooltipPlacement", "tooltipEvent", "tooltipTemplate", "tooltipAppendToBody", "tooltipDelay", "cal-draggable", "dropData", "dragAxis", "validateDrag", "touchStartLongPress", "mouseenter", "mouseleave", "mwlClick", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDraggable", "", "dragActiveClass", "cal-drag-active", 1, "cal-event", 3, "ngStyle", "ngClass", "mwlCalendarTooltip", "tooltipPlacement", "tooltipEvent", "tooltipTemplate", "tooltipAppendToBody", "tooltipDelay", "dropData", "dragAxis", "validateDrag", "touchStartLongPress", "mouseenter", "mouseleave", "mwlClick"]],
      template: function CalendarMonthCellComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarMonthCellComponent_ng_template_0_Template, 8, 14, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarMonthCellComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunctionV"](2, _c11, [ctx.day, ctx.openDay, ctx.locale, ctx.tooltipPlacement, ctx.highlightDay, ctx.unhighlightDay, ctx.eventClicked, ctx.tooltipTemplate, ctx.tooltipAppendToBody, ctx.tooltipDelay, ctx.trackByEventId, ctx.validateDrag]));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["ɵb"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], CalendarTooltipDirective, ClickDirective],
      pipes: [CalendarA11yPipe, CalendarDatePipe, CalendarEventTitlePipe],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "day", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "openDay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "tooltipPlacement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "tooltipAppendToBody", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "tooltipTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarMonthCellComponent.prototype, "tooltipDelay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthCellComponent.prototype, "highlightDay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthCellComponent.prototype, "unhighlightDay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarMonthCellComponent.prototype, "eventClicked", void 0);
    var collapseAnimation = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["trigger"])('collapse', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["style"])({
      height: 0,
      overflow: 'hidden',
      'padding-top': 0,
      'padding-bottom': 0
    })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["style"])({
      height: '*',
      overflow: 'hidden',
      'padding-top': '*',
      'padding-bottom': '*'
    })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["animate"])('150ms ease-out')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["transition"])('void => *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_9__["animate"])('150ms ease-in'))]);

    var CalendarOpenDayEventsComponent = function CalendarOpenDayEventsComponent() {
      _classCallCheck(this, CalendarOpenDayEventsComponent);

      this.isOpen = false;
      this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.trackByEventId = trackByEventId;
      this.validateDrag = isWithinThreshold;
    };

    CalendarOpenDayEventsComponent.ɵfac = function CalendarOpenDayEventsComponent_Factory(t) {
      return new (t || CalendarOpenDayEventsComponent)();
    };

    CalendarOpenDayEventsComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarOpenDayEventsComponent,
      selectors: [["mwl-calendar-open-day-events"]],
      inputs: {
        isOpen: "isOpen",
        locale: "locale",
        events: "events",
        customTemplate: "customTemplate",
        eventTitleTemplate: "eventTitleTemplate",
        eventActionsTemplate: "eventActionsTemplate",
        date: "date"
      },
      outputs: {
        eventClicked: "eventClicked"
      },
      decls: 3,
      vars: 8,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "cal-open-day-events", "role", "application", 4, "ngIf"], ["role", "application", 1, "cal-open-day-events"], ["tabindex", "-1", "role", "alert"], ["tabindex", "0", "role", "landmark"], ["mwlDraggable", "", "dragActiveClass", "cal-drag-active", 3, "ngClass", "cal-draggable", "dropData", "dragAxis", "validateDrag", "touchStartLongPress", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDraggable", "", "dragActiveClass", "cal-drag-active", 3, "ngClass", "dropData", "dragAxis", "validateDrag", "touchStartLongPress"], [1, "cal-event", 3, "ngStyle"], ["view", "month", "tabindex", "0", 3, "event", "customTemplate", "mwlClick", "mwlKeydownEnter"], [3, "event", "customTemplate"]],
      template: function CalendarOpenDayEventsComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarOpenDayEventsComponent_ng_template_0_Template, 1, 1, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarOpenDayEventsComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction5"](2, _c15, ctx.events, ctx.eventClicked, ctx.isOpen, ctx.trackByEventId, ctx.validateDrag));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["ɵb"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], CalendarEventTitleComponent, ClickDirective, KeydownEnterDirective, CalendarEventActionsComponent],
      pipes: [CalendarA11yPipe],
      encapsulation: 2,
      data: {
        animation: [collapseAnimation]
      }
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "isOpen", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "events", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "eventTitleTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "eventActionsTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarOpenDayEventsComponent.prototype, "date", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarOpenDayEventsComponent.prototype, "eventClicked", void 0);

    var CalendarMonthModule = function CalendarMonthModule() {
      _classCallCheck(this, CalendarMonthModule);
    };

    CalendarMonthModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
      type: CalendarMonthModule
    });
    CalendarMonthModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
      factory: function CalendarMonthModule_Factory(t) {
        return new (t || CalendarMonthModule)();
      },
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"]]
    });

    var CalendarDragHelper =
    /*#__PURE__*/
    function () {
      function CalendarDragHelper(dragContainerElement, draggableElement) {
        _classCallCheck(this, CalendarDragHelper);

        this.dragContainerElement = dragContainerElement;
        this.startPosition = draggableElement.getBoundingClientRect();
      }

      _createClass(CalendarDragHelper, [{
        key: "validateDrag",
        value: function validateDrag(_ref36) {
          var x = _ref36.x,
              y = _ref36.y,
              snapDraggedEvents = _ref36.snapDraggedEvents,
              dragAlreadyMoved = _ref36.dragAlreadyMoved,
              transform = _ref36.transform;

          if (snapDraggedEvents) {
            var newRect = Object.assign({}, this.startPosition, {
              left: this.startPosition.left + transform.x,
              right: this.startPosition.right + transform.x,
              top: this.startPosition.top + transform.y,
              bottom: this.startPosition.bottom + transform.y
            });
            return (isWithinThreshold({
              x: x,
              y: y
            }) || dragAlreadyMoved) && isInside(this.dragContainerElement.getBoundingClientRect(), newRect);
          } else {
            return isWithinThreshold({
              x: x,
              y: y
            }) || dragAlreadyMoved;
          }
        }
      }]);

      return CalendarDragHelper;
    }();

    var CalendarResizeHelper =
    /*#__PURE__*/
    function () {
      function CalendarResizeHelper(resizeContainerElement, minWidth) {
        _classCallCheck(this, CalendarResizeHelper);

        this.resizeContainerElement = resizeContainerElement;
        this.minWidth = minWidth;
      }

      _createClass(CalendarResizeHelper, [{
        key: "validateResize",
        value: function validateResize(_ref37) {
          var rectangle = _ref37.rectangle;

          if (this.minWidth && Math.ceil(rectangle.width) < Math.ceil(this.minWidth)) {
            return false;
          }

          return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);
        }
      }]);

      return CalendarResizeHelper;
    }();
    /**
     * Shows all events on a given week. Example usage:
     *
     * ```typescript
     * <mwl-calendar-week-view
     *  [viewDate]="viewDate"
     *  [events]="events">
     * </mwl-calendar-week-view>
     * ```
     */


    var CalendarWeekViewComponent =
    /*#__PURE__*/
    function () {
      /**
       * @hidden
       */
      function CalendarWeekViewComponent(cdr, utils, locale, dateAdapter) {
        _classCallCheck(this, CalendarWeekViewComponent);

        this.cdr = cdr;
        this.utils = utils;
        this.dateAdapter = dateAdapter;
        /**
         * An array of events to display on view
         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63
         */

        this.events = [];
        /**
         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view
         */

        this.excludeDays = [];
        /**
         * The placement of the event tooltip
         */

        this.tooltipPlacement = 'auto';
        /**
         * Whether to append tooltips to the body or next to the trigger element
         */

        this.tooltipAppendToBody = true;
        /**
         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip
         * will be displayed immediately.
         */

        this.tooltipDelay = null;
        /**
         * The precision to display events.
         * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding
         */

        this.precision = 'days';
        /**
         * Whether to snap events to a grid when dragging
         */

        this.snapDraggedEvents = true;
        /**
         * The number of segments in an hour. Must be <= 6
         */

        this.hourSegments = 2;
        /**
         * The height in pixels of each hour segment
         */

        this.hourSegmentHeight = 30;
        /**
         * The day start hours in 24 hour time. Must be 0-23
         */

        this.dayStartHour = 0;
        /**
         * The day start minutes. Must be 0-59
         */

        this.dayStartMinute = 0;
        /**
         * The day end hours in 24 hour time. Must be 0-23
         */

        this.dayEndHour = 23;
        /**
         * The day end minutes. Must be 0-59
         */

        this.dayEndMinute = 59;
        /**
         * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element
         */

        this.dayHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when the event title is clicked
         */

        this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when an event is resized or dragged and dropped
         */

        this.eventTimesChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * An output that will be called before the view is rendered for the current week.
         * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template
         */

        this.beforeViewRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * Called when an hour segment is clicked
         */

        this.hourSegmentClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        /**
         * @hidden
         */

        this.allDayEventResizes = new Map();
        /**
         * @hidden
         */

        this.timeEventResizes = new Map();
        /**
         * @hidden
         */

        this.eventDragEnterByType = {
          allDay: 0,
          time: 0
        };
        /**
         * @hidden
         */

        this.dragActive = false;
        /**
         * @hidden
         */

        this.dragAlreadyMoved = false;
        /**
         * @hidden
         */

        this.calendarId = Symbol('angular calendar week view id');
        /**
         * @hidden
         */

        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;
        /**
         * @hidden
         */

        this.trackByHourSegment = trackByHourSegment;
        /**
         * @hidden
         */

        this.trackByHour = trackByHour;
        /**
         * @hidden
         */

        this.trackByWeekAllDayEvent = trackByWeekAllDayEvent;
        /**
         * @hidden
         */

        this.trackByWeekTimeEvent = trackByWeekTimeEvent;
        /**
         * @hidden
         */

        this.trackByHourColumn = function (index, column) {
          return column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;
        };
        /**
         * @hidden
         */


        this.trackById = function (index, row) {
          return row.id;
        };

        this.locale = locale;
      }
      /**
       * @hidden
       */


      _createClass(CalendarWeekViewComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this10 = this;

          if (this.refresh) {
            this.refreshSubscription = this.refresh.subscribe(function () {
              _this10.refreshAll();

              _this10.cdr.markForCheck();
            });
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          var refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays || changes.daysInWeek || changes.weekStartsOn;
          var refreshBody = changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute || changes.hourSegments || changes.weekStartsOn || changes.weekendDays || changes.excludeDays || changes.hourSegmentHeight || changes.events || changes.daysInWeek;

          if (refreshHeader) {
            this.refreshHeader();
          }

          if (changes.events) {
            validateEvents(this.events);
          }

          if (refreshBody) {
            this.refreshBody();
          }

          if (refreshHeader || refreshBody) {
            this.emitBeforeViewRender();
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.refreshSubscription) {
            this.refreshSubscription.unsubscribe();
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "timeEventResizeStarted",
        value: function timeEventResizeStarted(eventsContainer, timeEvent, resizeEvent) {
          this.timeEventResizes.set(timeEvent.event, resizeEvent);
          this.resizeStarted(eventsContainer);
        }
        /**
         * @hidden
         */

      }, {
        key: "timeEventResizing",
        value: function timeEventResizing(timeEvent, resizeEvent) {
          var _this11 = this;

          this.timeEventResizes.set(timeEvent.event, resizeEvent);
          var adjustedEvents = new Map();

          var tempEvents = _toConsumableArray(this.events);

          this.timeEventResizes.forEach(function (lastResizeEvent, event) {
            var newEventDates = _this11.getTimeEventResizedDates(event, lastResizeEvent);

            var adjustedEvent = Object.assign(Object.assign({}, event), newEventDates);
            adjustedEvents.set(adjustedEvent, event);
            var eventIndex = tempEvents.indexOf(event);
            tempEvents[eventIndex] = adjustedEvent;
          });
          this.restoreOriginalEvents(tempEvents, adjustedEvents, true);
        }
        /**
         * @hidden
         */

      }, {
        key: "timeEventResizeEnded",
        value: function timeEventResizeEnded(timeEvent) {
          this.view = this.getWeekView(this.events);
          var lastResizeEvent = this.timeEventResizes.get(timeEvent.event);

          if (lastResizeEvent) {
            this.timeEventResizes["delete"](timeEvent.event);
            var newEventDates = this.getTimeEventResizedDates(timeEvent.event, lastResizeEvent);
            this.eventTimesChanged.emit({
              newStart: newEventDates.start,
              newEnd: newEventDates.end,
              event: timeEvent.event,
              type: CalendarEventTimesChangedEventType.Resize
            });
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "allDayEventResizeStarted",
        value: function allDayEventResizeStarted(allDayEventsContainer, allDayEvent, resizeEvent) {
          this.allDayEventResizes.set(allDayEvent, {
            originalOffset: allDayEvent.offset,
            originalSpan: allDayEvent.span,
            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'
          });
          this.resizeStarted(allDayEventsContainer, this.getDayColumnWidth(allDayEventsContainer));
        }
        /**
         * @hidden
         */

      }, {
        key: "allDayEventResizing",
        value: function allDayEventResizing(allDayEvent, resizeEvent, dayWidth) {
          var currentResize = this.allDayEventResizes.get(allDayEvent);

          if (typeof resizeEvent.edges.left !== 'undefined') {
            var diff = Math.round(+resizeEvent.edges.left / dayWidth);
            allDayEvent.offset = currentResize.originalOffset + diff;
            allDayEvent.span = currentResize.originalSpan - diff;
          } else if (typeof resizeEvent.edges.right !== 'undefined') {
            var _diff = Math.round(+resizeEvent.edges.right / dayWidth);

            allDayEvent.span = currentResize.originalSpan + _diff;
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "allDayEventResizeEnded",
        value: function allDayEventResizeEnded(allDayEvent) {
          var currentResize = this.allDayEventResizes.get(allDayEvent);

          if (currentResize) {
            var allDayEventResizingBeforeStart = currentResize.edge === 'left';
            var daysDiff;

            if (allDayEventResizingBeforeStart) {
              daysDiff = allDayEvent.offset - currentResize.originalOffset;
            } else {
              daysDiff = allDayEvent.span - currentResize.originalSpan;
            }

            allDayEvent.offset = currentResize.originalOffset;
            allDayEvent.span = currentResize.originalSpan;
            var newStart = allDayEvent.event.start;
            var newEnd = allDayEvent.event.end || allDayEvent.event.start;

            if (allDayEventResizingBeforeStart) {
              newStart = addDaysWithExclusions(this.dateAdapter, newStart, daysDiff, this.excludeDays);
            } else {
              newEnd = addDaysWithExclusions(this.dateAdapter, newEnd, daysDiff, this.excludeDays);
            }

            this.eventTimesChanged.emit({
              newStart: newStart,
              newEnd: newEnd,
              event: allDayEvent.event,
              type: CalendarEventTimesChangedEventType.Resize
            });
            this.allDayEventResizes["delete"](allDayEvent);
          }
        }
        /**
         * @hidden
         */

      }, {
        key: "getDayColumnWidth",
        value: function getDayColumnWidth(eventRowContainer) {
          return Math.floor(eventRowContainer.offsetWidth / this.days.length);
        }
        /**
         * @hidden
         */

      }, {
        key: "dateDragEnter",
        value: function dateDragEnter(date) {
          this.lastDragEnterDate = date;
        }
        /**
         * @hidden
         */

      }, {
        key: "eventDropped",
        value: function eventDropped(dropEvent, date, allDay) {
          if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) && this.lastDragEnterDate.getTime() === date.getTime() && (!this.snapDraggedEvents || dropEvent.dropData.event !== this.lastDraggedEvent)) {
            this.eventTimesChanged.emit({
              type: CalendarEventTimesChangedEventType.Drop,
              event: dropEvent.dropData.event,
              newStart: date,
              allDay: allDay
            });
          }

          this.lastDraggedEvent = null;
        }
        /**
         * @hidden
         */

      }, {
        key: "dragEnter",
        value: function dragEnter(type) {
          this.eventDragEnterByType[type]++;
        }
        /**
         * @hidden
         */

      }, {
        key: "dragLeave",
        value: function dragLeave(type) {
          this.eventDragEnterByType[type]--;
        }
        /**
         * @hidden
         */

      }, {
        key: "dragStarted",
        value: function dragStarted(eventsContainer, event, dayEvent) {
          var _this12 = this;

          this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);
          var dragHelper = new CalendarDragHelper(eventsContainer, event);

          this.validateDrag = function (_ref38) {
            var x = _ref38.x,
                y = _ref38.y,
                transform = _ref38.transform;
            return _this12.allDayEventResizes.size === 0 && _this12.timeEventResizes.size === 0 && dragHelper.validateDrag({
              x: x,
              y: y,
              snapDraggedEvents: _this12.snapDraggedEvents,
              dragAlreadyMoved: _this12.dragAlreadyMoved,
              transform: transform
            });
          };

          this.dragActive = true;
          this.dragAlreadyMoved = false;
          this.lastDraggedEvent = null;
          this.eventDragEnterByType = {
            allDay: 0,
            time: 0
          };

          if (!this.snapDraggedEvents && dayEvent) {
            this.view.hourColumns.forEach(function (column) {
              var linkedEvent = column.events.find(function (columnEvent) {
                return columnEvent.event === dayEvent.event && columnEvent !== dayEvent;
              }); // hide any linked events while dragging

              if (linkedEvent) {
                linkedEvent.width = 0;
                linkedEvent.height = 0;
              }
            });
          }

          this.cdr.markForCheck();
        }
        /**
         * @hidden
         */

      }, {
        key: "dragMove",
        value: function dragMove(dayEvent, dragEvent) {
          var newEventTimes = this.getDragMovedEventTimes(dayEvent, dragEvent, this.dayColumnWidth, true);
          var originalEvent = dayEvent.event;
          var adjustedEvent = Object.assign(Object.assign({}, originalEvent), newEventTimes);
          var tempEvents = this.events.map(function (event) {
            if (event === originalEvent) {
              return adjustedEvent;
            }

            return event;
          });
          this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]), this.snapDraggedEvents);
          this.dragAlreadyMoved = true;
        }
        /**
         * @hidden
         */

      }, {
        key: "allDayEventDragMove",
        value: function allDayEventDragMove() {
          this.dragAlreadyMoved = true;
        }
        /**
         * @hidden
         */

      }, {
        key: "dragEnded",
        value: function dragEnded(weekEvent, dragEndEvent, dayWidth) {
          var useY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
          this.view = this.getWeekView(this.events);
          this.dragActive = false;
          this.validateDrag = null;

          var _this$getDragMovedEve = this.getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY),
              start = _this$getDragMovedEve.start,
              end = _this$getDragMovedEve.end;

          if ((this.snapDraggedEvents || this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) && isDraggedWithinPeriod(start, end, this.view.period)) {
            this.lastDraggedEvent = weekEvent.event;
            this.eventTimesChanged.emit({
              newStart: start,
              newEnd: end,
              event: weekEvent.event,
              type: CalendarEventTimesChangedEventType.Drag,
              allDay: !useY
            });
          }
        }
      }, {
        key: "refreshHeader",
        value: function refreshHeader() {
          this.days = this.utils.getWeekViewHeader(Object.assign({
            viewDate: this.viewDate,
            weekStartsOn: this.weekStartsOn,
            excluded: this.excludeDays,
            weekendDays: this.weekendDays
          }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));
        }
      }, {
        key: "refreshBody",
        value: function refreshBody() {
          this.view = this.getWeekView(this.events);
        }
      }, {
        key: "refreshAll",
        value: function refreshAll() {
          this.refreshHeader();
          this.refreshBody();
          this.emitBeforeViewRender();
        }
      }, {
        key: "emitBeforeViewRender",
        value: function emitBeforeViewRender() {
          if (this.days && this.view) {
            this.beforeViewRender.emit(Object.assign({
              header: this.days
            }, this.view));
          }
        }
      }, {
        key: "getWeekView",
        value: function getWeekView(events) {
          return this.utils.getWeekView(Object.assign({
            events: events,
            viewDate: this.viewDate,
            weekStartsOn: this.weekStartsOn,
            excluded: this.excludeDays,
            precision: this.precision,
            absolutePositionedEvents: true,
            hourSegments: this.hourSegments,
            dayStart: {
              hour: this.dayStartHour,
              minute: this.dayStartMinute
            },
            dayEnd: {
              hour: this.dayEndHour,
              minute: this.dayEndMinute
            },
            segmentHeight: this.hourSegmentHeight,
            weekendDays: this.weekendDays
          }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));
        }
      }, {
        key: "getDragMovedEventTimes",
        value: function getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY) {
          var daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;
          var minutesMoved = useY ? getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize) : 0;
          var start = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.start, daysDragged, this.excludeDays), minutesMoved);
          var end;

          if (weekEvent.event.end) {
            end = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.end, daysDragged, this.excludeDays), minutesMoved);
          }

          return {
            start: start,
            end: end
          };
        }
      }, {
        key: "restoreOriginalEvents",
        value: function restoreOriginalEvents(tempEvents, adjustedEvents) {
          var snapDraggedEvents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
          var previousView = this.view;
          this.view = this.getWeekView(tempEvents);
          var adjustedEventsArray = tempEvents.filter(function (event) {
            return adjustedEvents.has(event);
          });
          this.view.hourColumns.forEach(function (column, columnIndex) {
            previousView.hourColumns[columnIndex].hours.forEach(function (hour, hourIndex) {
              hour.segments.forEach(function (segment, segmentIndex) {
                column.hours[hourIndex].segments[segmentIndex].cssClass = segment.cssClass;
              });
            });
            adjustedEventsArray.forEach(function (adjustedEvent) {
              var originalEvent = adjustedEvents.get(adjustedEvent);
              var existingColumnEvent = column.events.find(function (columnEvent) {
                return columnEvent.event === adjustedEvent;
              });

              if (existingColumnEvent) {
                // restore the original event so trackBy kicks in and the dom isn't changed
                existingColumnEvent.event = originalEvent;
                existingColumnEvent['tempEvent'] = adjustedEvent;

                if (!snapDraggedEvents) {
                  existingColumnEvent.height = 0;
                  existingColumnEvent.width = 0;
                }
              } else {
                // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early
                var event = {
                  event: originalEvent,
                  left: 0,
                  top: 0,
                  height: 0,
                  width: 0,
                  startsBeforeDay: false,
                  endsAfterDay: false,
                  tempEvent: adjustedEvent
                };
                column.events.push(event);
              }
            });
          });
          adjustedEvents.clear();
        }
      }, {
        key: "getTimeEventResizedDates",
        value: function getTimeEventResizedDates(calendarEvent, resizeEvent) {
          var minimumEventHeight = getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight);
          var newEventDates = {
            start: calendarEvent.start,
            end: getDefaultEventEnd(this.dateAdapter, calendarEvent, minimumEventHeight)
          };
          var end = calendarEvent.end,
              eventWithoutEnd = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__rest"])(calendarEvent, ["end"]);
          var smallestResizes = {
            start: this.dateAdapter.addMinutes(newEventDates.end, minimumEventHeight * -1),
            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, minimumEventHeight)
          };

          if (typeof resizeEvent.edges.left !== 'undefined') {
            var daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth);
            var newStart = addDaysWithExclusions(this.dateAdapter, newEventDates.start, daysDiff, this.excludeDays);

            if (newStart < smallestResizes.start) {
              newEventDates.start = newStart;
            } else {
              newEventDates.start = smallestResizes.start;
            }
          } else if (typeof resizeEvent.edges.right !== 'undefined') {
            var _daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth);

            var newEnd = addDaysWithExclusions(this.dateAdapter, newEventDates.end, _daysDiff, this.excludeDays);

            if (newEnd > smallestResizes.end) {
              newEventDates.end = newEnd;
            } else {
              newEventDates.end = smallestResizes.end;
            }
          }

          if (typeof resizeEvent.edges.top !== 'undefined') {
            var minutesMoved = getMinutesMoved(resizeEvent.edges.top, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize);

            var _newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);

            if (_newStart < smallestResizes.start) {
              newEventDates.start = _newStart;
            } else {
              newEventDates.start = smallestResizes.start;
            }
          } else if (typeof resizeEvent.edges.bottom !== 'undefined') {
            var _minutesMoved = getMinutesMoved(resizeEvent.edges.bottom, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize);

            var _newEnd = this.dateAdapter.addMinutes(newEventDates.end, _minutesMoved);

            if (_newEnd > smallestResizes.end) {
              newEventDates.end = _newEnd;
            } else {
              newEventDates.end = smallestResizes.end;
            }
          }

          return newEventDates;
        }
      }, {
        key: "resizeStarted",
        value: function resizeStarted(eventsContainer, minWidth) {
          this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);
          var resizeHelper = new CalendarResizeHelper(eventsContainer, minWidth);

          this.validateResize = function (_ref39) {
            var rectangle = _ref39.rectangle;
            return resizeHelper.validateResize({
              rectangle: rectangle
            });
          };

          this.cdr.markForCheck();
        }
      }]);

      return CalendarWeekViewComponent;
    }();

    CalendarWeekViewComponent.ɵfac = function CalendarWeekViewComponent_Factory(t) {
      return new (t || CalendarWeekViewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](CalendarUtils), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DateAdapter));
    };

    CalendarWeekViewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarWeekViewComponent,
      selectors: [["mwl-calendar-week-view"]],
      inputs: {
        events: "events",
        excludeDays: "excludeDays",
        tooltipPlacement: "tooltipPlacement",
        tooltipAppendToBody: "tooltipAppendToBody",
        tooltipDelay: "tooltipDelay",
        precision: "precision",
        snapDraggedEvents: "snapDraggedEvents",
        hourSegments: "hourSegments",
        hourSegmentHeight: "hourSegmentHeight",
        dayStartHour: "dayStartHour",
        dayStartMinute: "dayStartMinute",
        dayEndHour: "dayEndHour",
        dayEndMinute: "dayEndMinute",
        locale: "locale",
        viewDate: "viewDate",
        refresh: "refresh",
        tooltipTemplate: "tooltipTemplate",
        weekStartsOn: "weekStartsOn",
        headerTemplate: "headerTemplate",
        eventTemplate: "eventTemplate",
        eventTitleTemplate: "eventTitleTemplate",
        eventActionsTemplate: "eventActionsTemplate",
        weekendDays: "weekendDays",
        hourSegmentTemplate: "hourSegmentTemplate",
        eventSnapSize: "eventSnapSize",
        allDayEventsLabelTemplate: "allDayEventsLabelTemplate",
        daysInWeek: "daysInWeek",
        currentTimeMarkerTemplate: "currentTimeMarkerTemplate"
      },
      outputs: {
        dayHeaderClicked: "dayHeaderClicked",
        eventClicked: "eventClicked",
        eventTimesChanged: "eventTimesChanged",
        beforeViewRender: "beforeViewRender",
        hourSegmentClicked: "hourSegmentClicked"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]],
      decls: 8,
      vars: 9,
      consts: [["role", "grid", 1, "cal-week-view"], [3, "days", "locale", "customTemplate", "dayHeaderClicked", "eventDropped", "dragEnter"], ["class", "cal-all-day-events", "mwlDroppable", "", 3, "dragEnter", "dragLeave", 4, "ngIf"], ["mwlDroppable", "", 1, "cal-time-events", 3, "dragEnter", "dragLeave"], ["class", "cal-time-label-column", 4, "ngIf"], [1, "cal-day-columns"], ["dayColumns", ""], ["class", "cal-day-column", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDroppable", "", 1, "cal-all-day-events", 3, "dragEnter", "dragLeave"], ["allDayEventsContainer", ""], [1, "cal-time-label-column", 3, "ngTemplateOutlet"], ["class", "cal-day-column", "mwlDroppable", "", "dragOverClass", "cal-drag-over", 3, "drop", "dragEnter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "cal-events-row", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDroppable", "", "dragOverClass", "cal-drag-over", 1, "cal-day-column", 3, "drop", "dragEnter"], [1, "cal-events-row"], ["eventRowContainer", ""], ["class", "cal-event-container", "mwlResizable", "", "mwlDraggable", "", "dragActiveClass", "cal-drag-active", 3, "cal-draggable", "cal-starts-within-week", "cal-ends-within-week", "ngClass", "width", "marginLeft", "resizeSnapGrid", "validateResize", "dropData", "dragAxis", "dragSnapGrid", "validateDrag", "touchStartLongPress", "resizeStart", "resizing", "resizeEnd", "dragStart", "dragging", "dragEnd", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlResizable", "", "mwlDraggable", "", "dragActiveClass", "cal-drag-active", 1, "cal-event-container", 3, "ngClass", "resizeSnapGrid", "validateResize", "dropData", "dragAxis", "dragSnapGrid", "validateDrag", "touchStartLongPress", "resizeStart", "resizing", "resizeEnd", "dragStart", "dragging", "dragEnd"], ["event", ""], ["class", "cal-resize-handle cal-resize-handle-before-start", "mwlResizeHandle", "", 3, "resizeEdges", 4, "ngIf"], [3, "locale", "weekEvent", "tooltipPlacement", "tooltipTemplate", "tooltipAppendToBody", "tooltipDelay", "customTemplate", "eventTitleTemplate", "eventActionsTemplate", "daysInWeek", "eventClicked"], ["class", "cal-resize-handle cal-resize-handle-after-end", "mwlResizeHandle", "", 3, "resizeEdges", 4, "ngIf"], ["mwlResizeHandle", "", 1, "cal-resize-handle", "cal-resize-handle-before-start", 3, "resizeEdges"], ["mwlResizeHandle", "", 1, "cal-resize-handle", "cal-resize-handle-after-end", 3, "resizeEdges"], [1, "cal-time-label-column"], ["class", "cal-hour", 3, "cal-hour-odd", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "cal-hour"], [3, "height", "segment", "segmentHeight", "locale", "customTemplate", "isTimeLabel", "daysInWeek", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "segment", "segmentHeight", "locale", "customTemplate", "isTimeLabel", "daysInWeek"], [1, "cal-day-column"], [3, "columnDate", "dayStartHour", "dayStartMinute", "dayEndHour", "dayEndMinute", "hourSegments", "hourSegmentHeight", "customTemplate"], [1, "cal-events-container"], ["class", "cal-event-container", "mwlResizable", "", "mwlDraggable", "", "dragActiveClass", "cal-drag-active", 3, "cal-draggable", "cal-starts-within-day", "cal-ends-within-day", "ngClass", "hidden", "top", "height", "left", "width", "resizeSnapGrid", "validateResize", "allowNegativeResizes", "dropData", "dragAxis", "dragSnapGrid", "touchStartLongPress", "ghostDragEnabled", "ghostElementTemplate", "validateDrag", "resizeStart", "resizing", "resizeEnd", "dragStart", "dragging", "dragEnd", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlResizable", "", "mwlDraggable", "", "dragActiveClass", "cal-drag-active", 1, "cal-event-container", 3, "ngClass", "hidden", "resizeSnapGrid", "validateResize", "allowNegativeResizes", "dropData", "dragAxis", "dragSnapGrid", "touchStartLongPress", "ghostDragEnabled", "ghostElementTemplate", "validateDrag", "resizeStart", "resizing", "resizeEnd", "dragStart", "dragging", "dragEnd"], [3, "ngTemplateOutlet"], ["weekEventTemplate", ""], [3, "locale", "weekEvent", "tooltipPlacement", "tooltipTemplate", "tooltipAppendToBody", "tooltipDisabled", "tooltipDelay", "customTemplate", "eventTitleTemplate", "eventActionsTemplate", "column", "daysInWeek", "eventClicked"], ["mwlDroppable", "", "dragActiveClass", "cal-drag-active", 3, "height", "segment", "segmentHeight", "locale", "customTemplate", "daysInWeek", "clickListenerDisabled", "dragOverClass", "isTimeLabel", "mwlClick", "drop", "dragEnter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDroppable", "", "dragActiveClass", "cal-drag-active", 3, "segment", "segmentHeight", "locale", "customTemplate", "daysInWeek", "clickListenerDisabled", "dragOverClass", "isTimeLabel", "mwlClick", "drop", "dragEnter"]],
      template: function CalendarWeekViewComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "mwl-calendar-week-view-header", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("dayHeaderClicked", function CalendarWeekViewComponent_Template_mwl_calendar_week_view_header_dayHeaderClicked_1_listener($event) {
            return ctx.dayHeaderClicked.emit($event);
          })("eventDropped", function CalendarWeekViewComponent_Template_mwl_calendar_week_view_header_eventDropped_1_listener($event) {
            return ctx.eventDropped({
              dropData: $event
            }, $event.newStart, true);
          })("dragEnter", function CalendarWeekViewComponent_Template_mwl_calendar_week_view_header_dragEnter_1_listener($event) {
            return ctx.dateDragEnter($event.date);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewComponent_div_2_Template, 6, 5, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("dragEnter", function CalendarWeekViewComponent_Template_div_dragEnter_3_listener() {
            return ctx.dragEnter("time");
          })("dragLeave", function CalendarWeekViewComponent_Template_div_dragLeave_3_listener() {
            return ctx.dragLeave("time");
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](4, CalendarWeekViewComponent_div_4_Template, 2, 2, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "div", 5, 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](7, CalendarWeekViewComponent_div_7_Template, 5, 12, "div", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("days", ctx.days)("locale", ctx.locale)("customTemplate", ctx.headerTemplate);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.view.allDayEventRows.length > 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.view.hourColumns.length > 0 && ctx.daysInWeek !== 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("cal-resize-active", ctx.timeEventResizes.size > 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngForOf", ctx.view.hourColumns)("ngForTrackBy", ctx.trackByHourColumn);
        }
      },
      directives: function directives() {
        return [CalendarWeekViewHeaderComponent, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["ɵa"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableDirective"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["ɵb"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], CalendarWeekViewEventComponent, angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizeHandleDirective"], CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent, ClickDirective];
      },
      encapsulation: 2
    });

    CalendarWeekViewComponent.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
      }, {
        type: CalendarUtils
      }, {
        type: String,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
        }]
      }, {
        type: DateAdapter
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "viewDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "events", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "excludeDays", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "refresh", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "tooltipPlacement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "tooltipTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "tooltipAppendToBody", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "tooltipDelay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "weekStartsOn", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "headerTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "eventTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "eventTitleTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "eventActionsTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "precision", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "weekendDays", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "snapDraggedEvents", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "hourSegments", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "hourSegmentHeight", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "dayStartHour", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "dayStartMinute", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "dayEndHour", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "dayEndMinute", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "hourSegmentTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "eventSnapSize", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "allDayEventsLabelTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "daysInWeek", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewComponent.prototype, "currentTimeMarkerTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewComponent.prototype, "dayHeaderClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewComponent.prototype, "eventClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewComponent.prototype, "eventTimesChanged", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewComponent.prototype, "beforeViewRender", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewComponent.prototype, "hourSegmentClicked", void 0);
    CalendarWeekViewComponent = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__param"])(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]))], CalendarWeekViewComponent);

    var CalendarWeekViewHeaderComponent = function CalendarWeekViewHeaderComponent() {
      _classCallCheck(this, CalendarWeekViewHeaderComponent);

      this.dayHeaderClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.eventDropped = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.dragEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;
    };

    CalendarWeekViewHeaderComponent.ɵfac = function CalendarWeekViewHeaderComponent_Factory(t) {
      return new (t || CalendarWeekViewHeaderComponent)();
    };

    CalendarWeekViewHeaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarWeekViewHeaderComponent,
      selectors: [["mwl-calendar-week-view-header"]],
      inputs: {
        days: "days",
        locale: "locale",
        customTemplate: "customTemplate"
      },
      outputs: {
        dayHeaderClicked: "dayHeaderClicked",
        eventDropped: "eventDropped",
        dragEnter: "dragEnter"
      },
      decls: 3,
      vars: 9,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["role", "row", 1, "cal-day-headers"], ["class", "cal-header", "mwlDroppable", "", "dragOverClass", "cal-drag-over", "tabindex", "0", "role", "columnheader", 3, "cal-past", "cal-today", "cal-future", "cal-weekend", "ngClass", "mwlClick", "drop", "dragEnter", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["mwlDroppable", "", "dragOverClass", "cal-drag-over", "tabindex", "0", "role", "columnheader", 1, "cal-header", 3, "ngClass", "mwlClick", "drop", "dragEnter"]],
      template: function CalendarWeekViewHeaderComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarWeekViewHeaderComponent_ng_template_0_Template, 2, 2, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewHeaderComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction6"](2, _c24, ctx.days, ctx.locale, ctx.dayHeaderClicked, ctx.eventDropped, ctx.dragEnter, ctx.trackByWeekDayHeaderDate));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgForOf"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["ɵa"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], ClickDirective],
      pipes: [CalendarDatePipe],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHeaderComponent.prototype, "days", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHeaderComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHeaderComponent.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewHeaderComponent.prototype, "dayHeaderClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewHeaderComponent.prototype, "eventDropped", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewHeaderComponent.prototype, "dragEnter", void 0);

    var CalendarWeekViewEventComponent = function CalendarWeekViewEventComponent() {
      _classCallCheck(this, CalendarWeekViewEventComponent);

      this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    };

    CalendarWeekViewEventComponent.ɵfac = function CalendarWeekViewEventComponent_Factory(t) {
      return new (t || CalendarWeekViewEventComponent)();
    };

    CalendarWeekViewEventComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarWeekViewEventComponent,
      selectors: [["mwl-calendar-week-view-event"]],
      inputs: {
        locale: "locale",
        weekEvent: "weekEvent",
        tooltipPlacement: "tooltipPlacement",
        tooltipAppendToBody: "tooltipAppendToBody",
        tooltipDisabled: "tooltipDisabled",
        tooltipDelay: "tooltipDelay",
        customTemplate: "customTemplate",
        eventTitleTemplate: "eventTitleTemplate",
        eventActionsTemplate: "eventActionsTemplate",
        tooltipTemplate: "tooltipTemplate",
        column: "column",
        daysInWeek: "daysInWeek"
      },
      outputs: {
        eventClicked: "eventClicked"
      },
      decls: 3,
      vars: 12,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["tabindex", "0", "role", "application", 1, "cal-event", 3, "ngStyle", "mwlCalendarTooltip", "tooltipPlacement", "tooltipEvent", "tooltipTemplate", "tooltipAppendToBody", "tooltipDelay", "mwlClick", "mwlKeydownEnter"], [3, "event", "customTemplate"], [3, "event", "customTemplate", "view"]],
      template: function CalendarWeekViewEventComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarWeekViewEventComponent_ng_template_0_Template, 6, 26, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewEventComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunctionV"](2, _c26, [ctx.weekEvent, ctx.tooltipPlacement, ctx.eventClicked, ctx.tooltipTemplate, ctx.tooltipAppendToBody, ctx.tooltipDisabled, ctx.tooltipDelay, ctx.column, ctx.daysInWeek]));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgStyle"], CalendarTooltipDirective, ClickDirective, KeydownEnterDirective, CalendarEventActionsComponent, CalendarEventTitleComponent],
      pipes: [CalendarEventTitlePipe, CalendarA11yPipe],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "weekEvent", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "tooltipPlacement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "tooltipAppendToBody", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "tooltipDisabled", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "tooltipDelay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "customTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "eventTitleTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "eventActionsTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "tooltipTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "column", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewEventComponent.prototype, "daysInWeek", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarWeekViewEventComponent.prototype, "eventClicked", void 0);

    var CalendarWeekViewHourSegmentComponent = function CalendarWeekViewHourSegmentComponent() {
      _classCallCheck(this, CalendarWeekViewHourSegmentComponent);
    };

    CalendarWeekViewHourSegmentComponent.ɵfac = function CalendarWeekViewHourSegmentComponent_Factory(t) {
      return new (t || CalendarWeekViewHourSegmentComponent)();
    };

    CalendarWeekViewHourSegmentComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarWeekViewHourSegmentComponent,
      selectors: [["mwl-calendar-week-view-hour-segment"]],
      inputs: {
        segment: "segment",
        segmentHeight: "segmentHeight",
        locale: "locale",
        isTimeLabel: "isTimeLabel",
        daysInWeek: "daysInWeek",
        customTemplate: "customTemplate"
      },
      decls: 3,
      vars: 8,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "cal-hour-segment", 3, "ngClass"], ["class", "cal-time", 4, "ngIf"], [1, "cal-time"]],
      template: function CalendarWeekViewHourSegmentComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarWeekViewHourSegmentComponent_ng_template_0_Template, 3, 13, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewHourSegmentComponent_ng_template_2_Template, 0, 0, "ng-template", 1);
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction5"](2, _c27, ctx.segment, ctx.locale, ctx.segmentHeight, ctx.isTimeLabel, ctx.daysInWeek));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]],
      pipes: [CalendarA11yPipe, CalendarDatePipe],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHourSegmentComponent.prototype, "segment", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHourSegmentComponent.prototype, "segmentHeight", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHourSegmentComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHourSegmentComponent.prototype, "isTimeLabel", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHourSegmentComponent.prototype, "daysInWeek", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewHourSegmentComponent.prototype, "customTemplate", void 0);

    var CalendarWeekViewCurrentTimeMarkerComponent =
    /*#__PURE__*/
    function () {
      function CalendarWeekViewCurrentTimeMarkerComponent(dateAdapter, zone) {
        var _this13 = this;

        _classCallCheck(this, CalendarWeekViewCurrentTimeMarkerComponent);

        this.dateAdapter = dateAdapter;
        this.zone = zone;
        this.columnDate$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["BehaviorSubject"](this.columnDate);
        this.marker$ = this.zone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["switchMap"])(function () {
          return Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["interval"])(60 * 1000);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(0), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["switchMapTo"])(this.columnDate$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (columnDate) {
          var startOfDay = _this13.dateAdapter.setMinutes(_this13.dateAdapter.setHours(columnDate, _this13.dayStartHour), _this13.dayStartMinute);

          var endOfDay = _this13.dateAdapter.setMinutes(_this13.dateAdapter.setHours(columnDate, _this13.dayEndHour), _this13.dayEndMinute);

          var hourHeightModifier = _this13.hourSegments * _this13.hourSegmentHeight / 60;
          var now = new Date();
          return {
            isVisible: _this13.dateAdapter.isSameDay(columnDate, now) && now >= startOfDay && now <= endOfDay,
            top: _this13.dateAdapter.differenceInMinutes(now, startOfDay) * hourHeightModifier
          };
        }));
      }

      _createClass(CalendarWeekViewCurrentTimeMarkerComponent, [{
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          if (changes.columnDate) {
            this.columnDate$.next(changes.columnDate.currentValue);
          }
        }
      }]);

      return CalendarWeekViewCurrentTimeMarkerComponent;
    }();

    CalendarWeekViewCurrentTimeMarkerComponent.ɵfac = function CalendarWeekViewCurrentTimeMarkerComponent_Factory(t) {
      return new (t || CalendarWeekViewCurrentTimeMarkerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](DateAdapter), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]));
    };

    CalendarWeekViewCurrentTimeMarkerComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarWeekViewCurrentTimeMarkerComponent,
      selectors: [["mwl-calendar-week-view-current-time-marker"]],
      inputs: {
        columnDate: "columnDate",
        dayStartHour: "dayStartHour",
        dayStartMinute: "dayStartMinute",
        dayEndHour: "dayEndHour",
        dayEndMinute: "dayEndMinute",
        hourSegments: "hourSegments",
        hourSegmentHeight: "hourSegmentHeight",
        customTemplate: "customTemplate"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]],
      decls: 5,
      vars: 14,
      consts: [["defaultTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "cal-current-time-marker", 3, "top", 4, "ngIf"], [1, "cal-current-time-marker"]],
      template: function CalendarWeekViewCurrentTimeMarkerComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](0, CalendarWeekViewCurrentTimeMarkerComponent_ng_template_0_Template, 1, 1, "ng-template", null, 0, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](2, CalendarWeekViewCurrentTimeMarkerComponent_ng_template_2_Template, 0, 0, "ng-template", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](3, "async");

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipe"](4, "async");
        }

        if (rf & 2) {
          var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵreference"](1);

          var tmp_1_0 = null;

          var currVal_1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction7"](6, _c28, ctx.columnDate, ctx.dayStartHour, ctx.dayStartMinute, ctx.dayEndHour, ctx.dayEndMinute, (tmp_1_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](3, 2, ctx.marker$)) == null ? null : tmp_1_0.isVisible, (tmp_1_0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpipeBind1"](4, 4, ctx.marker$)) == null ? null : tmp_1_0.top);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngTemplateOutlet", ctx.customTemplate || _r0)("ngTemplateOutletContext", currVal_1);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["NgTemplateOutlet"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["AsyncPipe"]],
      encapsulation: 2
    });

    CalendarWeekViewCurrentTimeMarkerComponent.ctorParameters = function () {
      return [{
        type: DateAdapter
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
      }];
    };

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "columnDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayStartHour", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayStartMinute", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayEndHour", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "dayEndMinute", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "hourSegments", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "hourSegmentHeight", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarWeekViewCurrentTimeMarkerComponent.prototype, "customTemplate", void 0);

    var CalendarWeekModule = function CalendarWeekModule() {
      _classCallCheck(this, CalendarWeekModule);
    };

    CalendarWeekModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
      type: CalendarWeekModule
    });
    CalendarWeekModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
      factory: function CalendarWeekModule_Factory(t) {
        return new (t || CalendarWeekModule)();
      },
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule], angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"]]
    });
    /**
     * Shows all events on a given day. Example usage:
     *
     * ```typescript
     * <mwl-calendar-day-view
     *  [viewDate]="viewDate"
     *  [events]="events">
     * </mwl-calendar-day-view>
     * ```
     */

    var CalendarDayViewComponent = function CalendarDayViewComponent() {
      _classCallCheck(this, CalendarDayViewComponent);

      /**
       * An array of events to display on view
       * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63
       */
      this.events = [];
      /**
       * The number of segments in an hour. Must be <= 6
       */

      this.hourSegments = 2;
      /**
       * The height in pixels of each hour segment
       */

      this.hourSegmentHeight = 30;
      /**
       * The day start hours in 24 hour time. Must be 0-23
       */

      this.dayStartHour = 0;
      /**
       * The day start minutes. Must be 0-59
       */

      this.dayStartMinute = 0;
      /**
       * The day end hours in 24 hour time. Must be 0-23
       */

      this.dayEndHour = 23;
      /**
       * The day end minutes. Must be 0-59
       */

      this.dayEndMinute = 59;
      /**
       * The placement of the event tooltip
       */

      this.tooltipPlacement = 'auto';
      /**
       * Whether to append tooltips to the body or next to the trigger element
       */

      this.tooltipAppendToBody = true;
      /**
       * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip
       * will be displayed immediately.
       */

      this.tooltipDelay = null;
      /**
       * Whether to snap events to a grid when dragging
       */

      this.snapDraggedEvents = true;
      /**
       * Called when an event title is clicked
       */

      this.eventClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      /**
       * Called when an hour segment is clicked
       */

      this.hourSegmentClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      /**
       * Called when an event is resized or dragged and dropped
       */

      this.eventTimesChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
      /**
       * An output that will be called before the view is rendered for the current day.
       * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template
       */

      this.beforeViewRender = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    };

    CalendarDayViewComponent.ɵfac = function CalendarDayViewComponent_Factory(t) {
      return new (t || CalendarDayViewComponent)();
    };

    CalendarDayViewComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: CalendarDayViewComponent,
      selectors: [["mwl-calendar-day-view"]],
      inputs: {
        events: "events",
        hourSegments: "hourSegments",
        hourSegmentHeight: "hourSegmentHeight",
        dayStartHour: "dayStartHour",
        dayStartMinute: "dayStartMinute",
        dayEndHour: "dayEndHour",
        dayEndMinute: "dayEndMinute",
        tooltipPlacement: "tooltipPlacement",
        tooltipAppendToBody: "tooltipAppendToBody",
        tooltipDelay: "tooltipDelay",
        snapDraggedEvents: "snapDraggedEvents",
        viewDate: "viewDate",
        refresh: "refresh",
        locale: "locale",
        eventSnapSize: "eventSnapSize",
        tooltipTemplate: "tooltipTemplate",
        hourSegmentTemplate: "hourSegmentTemplate",
        eventTemplate: "eventTemplate",
        eventTitleTemplate: "eventTitleTemplate",
        eventActionsTemplate: "eventActionsTemplate",
        allDayEventsLabelTemplate: "allDayEventsLabelTemplate",
        currentTimeMarkerTemplate: "currentTimeMarkerTemplate"
      },
      outputs: {
        eventClicked: "eventClicked",
        hourSegmentClicked: "hourSegmentClicked",
        eventTimesChanged: "eventTimesChanged",
        beforeViewRender: "beforeViewRender"
      },
      decls: 1,
      vars: 23,
      consts: [[1, "cal-day-view", 3, "daysInWeek", "viewDate", "events", "hourSegments", "hourSegmentHeight", "dayStartHour", "dayStartMinute", "dayEndHour", "dayEndMinute", "refresh", "locale", "eventSnapSize", "tooltipPlacement", "tooltipTemplate", "tooltipAppendToBody", "tooltipDelay", "hourSegmentTemplate", "eventTemplate", "eventTitleTemplate", "eventActionsTemplate", "snapDraggedEvents", "allDayEventsLabelTemplate", "currentTimeMarkerTemplate", "eventClicked", "hourSegmentClicked", "eventTimesChanged", "beforeViewRender"]],
      template: function CalendarDayViewComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "mwl-calendar-week-view", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("eventClicked", function CalendarDayViewComponent_Template_mwl_calendar_week_view_eventClicked_0_listener($event) {
            return ctx.eventClicked.emit($event);
          })("hourSegmentClicked", function CalendarDayViewComponent_Template_mwl_calendar_week_view_hourSegmentClicked_0_listener($event) {
            return ctx.hourSegmentClicked.emit($event);
          })("eventTimesChanged", function CalendarDayViewComponent_Template_mwl_calendar_week_view_eventTimesChanged_0_listener($event) {
            return ctx.eventTimesChanged.emit($event);
          })("beforeViewRender", function CalendarDayViewComponent_Template_mwl_calendar_week_view_beforeViewRender_0_listener($event) {
            return ctx.beforeViewRender.emit($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("daysInWeek", 1)("viewDate", ctx.viewDate)("events", ctx.events)("hourSegments", ctx.hourSegments)("hourSegmentHeight", ctx.hourSegmentHeight)("dayStartHour", ctx.dayStartHour)("dayStartMinute", ctx.dayStartMinute)("dayEndHour", ctx.dayEndHour)("dayEndMinute", ctx.dayEndMinute)("refresh", ctx.refresh)("locale", ctx.locale)("eventSnapSize", ctx.eventSnapSize)("tooltipPlacement", ctx.tooltipPlacement)("tooltipTemplate", ctx.tooltipTemplate)("tooltipAppendToBody", ctx.tooltipAppendToBody)("tooltipDelay", ctx.tooltipDelay)("hourSegmentTemplate", ctx.hourSegmentTemplate)("eventTemplate", ctx.eventTemplate)("eventTitleTemplate", ctx.eventTitleTemplate)("eventActionsTemplate", ctx.eventActionsTemplate)("snapDraggedEvents", ctx.snapDraggedEvents)("allDayEventsLabelTemplate", ctx.allDayEventsLabelTemplate)("currentTimeMarkerTemplate", ctx.currentTimeMarkerTemplate);
        }
      },
      directives: [CalendarWeekViewComponent],
      encapsulation: 2
    });
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "viewDate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "events", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "hourSegments", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "hourSegmentHeight", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "dayStartHour", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "dayStartMinute", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "dayEndHour", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "dayEndMinute", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "refresh", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "locale", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "eventSnapSize", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "tooltipPlacement", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "tooltipTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "tooltipAppendToBody", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "tooltipDelay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "hourSegmentTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "eventTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "eventTitleTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "eventActionsTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "snapDraggedEvents", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "allDayEventsLabelTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], CalendarDayViewComponent.prototype, "currentTimeMarkerTemplate", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarDayViewComponent.prototype, "eventClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarDayViewComponent.prototype, "hourSegmentClicked", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarDayViewComponent.prototype, "eventTimesChanged", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])()], CalendarDayViewComponent.prototype, "beforeViewRender", void 0);

    var CalendarDayModule = function CalendarDayModule() {
      _classCallCheck(this, CalendarDayModule);
    };

    CalendarDayModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
      type: CalendarDayModule
    });
    CalendarDayModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
      factory: function CalendarDayModule_Factory(t) {
        return new (t || CalendarDayModule)();
      },
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], CalendarCommonModule, CalendarWeekModule]]
    });
    var CalendarModule_1;
    /**
     * The main module of this library. Example usage:
     *
     * ```typescript
     * import { CalenderModule } from 'angular-calendar';
     *
     * @NgModule({
     *   imports: [
     *     CalenderModule.forRoot()
     *   ]
     * })
     * class MyModule {}
     * ```
     *
     */

    var CalendarModule = CalendarModule_1 =
    /*#__PURE__*/
    function () {
      function CalendarModule() {
        _classCallCheck(this, CalendarModule);
      }

      _createClass(CalendarModule, null, [{
        key: "forRoot",
        value: function forRoot(dateAdapter) {
          var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          return {
            ngModule: CalendarModule_1,
            providers: [dateAdapter, config.eventTitleFormatter || CalendarEventTitleFormatter, config.dateFormatter || CalendarDateFormatter, config.utils || CalendarUtils, config.a11y || CalendarA11y]
          };
        }
      }]);

      return CalendarModule;
    }();

    CalendarModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
      type: CalendarModule
    });
    CalendarModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
      factory: function CalendarModule_Factory(t) {
        return new (t || CalendarModule)();
      },
      imports: [[CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule], CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarEventActionsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-event-actions',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-trackByActionId=\"trackByActionId\"\n    >\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n        <a\n          class=\"cal-event-action\"\n          href=\"javascript:;\"\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\n          (mwlKeydownEnter)=\"\n            action.onClick({ event: event, sourceEvent: $event })\n          \"\n          [ngClass]=\"action.cssClass\"\n          [innerHtml]=\"action.label\"\n          tabindex=\"0\"\n          role=\"button\"\n          [attr.aria-label]=\"\n            { action: action } | calendarA11y: 'actionButtonLabel'\n          \"\n        >\n        </a>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        trackByActionId: trackByActionId\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], function () {
        return [];
      }, {
        event: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarEventTitleComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-event-title',
          template: "\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\n      <span\n        class=\"cal-event-title\"\n        [innerHTML]=\"event.title | calendarEventTitle: view:event\"\n        [attr.aria-hidden]=\"{} | calendarA11y: 'hideEventTitle'\"\n      >\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], null, {
        event: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        view: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarTooltipWindowComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-tooltip-window',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\"\n    >\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], null, {
        contents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        placement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        event: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarTooltipDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
          selector: '[mwlCalendarTooltip]'
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ComponentFactoryResolver"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]]
          }]
        }];
      }, {
        placement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"],
          args: ['tooltipPlacement']
        }],
        delay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"],
          args: ['tooltipDelay']
        }],
        onMouseOver: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['mouseenter']
        }],
        onMouseOut: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['mouseleave']
        }],
        contents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"],
          args: ['mwlCalendarTooltip']
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"],
          args: ['tooltipTemplate']
        }],
        event: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"],
          args: ['tooltipEvent']
        }],
        appendToBody: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"],
          args: ['tooltipAppendToBody']
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarPreviousViewDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
          selector: '[mwlCalendarPreviousView]'
        }]
      }], function () {
        return [{
          type: DateAdapter
        }];
      }, {
        excludeDays: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        viewDateChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        onClick: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['click']
        }],
        view: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        viewDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        daysInWeek: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarNextViewDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
          selector: '[mwlCalendarNextView]'
        }]
      }], function () {
        return [{
          type: DateAdapter
        }];
      }, {
        excludeDays: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        viewDateChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        onClick: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['click']
        }],
        view: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        viewDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        daysInWeek: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarTodayDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
          selector: '[mwlCalendarToday]'
        }]
      }], function () {
        return [{
          type: DateAdapter
        }];
      }, {
        viewDateChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        onClick: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['click']
        }],
        viewDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarAngularDateFormatter, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
      }], function () {
        return [{
          type: DateAdapter
        }];
      }, null);
    })();

    var ɵCalendarDateFormatter_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵgetInheritedFactory"](CalendarDateFormatter);
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarDateFormatter, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
      }], null, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarDatePipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"],
        args: [{
          name: 'calendarDate'
        }]
      }], function () {
        return [{
          type: CalendarDateFormatter
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }];
      }, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarEventTitlePipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"],
        args: [{
          name: 'calendarEventTitle'
        }]
      }], function () {
        return [{
          type: CalendarEventTitleFormatter
        }];
      }, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](ClickDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
          selector: '[mwlClick]'
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DOCUMENT"]]
          }]
        }];
      }, {
        clickListenerDisabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        click: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"],
          args: ['mwlClick']
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](KeydownEnterDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
        args: [{
          selector: '[mwlKeydownEnter]'
        }]
      }], function () {
        return [];
      }, {
        keydown: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"],
          args: ['mwlKeydownEnter']
        }],
        onKeyPress: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['keydown', ['$event']]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarUtils, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
      }], function () {
        return [{
          type: DateAdapter
        }];
      }, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarA11y, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
      }], function () {
        return [{
          type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]
        }];
      }, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarA11yPipe, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"],
        args: [{
          name: 'calendarA11y'
        }]
      }], function () {
        return [{
          type: CalendarA11y
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }];
      }, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarMomentDateFormatter, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
      }], function () {
        return [{
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [MOMENT]
          }]
        }, {
          type: DateAdapter
        }];
      }, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarNativeDateFormatter, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"]
      }], function () {
        return [{
          type: DateAdapter
        }];
      }, null);
    })();

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](CalendarCommonModule, {
        declarations: function declarations() {
          return [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, CalendarA11yPipe, ClickDirective, KeydownEnterDirective];
        },
        imports: function imports() {
          return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]];
        },
        exports: function exports() {
          return [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, CalendarA11yPipe, ClickDirective, KeydownEnterDirective];
        }
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarCommonModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
        args: [{
          declarations: [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, CalendarA11yPipe, ClickDirective, KeydownEnterDirective],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"]],
          exports: [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, CalendarA11yPipe, ClickDirective, KeydownEnterDirective],
          providers: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["I18nPluralPipe"]],
          entryComponents: [CalendarTooltipWindowComponent]
        }]
      }], null, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarMonthViewComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-month-view',
          template: "\n    <div class=\"cal-month-view\" role=\"grid\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\n        [customTemplate]=\"headerTemplate\"\n      >\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\n        >\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"\n                let day of view.days\n                  | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek;\n                trackBy: trackByDate\n              \"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"cellTemplate\"\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\n              (mwlKeydownEnter)=\"\n                dayClicked.emit({ day: day, sourceEvent: $event })\n              \"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              dragOverClass=\"cal-drag-over\"\n              (drop)=\"\n                eventDropped(\n                  day,\n                  $event.dropData.event,\n                  $event.dropData.draggedFrom\n                )\n              \"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: $event.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n              [attr.tabindex]=\"{} | calendarA11y: 'monthCellTabIndex'\"\n            >\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [locale]=\"locale\"\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [date]=\"openDay?.date\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            (eventClicked)=\"\n              eventClicked.emit({\n                event: $event.event,\n                sourceEvent: $event.sourceEvent\n              })\n            \"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"\n              eventDropped(\n                openDay,\n                $event.dropData.event,\n                $event.dropData.draggedFrom\n              )\n            \"\n          >\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  "
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
        }, {
          type: CalendarUtils
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }, {
          type: DateAdapter
        }];
      }, {
        events: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        excludeDays: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        activeDayIsOpen: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipPlacement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipAppendToBody: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipDelay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        beforeViewRender: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        dayClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        columnHeaderClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventTimesChanged: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        viewDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        activeDay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        refresh: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        weekStartsOn: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        headerTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        cellTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        openDayEventsTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTitleTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventActionsTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        weekendDays: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarMonthViewHeaderComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-month-view-header',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n    >\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          (click)=\"\n            columnHeaderClicked.emit({\n              isoDayNumber: day.day,\n              sourceEvent: $event\n            })\n          \"\n          [ngClass]=\"day.cssClass\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          {{ day.date | calendarDate: 'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], function () {
        return [];
      }, {
        columnHeaderClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        days: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarMonthCellComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-month-cell',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-cell-top\"\n        [attr.aria-label]=\"\n          { day: day, locale: locale } | calendarA11y: 'monthCell'\n        \"\n      >\n        <span aria-hidden=\"true\">\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\n            day.badgeTotal\n          }}</span>\n          <span class=\"cal-day-number\">{{\n            day.date | calendarDate: 'monthViewDayNumber':locale\n          }}</span>\n        </span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\n          [mwlCalendarTooltip]=\"\n            event.title | calendarEventTitle: 'monthTooltip':event\n          \"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [tooltipDelay]=\"tooltipDelay\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event, draggedFrom: day }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\n          [attr.aria-hidden]=\"{} | calendarA11y: 'hideMonthCellEvents'\"\n        ></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDelay: tooltipDelay,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  ",
          host: {
            "class": 'cal-cell cal-day-cell',
            '[class.cal-past]': 'day.isPast',
            '[class.cal-today]': 'day.isToday',
            '[class.cal-future]': 'day.isFuture',
            '[class.cal-weekend]': 'day.isWeekend',
            '[class.cal-in-month]': 'day.inMonth',
            '[class.cal-out-month]': '!day.inMonth',
            '[class.cal-has-events]': 'day.events.length > 0',
            '[class.cal-open]': 'day === openDay',
            '[class.cal-event-highlight]': '!!day.backgroundColor'
          }
        }]
      }], function () {
        return [];
      }, {
        highlightDay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        unhighlightDay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        day: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        openDay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipPlacement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipAppendToBody: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipDelay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarOpenDayEventsComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-open-day-events',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\"\n      let-isOpen=\"isOpen\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-open-day-events\"\n        [@collapse]\n        *ngIf=\"isOpen\"\n        role=\"application\"\n      >\n        <span\n          tabindex=\"-1\"\n          role=\"alert\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale } | calendarA11y: 'openDayEventsAlert'\n          \"\n        ></span>\n        <span\n          tabindex=\"0\"\n          role=\"landmark\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale }\n              | calendarA11y: 'openDayEventsLandmark'\n          \"\n        ></span>\n        <div\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\n          [ngClass]=\"event?.cssClass\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n        >\n          <span\n            class=\"cal-event\"\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          >\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]=\"event\"\n            [customTemplate]=\"eventTitleTemplate\"\n            view=\"month\"\n            (mwlClick)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            (mwlKeydownEnter)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            tabindex=\"0\"\n            [attr.aria-label]=\"\n              { event: event, locale: locale }\n                | calendarA11y: 'eventDescription'\n            \"\n          >\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]=\"event\"\n            [customTemplate]=\"eventActionsTemplate\"\n          >\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  ",
          animations: [collapseAnimation]
        }]
      }], function () {
        return [];
      }, {
        isOpen: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        events: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTitleTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventActionsTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        date: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](CalendarMonthModule, {
        declarations: function declarations() {
          return [CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent];
        },
        imports: function imports() {
          return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule];
        },
        exports: function exports() {
          return [angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent];
        }
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarMonthModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
        args: [{
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule],
          declarations: [CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent],
          exports: [angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent]
        }]
      }], null, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarWeekViewComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-week-view',
          template: "\n    <div class=\"cal-week-view\" role=\"grid\">\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"\n          eventDropped({ dropData: $event }, $event.newStart, true)\n        \"\n        (dragEnter)=\"dateDragEnter($event.date)\"\n      >\n      </mwl-calendar-week-view-header>\n      <div\n        class=\"cal-all-day-events\"\n        #allDayEventsContainer\n        *ngIf=\"view.allDayEventRows.length > 0\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('allDay')\"\n        (dragLeave)=\"dragLeave('allDay')\"\n      >\n        <div class=\"cal-day-columns\">\n          <div\n            class=\"cal-time-label-column\"\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n          ></div>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped($event, day.date, true)\"\n            (dragEnter)=\"dateDragEnter(day.date)\"\n          ></div>\n        </div>\n        <div\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\n          #eventRowContainer\n          class=\"cal-events-row\"\n        >\n          <div\n            *ngFor=\"\n              let allDayEvent of eventRow.row;\n              trackBy: trackByWeekAllDayEvent\n            \"\n            #event\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\n            \"\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n            [ngClass]=\"allDayEvent.event?.cssClass\"\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\n            [style.marginLeft.%]=\"(100 / days.length) * allDayEvent.offset\"\n            mwlResizable\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\n            \"\n            (resizing)=\"\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\n            \"\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n            [dragAxis]=\"{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y:\n                !snapDraggedEvents &&\n                allDayEvent.event.draggable &&\n                allDayEventResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n            [validateDrag]=\"validateDrag\"\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n            (dragStart)=\"dragStarted(eventRowContainer, event)\"\n            (dragging)=\"allDayEventDragMove()\"\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n          >\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.beforeStart &&\n                !allDayEvent.startsBeforeWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ left: true }\"\n            ></div>\n            <mwl-calendar-week-view-event\n              [locale]=\"locale\"\n              [weekEvent]=\"allDayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              [daysInWeek]=\"daysInWeek\"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: allDayEvent.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n            >\n            </mwl-calendar-week-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.afterEnd &&\n                !allDayEvent.endsAfterWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ right: true }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"cal-time-events\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('time')\"\n        (dragLeave)=\"dragLeave('time')\"\n      >\n        <div\n          class=\"cal-time-label-column\"\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\n        >\n          <div\n            *ngFor=\"\n              let hour of view.hourColumns[0].hours;\n              trackBy: trackByHour;\n              let odd = odd\n            \"\n            class=\"cal-hour\"\n            [class.cal-hour-odd]=\"odd\"\n          >\n            <mwl-calendar-week-view-hour-segment\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n              [style.height.px]=\"hourSegmentHeight\"\n              [segment]=\"segment\"\n              [segmentHeight]=\"hourSegmentHeight\"\n              [locale]=\"locale\"\n              [customTemplate]=\"hourSegmentTemplate\"\n              [isTimeLabel]=\"true\"\n              [daysInWeek]=\"daysInWeek\"\n            >\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class=\"cal-day-columns\"\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n          #dayColumns\n        >\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n          >\n            <mwl-calendar-week-view-current-time-marker\n              [columnDate]=\"column.date\"\n              [dayStartHour]=\"dayStartHour\"\n              [dayStartMinute]=\"dayStartMinute\"\n              [dayEndHour]=\"dayEndHour\"\n              [dayEndMinute]=\"dayEndMinute\"\n              [hourSegments]=\"hourSegments\"\n              [hourSegmentHeight]=\"hourSegmentHeight\"\n              [customTemplate]=\"currentTimeMarkerTemplate\"\n            ></mwl-calendar-week-view-current-time-marker>\n            <div class=\"cal-events-container\">\n              <div\n                *ngFor=\"\n                  let timeEvent of column.events;\n                  trackBy: trackByWeekTimeEvent\n                \"\n                #event\n                class=\"cal-event-container\"\n                [class.cal-draggable]=\"\n                  timeEvent.event.draggable && timeEventResizes.size === 0\n                \"\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n                [ngClass]=\"timeEvent.event.cssClass\"\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n                [style.top.px]=\"timeEvent.top\"\n                [style.height.px]=\"timeEvent.height\"\n                [style.left.%]=\"timeEvent.left\"\n                [style.width.%]=\"timeEvent.width\"\n                mwlResizable\n                [resizeSnapGrid]=\"{\n                  left: dayColumnWidth,\n                  right: dayColumnWidth,\n                  top: eventSnapSize || hourSegmentHeight,\n                  bottom: eventSnapSize || hourSegmentHeight\n                }\"\n                [validateResize]=\"validateResize\"\n                [allowNegativeResizes]=\"true\"\n                (resizeStart)=\"\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\n                \"\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n                mwlDraggable\n                dragActiveClass=\"cal-drag-active\"\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n                [dragAxis]=\"{\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\n                }\"\n                [dragSnapGrid]=\"\n                  snapDraggedEvents\n                    ? {\n                        x: dayColumnWidth,\n                        y: eventSnapSize || hourSegmentHeight\n                      }\n                    : {}\n                \"\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\n                [ghostElementTemplate]=\"weekEventTemplate\"\n                [validateDrag]=\"validateDrag\"\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent)\"\n                (dragging)=\"dragMove(timeEvent, $event)\"\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n              >\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.beforeStart &&\n                    !timeEvent.startsBeforeDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    left: true,\n                    top: true\n                  }\"\n                ></div>\n                <ng-template\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\n                ></ng-template>\n                <ng-template #weekEventTemplate>\n                  <mwl-calendar-week-view-event\n                    [locale]=\"locale\"\n                    [weekEvent]=\"timeEvent\"\n                    [tooltipPlacement]=\"tooltipPlacement\"\n                    [tooltipTemplate]=\"tooltipTemplate\"\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n                    [tooltipDelay]=\"tooltipDelay\"\n                    [customTemplate]=\"eventTemplate\"\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\n                    [column]=\"column\"\n                    [daysInWeek]=\"daysInWeek\"\n                    (eventClicked)=\"\n                      eventClicked.emit({\n                        event: timeEvent.event,\n                        sourceEvent: $event.sourceEvent\n                      })\n                    \"\n                  >\n                  </mwl-calendar-week-view-event>\n                </ng-template>\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.afterEnd &&\n                    !timeEvent.endsAfterDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    right: true,\n                    bottom: true\n                  }\"\n                ></div>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"\n                let hour of column.hours;\n                trackBy: trackByHour;\n                let odd = odd\n              \"\n              class=\"cal-hour\"\n              [class.cal-hour-odd]=\"odd\"\n            >\n              <mwl-calendar-week-view-hour-segment\n                *ngFor=\"\n                  let segment of hour.segments;\n                  trackBy: trackByHourSegment\n                \"\n                [style.height.px]=\"hourSegmentHeight\"\n                [segment]=\"segment\"\n                [segmentHeight]=\"hourSegmentHeight\"\n                [locale]=\"locale\"\n                [customTemplate]=\"hourSegmentTemplate\"\n                [daysInWeek]=\"daysInWeek\"\n                (mwlClick)=\"\n                  hourSegmentClicked.emit({\n                    date: segment.date,\n                    sourceEvent: $event\n                  })\n                \"\n                [clickListenerDisabled]=\"\n                  hourSegmentClicked.observers.length === 0\n                \"\n                mwlDroppable\n                [dragOverClass]=\"\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n                \"\n                dragActiveClass=\"cal-drag-active\"\n                (drop)=\"eventDropped($event, segment.date, false)\"\n                (dragEnter)=\"dateDragEnter(segment.date)\"\n                [isTimeLabel]=\"daysInWeek === 1\"\n              >\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  "
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]
        }, {
          type: CalendarUtils
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["LOCALE_ID"]]
          }]
        }, {
          type: DateAdapter
        }];
      }, {
        events: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        excludeDays: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipPlacement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipAppendToBody: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipDelay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        precision: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        snapDraggedEvents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegments: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegmentHeight: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayStartHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayStartMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayEndHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayEndMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayHeaderClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventTimesChanged: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        beforeViewRender: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        hourSegmentClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        viewDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        refresh: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        weekStartsOn: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        headerTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTitleTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventActionsTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        weekendDays: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegmentTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventSnapSize: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        allDayEventsLabelTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        daysInWeek: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        currentTimeMarkerTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarWeekViewHeaderComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-week-view-header',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n      let-dragEnter=\"dragEnter\"\n    >\n      <div class=\"cal-day-headers\" role=\"row\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\n          mwlDroppable\n          dragOverClass=\"cal-drag-over\"\n          (drop)=\"\n            eventDropped.emit({\n              event: $event.dropData.event,\n              newStart: day.date\n            })\n          \"\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          <b>{{ day.date | calendarDate: 'weekViewColumnHeader':locale }}</b\n          ><br />\n          <span>{{\n            day.date | calendarDate: 'weekViewColumnSubHeader':locale\n          }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        dayHeaderClicked: dayHeaderClicked,\n        eventDropped: eventDropped,\n        dragEnter: dragEnter,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], function () {
        return [];
      }, {
        dayHeaderClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventDropped: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        dragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        days: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarWeekViewEventComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-week-view-event',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDisabled=\"tooltipDisabled\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-column=\"column\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        class=\"cal-event\"\n        [ngStyle]=\"{\n          backgroundColor: weekEvent.event.color?.secondary,\n          borderColor: weekEvent.event.color?.primary\n        }\"\n        [mwlCalendarTooltip]=\"\n          !tooltipDisabled\n            ? (weekEvent.event.title\n              | calendarEventTitle\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\n                : weekEvent.tempEvent || weekEvent.event)\n            : ''\n        \"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        [tooltipDelay]=\"tooltipDelay\"\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\n        tabindex=\"0\"\n        role=\"application\"\n        [attr.aria-label]=\"\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\n            | calendarA11y: 'eventDescription'\n        \"\n      >\n        <mwl-calendar-event-actions\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled,\n        tooltipDelay: tooltipDelay,\n        column: column,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], function () {
        return [];
      }, {
        eventClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        weekEvent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipPlacement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipAppendToBody: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipDisabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipDelay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTitleTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventActionsTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        column: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        daysInWeek: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarWeekViewHourSegmentComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-week-view-hour-segment',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n      let-isTimeLabel=\"isTimeLabel\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        [attr.aria-hidden]=\"\n          {}\n            | calendarA11y\n              : (daysInWeek === 1\n                  ? 'hideDayHourSegment'\n                  : 'hideWeekHourSegment')\n        \"\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\n          {{\n            segment.displayDate\n              | calendarDate\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\n                : locale\n          }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], null, {
        segment: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        segmentHeight: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        isTimeLabel: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        daysInWeek: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarWeekViewCurrentTimeMarkerComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-week-view-current-time-marker',
          template: "\n    <ng-template\n      #defaultTemplate\n      let-columnDate=\"columnDate\"\n      let-dayStartHour=\"dayStartHour\"\n      let-dayStartMinute=\"dayStartMinute\"\n      let-dayEndHour=\"dayEndHour\"\n      let-dayEndMinute=\"dayEndMinute\"\n      let-isVisible=\"isVisible\"\n      let-topPx=\"topPx\"\n    >\n      <div\n        class=\"cal-current-time-marker\"\n        *ngIf=\"isVisible\"\n        [style.top.px]=\"topPx\"\n      ></div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        columnDate: columnDate,\n        dayStartHour: dayStartHour,\n        dayStartMinute: dayStartMinute,\n        dayEndHour: dayEndHour,\n        dayEndMinute: dayEndMinute,\n        isVisible: (marker$ | async)?.isVisible,\n        topPx: (marker$ | async)?.top\n      }\"\n    >\n    </ng-template>\n  "
        }]
      }], function () {
        return [{
          type: DateAdapter
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
        }];
      }, {
        columnDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayStartHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayStartMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayEndHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayEndMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegments: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegmentHeight: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        customTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](CalendarWeekModule, {
        declarations: function declarations() {
          return [CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent, CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent];
        },
        imports: function imports() {
          return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule];
        },
        exports: function exports() {
          return [angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent, CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent];
        }
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarWeekModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
        args: [{
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarCommonModule],
          declarations: [CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent, CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent],
          exports: [angular_resizable_element__WEBPACK_IMPORTED_MODULE_8__["ResizableModule"], angular_draggable_droppable__WEBPACK_IMPORTED_MODULE_7__["DragAndDropModule"], CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent, CalendarWeekViewHourSegmentComponent, CalendarWeekViewCurrentTimeMarkerComponent]
        }]
      }], null, null);
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarDayViewComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'mwl-calendar-day-view',
          template: "\n    <mwl-calendar-week-view\n      class=\"cal-day-view\"\n      [daysInWeek]=\"1\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [hourSegments]=\"hourSegments\"\n      [hourSegmentHeight]=\"hourSegmentHeight\"\n      [dayStartHour]=\"dayStartHour\"\n      [dayStartMinute]=\"dayStartMinute\"\n      [dayEndHour]=\"dayEndHour\"\n      [dayEndMinute]=\"dayEndMinute\"\n      [refresh]=\"refresh\"\n      [locale]=\"locale\"\n      [eventSnapSize]=\"eventSnapSize\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\n      [tooltipDelay]=\"tooltipDelay\"\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\n      [eventTemplate]=\"eventTemplate\"\n      [eventTitleTemplate]=\"eventTitleTemplate\"\n      [eventActionsTemplate]=\"eventActionsTemplate\"\n      [snapDraggedEvents]=\"snapDraggedEvents\"\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\n      (eventClicked)=\"eventClicked.emit($event)\"\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\n    ></mwl-calendar-week-view>\n  "
        }]
      }], function () {
        return [];
      }, {
        events: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegments: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegmentHeight: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayStartHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayStartMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayEndHour: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        dayEndMinute: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipPlacement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipAppendToBody: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipDelay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        snapDraggedEvents: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        hourSegmentClicked: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        eventTimesChanged: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        beforeViewRender: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"]
        }],
        viewDate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        refresh: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        locale: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventSnapSize: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tooltipTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        hourSegmentTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventTitleTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        eventActionsTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        allDayEventsLabelTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        currentTimeMarkerTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }]
      });
    })();

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](CalendarDayModule, {
        declarations: function declarations() {
          return [CalendarDayViewComponent];
        },
        imports: function imports() {
          return [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], CalendarCommonModule, CalendarWeekModule];
        },
        exports: function exports() {
          return [CalendarDayViewComponent];
        }
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarDayModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
        args: [{
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], CalendarCommonModule, CalendarWeekModule],
          declarations: [CalendarDayViewComponent],
          exports: [CalendarDayViewComponent]
        }]
      }], null, null);
    })();

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](CalendarModule, {
        imports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule],
        exports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](CalendarModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
        args: [{
          imports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule],
          exports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]
        }]
      }], null, null);
    })();
    /*
     * Public API Surface of angular-calendar
     */

    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=angular-calendar.js.map

    /***/

  },

  /***/
  "./node_modules/angular-calendar/date-adapters/date-fns/index.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/angular-calendar/date-adapters/date-fns/index.js ***!
    \***********************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAngularCalendarDateAdaptersDateFnsIndexJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var tslib_1 = __webpack_require__(
    /*! tslib */
    "./node_modules/angular-calendar/node_modules/tslib/tslib.es6.js");

    var date_fns_1 = __webpack_require__(
    /*! calendar-utils/date-adapters/date-fns */
    "./node_modules/calendar-utils/date-adapters/date-fns/index.js");

    var date_fns_2 = __webpack_require__(
    /*! date-fns */
    "./node_modules/date-fns/esm/index.js");

    function adapterFactory() {
      return tslib_1.__assign(tslib_1.__assign({}, date_fns_1.adapterFactory()), {
        addWeeks: date_fns_2.addWeeks,
        addMonths: date_fns_2.addMonths,
        subDays: date_fns_2.subDays,
        subWeeks: date_fns_2.subWeeks,
        subMonths: date_fns_2.subMonths,
        getISOWeek: date_fns_2.getISOWeek,
        setDate: date_fns_2.setDate,
        setMonth: date_fns_2.setMonth,
        setYear: date_fns_2.setYear,
        getDate: date_fns_2.getDate,
        getYear: date_fns_2.getYear
      });
    }

    exports.adapterFactory = adapterFactory; //# sourceMappingURL=index.js.map

    /***/
  },

  /***/
  "./node_modules/angular-calendar/node_modules/tslib/tslib.es6.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/angular-calendar/node_modules/tslib/tslib.es6.js ***!
    \***********************************************************************/

  /*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */

  /***/
  function node_modulesAngularCalendarNode_modulesTslibTslibEs6Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__extends", function () {
      return __extends;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__assign", function () {
      return _assign;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__rest", function () {
      return __rest;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__decorate", function () {
      return __decorate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__param", function () {
      return __param;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__metadata", function () {
      return __metadata;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__awaiter", function () {
      return __awaiter;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__generator", function () {
      return __generator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__createBinding", function () {
      return __createBinding;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__exportStar", function () {
      return __exportStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__values", function () {
      return __values;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__read", function () {
      return __read;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spread", function () {
      return __spread;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__spreadArrays", function () {
      return __spreadArrays;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__await", function () {
      return __await;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function () {
      return __asyncGenerator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function () {
      return __asyncDelegator;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__asyncValues", function () {
      return __asyncValues;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function () {
      return __makeTemplateObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importStar", function () {
      return __importStar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__importDefault", function () {
      return __importDefault;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function () {
      return __classPrivateFieldGet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function () {
      return __classPrivateFieldSet;
    });
    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.
    
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.
    
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    /* global Reflect, Promise */


    var _extendStatics = function extendStatics(d, b) {
      _extendStatics = Object.setPrototypeOf || {
        __proto__: []
      } instanceof Array && function (d, b) {
        d.__proto__ = b;
      } || function (d, b) {
        for (var p in b) {
          if (b.hasOwnProperty(p)) d[p] = b[p];
        }
      };

      return _extendStatics(d, b);
    };

    function __extends(d, b) {
      _extendStatics(d, b);

      function __() {
        this.constructor = d;
      }

      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var _assign = function __assign() {
      _assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return _assign.apply(this, arguments);
    };

    function __rest(s, e) {
      var t = {};

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      }

      if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
      }
      return t;
    }

    function __decorate(decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    }

    function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function (resolve) {
          resolve(value);
        });
      }

      return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }

        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }

        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }

        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }

    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function sent() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
          f,
          y,
          t,
          g;
      return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
      }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
        return this;
      }), g;

      function verb(n) {
        return function (v) {
          return step([n, v]);
        };
      }

      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");

        while (_) {
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        }

        if (op[0] & 5) throw op[1];
        return {
          value: op[0] ? op[1] : void 0,
          done: true
        };
      }
    }

    function __createBinding(o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    }

    function __exportStar(m, exports) {
      for (var p in m) {
        if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
      }
    }

    function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator,
          m = s && o[s],
          i = 0;
      if (m) return m.call(o);
      if (o && typeof o.length === "number") return {
        next: function next() {
          if (o && i >= o.length) o = void 0;
          return {
            value: o && o[i++],
            done: !o
          };
        }
      };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o),
          r,
          ar = [],
          e;

      try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
          ar.push(r.value);
        }
      } catch (error) {
        e = {
          error: error
        };
      } finally {
        try {
          if (r && !r.done && (m = i["return"])) m.call(i);
        } finally {
          if (e) throw e.error;
        }
      }

      return ar;
    }

    function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++) {
        ar = ar.concat(__read(arguments[i]));
      }

      return ar;
    }

    function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    }

    ;

    function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []),
          i,
          q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i;

      function verb(n) {
        if (g[n]) i[n] = function (v) {
          return new Promise(function (a, b) {
            q.push([n, v, a, b]) > 1 || resume(n, v);
          });
        };
      }

      function resume(n, v) {
        try {
          step(g[n](v));
        } catch (e) {
          settle(q[0][3], e);
        }
      }

      function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
      }

      function fulfill(value) {
        resume("next", value);
      }

      function reject(value) {
        resume("throw", value);
      }

      function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
      }
    }

    function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) {
        throw e;
      }), verb("return"), i[Symbol.iterator] = function () {
        return this;
      }, i;

      function verb(n, f) {
        i[n] = o[n] ? function (v) {
          return (p = !p) ? {
            value: __await(o[n](v)),
            done: n === "return"
          } : f ? f(v) : v;
        } : f;
      }
    }

    function __asyncValues(o) {
      if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator],
          i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
        return this;
      }, i);

      function verb(n) {
        i[n] = o[n] && function (v) {
          return new Promise(function (resolve, reject) {
            v = o[n](v), settle(resolve, reject, v.done, v.value);
          });
        };
      }

      function settle(resolve, reject, d, v) {
        Promise.resolve(v).then(function (v) {
          resolve({
            value: v,
            done: d
          });
        }, reject);
      }
    }

    function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
        Object.defineProperty(cooked, "raw", {
          value: raw
        });
      } else {
        cooked.raw = raw;
      }

      return cooked;
    }

    ;

    function __importStar(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) for (var k in mod) {
        if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
      }
      result["default"] = mod;
      return result;
    }

    function __importDefault(mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
      if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
      }

      return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
      if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
      }

      privateMap.set(receiver, value);
      return value;
    }
    /***/

  },

  /***/
  "./node_modules/angular-draggable-droppable/__ivy_ngcc__/fesm2015/angular-draggable-droppable.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/angular-draggable-droppable/__ivy_ngcc__/fesm2015/angular-draggable-droppable.js ***!
    \*******************************************************************************************************/

  /*! exports provided: DragAndDropModule, ɵc, ɵd, ɵb, ɵa */

  /***/
  function node_modulesAngularDraggableDroppable__ivy_ngcc__Fesm2015AngularDraggableDroppableJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DragAndDropModule", function () {
      return DragAndDropModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵc", function () {
      return DraggableHelper;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵd", function () {
      return DraggableScrollContainerDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵb", function () {
      return DraggableDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ɵa", function () {
      return DroppableDirective;
    });
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _mattlewis92_dom_autoscroller__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @mattlewis92/dom-autoscroller */
    "./node_modules/@mattlewis92/dom-autoscroller/dist/bundle.js");
    /* harmony import */


    var _mattlewis92_dom_autoscroller__WEBPACK_IMPORTED_MODULE_2___default =
    /*#__PURE__*/
    __webpack_require__.n(_mattlewis92_dom_autoscroller__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var DraggableHelper = function DraggableHelper() {
      _classCallCheck(this, DraggableHelper);

      this.currentDrag = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
    };

    DraggableHelper.ɵfac = function DraggableHelper_Factory(t) {
      return new (t || DraggableHelper)();
    };

    DraggableHelper.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({
      token: DraggableHelper,
      factory: DraggableHelper.ɵfac,
      providedIn: 'root'
    });
    /** @nocollapse */

    DraggableHelper.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["defineInjectable"])({
      factory: function DraggableHelper_Factory() {
        return new DraggableHelper();
      },
      token: DraggableHelper,
      providedIn: "root"
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](DraggableHelper, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"],
        args: [{
          providedIn: 'root'
        }]
      }], function () {
        return [];
      }, null);
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * If the window isn't scrollable, then place this on the scrollable container that draggable elements are inside. e.g.
     * ```html
     * <div style="overflow: scroll" mwlDraggableScrollContainer>
     * <div mwlDraggable>Drag me!</div>
     * </div>
     * ```
     */


    var DraggableScrollContainerDirective =
    /**
     * @hidden
     * @param {?} elementRef
     */
    function DraggableScrollContainerDirective(elementRef) {
      _classCallCheck(this, DraggableScrollContainerDirective);

      this.elementRef = elementRef;
      /**
       * Trigger the DragStart after a long touch in scrollable container when true
       * @deprecated will be removed in v5 (use [touchStartLongPress]="{delay: 300, delta: 30}" on the mwlDraggable element instead)
       */

      this.activeLongPressDrag = false;
      /**
       * Configuration of a long touch
       * Duration in ms of a long touch before activating DragStart
       * Delta of the
       * @deprecated will be removed in v5 (use [touchStartLongPress]="{delay: 300, delta: 30}" on the mwlDraggable element instead)
       */

      this.longPressConfig = {
        duration: 300,
        delta: 30
      };
    };

    DraggableScrollContainerDirective.ɵfac = function DraggableScrollContainerDirective_Factory(t) {
      return new (t || DraggableScrollContainerDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]));
    };

    DraggableScrollContainerDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
      type: DraggableScrollContainerDirective,
      selectors: [["", "mwlDraggableScrollContainer", ""]],
      inputs: {
        activeLongPressDrag: "activeLongPressDrag",
        longPressConfig: "longPressConfig"
      }
    });
    /** @nocollapse */

    DraggableScrollContainerDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
      }];
    };

    DraggableScrollContainerDirective.propDecorators = {
      activeLongPressDrag: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      longPressConfig: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }]
    };
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](DraggableScrollContainerDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlDraggableScrollContainer]'
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }];
      }, {
        activeLongPressDrag: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        longPressConfig: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }]
      });
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @param {?} renderer
     * @param {?} element
     * @param {?} classToAdd
     * @return {?}
     */


    function addClass(renderer, element, classToAdd) {
      if (classToAdd) {
        classToAdd.split(' ').forEach(
        /**
        * @param {?} className
        * @return {?}
        */
        function (className) {
          return renderer.addClass(element.nativeElement, className);
        });
      }
    }
    /**
     * @param {?} renderer
     * @param {?} element
     * @param {?} classToRemove
     * @return {?}
     */


    function removeClass(renderer, element, classToRemove) {
      if (classToRemove) {
        classToRemove.split(' ').forEach(
        /**
        * @param {?} className
        * @return {?}
        */
        function (className) {
          return renderer.removeClass(element.nativeElement, className);
        });
      }
    }
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var DraggableDirective =
    /*#__PURE__*/
    function () {
      /**
       * @hidden
       * @param {?} element
       * @param {?} renderer
       * @param {?} draggableHelper
       * @param {?} zone
       * @param {?} vcr
       * @param {?} scrollContainer
       * @param {?} document
       */
      function DraggableDirective(element, renderer, draggableHelper, zone, vcr, scrollContainer, document) {
        _classCallCheck(this, DraggableDirective);

        this.element = element;
        this.renderer = renderer;
        this.draggableHelper = draggableHelper;
        this.zone = zone;
        this.vcr = vcr;
        this.scrollContainer = scrollContainer;
        this.document = document;
        /**
         * The axis along which the element is draggable
         */

        this.dragAxis = {
          x: true,
          y: true
        };
        /**
         * Snap all drags to an x / y grid
         */

        this.dragSnapGrid = {};
        /**
         * Show a ghost element that shows the drag when dragging
         */

        this.ghostDragEnabled = true;
        /**
         * Show the original element when ghostDragEnabled is true
         */

        this.showOriginalElementWhileDragging = false;
        /**
         * The cursor to use when hovering over a draggable element
         */

        this.dragCursor = '';
        /**
         * Called when the element can be dragged along one axis and has the mouse or pointer device pressed on it
         */

        this.dragPointerDown = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called when the element has started to be dragged.
         * Only called after at least one mouse or touch move event.
         * If you call $event.cancelDrag$.emit() it will cancel the current drag
         */

        this.dragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called after the ghost element has been created
         */

        this.ghostElementCreated = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called when the element is being dragged
         */

        this.dragging = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called after the element is dragged
         */

        this.dragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * @hidden
         */

        this.pointerDown$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        /**
         * @hidden
         */

        this.pointerMove$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        /**
         * @hidden
         */

        this.pointerUp$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.eventListenerSubscriptions = {};
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.timeLongPress = {
          timerBegin: 0,
          timerEnd: 0
        };
      }
      /**
       * @return {?}
       */


      _createClass(DraggableDirective, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this14 = this;

          this.checkEventListeners();
          /** @type {?} */

          var pointerDragged$ = this.pointerDown$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
          /**
          * @return {?}
          */
          function () {
            return _this14.canDrag();
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["mergeMap"])(
          /**
          * @param {?} pointerDownEvent
          * @return {?}
          */
          function (pointerDownEvent) {
            // fix for https://github.com/mattlewis92/angular-draggable-droppable/issues/61
            // stop mouse events propagating up the chain
            if (pointerDownEvent.event.stopPropagation && !_this14.scrollContainer) {
              pointerDownEvent.event.stopPropagation();
            } // hack to prevent text getting selected in safari while dragging

            /** @type {?} */


            var globalDragStyle = _this14.renderer.createElement('style');

            _this14.renderer.setAttribute(globalDragStyle, 'type', 'text/css');

            _this14.renderer.appendChild(globalDragStyle, _this14.renderer.createText("\n          body * {\n           -moz-user-select: none;\n           -ms-user-select: none;\n           -webkit-user-select: none;\n           user-select: none;\n          }\n        "));

            _this14.document.head.appendChild(globalDragStyle);
            /** @type {?} */


            var startScrollPosition = _this14.getScrollPosition();
            /** @type {?} */


            var scrollContainerScroll$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Observable"](
            /**
            * @param {?} observer
            * @return {?}
            */
            function (observer) {
              /** @type {?} */
              var scrollContainer = _this14.scrollContainer ? _this14.scrollContainer.elementRef.nativeElement : 'window';
              return _this14.renderer.listen(scrollContainer, 'scroll',
              /**
              * @param {?} e
              * @return {?}
              */
              function (e) {
                return observer.next(e);
              });
            }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["startWith"])(startScrollPosition), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @return {?}
            */
            function () {
              return _this14.getScrollPosition();
            }));
            /** @type {?} */

            var currentDrag$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
            /** @type {?} */

            var cancelDrag$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__["ReplaySubject"]();

            _this14.zone.run(
            /**
            * @return {?}
            */
            function () {
              _this14.dragPointerDown.next({
                x: 0,
                y: 0
              });
            });
            /** @type {?} */


            var dragComplete$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["merge"])(_this14.pointerUp$, _this14.pointerDown$, cancelDrag$, _this14.destroy$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
            /** @type {?} */

            var pointerMove = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["combineLatest"])([_this14.pointerMove$, scrollContainerScroll$]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref40) {
              var _ref41 = _slicedToArray(_ref40, 2),
                  pointerMoveEvent = _ref41[0],
                  scroll = _ref41[1];

              return {
                currentDrag$: currentDrag$,
                transformX: pointerMoveEvent.clientX - pointerDownEvent.clientX,
                transformY: pointerMoveEvent.clientY - pointerDownEvent.clientY,
                clientX: pointerMoveEvent.clientX,
                clientY: pointerMoveEvent.clientY,
                scrollLeft: scroll.left,
                scrollTop: scroll.top
              };
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} moveData
            * @return {?}
            */
            function (moveData) {
              if (_this14.dragSnapGrid.x) {
                moveData.transformX = Math.round(moveData.transformX / _this14.dragSnapGrid.x) * _this14.dragSnapGrid.x;
              }

              if (_this14.dragSnapGrid.y) {
                moveData.transformY = Math.round(moveData.transformY / _this14.dragSnapGrid.y) * _this14.dragSnapGrid.y;
              }

              return moveData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} moveData
            * @return {?}
            */
            function (moveData) {
              if (!_this14.dragAxis.x) {
                moveData.transformX = 0;
              }

              if (!_this14.dragAxis.y) {
                moveData.transformY = 0;
              }

              return moveData;
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} moveData
            * @return {?}
            */
            function (moveData) {
              /** @type {?} */
              var scrollX = moveData.scrollLeft - startScrollPosition.left;
              /** @type {?} */

              var scrollY = moveData.scrollTop - startScrollPosition.top;
              return Object.assign({}, moveData, {
                x: moveData.transformX + scrollX,
                y: moveData.transformY + scrollY
              });
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref42) {
              var x = _ref42.x,
                  y = _ref42.y,
                  transformX = _ref42.transformX,
                  transformY = _ref42.transformY;
              return !_this14.validateDrag || _this14.validateDrag({
                x: x,
                y: y,
                transform: {
                  x: transformX,
                  y: transformY
                }
              });
            }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(dragComplete$), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
            /** @type {?} */

            var dragStarted$ = pointerMove.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
            /** @type {?} */

            var dragEnded$ = pointerMove.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeLast"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
            dragStarted$.subscribe(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref43) {
              var clientX = _ref43.clientX,
                  clientY = _ref43.clientY,
                  x = _ref43.x,
                  y = _ref43.y;

              _this14.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this14.dragStart.next({
                  cancelDrag$: cancelDrag$
                });
              });

              _this14.scroller = _mattlewis92_dom_autoscroller__WEBPACK_IMPORTED_MODULE_2___default()([_this14.scrollContainer ? _this14.scrollContainer.elementRef.nativeElement : _this14.document.defaultView], {
                margin: 20,

                /**
                 * @return {?}
                 */
                autoScroll: function autoScroll() {
                  return true;
                }
              });
              addClass(_this14.renderer, _this14.element, _this14.dragActiveClass);

              if (_this14.ghostDragEnabled) {
                /** @type {?} */
                var rect = _this14.element.nativeElement.getBoundingClientRect();
                /** @type {?} */


                var clone =
                /** @type {?} */
                _this14.element.nativeElement.cloneNode(true);

                if (!_this14.showOriginalElementWhileDragging) {
                  _this14.renderer.setStyle(_this14.element.nativeElement, 'visibility', 'hidden');
                }

                if (_this14.ghostElementAppendTo) {
                  _this14.ghostElementAppendTo.appendChild(clone);
                } else {
                  /** @type {?} */
                  _this14.element.nativeElement.parentNode.insertBefore(clone, _this14.element.nativeElement.nextSibling);
                }

                _this14.ghostElement = clone;
                _this14.document.body.style.cursor = _this14.dragCursor;

                _this14.setElementStyles(clone, {
                  position: 'fixed',
                  top: "".concat(rect.top, "px"),
                  left: "".concat(rect.left, "px"),
                  width: "".concat(rect.width, "px"),
                  height: "".concat(rect.height, "px"),
                  cursor: _this14.dragCursor,
                  margin: '0',
                  willChange: 'transform',
                  pointerEvents: 'none'
                });

                if (_this14.ghostElementTemplate) {
                  /** @type {?} */
                  var viewRef = _this14.vcr.createEmbeddedView(_this14.ghostElementTemplate);

                  clone.innerHTML = '';
                  viewRef.rootNodes.filter(
                  /**
                  * @param {?} node
                  * @return {?}
                  */
                  function (node) {
                    return node instanceof Node;
                  }).forEach(
                  /**
                  * @param {?} node
                  * @return {?}
                  */
                  function (node) {
                    clone.appendChild(node);
                  });
                  dragEnded$.subscribe(
                  /**
                  * @return {?}
                  */
                  function () {
                    _this14.vcr.remove(_this14.vcr.indexOf(viewRef));
                  });
                }

                _this14.zone.run(
                /**
                * @return {?}
                */
                function () {
                  _this14.ghostElementCreated.emit({
                    clientX: clientX - x,
                    clientY: clientY - y,
                    element: clone
                  });
                });

                dragEnded$.subscribe(
                /**
                * @return {?}
                */
                function () {
                  /** @type {?} */
                  clone.parentElement.removeChild(clone);
                  _this14.ghostElement = null;

                  _this14.renderer.setStyle(_this14.element.nativeElement, 'visibility', '');
                });
              }

              _this14.draggableHelper.currentDrag.next(currentDrag$);
            });
            dragEnded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["mergeMap"])(
            /**
            * @param {?} dragEndData
            * @return {?}
            */
            function (dragEndData) {
              /** @type {?} */
              var dragEndData$ = cancelDrag$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["count"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
              /**
              * @param {?} calledCount
              * @return {?}
              */
              function (calledCount) {
                return Object.assign({}, dragEndData, {
                  dragCancelled: calledCount > 0
                });
              }));
              cancelDrag$.complete();
              return dragEndData$;
            })).subscribe(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref44) {
              var x = _ref44.x,
                  y = _ref44.y,
                  dragCancelled = _ref44.dragCancelled;

              _this14.scroller.destroy();

              _this14.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this14.dragEnd.next({
                  x: x,
                  y: y,
                  dragCancelled: dragCancelled
                });
              });

              removeClass(_this14.renderer, _this14.element, _this14.dragActiveClass);
              currentDrag$.complete();
            });
            Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["merge"])(dragComplete$, dragEnded$).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1)).subscribe(
            /**
            * @return {?}
            */
            function () {
              _this14.document.head.removeChild(globalDragStyle);
            });
            return pointerMove;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["share"])());
          Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["merge"])(pointerDragged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
          /**
          * @param {?} value
          * @return {?}
          */
          function (value) {
            return [, value];
          })), pointerDragged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["pairwise"])())).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
          /**
          * @param {?} __0
          * @return {?}
          */
          function (_ref45) {
            var _ref46 = _slicedToArray(_ref45, 2),
                previous = _ref46[0],
                next = _ref46[1];

            if (!previous) {
              return true;
            }

            return previous.x !== next.x || previous.y !== next.y;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
          /**
          * @param {?} __0
          * @return {?}
          */
          function (_ref47) {
            var _ref48 = _slicedToArray(_ref47, 2),
                previous = _ref48[0],
                next = _ref48[1];

            return next;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["auditTime"])(0, rxjs__WEBPACK_IMPORTED_MODULE_0__["animationFrameScheduler"])).subscribe(
          /**
          * @param {?} __0
          * @return {?}
          */
          function (_ref49) {
            var x = _ref49.x,
                y = _ref49.y,
                currentDrag$ = _ref49.currentDrag$,
                clientX = _ref49.clientX,
                clientY = _ref49.clientY,
                transformX = _ref49.transformX,
                transformY = _ref49.transformY;

            _this14.zone.run(
            /**
            * @return {?}
            */
            function () {
              _this14.dragging.next({
                x: x,
                y: y
              });
            });

            if (_this14.ghostElement) {
              /** @type {?} */
              var transform = "translate3d(".concat(transformX, "px, ").concat(transformY, "px, 0px)");

              _this14.setElementStyles(_this14.ghostElement, {
                transform: transform,
                '-webkit-transform': transform,
                '-ms-transform': transform,
                '-moz-transform': transform,
                '-o-transform': transform
              });
            }

            currentDrag$.next({
              clientX: clientX,
              clientY: clientY,
              dropData: _this14.dropData
            });
          });
        }
        /**
         * @param {?} changes
         * @return {?}
         */

      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          if (changes.dragAxis) {
            this.checkEventListeners();
          }
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unsubscribeEventListeners();
          this.pointerDown$.complete();
          this.pointerMove$.complete();
          this.pointerUp$.complete();
          this.destroy$.next();
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "checkEventListeners",
        value: function checkEventListeners() {
          var _this15 = this;

          /** @type {?} */
          var canDrag = this.canDrag();
          /** @type {?} */

          var hasEventListeners = Object.keys(this.eventListenerSubscriptions).length > 0;

          if (canDrag && !hasEventListeners) {
            this.zone.runOutsideAngular(
            /**
            * @return {?}
            */
            function () {
              _this15.eventListenerSubscriptions.mousedown = _this15.renderer.listen(_this15.element.nativeElement, 'mousedown',
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                _this15.onMouseDown(event);
              });
              _this15.eventListenerSubscriptions.mouseup = _this15.renderer.listen('document', 'mouseup',
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                _this15.onMouseUp(event);
              });
              _this15.eventListenerSubscriptions.touchstart = _this15.renderer.listen(_this15.element.nativeElement, 'touchstart',
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                _this15.onTouchStart(event);
              });
              _this15.eventListenerSubscriptions.touchend = _this15.renderer.listen('document', 'touchend',
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                _this15.onTouchEnd(event);
              });
              _this15.eventListenerSubscriptions.touchcancel = _this15.renderer.listen('document', 'touchcancel',
              /**
              * @param {?} event
              * @return {?}
              */
              function (event) {
                _this15.onTouchEnd(event);
              });
              _this15.eventListenerSubscriptions.mouseenter = _this15.renderer.listen(_this15.element.nativeElement, 'mouseenter',
              /**
              * @return {?}
              */
              function () {
                _this15.onMouseEnter();
              });
              _this15.eventListenerSubscriptions.mouseleave = _this15.renderer.listen(_this15.element.nativeElement, 'mouseleave',
              /**
              * @return {?}
              */
              function () {
                _this15.onMouseLeave();
              });
            });
          } else if (!canDrag && hasEventListeners) {
            this.unsubscribeEventListeners();
          }
        }
        /**
         * @private
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "onMouseDown",
        value: function onMouseDown(event) {
          var _this16 = this;

          if (event.button === 0) {
            if (!this.eventListenerSubscriptions.mousemove) {
              this.eventListenerSubscriptions.mousemove = this.renderer.listen('document', 'mousemove',
              /**
              * @param {?} mouseMoveEvent
              * @return {?}
              */
              function (mouseMoveEvent) {
                _this16.pointerMove$.next({
                  event: mouseMoveEvent,
                  clientX: mouseMoveEvent.clientX,
                  clientY: mouseMoveEvent.clientY
                });
              });
            }

            this.pointerDown$.next({
              event: event,
              clientX: event.clientX,
              clientY: event.clientY
            });
          }
        }
        /**
         * @private
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "onMouseUp",
        value: function onMouseUp(event) {
          if (event.button === 0) {
            if (this.eventListenerSubscriptions.mousemove) {
              this.eventListenerSubscriptions.mousemove();
              delete this.eventListenerSubscriptions.mousemove;
            }

            this.pointerUp$.next({
              event: event,
              clientX: event.clientX,
              clientY: event.clientY
            });
          }
        }
        /**
         * @private
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "onTouchStart",
        value: function onTouchStart(event) {
          var _this17 = this;

          /** @type {?} */
          var startScrollPosition;
          /** @type {?} */

          var isDragActivated;
          /** @type {?} */

          var hasContainerScrollbar;

          if (this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) {
            this.timeLongPress.timerBegin = Date.now();
            isDragActivated = false;
            hasContainerScrollbar = this.hasScrollbar();
            startScrollPosition = this.getScrollPosition();
          }

          if (!this.eventListenerSubscriptions.touchmove) {
            /** @type {?} */
            var contextMenuListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["fromEvent"])(this.document, 'contextmenu').subscribe(
            /**
            * @param {?} e
            * @return {?}
            */
            function (e) {
              e.preventDefault();
            });
            /** @type {?} */

            var touchMoveListener = Object(rxjs__WEBPACK_IMPORTED_MODULE_0__["fromEvent"])(this.document, 'touchmove', {
              passive: false
            }).subscribe(
            /**
            * @param {?} touchMoveEvent
            * @return {?}
            */
            function (touchMoveEvent) {
              if ((_this17.scrollContainer && _this17.scrollContainer.activeLongPressDrag || _this17.touchStartLongPress) && !isDragActivated && hasContainerScrollbar) {
                isDragActivated = _this17.shouldBeginDrag(event, touchMoveEvent, startScrollPosition);
              }

              if ((!_this17.scrollContainer || !_this17.scrollContainer.activeLongPressDrag) && !_this17.touchStartLongPress || !hasContainerScrollbar || isDragActivated) {
                touchMoveEvent.preventDefault();

                _this17.pointerMove$.next({
                  event: touchMoveEvent,
                  clientX: touchMoveEvent.targetTouches[0].clientX,
                  clientY: touchMoveEvent.targetTouches[0].clientY
                });
              }
            });

            this.eventListenerSubscriptions.touchmove =
            /**
            * @return {?}
            */
            function () {
              contextMenuListener.unsubscribe();
              touchMoveListener.unsubscribe();
            };
          }

          this.pointerDown$.next({
            event: event,
            clientX: event.touches[0].clientX,
            clientY: event.touches[0].clientY
          });
        }
        /**
         * @private
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "onTouchEnd",
        value: function onTouchEnd(event) {
          if (this.eventListenerSubscriptions.touchmove) {
            this.eventListenerSubscriptions.touchmove();
            delete this.eventListenerSubscriptions.touchmove;

            if (this.scrollContainer && this.scrollContainer.activeLongPressDrag || this.touchStartLongPress) {
              this.enableScroll();
            }
          }

          this.pointerUp$.next({
            event: event,
            clientX: event.changedTouches[0].clientX,
            clientY: event.changedTouches[0].clientY
          });
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "onMouseEnter",
        value: function onMouseEnter() {
          this.setCursor(this.dragCursor);
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "onMouseLeave",
        value: function onMouseLeave() {
          this.setCursor('');
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "canDrag",
        value: function canDrag() {
          return this.dragAxis.x || this.dragAxis.y;
        }
        /**
         * @private
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "setCursor",
        value: function setCursor(value) {
          if (!this.eventListenerSubscriptions.mousemove) {
            this.renderer.setStyle(this.element.nativeElement, 'cursor', value);
          }
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "unsubscribeEventListeners",
        value: function unsubscribeEventListeners() {
          var _this18 = this;

          Object.keys(this.eventListenerSubscriptions).forEach(
          /**
          * @param {?} type
          * @return {?}
          */
          function (type) {
            /** @type {?} */
            _this18.eventListenerSubscriptions[type]();

            delete
            /** @type {?} */
            _this18.eventListenerSubscriptions[type];
          });
        }
        /**
         * @private
         * @param {?} element
         * @param {?} styles
         * @return {?}
         */

      }, {
        key: "setElementStyles",
        value: function setElementStyles(element, styles) {
          var _this19 = this;

          Object.keys(styles).forEach(
          /**
          * @param {?} key
          * @return {?}
          */
          function (key) {
            _this19.renderer.setStyle(element, key, styles[key]);
          });
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "getScrollElement",
        value: function getScrollElement() {
          if (this.scrollContainer) {
            return this.scrollContainer.elementRef.nativeElement;
          } else {
            return this.document.body;
          }
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "getScrollPosition",
        value: function getScrollPosition() {
          if (this.scrollContainer) {
            return {
              top: this.scrollContainer.elementRef.nativeElement.scrollTop,
              left: this.scrollContainer.elementRef.nativeElement.scrollLeft
            };
          } else {
            return {
              top: window.pageYOffset || this.document.documentElement.scrollTop,
              left: window.pageXOffset || this.document.documentElement.scrollLeft
            };
          }
        }
        /**
         * @private
         * @param {?} event
         * @param {?} touchMoveEvent
         * @param {?} startScrollPosition
         * @return {?}
         */

      }, {
        key: "shouldBeginDrag",
        value: function shouldBeginDrag(event, touchMoveEvent, startScrollPosition) {
          /** @type {?} */
          var moveScrollPosition = this.getScrollPosition();
          /** @type {?} */

          var deltaScroll = {
            top: Math.abs(moveScrollPosition.top - startScrollPosition.top),
            left: Math.abs(moveScrollPosition.left - startScrollPosition.left)
          };
          /** @type {?} */

          var deltaX = Math.abs(touchMoveEvent.targetTouches[0].clientX - event.touches[0].clientX) - deltaScroll.left;
          /** @type {?} */

          var deltaY = Math.abs(touchMoveEvent.targetTouches[0].clientY - event.touches[0].clientY) - deltaScroll.top;
          /** @type {?} */

          var deltaTotal = deltaX + deltaY;
          /** @type {?} */

          var longPressConfig = this.touchStartLongPress ? this.touchStartLongPress :
          /* istanbul ignore next */
          {
            delta: this.scrollContainer.longPressConfig.delta,
            delay: this.scrollContainer.longPressConfig.duration
          };

          if (deltaTotal > longPressConfig.delta || deltaScroll.top > 0 || deltaScroll.left > 0) {
            this.timeLongPress.timerBegin = Date.now();
          }

          this.timeLongPress.timerEnd = Date.now();
          /** @type {?} */

          var duration = this.timeLongPress.timerEnd - this.timeLongPress.timerBegin;

          if (duration >= longPressConfig.delay) {
            this.disableScroll();
            return true;
          }

          return false;
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "enableScroll",
        value: function enableScroll() {
          if (this.scrollContainer) {
            this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', '');
          }

          this.renderer.setStyle(this.document.body, 'overflow', '');
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "disableScroll",
        value: function disableScroll() {
          /* istanbul ignore next */
          if (this.scrollContainer) {
            this.renderer.setStyle(this.scrollContainer.elementRef.nativeElement, 'overflow', 'hidden');
          }

          this.renderer.setStyle(this.document.body, 'overflow', 'hidden');
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "hasScrollbar",
        value: function hasScrollbar() {
          /** @type {?} */
          var scrollContainer = this.getScrollElement();
          /** @type {?} */

          var containerHasHorizontalScroll = scrollContainer.scrollWidth > scrollContainer.clientWidth;
          /** @type {?} */

          var containerHasVerticalScroll = scrollContainer.scrollHeight > scrollContainer.clientHeight;
          return containerHasHorizontalScroll || containerHasVerticalScroll;
        }
      }]);

      return DraggableDirective;
    }();

    DraggableDirective.ɵfac = function DraggableDirective_Factory(t) {
      return new (t || DraggableDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](DraggableHelper), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](DraggableScrollContainerDirective, 8), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]));
    };

    DraggableDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
      type: DraggableDirective,
      selectors: [["", "mwlDraggable", ""]],
      inputs: {
        dragAxis: "dragAxis",
        dragSnapGrid: "dragSnapGrid",
        ghostDragEnabled: "ghostDragEnabled",
        showOriginalElementWhileDragging: "showOriginalElementWhileDragging",
        dragCursor: "dragCursor",
        dropData: "dropData",
        validateDrag: "validateDrag",
        dragActiveClass: "dragActiveClass",
        ghostElementAppendTo: "ghostElementAppendTo",
        ghostElementTemplate: "ghostElementTemplate",
        touchStartLongPress: "touchStartLongPress"
      },
      outputs: {
        dragPointerDown: "dragPointerDown",
        dragStart: "dragStart",
        ghostElementCreated: "ghostElementCreated",
        dragging: "dragging",
        dragEnd: "dragEnd"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵNgOnChangesFeature"]]
    });
    /** @nocollapse */

    DraggableDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
      }, {
        type: DraggableHelper
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewContainerRef"]
      }, {
        type: DraggableScrollContainerDirective,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
        }]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
        }]
      }];
    };

    DraggableDirective.propDecorators = {
      dropData: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragAxis: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragSnapGrid: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      ghostDragEnabled: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      showOriginalElementWhileDragging: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      validateDrag: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragCursor: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragActiveClass: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      ghostElementAppendTo: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      ghostElementTemplate: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      touchStartLongPress: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragPointerDown: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      dragStart: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      ghostElementCreated: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      dragging: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      dragEnd: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }]
    };
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](DraggableDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlDraggable]'
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: DraggableHelper
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewContainerRef"]
        }, {
          type: DraggableScrollContainerDirective,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
          }]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
            args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
          }]
        }];
      }, {
        dragAxis: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragSnapGrid: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostDragEnabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        showOriginalElementWhileDragging: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragCursor: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragPointerDown: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        ghostElementCreated: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragging: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dropData: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        validateDrag: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragActiveClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostElementAppendTo: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostElementTemplate: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        touchStartLongPress: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }]
      });
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @param {?} clientX
     * @param {?} clientY
     * @param {?} rect
     * @return {?}
     */


    function isCoordinateWithinRectangle(clientX, clientY, rect) {
      return clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;
    }

    var DroppableDirective =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} element
       * @param {?} draggableHelper
       * @param {?} zone
       * @param {?} renderer
       * @param {?} scrollContainer
       */
      function DroppableDirective(element, draggableHelper, zone, renderer, scrollContainer) {
        _classCallCheck(this, DroppableDirective);

        this.element = element;
        this.draggableHelper = draggableHelper;
        this.zone = zone;
        this.renderer = renderer;
        this.scrollContainer = scrollContainer;
        /**
         * Called when a draggable element starts overlapping the element
         */

        this.dragEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called when a draggable element stops overlapping the element
         */

        this.dragLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called when a draggable element is moved over the element
         */

        this.dragOver = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called when a draggable element is dropped on this element
         */

        this.drop = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"](); // tslint:disable-line no-output-named-after-standard-event
      }
      /**
       * @return {?}
       */


      _createClass(DroppableDirective, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this20 = this;

          this.currentDragSubscription = this.draggableHelper.currentDrag.subscribe(
          /**
          * @param {?} drag$
          * @return {?}
          */
          function (drag$) {
            addClass(_this20.renderer, _this20.element, _this20.dragActiveClass);
            /** @type {?} */

            var droppableElement = {
              updateCache: true
            };
            /** @type {?} */

            var deregisterScrollListener = _this20.renderer.listen(_this20.scrollContainer ? _this20.scrollContainer.elementRef.nativeElement : 'window', 'scroll',
            /**
            * @return {?}
            */
            function () {
              droppableElement.updateCache = true;
            });
            /** @type {?} */


            var currentDragDropData;
            /** @type {?} */

            var overlaps$ = drag$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref50) {
              var clientX = _ref50.clientX,
                  clientY = _ref50.clientY,
                  dropData = _ref50.dropData;
              currentDragDropData = dropData;

              if (droppableElement.updateCache) {
                droppableElement.rect = _this20.element.nativeElement.getBoundingClientRect();

                if (_this20.scrollContainer) {
                  droppableElement.scrollContainerRect = _this20.scrollContainer.elementRef.nativeElement.getBoundingClientRect();
                }

                droppableElement.updateCache = false;
              }
              /** @type {?} */


              var isWithinElement = isCoordinateWithinRectangle(clientX, clientY,
              /** @type {?} */
              droppableElement.rect);

              if (droppableElement.scrollContainerRect) {
                return isWithinElement && isCoordinateWithinRectangle(clientX, clientY,
                /** @type {?} */
                droppableElement.scrollContainerRect);
              } else {
                return isWithinElement;
              }
            }));
            /** @type {?} */

            var overlapsChanged$ = overlaps$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["distinctUntilChanged"])());
            /** @type {?} */

            var dragOverActive;
            overlapsChanged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
            /**
            * @param {?} overlapsNow
            * @return {?}
            */
            function (overlapsNow) {
              return overlapsNow;
            })).subscribe(
            /**
            * @return {?}
            */
            function () {
              dragOverActive = true;
              addClass(_this20.renderer, _this20.element, _this20.dragOverClass);

              _this20.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this20.dragEnter.next({
                  dropData: currentDragDropData
                });
              });
            });
            overlaps$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
            /**
            * @param {?} overlapsNow
            * @return {?}
            */
            function (overlapsNow) {
              return overlapsNow;
            })).subscribe(
            /**
            * @return {?}
            */
            function () {
              _this20.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this20.dragOver.next({
                  dropData: currentDragDropData
                });
              });
            });
            overlapsChanged$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["pairwise"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(
            /**
            * @param {?} __0
            * @return {?}
            */
            function (_ref51) {
              var _ref52 = _slicedToArray(_ref51, 2),
                  didOverlap = _ref52[0],
                  overlapsNow = _ref52[1];

              return didOverlap && !overlapsNow;
            })).subscribe(
            /**
            * @return {?}
            */
            function () {
              dragOverActive = false;
              removeClass(_this20.renderer, _this20.element, _this20.dragOverClass);

              _this20.zone.run(
              /**
              * @return {?}
              */
              function () {
                _this20.dragLeave.next({
                  dropData: currentDragDropData
                });
              });
            });
            drag$.subscribe({
              complete:
              /**
              * @return {?}
              */
              function complete() {
                deregisterScrollListener();
                removeClass(_this20.renderer, _this20.element, _this20.dragActiveClass);

                if (dragOverActive) {
                  removeClass(_this20.renderer, _this20.element, _this20.dragOverClass);

                  _this20.zone.run(
                  /**
                  * @return {?}
                  */
                  function () {
                    _this20.drop.next({
                      dropData: currentDragDropData
                    });
                  });
                }
              }
            });
          });
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.currentDragSubscription) {
            this.currentDragSubscription.unsubscribe();
          }
        }
      }]);

      return DroppableDirective;
    }();

    DroppableDirective.ɵfac = function DroppableDirective_Factory(t) {
      return new (t || DroppableDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](DraggableHelper), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](DraggableScrollContainerDirective, 8));
    };

    DroppableDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
      type: DroppableDirective,
      selectors: [["", "mwlDroppable", ""]],
      inputs: {
        dragOverClass: "dragOverClass",
        dragActiveClass: "dragActiveClass"
      },
      outputs: {
        dragEnter: "dragEnter",
        dragLeave: "dragLeave",
        dragOver: "dragOver",
        drop: "drop"
      }
    });
    /** @nocollapse */

    DroppableDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
      }, {
        type: DraggableHelper
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
      }, {
        type: DraggableScrollContainerDirective,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
        }]
      }];
    };

    DroppableDirective.propDecorators = {
      dragOverClass: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragActiveClass: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      dragEnter: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      dragLeave: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      dragOver: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      drop: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }]
    };
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](DroppableDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlDroppable]'
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: DraggableHelper
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: DraggableScrollContainerDirective,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
          }]
        }];
      }, {
        dragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragLeave: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragOver: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        drop: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        dragOverClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        dragActiveClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }]
      });
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var DragAndDropModule = function DragAndDropModule() {
      _classCallCheck(this, DragAndDropModule);
    };

    DragAndDropModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({
      type: DragAndDropModule
    });
    DragAndDropModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({
      factory: function DragAndDropModule_Factory(t) {
        return new (t || DragAndDropModule)();
      }
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](DragAndDropModule, {
        declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],
        exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](DragAndDropModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
        args: [{
          declarations: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective],
          exports: [DraggableDirective, DroppableDirective, DraggableScrollContainerDirective]
        }]
      }], null, null);
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    //# sourceMappingURL=angular-draggable-droppable.js.map

    /***/

  },

  /***/
  "./node_modules/angular-resizable-element/__ivy_ngcc__/fesm2015/angular-resizable-element.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/angular-resizable-element/__ivy_ngcc__/fesm2015/angular-resizable-element.js ***!
    \***************************************************************************************************/

  /*! exports provided: ResizableDirective, ResizeHandleDirective, ResizableModule */

  /***/
  function node_modulesAngularResizableElement__ivy_ngcc__Fesm2015AngularResizableElementJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResizableDirective", function () {
      return ResizableDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResizeHandleDirective", function () {
      return ResizeHandleDirective;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ResizableModule", function () {
      return ResizableModule;
    });
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @param {?} value1
     * @param {?} value2
     * @param {?=} precision
     * @return {?}
     */


    function isNumberCloseTo(value1, value2) {
      var precision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;

      /** @type {?} */
      var diff = Math.abs(value1 - value2);
      return diff < precision;
    }
    /**
     * @param {?} startingRect
     * @param {?} edges
     * @param {?} clientX
     * @param {?} clientY
     * @return {?}
     */


    function getNewBoundingRectangle(startingRect, edges, clientX, clientY) {
      /** @type {?} */
      var newBoundingRect = {
        top: startingRect.top,
        bottom: startingRect.bottom,
        left: startingRect.left,
        right: startingRect.right
      };

      if (edges.top) {
        newBoundingRect.top += clientY;
      }

      if (edges.bottom) {
        newBoundingRect.bottom += clientY;
      }

      if (edges.left) {
        newBoundingRect.left += clientX;
      }

      if (edges.right) {
        newBoundingRect.right += clientX;
      }

      newBoundingRect.height = newBoundingRect.bottom - newBoundingRect.top;
      newBoundingRect.width = newBoundingRect.right - newBoundingRect.left;
      return newBoundingRect;
    }
    /**
     * @param {?} element
     * @param {?} ghostElementPositioning
     * @return {?}
     */


    function getElementRect(element, ghostElementPositioning) {
      /** @type {?} */
      var translateX = 0;
      /** @type {?} */

      var translateY = 0;
      /** @type {?} */

      var style = element.nativeElement.style;
      /** @type {?} */

      var transformProperties = ['transform', '-ms-transform', '-moz-transform', '-o-transform'];
      /** @type {?} */

      var transform = transformProperties.map(function (property) {
        return style[property];
      }).find(function (value) {
        return !!value;
      });

      if (transform && transform.includes('translate')) {
        translateX = transform.replace(/.*translate\((.*)px, (.*)px\).*/, '$1');
        translateY = transform.replace(/.*translate\((.*)px, (.*)px\).*/, '$2');
      }

      if (ghostElementPositioning === 'absolute') {
        return {
          height: element.nativeElement.offsetHeight,
          width: element.nativeElement.offsetWidth,
          top: element.nativeElement.offsetTop - translateY,
          bottom: element.nativeElement.offsetHeight + element.nativeElement.offsetTop - translateY,
          left: element.nativeElement.offsetLeft - translateX,
          right: element.nativeElement.offsetWidth + element.nativeElement.offsetLeft - translateX
        };
      } else {
        /** @type {?} */
        var boundingRect = element.nativeElement.getBoundingClientRect();
        return {
          height: boundingRect.height,
          width: boundingRect.width,
          top: boundingRect.top - translateY,
          bottom: boundingRect.bottom - translateY,
          left: boundingRect.left - translateX,
          right: boundingRect.right - translateX,
          scrollTop: element.nativeElement.scrollTop,
          scrollLeft: element.nativeElement.scrollLeft
        };
      }
    }
    /**
     * @param {?} __0
     * @return {?}
     */


    function isWithinBoundingY(_ref53) {
      var clientY = _ref53.clientY,
          rect = _ref53.rect;
      return clientY >= rect.top && clientY <= rect.bottom;
    }
    /**
     * @param {?} __0
     * @return {?}
     */


    function isWithinBoundingX(_ref54) {
      var clientX = _ref54.clientX,
          rect = _ref54.rect;
      return clientX >= rect.left && clientX <= rect.right;
    }
    /**
     * @param {?} __0
     * @return {?}
     */


    function getResizeEdges(_ref55) {
      var clientX = _ref55.clientX,
          clientY = _ref55.clientY,
          elm = _ref55.elm,
          allowedEdges = _ref55.allowedEdges,
          cursorPrecision = _ref55.cursorPrecision;

      /** @type {?} */
      var elmPosition = elm.nativeElement.getBoundingClientRect();
      /** @type {?} */

      var edges = {};

      if (allowedEdges.left && isNumberCloseTo(clientX, elmPosition.left, cursorPrecision) && isWithinBoundingY({
        clientY: clientY,
        rect: elmPosition
      })) {
        edges.left = true;
      }

      if (allowedEdges.right && isNumberCloseTo(clientX, elmPosition.right, cursorPrecision) && isWithinBoundingY({
        clientY: clientY,
        rect: elmPosition
      })) {
        edges.right = true;
      }

      if (allowedEdges.top && isNumberCloseTo(clientY, elmPosition.top, cursorPrecision) && isWithinBoundingX({
        clientX: clientX,
        rect: elmPosition
      })) {
        edges.top = true;
      }

      if (allowedEdges.bottom && isNumberCloseTo(clientY, elmPosition.bottom, cursorPrecision) && isWithinBoundingX({
        clientX: clientX,
        rect: elmPosition
      })) {
        edges.bottom = true;
      }

      return edges;
    }
    /** @type {?} */


    var DEFAULT_RESIZE_CURSORS = Object.freeze({
      topLeft: 'nw-resize',
      topRight: 'ne-resize',
      bottomLeft: 'sw-resize',
      bottomRight: 'se-resize',
      leftOrRight: 'col-resize',
      topOrBottom: 'row-resize'
    });
    /**
     * @param {?} edges
     * @param {?} cursors
     * @return {?}
     */

    function getResizeCursor(edges, cursors) {
      if (edges.left && edges.top) {
        return cursors.topLeft;
      } else if (edges.right && edges.top) {
        return cursors.topRight;
      } else if (edges.left && edges.bottom) {
        return cursors.bottomLeft;
      } else if (edges.right && edges.bottom) {
        return cursors.bottomRight;
      } else if (edges.left || edges.right) {
        return cursors.leftOrRight;
      } else if (edges.top || edges.bottom) {
        return cursors.topOrBottom;
      } else {
        return '';
      }
    }
    /**
     * @param {?} __0
     * @return {?}
     */


    function getEdgesDiff(_ref56) {
      var edges = _ref56.edges,
          initialRectangle = _ref56.initialRectangle,
          newRectangle = _ref56.newRectangle;

      /** @type {?} */
      var edgesDiff = {};
      Object.keys(edges).forEach(function (edge) {
        edgesDiff[edge] = (newRectangle[edge] || 0) - (initialRectangle[edge] || 0);
      });
      return edgesDiff;
    }
    /** @type {?} */


    var RESIZE_ACTIVE_CLASS = 'resize-active';
    /** @type {?} */

    var RESIZE_LEFT_HOVER_CLASS = 'resize-left-hover';
    /** @type {?} */

    var RESIZE_RIGHT_HOVER_CLASS = 'resize-right-hover';
    /** @type {?} */

    var RESIZE_TOP_HOVER_CLASS = 'resize-top-hover';
    /** @type {?} */

    var RESIZE_BOTTOM_HOVER_CLASS = 'resize-bottom-hover';
    /** @type {?} */

    var RESIZE_GHOST_ELEMENT_CLASS = 'resize-ghost-element';
    /** @type {?} */

    var MOUSE_MOVE_THROTTLE_MS = 50;
    /**
     * Place this on an element to make it resizable. For example:
     *
     * ```html
     * <div
     *   mwlResizable
     *   [resizeEdges]="{bottom: true, right: true, top: true, left: true}"
     *   [enableGhostResize]="true">
     * </div>
     * ```
     */

    var ResizableDirective =
    /*#__PURE__*/
    function () {
      /**
       * @hidden
       * @param {?} platformId
       * @param {?} renderer
       * @param {?} elm
       * @param {?} zone
       */
      function ResizableDirective(platformId, renderer, elm, zone) {
        _classCallCheck(this, ResizableDirective);

        this.platformId = platformId;
        this.renderer = renderer;
        this.elm = elm;
        this.zone = zone;
        /**
         * The edges that an element can be resized from. Pass an object like `{top: true, bottom: false}`. By default no edges can be resized.
         * @deprecated use a resize handle instead that positions itself to the side of the element you would like to resize
         */

        this.resizeEdges = {};
        /**
         * Set to `true` to enable a temporary resizing effect of the element in between the `resizeStart` and `resizeEnd` events.
         */

        this.enableGhostResize = false;
        /**
         * A snap grid that resize events will be locked to.
         *
         * e.g. to only allow the element to be resized every 10px set it to `{left: 10, right: 10}`
         */

        this.resizeSnapGrid = {};
        /**
         * The mouse cursors that will be set on the resize edges
         */

        this.resizeCursors = DEFAULT_RESIZE_CURSORS;
        /**
         * Mouse over thickness to active cursor.
         * @deprecated invalid when you migrate to use resize handles instead of setting resizeEdges on the element
         */

        this.resizeCursorPrecision = 3;
        /**
         * Define the positioning of the ghost element (can be fixed or absolute)
         */

        this.ghostElementPositioning = 'fixed';
        /**
         * Allow elements to be resized to negative dimensions
         */

        this.allowNegativeResizes = false;
        /**
         * The mouse move throttle in milliseconds, default: 50 ms
         */

        this.mouseMoveThrottleMS = MOUSE_MOVE_THROTTLE_MS;
        /**
         * Called when the mouse is pressed and a resize event is about to begin. `$event` is a `ResizeEvent` object.
         */

        this.resizeStart = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called as the mouse is dragged after a resize event has begun. `$event` is a `ResizeEvent` object.
         */

        this.resizing = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * Called after the mouse is released after a resize event. `$event` is a `ResizeEvent` object.
         */

        this.resizeEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        /**
         * @hidden
         */

        this.mouseup = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        /**
         * @hidden
         */

        this.mousedown = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        /**
         * @hidden
         */

        this.mousemove = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.resizeEdges$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Subject"]();
        this.pointerEventListeners = PointerEventListeners.getInstance(renderer, zone);
      }
      /**
       * @hidden
       * @return {?}
       */


      _createClass(ResizableDirective, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this21 = this;

          /** @type {?} */
          var mousedown$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(this.pointerEventListeners.pointerDown, this.mousedown);
          /** @type {?} */

          var mousemove$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(this.pointerEventListeners.pointerMove, this.mousemove).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(function (_ref57) {
            var event = _ref57.event;

            if (currentResize) {
              event.preventDefault();
            }
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
          /** @type {?} */

          var mouseup$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(this.pointerEventListeners.pointerUp, this.mouseup);
          /** @type {?} */

          var currentResize;
          /** @type {?} */

          var removeGhostElement = function removeGhostElement() {
            if (currentResize && currentResize.clonedNode) {
              _this21.elm.nativeElement.parentElement.removeChild(currentResize.clonedNode);

              _this21.renderer.setStyle(_this21.elm.nativeElement, 'visibility', 'inherit');
            }
          };
          /** @type {?} */


          var getResizeCursors = function getResizeCursors() {
            return Object.assign({}, DEFAULT_RESIZE_CURSORS, _this21.resizeCursors);
          };

          this.resizeEdges$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])(this.resizeEdges), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function () {
            return _this21.resizeEdges && Object.keys(_this21.resizeEdges).some(function (edge) {
              return !!_this21.resizeEdges[edge];
            });
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (legacyResizeEdgesEnabled) {
            return legacyResizeEdgesEnabled ? mousemove$ : rxjs__WEBPACK_IMPORTED_MODULE_1__["EMPTY"];
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["auditTime"])(this.mouseMoveThrottleMS), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function (_ref58) {
            var clientX = _ref58.clientX,
                clientY = _ref58.clientY;

            /** @type {?} */
            var resizeEdges = getResizeEdges({
              clientX: clientX,
              clientY: clientY,
              elm: _this21.elm,
              allowedEdges: _this21.resizeEdges,
              cursorPrecision: _this21.resizeCursorPrecision
            });
            /** @type {?} */

            var resizeCursors = getResizeCursors();

            if (!currentResize) {
              /** @type {?} */
              var cursor = getResizeCursor(resizeEdges, resizeCursors);

              _this21.renderer.setStyle(_this21.elm.nativeElement, 'cursor', cursor);
            }

            _this21.setElementClass(_this21.elm, RESIZE_LEFT_HOVER_CLASS, resizeEdges.left === true);

            _this21.setElementClass(_this21.elm, RESIZE_RIGHT_HOVER_CLASS, resizeEdges.right === true);

            _this21.setElementClass(_this21.elm, RESIZE_TOP_HOVER_CLASS, resizeEdges.top === true);

            _this21.setElementClass(_this21.elm, RESIZE_BOTTOM_HOVER_CLASS, resizeEdges.bottom === true);
          });
          /** @type {?} */

          var mousedrag = mousedown$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["mergeMap"])(function (startCoords) {
            /**
             * @param {?} moveCoords
             * @return {?}
             */
            function getDiff(moveCoords) {
              return {
                clientX: moveCoords.clientX - startCoords.clientX,
                clientY: moveCoords.clientY - startCoords.clientY
              };
            }
            /** @type {?} */


            var getSnapGrid = function getSnapGrid() {
              /** @type {?} */
              var snapGrid = {
                x: 1,
                y: 1
              };

              if (currentResize) {
                if (_this21.resizeSnapGrid.left && currentResize.edges.left) {
                  snapGrid.x = +_this21.resizeSnapGrid.left;
                } else if (_this21.resizeSnapGrid.right && currentResize.edges.right) {
                  snapGrid.x = +_this21.resizeSnapGrid.right;
                }

                if (_this21.resizeSnapGrid.top && currentResize.edges.top) {
                  snapGrid.y = +_this21.resizeSnapGrid.top;
                } else if (_this21.resizeSnapGrid.bottom && currentResize.edges.bottom) {
                  snapGrid.y = +_this21.resizeSnapGrid.bottom;
                }
              }

              return snapGrid;
            };
            /**
             * @param {?} coords
             * @param {?} snapGrid
             * @return {?}
             */


            function getGrid(coords, snapGrid) {
              return {
                x: Math.ceil(coords.clientX / snapGrid.x),
                y: Math.ceil(coords.clientY / snapGrid.y)
              };
            }

            return (
              /** @type {?} */
              Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(mousemove$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["take"])(1)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (coords) {
                return [, coords];
              })), mousemove$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["pairwise"])())).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref59) {
                var _ref60 = _slicedToArray(_ref59, 2),
                    previousCoords = _ref60[0],
                    newCoords = _ref60[1];

                return [previousCoords ? getDiff(previousCoords) : previousCoords, getDiff(newCoords)];
              })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (_ref61) {
                var _ref62 = _slicedToArray(_ref61, 2),
                    previousCoords = _ref62[0],
                    newCoords = _ref62[1];

                if (!previousCoords) {
                  return true;
                }
                /** @type {?} */


                var snapGrid = getSnapGrid();
                /** @type {?} */

                var previousGrid = getGrid(previousCoords, snapGrid);
                /** @type {?} */

                var newGrid = getGrid(newCoords, snapGrid);
                return previousGrid.x !== newGrid.x || previousGrid.y !== newGrid.y;
              })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref63) {
                var _ref64 = _slicedToArray(_ref63, 2),
                    newCoords = _ref64[1];

                /** @type {?} */
                var snapGrid = getSnapGrid();
                return {
                  clientX: Math.round(newCoords.clientX / snapGrid.x) * snapGrid.x,
                  clientY: Math.round(newCoords.clientY / snapGrid.y) * snapGrid.y
                };
              })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["merge"])(mouseup$, mousedown$)))
            );
          })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function () {
            return !!currentResize;
          }));
          mousedrag.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref65) {
            var clientX = _ref65.clientX,
                clientY = _ref65.clientY;
            return getNewBoundingRectangle(
            /** @type {?} */
            currentResize.startingRect,
            /** @type {?} */
            currentResize.edges, clientX, clientY);
          })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (newBoundingRect) {
            return _this21.allowNegativeResizes || !!(newBoundingRect.height && newBoundingRect.width && newBoundingRect.height > 0 && newBoundingRect.width > 0);
          })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (newBoundingRect) {
            return _this21.validateResize ? _this21.validateResize({
              rectangle: newBoundingRect,
              edges: getEdgesDiff({
                edges:
                /** @type {?} */
                currentResize.edges,
                initialRectangle:
                /** @type {?} */
                currentResize.startingRect,
                newRectangle: newBoundingRect
              })
            }) : true;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function (newBoundingRect) {
            if (currentResize && currentResize.clonedNode) {
              _this21.renderer.setStyle(currentResize.clonedNode, 'height', "".concat(newBoundingRect.height, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'width', "".concat(newBoundingRect.width, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'top', "".concat(newBoundingRect.top, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'left', "".concat(newBoundingRect.left, "px"));
            }

            _this21.zone.run(function () {
              _this21.resizing.emit({
                edges: getEdgesDiff({
                  edges:
                  /** @type {?} */
                  currentResize.edges,
                  initialRectangle:
                  /** @type {?} */
                  currentResize.startingRect,
                  newRectangle: newBoundingRect
                }),
                rectangle: newBoundingRect
              });
            });

            /** @type {?} */
            currentResize.currentRect = newBoundingRect;
          });
          mousedown$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (_ref66) {
            var clientX = _ref66.clientX,
                clientY = _ref66.clientY,
                edges = _ref66.edges;
            return edges || getResizeEdges({
              clientX: clientX,
              clientY: clientY,
              elm: _this21.elm,
              allowedEdges: _this21.resizeEdges,
              cursorPrecision: _this21.resizeCursorPrecision
            });
          })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (edges) {
            return Object.keys(edges).length > 0;
          }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function (edges) {
            if (currentResize) {
              removeGhostElement();
            }
            /** @type {?} */


            var startingRect = getElementRect(_this21.elm, _this21.ghostElementPositioning);
            currentResize = {
              edges: edges,
              startingRect: startingRect,
              currentRect: startingRect
            };
            /** @type {?} */

            var resizeCursors = getResizeCursors();
            /** @type {?} */

            var cursor = getResizeCursor(currentResize.edges, resizeCursors);

            _this21.renderer.setStyle(document.body, 'cursor', cursor);

            _this21.setElementClass(_this21.elm, RESIZE_ACTIVE_CLASS, true);

            if (_this21.enableGhostResize) {
              currentResize.clonedNode = _this21.elm.nativeElement.cloneNode(true);

              _this21.elm.nativeElement.parentElement.appendChild(currentResize.clonedNode);

              _this21.renderer.setStyle(_this21.elm.nativeElement, 'visibility', 'hidden');

              _this21.renderer.setStyle(currentResize.clonedNode, 'position', _this21.ghostElementPositioning);

              _this21.renderer.setStyle(currentResize.clonedNode, 'left', "".concat(currentResize.startingRect.left, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'top', "".concat(currentResize.startingRect.top, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'height', "".concat(currentResize.startingRect.height, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'width', "".concat(currentResize.startingRect.width, "px"));

              _this21.renderer.setStyle(currentResize.clonedNode, 'cursor', getResizeCursor(currentResize.edges, resizeCursors));

              _this21.renderer.addClass(currentResize.clonedNode, RESIZE_GHOST_ELEMENT_CLASS);

              /** @type {?} */
              currentResize.clonedNode.scrollTop =
              /** @type {?} */
              currentResize.startingRect.scrollTop;

              /** @type {?} */
              currentResize.clonedNode.scrollLeft =
              /** @type {?} */
              currentResize.startingRect.scrollLeft;
            }

            _this21.zone.run(function () {
              _this21.resizeStart.emit({
                edges: getEdgesDiff({
                  edges: edges,
                  initialRectangle: startingRect,
                  newRectangle: startingRect
                }),
                rectangle: getNewBoundingRectangle(startingRect, {}, 0, 0)
              });
            });
          });
          mouseup$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.destroy$)).subscribe(function () {
            if (currentResize) {
              _this21.renderer.removeClass(_this21.elm.nativeElement, RESIZE_ACTIVE_CLASS);

              _this21.renderer.setStyle(document.body, 'cursor', '');

              _this21.renderer.setStyle(_this21.elm.nativeElement, 'cursor', '');

              _this21.zone.run(function () {
                _this21.resizeEnd.emit({
                  edges: getEdgesDiff({
                    edges:
                    /** @type {?} */
                    currentResize.edges,
                    initialRectangle:
                    /** @type {?} */
                    currentResize.startingRect,
                    newRectangle:
                    /** @type {?} */
                    currentResize.currentRect
                  }),
                  rectangle:
                  /** @type {?} */
                  currentResize.currentRect
                });
              });

              removeGhostElement();
              currentResize = null;
            }
          });
        }
        /**
         * @hidden
         * @param {?} changes
         * @return {?}
         */

      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          if (changes.resizeEdges) {
            this.resizeEdges$.next(this.resizeEdges);
          }
        }
        /**
         * @hidden
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          // browser check for angular universal, because it doesn't know what document is
          if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_0__["isPlatformBrowser"])(this.platformId)) {
            this.renderer.setStyle(document.body, 'cursor', '');
          }

          this.mousedown.complete();
          this.mouseup.complete();
          this.mousemove.complete();
          this.resizeEdges$.complete();
          this.destroy$.next();
        }
        /**
         * @private
         * @param {?} elm
         * @param {?} name
         * @param {?} add
         * @return {?}
         */

      }, {
        key: "setElementClass",
        value: function setElementClass(elm, name, add) {
          if (add) {
            this.renderer.addClass(elm.nativeElement, name);
          } else {
            this.renderer.removeClass(elm.nativeElement, name);
          }
        }
      }]);

      return ResizableDirective;
    }();

    ResizableDirective.ɵfac = function ResizableDirective_Factory(t) {
      return new (t || ResizableDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["PLATFORM_ID"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]));
    };

    ResizableDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
      type: ResizableDirective,
      selectors: [["", "mwlResizable", ""]],
      inputs: {
        resizeEdges: "resizeEdges",
        enableGhostResize: "enableGhostResize",
        resizeSnapGrid: "resizeSnapGrid",
        resizeCursors: "resizeCursors",
        resizeCursorPrecision: "resizeCursorPrecision",
        ghostElementPositioning: "ghostElementPositioning",
        allowNegativeResizes: "allowNegativeResizes",
        mouseMoveThrottleMS: "mouseMoveThrottleMS",
        validateResize: "validateResize"
      },
      outputs: {
        resizeStart: "resizeStart",
        resizing: "resizing",
        resizeEnd: "resizeEnd"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵNgOnChangesFeature"]]
    });
    /** @nocollapse */

    ResizableDirective.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["PLATFORM_ID"]]
        }]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
      }];
    };

    ResizableDirective.propDecorators = {
      validateResize: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      resizeEdges: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      enableGhostResize: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      resizeSnapGrid: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      resizeCursors: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      resizeCursorPrecision: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      ghostElementPositioning: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      allowNegativeResizes: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      mouseMoveThrottleMS: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      resizeStart: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      resizing: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }],
      resizeEnd: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
      }]
    };
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](ResizableDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlResizable]'
        }]
      }], function () {
        return [{
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
            args: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["PLATFORM_ID"]]
          }]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }];
      }, {
        resizeEdges: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        enableGhostResize: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeSnapGrid: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeCursors: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeCursorPrecision: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        ghostElementPositioning: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        allowNegativeResizes: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        mouseMoveThrottleMS: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        resizeStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        resizing: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        resizeEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
        }],
        validateResize: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }]
      });
    })();

    var PointerEventListeners =
    /*#__PURE__*/
    function () {
      _createClass(PointerEventListeners, null, [{
        key: "getInstance",
        // tslint:disable-line

        /**
         * @param {?} renderer
         * @param {?} zone
         * @return {?}
         */
        value: function getInstance(renderer, zone) {
          if (!PointerEventListeners.instance) {
            PointerEventListeners.instance = new PointerEventListeners(renderer, zone);
          }

          return PointerEventListeners.instance;
        }
        /**
         * @param {?} renderer
         * @param {?} zone
         */

      }]);

      function PointerEventListeners(renderer, zone) {
        _classCallCheck(this, PointerEventListeners);

        this.pointerDown = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
          /** @type {?} */
          var unsubscribeMouseDown;
          /** @type {?} */

          var unsubscribeTouchStart;
          zone.runOutsideAngular(function () {
            unsubscribeMouseDown = renderer.listen('document', 'mousedown', function (event) {
              observer.next({
                clientX: event.clientX,
                clientY: event.clientY,
                event: event
              });
            });
            unsubscribeTouchStart = renderer.listen('document', 'touchstart', function (event) {
              observer.next({
                clientX: event.touches[0].clientX,
                clientY: event.touches[0].clientY,
                event: event
              });
            });
          });
          return function () {
            unsubscribeMouseDown();
            unsubscribeTouchStart();
          };
        }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
        this.pointerMove = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
          /** @type {?} */
          var unsubscribeMouseMove;
          /** @type {?} */

          var unsubscribeTouchMove;
          zone.runOutsideAngular(function () {
            unsubscribeMouseMove = renderer.listen('document', 'mousemove', function (event) {
              observer.next({
                clientX: event.clientX,
                clientY: event.clientY,
                event: event
              });
            });
            unsubscribeTouchMove = renderer.listen('document', 'touchmove', function (event) {
              observer.next({
                clientX: event.targetTouches[0].clientX,
                clientY: event.targetTouches[0].clientY,
                event: event
              });
            });
          });
          return function () {
            unsubscribeMouseMove();
            unsubscribeTouchMove();
          };
        }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
        this.pointerUp = new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"](function (observer) {
          /** @type {?} */
          var unsubscribeMouseUp;
          /** @type {?} */

          var unsubscribeTouchEnd;
          /** @type {?} */

          var unsubscribeTouchCancel;
          zone.runOutsideAngular(function () {
            unsubscribeMouseUp = renderer.listen('document', 'mouseup', function (event) {
              observer.next({
                clientX: event.clientX,
                clientY: event.clientY,
                event: event
              });
            });
            unsubscribeTouchEnd = renderer.listen('document', 'touchend', function (event) {
              observer.next({
                clientX: event.changedTouches[0].clientX,
                clientY: event.changedTouches[0].clientY,
                event: event
              });
            });
            unsubscribeTouchCancel = renderer.listen('document', 'touchcancel', function (event) {
              observer.next({
                clientX: event.changedTouches[0].clientX,
                clientY: event.changedTouches[0].clientY,
                event: event
              });
            });
          });
          return function () {
            unsubscribeMouseUp();
            unsubscribeTouchEnd();
            unsubscribeTouchCancel();
          };
        }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["share"])());
      }

      return PointerEventListeners;
    }();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle
     *
     * For example
     *
     * ```html
     * <div mwlResizable>
     *   <div mwlResizeHandle [resizeEdges]="{bottom: true, right: true}"></div>
     * </div>
     * ```
     */


    var ResizeHandleDirective =
    /*#__PURE__*/
    function () {
      /**
       * @param {?} renderer
       * @param {?} element
       * @param {?} zone
       * @param {?} resizable
       */
      function ResizeHandleDirective(renderer, element, zone, resizable) {
        _classCallCheck(this, ResizeHandleDirective);

        this.renderer = renderer;
        this.element = element;
        this.zone = zone;
        this.resizable = resizable;
        /**
         * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on
         */

        this.resizeEdges = {};
        this.eventListeners = {};
      }
      /**
       * @return {?}
       */


      _createClass(ResizeHandleDirective, [{
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unsubscribeEventListeners();
        }
        /**
         * @hidden
         * @param {?} event
         * @param {?} clientX
         * @param {?} clientY
         * @return {?}
         */

      }, {
        key: "onMousedown",
        value: function onMousedown(event, clientX, clientY) {
          var _this22 = this;

          event.preventDefault();
          this.zone.runOutsideAngular(function () {
            if (!_this22.eventListeners.touchmove) {
              _this22.eventListeners.touchmove = _this22.renderer.listen(_this22.element.nativeElement, 'touchmove', function (touchMoveEvent) {
                _this22.onMousemove(touchMoveEvent, touchMoveEvent.targetTouches[0].clientX, touchMoveEvent.targetTouches[0].clientY);
              });
            }

            if (!_this22.eventListeners.mousemove) {
              _this22.eventListeners.mousemove = _this22.renderer.listen(_this22.element.nativeElement, 'mousemove', function (mouseMoveEvent) {
                _this22.onMousemove(mouseMoveEvent, mouseMoveEvent.clientX, mouseMoveEvent.clientY);
              });
            }

            _this22.resizable.mousedown.next({
              clientX: clientX,
              clientY: clientY,
              edges: _this22.resizeEdges
            });
          });
        }
        /**
         * @hidden
         * @param {?} clientX
         * @param {?} clientY
         * @return {?}
         */

      }, {
        key: "onMouseup",
        value: function onMouseup(clientX, clientY) {
          var _this23 = this;

          this.zone.runOutsideAngular(function () {
            _this23.unsubscribeEventListeners();

            _this23.resizable.mouseup.next({
              clientX: clientX,
              clientY: clientY,
              edges: _this23.resizeEdges
            });
          });
        }
        /**
         * @private
         * @param {?} event
         * @param {?} clientX
         * @param {?} clientY
         * @return {?}
         */

      }, {
        key: "onMousemove",
        value: function onMousemove(event, clientX, clientY) {
          this.resizable.mousemove.next({
            clientX: clientX,
            clientY: clientY,
            edges: this.resizeEdges,
            event: event
          });
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "unsubscribeEventListeners",
        value: function unsubscribeEventListeners() {
          var _this24 = this;

          Object.keys(this.eventListeners).forEach(function (type) {
            /** @type {?} */
            _this24.eventListeners[type]();

            delete _this24.eventListeners[type];
          });
        }
      }]);

      return ResizeHandleDirective;
    }();

    ResizeHandleDirective.ɵfac = function ResizeHandleDirective_Factory(t) {
      return new (t || ResizeHandleDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](ResizableDirective));
    };

    ResizeHandleDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
      type: ResizeHandleDirective,
      selectors: [["", "mwlResizeHandle", ""]],
      hostBindings: function ResizeHandleDirective_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("touchstart", function ResizeHandleDirective_touchstart_HostBindingHandler($event) {
            return ctx.onMousedown($event, $event.touches[0].clientX, $event.touches[0].clientY);
          })("mousedown", function ResizeHandleDirective_mousedown_HostBindingHandler($event) {
            return ctx.onMousedown($event, $event.clientX, $event.clientY);
          })("touchend", function ResizeHandleDirective_touchend_HostBindingHandler($event) {
            return ctx.onMouseup($event.changedTouches[0].clientX, $event.changedTouches[0].clientY);
          })("touchcancel", function ResizeHandleDirective_touchcancel_HostBindingHandler($event) {
            return ctx.onMouseup($event.changedTouches[0].clientX, $event.changedTouches[0].clientY);
          })("mouseup", function ResizeHandleDirective_mouseup_HostBindingHandler($event) {
            return ctx.onMouseup($event.clientX, $event.clientY);
          });
        }
      },
      inputs: {
        resizeEdges: "resizeEdges"
      }
    });
    /** @nocollapse */

    ResizeHandleDirective.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
      }, {
        type: ResizableDirective
      }];
    };

    ResizeHandleDirective.propDecorators = {
      resizeEdges: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
      }],
      onMousedown: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
        args: ['touchstart', ['$event', '$event.touches[0].clientX', '$event.touches[0].clientY']]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
        args: ['mousedown', ['$event', '$event.clientX', '$event.clientY']]
      }],
      onMouseup: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
        args: ['touchend', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY']]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
        args: ['touchcancel', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY']]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
        args: ['mouseup', ['$event.clientX', '$event.clientY']]
      }]
    };
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](ResizeHandleDirective, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
        args: [{
          selector: '[mwlResizeHandle]'
        }]
      }], function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Renderer2"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
        }, {
          type: ResizableDirective
        }];
      }, {
        resizeEdges: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
        }],
        onMousedown: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['touchstart', ['$event', '$event.touches[0].clientX', '$event.touches[0].clientY']]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['mousedown', ['$event', '$event.clientX', '$event.clientY']]
        }],
        onMouseup: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['touchend', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY']]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['touchcancel', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY']]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
          args: ['mouseup', ['$event.clientX', '$event.clientY']]
        }]
      });
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var ResizableModule = function ResizableModule() {
      _classCallCheck(this, ResizableModule);
    };

    ResizableModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({
      type: ResizableModule
    });
    ResizableModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({
      factory: function ResizableModule_Factory(t) {
        return new (t || ResizableModule)();
      }
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](ResizableModule, {
        declarations: [ResizableDirective, ResizeHandleDirective],
        exports: [ResizableDirective, ResizeHandleDirective]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](ResizableModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
        args: [{
          declarations: [ResizableDirective, ResizeHandleDirective],
          exports: [ResizableDirective, ResizeHandleDirective]
        }]
      }], null, null);
    })();
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    //# sourceMappingURL=angular-resizable-element.js.map

    /***/

  },

  /***/
  "./node_modules/array-from/index.js":
  /*!******************************************!*\
    !*** ./node_modules/array-from/index.js ***!
    \******************************************/

  /*! no static exports found */

  /***/
  function node_modulesArrayFromIndexJs(module, exports, __webpack_require__) {
    module.exports = typeof Array.from === 'function' ? Array.from : __webpack_require__(
    /*! ./polyfill */
    "./node_modules/array-from/polyfill.js");
    /***/
  },

  /***/
  "./node_modules/array-from/polyfill.js":
  /*!*********************************************!*\
    !*** ./node_modules/array-from/polyfill.js ***!
    \*********************************************/

  /*! no static exports found */

  /***/
  function node_modulesArrayFromPolyfillJs(module, exports) {
    // Production steps of ECMA-262, Edition 6, 22.1.2.1
    // Reference: http://www.ecma-international.org/ecma-262/6.0/#sec-array.from
    module.exports = function () {
      var isCallable = function isCallable(fn) {
        return typeof fn === 'function';
      };

      var toInteger = function toInteger(value) {
        var number = Number(value);

        if (isNaN(number)) {
          return 0;
        }

        if (number === 0 || !isFinite(number)) {
          return number;
        }

        return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));
      };

      var maxSafeInteger = Math.pow(2, 53) - 1;

      var toLength = function toLength(value) {
        var len = toInteger(value);
        return Math.min(Math.max(len, 0), maxSafeInteger);
      };

      var iteratorProp = function iteratorProp(value) {
        if (value != null) {
          if (['string', 'number', 'boolean', 'symbol'].indexOf(typeof value) > -1) {
            return Symbol.iterator;
          } else if (typeof Symbol !== 'undefined' && 'iterator' in Symbol && Symbol.iterator in value) {
            return Symbol.iterator;
          } // Support "@@iterator" placeholder, Gecko 27 to Gecko 35
          else if ('@@iterator' in value) {
              return '@@iterator';
            }
        }
      };

      var getMethod = function getMethod(O, P) {
        // Assert: IsPropertyKey(P) is true.
        if (O != null && P != null) {
          // Let func be GetV(O, P).
          var func = O[P]; // ReturnIfAbrupt(func).
          // If func is either undefined or null, return undefined.

          if (func == null) {
            return void 0;
          } // If IsCallable(func) is false, throw a TypeError exception.


          if (!isCallable(func)) {
            throw new TypeError(func + ' is not a function');
          }

          return func;
        }
      };

      var iteratorStep = function iteratorStep(iterator) {
        // Let result be IteratorNext(iterator).
        // ReturnIfAbrupt(result).
        var result = iterator.next(); // Let done be IteratorComplete(result).
        // ReturnIfAbrupt(done).

        var done = Boolean(result.done); // If done is true, return false.

        if (done) {
          return false;
        } // Return result.


        return result;
      }; // The length property of the from method is 1.


      return function from(items
      /*, mapFn, thisArg */
      ) {
        'use strict'; // 1. Let C be the this value.

        var C = this; // 2. If mapfn is undefined, let mapping be false.

        var mapFn = arguments.length > 1 ? arguments[1] : void 0;
        var T;

        if (typeof mapFn !== 'undefined') {
          // 3. else
          //   a. If IsCallable(mapfn) is false, throw a TypeError exception.
          if (!isCallable(mapFn)) {
            throw new TypeError('Array.from: when provided, the second argument must be a function');
          } //   b. If thisArg was supplied, let T be thisArg; else let T
          //      be undefined.


          if (arguments.length > 2) {
            T = arguments[2];
          } //   c. Let mapping be true (implied by mapFn)

        }

        var A, k; // 4. Let usingIterator be GetMethod(items, @@iterator).
        // 5. ReturnIfAbrupt(usingIterator).

        var usingIterator = getMethod(items, iteratorProp(items)); // 6. If usingIterator is not undefined, then

        if (usingIterator !== void 0) {
          // a. If IsConstructor(C) is true, then
          //   i. Let A be the result of calling the [[Construct]]
          //      internal method of C with an empty argument list.
          // b. Else,
          //   i. Let A be the result of the abstract operation ArrayCreate
          //      with argument 0.
          // c. ReturnIfAbrupt(A).
          A = isCallable(C) ? Object(new C()) : []; // d. Let iterator be GetIterator(items, usingIterator).

          var iterator = usingIterator.call(items); // e. ReturnIfAbrupt(iterator).

          if (iterator == null) {
            throw new TypeError('Array.from requires an array-like or iterable object');
          } // f. Let k be 0.


          k = 0; // g. Repeat

          var next, nextValue;

          while (true) {
            // i. Let Pk be ToString(k).
            // ii. Let next be IteratorStep(iterator).
            // iii. ReturnIfAbrupt(next).
            next = iteratorStep(iterator); // iv. If next is false, then

            if (!next) {
              // 1. Let setStatus be Set(A, "length", k, true).
              // 2. ReturnIfAbrupt(setStatus).
              A.length = k; // 3. Return A.

              return A;
            } // v. Let nextValue be IteratorValue(next).
            // vi. ReturnIfAbrupt(nextValue)


            nextValue = next.value; // vii. If mapping is true, then
            //   1. Let mappedValue be Call(mapfn, T, «nextValue, k»).
            //   2. If mappedValue is an abrupt completion, return
            //      IteratorClose(iterator, mappedValue).
            //   3. Let mappedValue be mappedValue.[[value]].
            // viii. Else, let mappedValue be nextValue.
            // ix.  Let defineStatus be the result of
            //      CreateDataPropertyOrThrow(A, Pk, mappedValue).
            // x. [TODO] If defineStatus is an abrupt completion, return
            //    IteratorClose(iterator, defineStatus).

            if (mapFn) {
              A[k] = mapFn.call(T, nextValue, k);
            } else {
              A[k] = nextValue;
            } // xi. Increase k by 1.


            k++;
          } // 7. Assert: items is not an Iterable so assume it is
          //    an array-like object.

        } else {
          // 8. Let arrayLike be ToObject(items).
          var arrayLike = Object(items); // 9. ReturnIfAbrupt(items).

          if (items == null) {
            throw new TypeError('Array.from requires an array-like object - not null or undefined');
          } // 10. Let len be ToLength(Get(arrayLike, "length")).
          // 11. ReturnIfAbrupt(len).


          var len = toLength(arrayLike.length); // 12. If IsConstructor(C) is true, then
          //     a. Let A be Construct(C, «len»).
          // 13. Else
          //     a. Let A be ArrayCreate(len).
          // 14. ReturnIfAbrupt(A).

          A = isCallable(C) ? Object(new C(len)) : new Array(len); // 15. Let k be 0.

          k = 0; // 16. Repeat, while k < len… (also steps a - h)

          var kValue;

          while (k < len) {
            kValue = arrayLike[k];

            if (mapFn) {
              A[k] = mapFn.call(T, kValue, k);
            } else {
              A[k] = kValue;
            }

            k++;
          } // 17. Let setStatus be Set(A, "length", len, true).
          // 18. ReturnIfAbrupt(setStatus).


          A.length = len; // 19. Return A.
        }

        return A;
      };
    }();
    /***/

  },

  /***/
  "./node_modules/c3/c3.js":
  /*!*******************************!*\
    !*** ./node_modules/c3/c3.js ***!
    \*******************************/

  /*! no static exports found */

  /***/
  function node_modulesC3C3Js(module, exports, __webpack_require__) {
    /* @license C3.js v0.4.24 | (c) C3 Team and other contributors | http://c3js.org/ */
    (function (global, factory) {
      true ? module.exports = factory() : undefined;
    })(this, function () {
      'use strict';

      var CLASS = {
        target: 'c3-target',
        chart: 'c3-chart',
        chartLine: 'c3-chart-line',
        chartLines: 'c3-chart-lines',
        chartBar: 'c3-chart-bar',
        chartBars: 'c3-chart-bars',
        chartText: 'c3-chart-text',
        chartTexts: 'c3-chart-texts',
        chartArc: 'c3-chart-arc',
        chartArcs: 'c3-chart-arcs',
        chartArcsTitle: 'c3-chart-arcs-title',
        chartArcsBackground: 'c3-chart-arcs-background',
        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',
        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',
        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',
        selectedCircle: 'c3-selected-circle',
        selectedCircles: 'c3-selected-circles',
        eventRect: 'c3-event-rect',
        eventRects: 'c3-event-rects',
        eventRectsSingle: 'c3-event-rects-single',
        eventRectsMultiple: 'c3-event-rects-multiple',
        zoomRect: 'c3-zoom-rect',
        brush: 'c3-brush',
        focused: 'c3-focused',
        defocused: 'c3-defocused',
        region: 'c3-region',
        regions: 'c3-regions',
        title: 'c3-title',
        tooltipContainer: 'c3-tooltip-container',
        tooltip: 'c3-tooltip',
        tooltipName: 'c3-tooltip-name',
        shape: 'c3-shape',
        shapes: 'c3-shapes',
        line: 'c3-line',
        lines: 'c3-lines',
        bar: 'c3-bar',
        bars: 'c3-bars',
        circle: 'c3-circle',
        circles: 'c3-circles',
        arc: 'c3-arc',
        arcLabelLine: 'c3-arc-label-line',
        arcs: 'c3-arcs',
        area: 'c3-area',
        areas: 'c3-areas',
        empty: 'c3-empty',
        text: 'c3-text',
        texts: 'c3-texts',
        gaugeValue: 'c3-gauge-value',
        grid: 'c3-grid',
        gridLines: 'c3-grid-lines',
        xgrid: 'c3-xgrid',
        xgrids: 'c3-xgrids',
        xgridLine: 'c3-xgrid-line',
        xgridLines: 'c3-xgrid-lines',
        xgridFocus: 'c3-xgrid-focus',
        ygrid: 'c3-ygrid',
        ygrids: 'c3-ygrids',
        ygridLine: 'c3-ygrid-line',
        ygridLines: 'c3-ygrid-lines',
        axis: 'c3-axis',
        axisX: 'c3-axis-x',
        axisXLabel: 'c3-axis-x-label',
        axisY: 'c3-axis-y',
        axisYLabel: 'c3-axis-y-label',
        axisY2: 'c3-axis-y2',
        axisY2Label: 'c3-axis-y2-label',
        legendBackground: 'c3-legend-background',
        legendItem: 'c3-legend-item',
        legendItemEvent: 'c3-legend-item-event',
        legendItemTile: 'c3-legend-item-tile',
        legendItemHidden: 'c3-legend-item-hidden',
        legendItemFocused: 'c3-legend-item-focused',
        dragarea: 'c3-dragarea',
        EXPANDED: '_expanded_',
        SELECTED: '_selected_',
        INCLUDED: '_included_'
      };

      var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };

      var classCallCheck = function classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      };

      var inherits = function inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
        }

        subClass.prototype = Object.create(superClass && superClass.prototype, {
          constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      };

      var possibleConstructorReturn = function possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }

        return call && (typeof call === "object" || typeof call === "function") ? call : self;
      };

      var isValue = function isValue(v) {
        return v || v === 0;
      };

      var isFunction = function isFunction(o) {
        return typeof o === 'function';
      };

      var isArray = function isArray(o) {
        return Array.isArray(o);
      };

      var isString = function isString(o) {
        return typeof o === 'string';
      };

      var isUndefined = function isUndefined(v) {
        return typeof v === 'undefined';
      };

      var isDefined = function isDefined(v) {
        return typeof v !== 'undefined';
      };

      var ceil10 = function ceil10(v) {
        return Math.ceil(v / 10) * 10;
      };

      var asHalfPixel = function asHalfPixel(n) {
        return Math.ceil(n) + 0.5;
      };

      var diffDomain = function diffDomain(d) {
        return d[1] - d[0];
      };

      var isEmpty = function isEmpty(o) {
        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;
      };

      var notEmpty = function notEmpty(o) {
        return !c3_chart_internal_fn.isEmpty(o);
      };

      var getOption = function getOption(options, key, defaultValue) {
        return isDefined(options[key]) ? options[key] : defaultValue;
      };

      var hasValue = function hasValue(dict, value) {
        var found = false;
        Object.keys(dict).forEach(function (key) {
          if (dict[key] === value) {
            found = true;
          }
        });
        return found;
      };

      var sanitise = function sanitise(str) {
        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;
      };

      var getPathBox = function getPathBox(path) {
        var box = path.getBoundingClientRect(),
            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],
            minX = items[0].x,
            minY = Math.min(items[0].y, items[1].y);
        return {
          x: minX,
          y: minY,
          width: box.width,
          height: box.height
        };
      };

      var c3_axis_fn;
      var c3_axis_internal_fn;

      function AxisInternal(component, params) {
        var internal = this;
        internal.component = component;
        internal.params = params || {};
        internal.d3 = component.d3;
        internal.scale = internal.d3.scale.linear();
        internal.range;
        internal.orient = "bottom";
        internal.innerTickSize = 6;
        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;
        internal.tickPadding = 3;
        internal.tickValues = null;
        internal.tickFormat;
        internal.tickArguments;
        internal.tickOffset = 0;
        internal.tickCulling = true;
        internal.tickCentered;
        internal.tickTextCharSize;
        internal.tickTextRotate = internal.params.tickTextRotate;
        internal.tickLength;
        internal.axis = internal.generateAxis();
      }

      c3_axis_internal_fn = AxisInternal.prototype;

      c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {
        selection.attr("transform", function (d) {
          return "translate(" + Math.ceil(x(d) + tickOffset) + ", 0)";
        });
      };

      c3_axis_internal_fn.axisY = function (selection, y) {
        selection.attr("transform", function (d) {
          return "translate(0," + Math.ceil(y(d)) + ")";
        });
      };

      c3_axis_internal_fn.scaleExtent = function (domain) {
        var start = domain[0],
            stop = domain[domain.length - 1];
        return start < stop ? [start, stop] : [stop, start];
      };

      c3_axis_internal_fn.generateTicks = function (scale) {
        var internal = this;
        var i,
            domain,
            ticks = [];

        if (scale.ticks) {
          return scale.ticks.apply(scale, internal.tickArguments);
        }

        domain = scale.domain();

        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {
          ticks.push(i);
        }

        if (ticks.length > 0 && ticks[0] > 0) {
          ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));
        }

        return ticks;
      };

      c3_axis_internal_fn.copyScale = function () {
        var internal = this;
        var newScale = internal.scale.copy(),
            domain;

        if (internal.params.isCategory) {
          domain = internal.scale.domain();
          newScale.domain([domain[0], domain[1] - 1]);
        }

        return newScale;
      };

      c3_axis_internal_fn.textFormatted = function (v) {
        var internal = this,
            formatted = internal.tickFormat ? internal.tickFormat(v) : v;
        return typeof formatted !== 'undefined' ? formatted : '';
      };

      c3_axis_internal_fn.updateRange = function () {
        var internal = this;
        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());
        return internal.range;
      };

      c3_axis_internal_fn.updateTickTextCharSize = function (tick) {
        var internal = this;

        if (internal.tickTextCharSize) {
          return internal.tickTextCharSize;
        }

        var size = {
          h: 11.5,
          w: 5.5
        };
        tick.select('text').text(function (d) {
          return internal.textFormatted(d);
        }).each(function (d) {
          var box = this.getBoundingClientRect(),
              text = internal.textFormatted(d),
              h = box.height,
              w = text ? box.width / text.length : undefined;

          if (h && w) {
            size.h = h;
            size.w = w;
          }
        }).text('');
        internal.tickTextCharSize = size;
        return size;
      };

      c3_axis_internal_fn.transitionise = function (selection) {
        return this.params.withoutTransition ? selection : this.d3.transition(selection);
      };

      c3_axis_internal_fn.isVertical = function () {
        return this.orient === 'left' || this.orient === 'right';
      };

      c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {
        var internal = this;
        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));

        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {
          splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);
        }

        return splitted.map(function (s) {
          return {
            index: i,
            splitted: s,
            length: splitted.length
          };
        });
      };

      c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {
        var internal = this,
            tickText = internal.textFormatted(d),
            maxWidth = internal.params.tickWidth,
            subtext,
            spaceIndex,
            textWidth,
            splitted = [];

        if (Object.prototype.toString.call(tickText) === "[object Array]") {
          return tickText;
        }

        if (!maxWidth || maxWidth <= 0) {
          maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;
        }

        function split(splitted, text) {
          spaceIndex = undefined;

          for (var i = 1; i < text.length; i++) {
            if (text.charAt(i) === ' ') {
              spaceIndex = i;
            }

            subtext = text.substr(0, i + 1);
            textWidth = internal.tickTextCharSize.w * subtext.length; // if text width gets over tick width, split by space index or crrent index

            if (maxWidth < textWidth) {
              return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));
            }
          }

          return splitted.concat(text);
        }

        return split(splitted, tickText + "");
      };

      c3_axis_internal_fn.ellipsify = function (splitted, max) {
        if (splitted.length <= max) {
          return splitted;
        }

        var ellipsified = splitted.slice(0, max);
        var remaining = 3;

        for (var i = max - 1; i >= 0; i--) {
          var available = ellipsified[i].length;
          ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');
          remaining -= available;

          if (remaining <= 0) {
            break;
          }
        }

        return ellipsified;
      };

      c3_axis_internal_fn.updateTickLength = function () {
        var internal = this;
        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;
      };

      c3_axis_internal_fn.lineY2 = function (d) {
        var internal = this,
            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);
        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;
      };

      c3_axis_internal_fn.textY = function () {
        var internal = this,
            rotate = internal.tickTextRotate;
        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;
      };

      c3_axis_internal_fn.textTransform = function () {
        var internal = this,
            rotate = internal.tickTextRotate;
        return rotate ? "rotate(" + rotate + ")" : "";
      };

      c3_axis_internal_fn.textTextAnchor = function () {
        var internal = this,
            rotate = internal.tickTextRotate;
        return rotate ? rotate > 0 ? "start" : "end" : "middle";
      };

      c3_axis_internal_fn.tspanDx = function () {
        var internal = this,
            rotate = internal.tickTextRotate;
        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;
      };

      c3_axis_internal_fn.tspanDy = function (d, i) {
        var internal = this,
            dy = internal.tickTextCharSize.h;

        if (i === 0) {
          if (internal.isVertical()) {
            dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);
          } else {
            dy = ".71em";
          }
        }

        return dy;
      };

      c3_axis_internal_fn.generateAxis = function () {
        var internal = this,
            d3 = internal.d3,
            params = internal.params;

        function axis(g) {
          g.each(function () {
            var g = axis.g = d3.select(this);
            var scale0 = this.__chart__ || internal.scale,
                scale1 = this.__chart__ = internal.copyScale();
            var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),
                tick = g.selectAll(".tick").data(ticks, scale1),
                tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", 1e-6),
                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.
            tickExit = tick.exit().remove(),
                tickUpdate = internal.transitionise(tick).style("opacity", 1),
                tickTransform,
                tickX,
                tickY;

            if (params.isCategory) {
              internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);
              tickX = internal.tickCentered ? 0 : internal.tickOffset;
              tickY = internal.tickCentered ? internal.tickOffset : 0;
            } else {
              internal.tickOffset = tickX = 0;
            }

            tickEnter.append("line");
            tickEnter.append("text");
            internal.updateRange();
            internal.updateTickLength();
            internal.updateTickTextCharSize(g.select('.tick'));
            var lineUpdate = tickUpdate.select("line"),
                textUpdate = tickUpdate.select("text"),
                tspanUpdate = tick.select("text").selectAll('tspan').data(function (d, i) {
              return internal.tspanData(d, i, ticks, scale1);
            });
            tspanUpdate.enter().append('tspan');
            tspanUpdate.exit().remove();
            tspanUpdate.text(function (d) {
              return d.splitted;
            });
            var path = g.selectAll(".domain").data([0]),
                pathUpdate = (path.enter().append("path").attr("class", "domain"), internal.transitionise(path)); // TODO: each attr should be one function and change its behavior by internal.orient, probably

            switch (internal.orient) {
              case "bottom":
                {
                  tickTransform = internal.axisX;
                  lineUpdate.attr("x1", tickX).attr("x2", tickX).attr("y2", function (d, i) {
                    return internal.lineY2(d, i);
                  });
                  textUpdate.attr("x", 0).attr("y", function (d, i) {
                    return internal.textY(d, i);
                  }).attr("transform", function (d, i) {
                    return internal.textTransform(d, i);
                  }).style("text-anchor", function (d, i) {
                    return internal.textTextAnchor(d, i);
                  });
                  tspanUpdate.attr('x', 0).attr("dy", function (d, i) {
                    return internal.tspanDy(d, i);
                  }).attr('dx', function (d, i) {
                    return internal.tspanDx(d, i);
                  });
                  pathUpdate.attr("d", "M" + internal.range[0] + "," + internal.outerTickSize + "V0H" + internal.range[1] + "V" + internal.outerTickSize);
                  break;
                }

              case "top":
                {
                  // TODO: rotated tick text
                  tickTransform = internal.axisX;
                  lineUpdate.attr("x1", tickX).attr("x2", tickX).attr("y2", function (d, i) {
                    return -1 * internal.lineY2(d, i);
                  });
                  textUpdate.attr("x", 0).attr("y", function (d, i) {
                    return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);
                  }).attr("transform", function (d, i) {
                    return internal.textTransform(d, i);
                  }).style("text-anchor", function (d, i) {
                    return internal.textTextAnchor(d, i);
                  });
                  tspanUpdate.attr('x', 0).attr("dy", function (d, i) {
                    return internal.tspanDy(d, i);
                  }).attr('dx', function (d, i) {
                    return internal.tspanDx(d, i);
                  });
                  pathUpdate.attr("d", "M" + internal.range[0] + "," + -internal.outerTickSize + "V0H" + internal.range[1] + "V" + -internal.outerTickSize);
                  break;
                }

              case "left":
                {
                  tickTransform = internal.axisY;
                  lineUpdate.attr("x2", -internal.innerTickSize).attr("y1", tickY).attr("y2", tickY);
                  textUpdate.attr("x", -internal.tickLength).attr("y", internal.tickOffset).style("text-anchor", "end");
                  tspanUpdate.attr('x', -internal.tickLength).attr("dy", function (d, i) {
                    return internal.tspanDy(d, i);
                  });
                  pathUpdate.attr("d", "M" + -internal.outerTickSize + "," + internal.range[0] + "H0V" + internal.range[1] + "H" + -internal.outerTickSize);
                  break;
                }

              case "right":
                {
                  tickTransform = internal.axisY;
                  lineUpdate.attr("x2", internal.innerTickSize).attr("y1", tickY).attr("y2", tickY);
                  textUpdate.attr("x", internal.tickLength).attr("y", internal.tickOffset).style("text-anchor", "start");
                  tspanUpdate.attr('x', internal.tickLength).attr("dy", function (d, i) {
                    return internal.tspanDy(d, i);
                  });
                  pathUpdate.attr("d", "M" + internal.outerTickSize + "," + internal.range[0] + "H0V" + internal.range[1] + "H" + internal.outerTickSize);
                  break;
                }
            }

            if (scale1.rangeBand) {
              var x = scale1,
                  dx = x.rangeBand() / 2;

              scale0 = scale1 = function scale1(d) {
                return x(d) + dx;
              };
            } else if (scale0.rangeBand) {
              scale0 = scale1;
            } else {
              tickExit.call(tickTransform, scale1, internal.tickOffset);
            }

            tickEnter.call(tickTransform, scale0, internal.tickOffset);
            tickUpdate.call(tickTransform, scale1, internal.tickOffset);
          });
        }

        axis.scale = function (x) {
          if (!arguments.length) {
            return internal.scale;
          }

          internal.scale = x;
          return axis;
        };

        axis.orient = function (x) {
          if (!arguments.length) {
            return internal.orient;
          }

          internal.orient = x in {
            top: 1,
            right: 1,
            bottom: 1,
            left: 1
          } ? x + "" : "bottom";
          return axis;
        };

        axis.tickFormat = function (format) {
          if (!arguments.length) {
            return internal.tickFormat;
          }

          internal.tickFormat = format;
          return axis;
        };

        axis.tickCentered = function (isCentered) {
          if (!arguments.length) {
            return internal.tickCentered;
          }

          internal.tickCentered = isCentered;
          return axis;
        };

        axis.tickOffset = function () {
          return internal.tickOffset;
        };

        axis.tickInterval = function () {
          var interval, length;

          if (params.isCategory) {
            interval = internal.tickOffset * 2;
          } else {
            length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;
            interval = length / axis.g.selectAll('line').size();
          }

          return interval === Infinity ? 0 : interval;
        };

        axis.ticks = function () {
          if (!arguments.length) {
            return internal.tickArguments;
          }

          internal.tickArguments = arguments;
          return axis;
        };

        axis.tickCulling = function (culling) {
          if (!arguments.length) {
            return internal.tickCulling;
          }

          internal.tickCulling = culling;
          return axis;
        };

        axis.tickValues = function (x) {
          if (typeof x === 'function') {
            internal.tickValues = function () {
              return x(internal.scale.domain());
            };
          } else {
            if (!arguments.length) {
              return internal.tickValues;
            }

            internal.tickValues = x;
          }

          return axis;
        };

        return axis;
      };

      var Axis = function (_Component) {
        inherits(Axis, _Component);

        function Axis(owner) {
          classCallCheck(this, Axis);
          var fn = {
            fn: c3_axis_fn,
            internal: {
              fn: c3_axis_internal_fn
            }
          };

          var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));

          _this.d3 = owner.d3;
          _this.internal = AxisInternal;
          return _this;
        }

        return Axis;
      }(Component);

      c3_axis_fn = Axis.prototype;

      c3_axis_fn.init = function init() {
        var $$ = this.owner,
            config = $$.config,
            main = $$.main;
        $$.axes.x = main.append("g").attr("class", CLASS.axis + ' ' + CLASS.axisX).attr("clip-path", config.axis_x_inner ? "" : $$.clipPathForXAxis).attr("transform", $$.getTranslate('x')).style("visibility", config.axis_x_show ? 'visible' : 'hidden');
        $$.axes.x.append("text").attr("class", CLASS.axisXLabel).attr("transform", config.axis_rotated ? "rotate(-90)" : "").style("text-anchor", this.textAnchorForXAxisLabel.bind(this));
        $$.axes.y = main.append("g").attr("class", CLASS.axis + ' ' + CLASS.axisY).attr("clip-path", config.axis_y_inner ? "" : $$.clipPathForYAxis).attr("transform", $$.getTranslate('y')).style("visibility", config.axis_y_show ? 'visible' : 'hidden');
        $$.axes.y.append("text").attr("class", CLASS.axisYLabel).attr("transform", config.axis_rotated ? "" : "rotate(-90)").style("text-anchor", this.textAnchorForYAxisLabel.bind(this));
        $$.axes.y2 = main.append("g").attr("class", CLASS.axis + ' ' + CLASS.axisY2) // clip-path?
        .attr("transform", $$.getTranslate('y2')).style("visibility", config.axis_y2_show ? 'visible' : 'hidden');
        $$.axes.y2.append("text").attr("class", CLASS.axisY2Label).attr("transform", config.axis_rotated ? "" : "rotate(-90)").style("text-anchor", this.textAnchorForY2AxisLabel.bind(this));
      };

      c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {
        var $$ = this.owner,
            config = $$.config,
            axisParams = {
          isCategory: $$.isCategorized(),
          withOuterTick: withOuterTick,
          tickMultiline: config.axis_x_tick_multiline,
          tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,
          tickWidth: config.axis_x_tick_width,
          tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,
          withoutTransition: withoutTransition
        },
            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);

        if ($$.isTimeSeries() && tickValues && typeof tickValues !== "function") {
          tickValues = tickValues.map(function (v) {
            return $$.parseDate(v);
          });
        } // Set tick


        axis.tickFormat(tickFormat).tickValues(tickValues);

        if ($$.isCategorized()) {
          axis.tickCentered(config.axis_x_tick_centered);

          if (isEmpty(config.axis_x_tick_culling)) {
            config.axis_x_tick_culling = false;
          }
        }

        return axis;
      };

      c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {
        var $$ = this.owner,
            config = $$.config,
            tickValues;

        if (config.axis_x_tick_fit || config.axis_x_tick_count) {
          tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());
        }

        if (axis) {
          axis.tickValues(tickValues);
        } else {
          $$.xAxis.tickValues(tickValues);
          $$.subXAxis.tickValues(tickValues);
        }

        return tickValues;
      };

      c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {
        var $$ = this.owner,
            config = $$.config,
            axisParams = {
          withOuterTick: withOuterTick,
          withoutTransition: withoutTransition,
          tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate
        },
            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);

        if ($$.isTimeSeriesY()) {
          axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);
        } else {
          axis.tickValues(tickValues);
        }

        return axis;
      };

      c3_axis_fn.getId = function getId(id) {
        var config = this.owner.config;
        return id in config.data_axes ? config.data_axes[id] : 'y';
      };

      c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {
        var $$ = this.owner,
            config = $$.config,
            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {
          return v < 0 ? v.toFixed(0) : v;
        };

        if (config.axis_x_tick_format) {
          if (isFunction(config.axis_x_tick_format)) {
            format = config.axis_x_tick_format;
          } else if ($$.isTimeSeries()) {
            format = function format(date) {
              return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : "";
            };
          }
        }

        return isFunction(format) ? function (v) {
          return format.call($$, v);
        } : format;
      };

      c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {
        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;
      };

      c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {
        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);
      };

      c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {
        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);
      };

      c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {
        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);
      };

      c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {
        var $$ = this.owner,
            config = $$.config,
            option;

        if (axisId === 'y') {
          option = config.axis_y_label;
        } else if (axisId === 'y2') {
          option = config.axis_y2_label;
        } else if (axisId === 'x') {
          option = config.axis_x_label;
        }

        return option;
      };

      c3_axis_fn.getLabelText = function getLabelText(axisId) {
        var option = this.getLabelOptionByAxisId(axisId);
        return isString(option) ? option : option ? option.text : null;
      };

      c3_axis_fn.setLabelText = function setLabelText(axisId, text) {
        var $$ = this.owner,
            config = $$.config,
            option = this.getLabelOptionByAxisId(axisId);

        if (isString(option)) {
          if (axisId === 'y') {
            config.axis_y_label = text;
          } else if (axisId === 'y2') {
            config.axis_y2_label = text;
          } else if (axisId === 'x') {
            config.axis_x_label = text;
          }
        } else if (option) {
          option.text = text;
        }
      };

      c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {
        var option = this.getLabelOptionByAxisId(axisId),
            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;
        return {
          isInner: position.indexOf('inner') >= 0,
          isOuter: position.indexOf('outer') >= 0,
          isLeft: position.indexOf('left') >= 0,
          isCenter: position.indexOf('center') >= 0,
          isRight: position.indexOf('right') >= 0,
          isTop: position.indexOf('top') >= 0,
          isMiddle: position.indexOf('middle') >= 0,
          isBottom: position.indexOf('bottom') >= 0
        };
      };

      c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {
        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');
      };

      c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {
        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');
      };

      c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {
        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');
      };

      c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {
        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();
      };

      c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {
        return this.getLabelText('x');
      };

      c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {
        return this.getLabelText('y');
      };

      c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {
        return this.getLabelText('y2');
      };

      c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {
        var $$ = this.owner;

        if (forHorizontal) {
          return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;
        } else {
          return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;
        }
      };

      c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {
        if (forHorizontal) {
          return position.isLeft ? "0.5em" : position.isRight ? "-0.5em" : "0";
        } else {
          return position.isTop ? "-0.5em" : position.isBottom ? "0.5em" : "0";
        }
      };

      c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {
        if (forHorizontal) {
          return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';
        } else {
          return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';
        }
      };

      c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {
        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());
      };

      c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {
        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());
      };

      c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {
        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());
      };

      c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {
        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());
      };

      c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {
        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());
      };

      c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {
        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());
      };

      c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {
        var $$ = this.owner,
            config = $$.config,
            position = this.getXAxisLabelPosition();

        if (config.axis_rotated) {
          return position.isInner ? "1.2em" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));
        } else {
          return position.isInner ? "-0.5em" : config.axis_x_height ? config.axis_x_height - 10 : "3em";
        }
      };

      c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {
        var $$ = this.owner,
            position = this.getYAxisLabelPosition();

        if ($$.config.axis_rotated) {
          return position.isInner ? "-0.5em" : "3em";
        } else {
          return position.isInner ? "1.2em" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);
        }
      };

      c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {
        var $$ = this.owner,
            position = this.getY2AxisLabelPosition();

        if ($$.config.axis_rotated) {
          return position.isInner ? "1.2em" : "-2.2em";
        } else {
          return position.isInner ? "-0.5em" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);
        }
      };

      c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {
        var $$ = this.owner;
        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());
      };

      c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {
        var $$ = this.owner;
        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());
      };

      c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {
        var $$ = this.owner;
        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());
      };

      c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {
        var $$ = this.owner,
            config = $$.config,
            maxWidth = 0,
            targetsToShow,
            scale,
            axis,
            dummy,
            svg;

        if (withoutRecompute && $$.currentMaxTickWidths[id]) {
          return $$.currentMaxTickWidths[id];
        }

        if ($$.svg) {
          targetsToShow = $$.filterTargetsToShow($$.data.targets);

          if (id === 'y') {
            scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));
            axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);
          } else if (id === 'y2') {
            scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));
            axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);
          } else {
            scale = $$.x.copy().domain($$.getXDomain(targetsToShow));
            axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);
            this.updateXAxisTickValues(targetsToShow, axis);
          }

          dummy = $$.d3.select('body').append('div').classed('c3', true);
          svg = dummy.append("svg").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {
            $$.d3.select(this).selectAll('text').each(function () {
              var box = this.getBoundingClientRect();

              if (maxWidth < box.width) {
                maxWidth = box.width;
              }
            });
            dummy.remove();
          });
        }

        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;
        return $$.currentMaxTickWidths[id];
      };

      c3_axis_fn.updateLabels = function updateLabels(withTransition) {
        var $$ = this.owner;
        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),
            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),
            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);
        (withTransition ? axisXLabel.transition() : axisXLabel).attr("x", this.xForXAxisLabel.bind(this)).attr("dx", this.dxForXAxisLabel.bind(this)).attr("dy", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));
        (withTransition ? axisYLabel.transition() : axisYLabel).attr("x", this.xForYAxisLabel.bind(this)).attr("dx", this.dxForYAxisLabel.bind(this)).attr("dy", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));
        (withTransition ? axisY2Label.transition() : axisY2Label).attr("x", this.xForY2AxisLabel.bind(this)).attr("dx", this.dxForY2AxisLabel.bind(this)).attr("dy", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));
      };

      c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {
        var p = typeof padding === 'number' ? padding : padding[key];

        if (!isValue(p)) {
          return defaultValue;
        }

        if (padding.unit === 'ratio') {
          return padding[key] * domainLength;
        } // assume padding is pixels if unit is not specified


        return this.convertPixelsToAxisPadding(p, domainLength);
      };

      c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {
        var $$ = this.owner,
            length = $$.config.axis_rotated ? $$.width : $$.height;
        return domainLength * (pixels / length);
      };

      c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {
        var tickValues = values,
            targetCount,
            start,
            end,
            count,
            interval,
            i,
            tickValue;

        if (tickCount) {
          targetCount = isFunction(tickCount) ? tickCount() : tickCount; // compute ticks according to tickCount

          if (targetCount === 1) {
            tickValues = [values[0]];
          } else if (targetCount === 2) {
            tickValues = [values[0], values[values.length - 1]];
          } else if (targetCount > 2) {
            count = targetCount - 2;
            start = values[0];
            end = values[values.length - 1];
            interval = (end - start) / (count + 1); // re-construct unique values

            tickValues = [start];

            for (i = 0; i < count; i++) {
              tickValue = +start + interval * (i + 1);
              tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);
            }

            tickValues.push(end);
          }
        }

        if (!forTimeSeries) {
          tickValues = tickValues.sort(function (a, b) {
            return a - b;
          });
        }

        return tickValues;
      };

      c3_axis_fn.generateTransitions = function generateTransitions(duration) {
        var $$ = this.owner,
            axes = $$.axes;
        return {
          axisX: duration ? axes.x.transition().duration(duration) : axes.x,
          axisY: duration ? axes.y.transition().duration(duration) : axes.y,
          axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,
          axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx
        };
      };

      c3_axis_fn.redraw = function redraw(transitions, isHidden) {
        var $$ = this.owner;
        $$.axes.x.style("opacity", isHidden ? 0 : 1);
        $$.axes.y.style("opacity", isHidden ? 0 : 1);
        $$.axes.y2.style("opacity", isHidden ? 0 : 1);
        $$.axes.subx.style("opacity", isHidden ? 0 : 1);
        transitions.axisX.call($$.xAxis);
        transitions.axisY.call($$.yAxis);
        transitions.axisY2.call($$.y2Axis);
        transitions.axisSubX.call($$.subXAxis);
      };

      var c3 = {
        version: "0.4.24"
      };
      var c3_chart_fn;
      var c3_chart_internal_fn;

      function Component(owner, componentKey, fn) {
        this.owner = owner;
        c3.chart.internal[componentKey] = fn;
      }

      function Chart(config) {
        var $$ = this.internal = new ChartInternal(this);
        $$.loadConfig(config);
        $$.beforeInit(config);
        $$.init();
        $$.afterInit(config); // bind "this" to nested API

        (function bindThis(fn, target, argThis) {
          Object.keys(fn).forEach(function (key) {
            target[key] = fn[key].bind(argThis);

            if (Object.keys(fn[key]).length > 0) {
              bindThis(fn[key], target[key], argThis);
            }
          });
        })(c3_chart_fn, this, this);
      }

      function ChartInternal(api) {
        var $$ = this;
        $$.d3 = window.d3 ? window.d3 : true ? __webpack_require__(
        /*! d3 */
        "./node_modules/c3/node_modules/d3/d3.js") : undefined;
        $$.api = api;
        $$.config = $$.getDefaultConfig();
        $$.data = {};
        $$.cache = {};
        $$.axes = {};
      }

      c3.generate = function (config) {
        return new Chart(config);
      };

      c3.chart = {
        fn: Chart.prototype,
        internal: {
          fn: ChartInternal.prototype
        }
      };
      c3_chart_fn = c3.chart.fn;
      c3_chart_internal_fn = c3.chart.internal.fn;

      c3_chart_internal_fn.beforeInit = function () {// can do something
      };

      c3_chart_internal_fn.afterInit = function () {// can do something
      };

      c3_chart_internal_fn.init = function () {
        var $$ = this,
            config = $$.config;
        $$.initParams();

        if (config.data_url) {
          $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);
        } else if (config.data_json) {
          $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));
        } else if (config.data_rows) {
          $$.initWithData($$.convertRowsToData(config.data_rows));
        } else if (config.data_columns) {
          $$.initWithData($$.convertColumnsToData(config.data_columns));
        } else {
          throw Error('url or json or rows or columns is required.');
        }
      };

      c3_chart_internal_fn.initParams = function () {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config; // MEMO: clipId needs to be unique because it conflicts when multiple charts exist

        $$.clipId = "c3-" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);
        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;
        $$.dragging = false;
        $$.flowing = false;
        $$.cancelClick = false;
        $$.mouseover = false;
        $$.transiting = false;
        $$.color = $$.generateColor();
        $$.levelColor = $$.generateLevelColor();
        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;
        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;
        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[".%L", function (d) {
          return d.getMilliseconds();
        }], [":%S", function (d) {
          return d.getSeconds();
        }], ["%I:%M", function (d) {
          return d.getMinutes();
        }], ["%I %p", function (d) {
          return d.getHours();
        }], ["%-m/%-d", function (d) {
          return d.getDay() && d.getDate() !== 1;
        }], ["%-m/%-d", function (d) {
          return d.getDate() !== 1;
        }], ["%-m/%-d", function (d) {
          return d.getMonth();
        }], ["%Y/%-m/%-d", function () {
          return true;
        }]]);
        $$.hiddenTargetIds = [];
        $$.hiddenLegendIds = [];
        $$.focusedTargetIds = [];
        $$.defocusedTargetIds = [];
        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? "right" : "left" : config.axis_x_inner ? "top" : "bottom";
        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? "top" : "bottom" : config.axis_y_inner ? "right" : "left";
        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? "bottom" : "top" : config.axis_y2_inner ? "left" : "right";
        $$.subXOrient = config.axis_rotated ? "left" : "bottom";
        $$.isLegendRight = config.legend_position === 'right';
        $$.isLegendInset = config.legend_position === 'inset';
        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';
        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';
        $$.legendStep = 0;
        $$.legendItemWidth = 0;
        $$.legendItemHeight = 0;
        $$.currentMaxTickWidths = {
          x: 0,
          y: 0,
          y2: 0
        };
        $$.rotated_padding_left = 30;
        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;
        $$.rotated_padding_top = 5;
        $$.withoutFadeIn = {};
        $$.intervalForObserveInserted = undefined;
        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js
      };

      c3_chart_internal_fn.initChartElements = function () {
        if (this.initBar) {
          this.initBar();
        }

        if (this.initLine) {
          this.initLine();
        }

        if (this.initArc) {
          this.initArc();
        }

        if (this.initGauge) {
          this.initGauge();
        }

        if (this.initText) {
          this.initText();
        }
      };

      c3_chart_internal_fn.initWithData = function (data) {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config;
        var defs,
            main,
            binding = true;
        $$.axis = new Axis($$);

        if ($$.initPie) {
          $$.initPie();
        }

        if ($$.initBrush) {
          $$.initBrush();
        }

        if ($$.initZoom) {
          $$.initZoom();
        }

        if (!config.bindto) {
          $$.selectChart = d3.selectAll([]);
        } else if (typeof config.bindto.node === 'function') {
          $$.selectChart = config.bindto;
        } else {
          $$.selectChart = d3.select(config.bindto);
        }

        if ($$.selectChart.empty()) {
          $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);
          $$.observeInserted($$.selectChart);
          binding = false;
        }

        $$.selectChart.html("").classed("c3", true); // Init data as targets

        $$.data.xs = {};
        $$.data.targets = $$.convertDataToTargets(data);

        if (config.data_filter) {
          $$.data.targets = $$.data.targets.filter(config.data_filter);
        } // Set targets to hide if needed


        if (config.data_hide) {
          $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);
        }

        if (config.legend_hide) {
          $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);
        } // Init sizes and scales


        $$.updateSizes();
        $$.updateScales(); // Set domains for each scale

        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));
        $$.y.domain($$.getYDomain($$.data.targets, 'y'));
        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));
        $$.subX.domain($$.x.domain());
        $$.subY.domain($$.y.domain());
        $$.subY2.domain($$.y2.domain()); // Save original x domain for zoom update

        $$.orgXDomain = $$.x.domain(); // Set initialized scales to brush and zoom

        if ($$.brush) {
          $$.brush.scale($$.subX);
        }

        if (config.zoom_enabled) {
          $$.zoom.scale($$.x);
        }
        /*-- Basic Elements --*/
        // Define svgs


        $$.svg = $$.selectChart.append("svg").style("overflow", "hidden").on('mouseenter', function () {
          return config.onmouseover.call($$);
        }).on('mouseleave', function () {
          return config.onmouseout.call($$);
        });

        if ($$.config.svg_classname) {
          $$.svg.attr('class', $$.config.svg_classname);
        } // Define defs


        defs = $$.svg.append("defs");
        $$.clipChart = $$.appendClip(defs, $$.clipId);
        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);
        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);
        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);
        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);
        $$.updateSvgSize(); // Define regions

        main = $$.main = $$.svg.append("g").attr("transform", $$.getTranslate('main'));

        if ($$.initSubchart) {
          $$.initSubchart();
        }

        if ($$.initTooltip) {
          $$.initTooltip();
        }

        if ($$.initLegend) {
          $$.initLegend();
        }

        if ($$.initTitle) {
          $$.initTitle();
        }
        /*-- Main Region --*/
        // text when empty


        main.append("text").attr("class", CLASS.text + ' ' + CLASS.empty).attr("text-anchor", "middle") // horizontal centering of text at x position in all browsers.
        .attr("dominant-baseline", "middle"); // vertical centering of text at y position in all browsers, except IE.
        // Regions

        $$.initRegion(); // Grids

        $$.initGrid(); // Define g for chart area

        main.append('g').attr("clip-path", $$.clipPath).attr('class', CLASS.chart); // Grid lines

        if (config.grid_lines_front) {
          $$.initGridLines();
        } // Cover whole with rects for events


        $$.initEventRect(); // Define g for chart

        $$.initChartElements(); // if zoom privileged, insert rect to forefront
        // TODO: is this needed?

        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on("dblclick.zoom", null); // Set default extent if defined

        if (config.axis_x_extent) {
          $$.brush.extent($$.getDefaultExtent());
        } // Add Axis


        $$.axis.init(); // Set targets

        $$.updateTargets($$.data.targets); // Draw with targets

        if (binding) {
          $$.updateDimension();
          $$.config.oninit.call($$);
          $$.redraw({
            withTransition: false,
            withTransform: true,
            withUpdateXDomain: true,
            withUpdateOrgXDomain: true,
            withTransitionForAxis: false
          });
        } // Bind resize event


        $$.bindResize(); // export element of the chart

        $$.api.element = $$.selectChart.node();
      };

      c3_chart_internal_fn.smoothLines = function (el, type) {
        var $$ = this;

        if (type === 'grid') {
          el.each(function () {
            var g = $$.d3.select(this),
                x1 = g.attr('x1'),
                x2 = g.attr('x2'),
                y1 = g.attr('y1'),
                y2 = g.attr('y2');
            g.attr({
              'x1': Math.ceil(x1),
              'x2': Math.ceil(x2),
              'y1': Math.ceil(y1),
              'y2': Math.ceil(y2)
            });
          });
        }
      };

      c3_chart_internal_fn.updateSizes = function () {
        var $$ = this,
            config = $$.config;
        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,
            legendWidth = $$.legend ? $$.getLegendWidth() : 0,
            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,
            hasArc = $$.hasArcType(),
            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),
            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;
        $$.currentWidth = $$.getCurrentWidth();
        $$.currentHeight = $$.getCurrentHeight(); // for main

        $$.margin = config.axis_rotated ? {
          top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),
          right: hasArc ? 0 : $$.getCurrentPaddingRight(),
          bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),
          left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())
        } : {
          top: 4 + $$.getCurrentPaddingTop(),
          // for top tick text
          right: hasArc ? 0 : $$.getCurrentPaddingRight(),
          bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),
          left: hasArc ? 0 : $$.getCurrentPaddingLeft()
        }; // for subchart

        $$.margin2 = config.axis_rotated ? {
          top: $$.margin.top,
          right: NaN,
          bottom: 20 + legendHeightForBottom,
          left: $$.rotated_padding_left
        } : {
          top: $$.currentHeight - subchartHeight - legendHeightForBottom,
          right: NaN,
          bottom: xAxisHeight + legendHeightForBottom,
          left: $$.margin.left
        }; // for legend

        $$.margin3 = {
          top: 0,
          right: NaN,
          bottom: 0,
          left: 0
        };

        if ($$.updateSizeForLegend) {
          $$.updateSizeForLegend(legendHeight, legendWidth);
        }

        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;
        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;

        if ($$.width < 0) {
          $$.width = 0;
        }

        if ($$.height < 0) {
          $$.height = 0;
        }

        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;
        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;

        if ($$.width2 < 0) {
          $$.width2 = 0;
        }

        if ($$.height2 < 0) {
          $$.height2 = 0;
        } // for arc


        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);
        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);

        if ($$.hasType('gauge') && !config.gauge_fullCircle) {
          $$.arcHeight += $$.height - $$.getGaugeLabelHeight();
        }

        if ($$.updateRadius) {
          $$.updateRadius();
        }

        if ($$.isLegendRight && hasArc) {
          $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;
        }
      };

      c3_chart_internal_fn.updateTargets = function (targets) {
        var $$ = this;
        /*-- Main --*/
        //-- Text --//

        $$.updateTargetsForText(targets); //-- Bar --//

        $$.updateTargetsForBar(targets); //-- Line --//

        $$.updateTargetsForLine(targets); //-- Arc --//

        if ($$.hasArcType() && $$.updateTargetsForArc) {
          $$.updateTargetsForArc(targets);
        }
        /*-- Sub --*/


        if ($$.updateTargetsForSubchart) {
          $$.updateTargetsForSubchart(targets);
        } // Fade-in each chart


        $$.showTargets();
      };

      c3_chart_internal_fn.showTargets = function () {
        var $$ = this;
        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {
          return $$.isTargetToShow(d.id);
        }).transition().duration($$.config.transition_duration).style("opacity", 1);
      };

      c3_chart_internal_fn.redraw = function (options, transitions) {
        var $$ = this,
            main = $$.main,
            d3 = $$.d3,
            config = $$.config;
        var areaIndices = $$.getShapeIndices($$.isAreaType),
            barIndices = $$.getShapeIndices($$.isBarType),
            lineIndices = $$.getShapeIndices($$.isLineType);
        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;
        var hideAxis = $$.hasArcType();
        var drawArea, drawBar, drawLine, xForText, yForText;
        var duration, durationForExit, durationForAxis;
        var waitForDraw, flow;
        var targetsToShow = $$.filterTargetsToShow($$.data.targets),
            tickValues,
            i,
            intervalForCulling,
            xDomainForZoom;
        var xv = $$.xv.bind($$),
            cx,
            cy;
        options = options || {};
        withY = getOption(options, "withY", true);
        withSubchart = getOption(options, "withSubchart", true);
        withTransition = getOption(options, "withTransition", true);
        withTransform = getOption(options, "withTransform", false);
        withUpdateXDomain = getOption(options, "withUpdateXDomain", false);
        withUpdateOrgXDomain = getOption(options, "withUpdateOrgXDomain", false);
        withTrimXDomain = getOption(options, "withTrimXDomain", true);
        withUpdateXAxis = getOption(options, "withUpdateXAxis", withUpdateXDomain);
        withLegend = getOption(options, "withLegend", false);
        withEventRect = getOption(options, "withEventRect", true);
        withDimension = getOption(options, "withDimension", true);
        withTransitionForExit = getOption(options, "withTransitionForExit", withTransition);
        withTransitionForAxis = getOption(options, "withTransitionForAxis", withTransition);
        duration = withTransition ? config.transition_duration : 0;
        durationForExit = withTransitionForExit ? duration : 0;
        durationForAxis = withTransitionForAxis ? duration : 0;
        transitions = transitions || $$.axis.generateTransitions(durationForAxis); // update legend and transform each g

        if (withLegend && config.legend_show) {
          $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);
        } else if (withDimension) {
          // need to update dimension (e.g. axis.y.tick.values) because y tick values should change
          // no need to update axis in it because they will be updated in redraw()
          $$.updateDimension(true);
        } // MEMO: needed for grids calculation


        if ($$.isCategorized() && targetsToShow.length === 0) {
          $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);
        }

        if (targetsToShow.length) {
          $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);

          if (!config.axis_x_tick_values) {
            tickValues = $$.axis.updateXAxisTickValues(targetsToShow);
          }
        } else {
          $$.xAxis.tickValues([]);
          $$.subXAxis.tickValues([]);
        }

        if (config.zoom_rescale && !options.flow) {
          xDomainForZoom = $$.x.orgDomain();
        }

        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));
        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));

        if (!config.axis_y_tick_values && config.axis_y_tick_count) {
          $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));
        }

        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {
          $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));
        } // axes


        $$.axis.redraw(transitions, hideAxis); // Update axis label

        $$.axis.updateLabels(withTransition); // show/hide if manual culling needed

        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {
          if (config.axis_x_tick_culling && tickValues) {
            for (i = 1; i < tickValues.length; i++) {
              if (tickValues.length / i < config.axis_x_tick_culling_max) {
                intervalForCulling = i;
                break;
              }
            }

            $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {
              var index = tickValues.indexOf(e);

              if (index >= 0) {
                d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');
              }
            });
          } else {
            $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');
          }
        } // setup drawer - MEMO: these must be called after axis updated


        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;
        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;
        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;
        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);
        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false); // Update sub domain

        if (withY) {
          $$.subY.domain($$.getYDomain(targetsToShow, 'y'));
          $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));
        } // xgrid focus


        $$.updateXgridFocus(); // Data empty label positioning and text.

        main.select("text." + CLASS.text + '.' + CLASS.empty).attr("x", $$.width / 2).attr("y", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1); // grid

        $$.updateGrid(duration); // rect for regions

        $$.updateRegion(duration); // bars

        $$.updateBar(durationForExit); // lines, areas and cricles

        $$.updateLine(durationForExit);
        $$.updateArea(durationForExit);
        $$.updateCircle(); // text

        if ($$.hasDataLabel()) {
          $$.updateText(durationForExit);
        } // title


        if ($$.redrawTitle) {
          $$.redrawTitle();
        } // arc


        if ($$.redrawArc) {
          $$.redrawArc(duration, durationForExit, withTransform);
        } // subchart


        if ($$.redrawSubchart) {
          $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);
        } // circles for select


        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove(); // event rects will redrawn when flow called

        if (config.interaction_enabled && !options.flow && withEventRect) {
          $$.redrawEventRect();

          if ($$.updateZoom) {
            $$.updateZoom();
          }
        } // update circleY based on updated parameters


        $$.updateCircleY(); // generate circle x/y functions depending on updated params

        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);
        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);

        if (options.flow) {
          flow = $$.generateFlow({
            targets: targetsToShow,
            flow: options.flow,
            duration: options.flow.duration,
            drawBar: drawBar,
            drawLine: drawLine,
            drawArea: drawArea,
            cx: cx,
            cy: cy,
            xv: xv,
            xForText: xForText,
            yForText: yForText
          });
        }

        if ((duration || flow) && $$.isTabVisible()) {
          // Only use transition if tab visible. See #938.
          // transition should be derived from one transition
          d3.transition().duration(duration).each(function () {
            var transitionsToWait = []; // redraw and gather transitions

            [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {
              transitions.forEach(function (transition) {
                transitionsToWait.push(transition);
              });
            }); // Wait for end of transitions to call flow and onrendered callback

            waitForDraw = $$.generateWait();
            transitionsToWait.forEach(function (t) {
              waitForDraw.add(t);
            });
          }).call(waitForDraw, function () {
            if (flow) {
              flow();
            }

            if (config.onrendered) {
              config.onrendered.call($$);
            }
          });
        } else {
          $$.redrawBar(drawBar);
          $$.redrawLine(drawLine);
          $$.redrawArea(drawArea);
          $$.redrawCircle(cx, cy);
          $$.redrawText(xForText, yForText, options.flow);
          $$.redrawRegion();
          $$.redrawGrid();

          if (config.onrendered) {
            config.onrendered.call($$);
          }
        } // update fadein condition


        $$.mapToIds($$.data.targets).forEach(function (id) {
          $$.withoutFadeIn[id] = true;
        });
      };

      c3_chart_internal_fn.updateAndRedraw = function (options) {
        var $$ = this,
            config = $$.config,
            transitions;
        options = options || {}; // same with redraw

        options.withTransition = getOption(options, "withTransition", true);
        options.withTransform = getOption(options, "withTransform", false);
        options.withLegend = getOption(options, "withLegend", false); // NOT same with redraw

        options.withUpdateXDomain = true;
        options.withUpdateOrgXDomain = true;
        options.withTransitionForExit = false;
        options.withTransitionForTransform = getOption(options, "withTransitionForTransform", options.withTransition); // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)

        $$.updateSizes(); // MEMO: called in updateLegend in redraw if withLegend

        if (!(options.withLegend && config.legend_show)) {
          transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0); // Update scales

          $$.updateScales();
          $$.updateSvgSize(); // Update g positions

          $$.transformAll(options.withTransitionForTransform, transitions);
        } // Draw with new sizes & scales


        $$.redraw(options, transitions);
      };

      c3_chart_internal_fn.redrawWithoutRescale = function () {
        this.redraw({
          withY: false,
          withSubchart: false,
          withEventRect: false,
          withTransitionForAxis: false
        });
      };

      c3_chart_internal_fn.isTimeSeries = function () {
        return this.config.axis_x_type === 'timeseries';
      };

      c3_chart_internal_fn.isCategorized = function () {
        return this.config.axis_x_type.indexOf('categor') >= 0;
      };

      c3_chart_internal_fn.isCustomX = function () {
        var $$ = this,
            config = $$.config;
        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));
      };

      c3_chart_internal_fn.isTimeSeriesY = function () {
        return this.config.axis_y_type === 'timeseries';
      };

      c3_chart_internal_fn.getTranslate = function (target) {
        var $$ = this,
            config = $$.config,
            x,
            y;

        if (target === 'main') {
          x = asHalfPixel($$.margin.left);
          y = asHalfPixel($$.margin.top);
        } else if (target === 'context') {
          x = asHalfPixel($$.margin2.left);
          y = asHalfPixel($$.margin2.top);
        } else if (target === 'legend') {
          x = $$.margin3.left;
          y = $$.margin3.top;
        } else if (target === 'x') {
          x = 0;
          y = config.axis_rotated ? 0 : $$.height;
        } else if (target === 'y') {
          x = 0;
          y = config.axis_rotated ? $$.height : 0;
        } else if (target === 'y2') {
          x = config.axis_rotated ? 0 : $$.width;
          y = config.axis_rotated ? 1 : 0;
        } else if (target === 'subx') {
          x = 0;
          y = config.axis_rotated ? 0 : $$.height2;
        } else if (target === 'arc') {
          x = $$.arcWidth / 2;
          y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label
        }

        return "translate(" + x + "," + y + ")";
      };

      c3_chart_internal_fn.initialOpacity = function (d) {
        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;
      };

      c3_chart_internal_fn.initialOpacityForCircle = function (d) {
        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;
      };

      c3_chart_internal_fn.opacityForCircle = function (d) {
        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;
        var opacity = isPointShouldBeShown ? 1 : 0;
        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;
      };

      c3_chart_internal_fn.opacityForText = function () {
        return this.hasDataLabel() ? 1 : 0;
      };

      c3_chart_internal_fn.xx = function (d) {
        return d ? this.x(d.x) : null;
      };

      c3_chart_internal_fn.xv = function (d) {
        var $$ = this,
            value = d.value;

        if ($$.isTimeSeries()) {
          value = $$.parseDate(d.value);
        } else if ($$.isCategorized() && typeof d.value === 'string') {
          value = $$.config.axis_x_categories.indexOf(d.value);
        }

        return Math.ceil($$.x(value));
      };

      c3_chart_internal_fn.yv = function (d) {
        var $$ = this,
            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;
        return Math.ceil(yScale(d.value));
      };

      c3_chart_internal_fn.subxx = function (d) {
        return d ? this.subX(d.x) : null;
      };

      c3_chart_internal_fn.transformMain = function (withTransition, transitions) {
        var $$ = this,
            xAxis,
            yAxis,
            y2Axis;

        if (transitions && transitions.axisX) {
          xAxis = transitions.axisX;
        } else {
          xAxis = $$.main.select('.' + CLASS.axisX);

          if (withTransition) {
            xAxis = xAxis.transition();
          }
        }

        if (transitions && transitions.axisY) {
          yAxis = transitions.axisY;
        } else {
          yAxis = $$.main.select('.' + CLASS.axisY);

          if (withTransition) {
            yAxis = yAxis.transition();
          }
        }

        if (transitions && transitions.axisY2) {
          y2Axis = transitions.axisY2;
        } else {
          y2Axis = $$.main.select('.' + CLASS.axisY2);

          if (withTransition) {
            y2Axis = y2Axis.transition();
          }
        }

        (withTransition ? $$.main.transition() : $$.main).attr("transform", $$.getTranslate('main'));
        xAxis.attr("transform", $$.getTranslate('x'));
        yAxis.attr("transform", $$.getTranslate('y'));
        y2Axis.attr("transform", $$.getTranslate('y2'));
        $$.main.select('.' + CLASS.chartArcs).attr("transform", $$.getTranslate('arc'));
      };

      c3_chart_internal_fn.transformAll = function (withTransition, transitions) {
        var $$ = this;
        $$.transformMain(withTransition, transitions);

        if ($$.config.subchart_show) {
          $$.transformContext(withTransition, transitions);
        }

        if ($$.legend) {
          $$.transformLegend(withTransition);
        }
      };

      c3_chart_internal_fn.updateSvgSize = function () {
        var $$ = this,
            brush = $$.svg.select(".c3-brush .background");
        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);
        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);
        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));
        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));
        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);
        $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height); // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>

        $$.selectChart.style('max-height', $$.currentHeight + "px");
      };

      c3_chart_internal_fn.updateDimension = function (withoutAxis) {
        var $$ = this;

        if (!withoutAxis) {
          if ($$.config.axis_rotated) {
            $$.axes.x.call($$.xAxis);
            $$.axes.subx.call($$.subXAxis);
          } else {
            $$.axes.y.call($$.yAxis);
            $$.axes.y2.call($$.y2Axis);
          }
        }

        $$.updateSizes();
        $$.updateScales();
        $$.updateSvgSize();
        $$.transformAll(false);
      };

      c3_chart_internal_fn.observeInserted = function (selection) {
        var $$ = this,
            observer;

        if (typeof MutationObserver === 'undefined') {
          window.console.error("MutationObserver not defined.");
          return;
        }

        observer = new MutationObserver(function (mutations) {
          mutations.forEach(function (mutation) {
            if (mutation.type === 'childList' && mutation.previousSibling) {
              observer.disconnect(); // need to wait for completion of load because size calculation requires the actual sizes determined after that completion

              $$.intervalForObserveInserted = window.setInterval(function () {
                // parentNode will NOT be null when completed
                if (selection.node().parentNode) {
                  window.clearInterval($$.intervalForObserveInserted);
                  $$.updateDimension();

                  if ($$.brush) {
                    $$.brush.update();
                  }

                  $$.config.oninit.call($$);
                  $$.redraw({
                    withTransform: true,
                    withUpdateXDomain: true,
                    withUpdateOrgXDomain: true,
                    withTransition: false,
                    withTransitionForTransform: false,
                    withLegend: true
                  });
                  selection.transition().style('opacity', 1);
                }
              }, 10);
            }
          });
        });
        observer.observe(selection.node(), {
          attributes: true,
          childList: true,
          characterData: true
        });
      };

      c3_chart_internal_fn.bindResize = function () {
        var $$ = this,
            config = $$.config;
        $$.resizeFunction = $$.generateResize(); // need to call .remove

        $$.resizeFunction.add(function () {
          config.onresize.call($$);
        });

        if (config.resize_auto) {
          $$.resizeFunction.add(function () {
            if ($$.resizeTimeout !== undefined) {
              window.clearTimeout($$.resizeTimeout);
            }

            $$.resizeTimeout = window.setTimeout(function () {
              delete $$.resizeTimeout;
              $$.api.flush();
            }, 100);
          });
        }

        $$.resizeFunction.add(function () {
          config.onresized.call($$);
        });

        $$.resizeIfElementDisplayed = function () {
          // if element not displayed skip it
          if ($$.api == null || !$$.api.element.offsetParent) {
            return;
          }

          $$.resizeFunction();
        };

        if (window.attachEvent) {
          window.attachEvent('onresize', $$.resizeIfElementDisplayed);
        } else if (window.addEventListener) {
          window.addEventListener('resize', $$.resizeIfElementDisplayed, false);
        } else {
          // fallback to this, if this is a very old browser
          var wrapper = window.onresize;

          if (!wrapper) {
            // create a wrapper that will call all charts
            wrapper = $$.generateResize();
          } else if (!wrapper.add || !wrapper.remove) {
            // there is already a handler registered, make sure we call it too
            wrapper = $$.generateResize();
            wrapper.add(window.onresize);
          } // add this graph to the wrapper, we will be removed if the user calls destroy


          wrapper.add($$.resizeFunction);

          window.onresize = function () {
            // if element not displayed skip it
            if (!$$.api.element.offsetParent) {
              return;
            }

            wrapper();
          };
        }
      };

      c3_chart_internal_fn.generateResize = function () {
        var resizeFunctions = [];

        function callResizeFunctions() {
          resizeFunctions.forEach(function (f) {
            f();
          });
        }

        callResizeFunctions.add = function (f) {
          resizeFunctions.push(f);
        };

        callResizeFunctions.remove = function (f) {
          for (var i = 0; i < resizeFunctions.length; i++) {
            if (resizeFunctions[i] === f) {
              resizeFunctions.splice(i, 1);
              break;
            }
          }
        };

        return callResizeFunctions;
      };

      c3_chart_internal_fn.endall = function (transition, callback) {
        var n = 0;
        transition.each(function () {
          ++n;
        }).each("end", function () {
          if (! --n) {
            callback.apply(this, arguments);
          }
        });
      };

      c3_chart_internal_fn.generateWait = function () {
        var transitionsToWait = [],
            f = function f(transition, callback) {
          var timer = setInterval(function () {
            var done = 0;
            transitionsToWait.forEach(function (t) {
              if (t.empty()) {
                done += 1;
                return;
              }

              try {
                t.transition();
              } catch (e) {
                done += 1;
              }
            });

            if (done === transitionsToWait.length) {
              clearInterval(timer);

              if (callback) {
                callback();
              }
            }
          }, 10);
        };

        f.add = function (transition) {
          transitionsToWait.push(transition);
        };

        return f;
      };

      c3_chart_internal_fn.parseDate = function (date) {
        var $$ = this,
            parsedDate;

        if (date instanceof Date) {
          parsedDate = date;
        } else if (typeof date === 'string') {
          parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);
        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {
          parsedDate = new Date(+date);
        } else if (typeof date === 'number' && !isNaN(date)) {
          parsedDate = new Date(+date);
        }

        if (!parsedDate || isNaN(+parsedDate)) {
          window.console.error("Failed to parse x '" + date + "' to Date object");
        }

        return parsedDate;
      };

      c3_chart_internal_fn.isTabVisible = function () {
        var hidden;

        if (typeof document.hidden !== "undefined") {
          // Opera 12.10 and Firefox 18 and later support
          hidden = "hidden";
        } else if (typeof document.mozHidden !== "undefined") {
          hidden = "mozHidden";
        } else if (typeof document.msHidden !== "undefined") {
          hidden = "msHidden";
        } else if (typeof document.webkitHidden !== "undefined") {
          hidden = "webkitHidden";
        }

        return document[hidden] ? false : true;
      };

      c3_chart_internal_fn.isValue = isValue;
      c3_chart_internal_fn.isFunction = isFunction;
      c3_chart_internal_fn.isString = isString;
      c3_chart_internal_fn.isUndefined = isUndefined;
      c3_chart_internal_fn.isDefined = isDefined;
      c3_chart_internal_fn.ceil10 = ceil10;
      c3_chart_internal_fn.asHalfPixel = asHalfPixel;
      c3_chart_internal_fn.diffDomain = diffDomain;
      c3_chart_internal_fn.isEmpty = isEmpty;
      c3_chart_internal_fn.notEmpty = notEmpty;
      c3_chart_internal_fn.notEmpty = notEmpty;
      c3_chart_internal_fn.getOption = getOption;
      c3_chart_internal_fn.hasValue = hasValue;
      c3_chart_internal_fn.sanitise = sanitise;
      c3_chart_internal_fn.getPathBox = getPathBox;
      c3_chart_internal_fn.CLASS = CLASS;
      /* jshint ignore:start */
      // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use
      // this polyfill to avoid the confusion.
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill

      if (!Function.prototype.bind) {
        Function.prototype.bind = function (oThis) {
          if (typeof this !== 'function') {
            // closest thing possible to the ECMAScript 5
            // internal IsCallable function
            throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
          }

          var aArgs = Array.prototype.slice.call(arguments, 1),
              fToBind = this,
              fNOP = function fNOP() {},
              fBound = function fBound() {
            return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));
          };

          fNOP.prototype = this.prototype;
          fBound.prototype = new fNOP();
          return fBound;
        };
      } // SVGPathSeg API polyfill
      // https://github.com/progers/pathseg
      //
      // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from
      // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec
      // changes which were implemented in Firefox 43 and Chrome 46.


      (function () {
        if (!("SVGPathSeg" in window)) {
          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg
          window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {
            this.pathSegType = type;
            this.pathSegTypeAsLetter = typeAsLetter;
            this._owningPathSegList = owningPathSegList;
          };

          window.SVGPathSeg.prototype.classname = "SVGPathSeg";
          window.SVGPathSeg.PATHSEG_UNKNOWN = 0;
          window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;
          window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;
          window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;
          window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;
          window.SVGPathSeg.PATHSEG_LINETO_REL = 5;
          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;
          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;
          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;
          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;
          window.SVGPathSeg.PATHSEG_ARC_ABS = 10;
          window.SVGPathSeg.PATHSEG_ARC_REL = 11;
          window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;
          window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;
          window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;
          window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;
          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;
          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;
          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;
          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19; // Notify owning PathSegList on any changes so they can be synchronized back to the path element.

          window.SVGPathSeg.prototype._segmentChanged = function () {
            if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);
          };

          window.SVGPathSegClosePath = function (owningPathSegList) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, "z", owningPathSegList);
          };

          window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegClosePath.prototype.toString = function () {
            return "[object SVGPathSegClosePath]";
          };

          window.SVGPathSegClosePath.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter;
          };

          window.SVGPathSegClosePath.prototype.clone = function () {
            return new window.SVGPathSegClosePath(undefined);
          };

          window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, "M", owningPathSegList);
            this._x = x;
            this._y = y;
          };

          window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegMovetoAbs.prototype.toString = function () {
            return "[object SVGPathSegMovetoAbs]";
          };

          window.SVGPathSegMovetoAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x + " " + this._y;
          };

          window.SVGPathSegMovetoAbs.prototype.clone = function () {
            return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);
          };

          Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, "m", owningPathSegList);
            this._x = x;
            this._y = y;
          };

          window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegMovetoRel.prototype.toString = function () {
            return "[object SVGPathSegMovetoRel]";
          };

          window.SVGPathSegMovetoRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x + " " + this._y;
          };

          window.SVGPathSegMovetoRel.prototype.clone = function () {
            return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);
          };

          Object.defineProperty(window.SVGPathSegMovetoRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegMovetoRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, "L", owningPathSegList);
            this._x = x;
            this._y = y;
          };

          window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegLinetoAbs.prototype.toString = function () {
            return "[object SVGPathSegLinetoAbs]";
          };

          window.SVGPathSegLinetoAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x + " " + this._y;
          };

          window.SVGPathSegLinetoAbs.prototype.clone = function () {
            return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);
          };

          Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, "l", owningPathSegList);
            this._x = x;
            this._y = y;
          };

          window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegLinetoRel.prototype.toString = function () {
            return "[object SVGPathSegLinetoRel]";
          };

          window.SVGPathSegLinetoRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x + " " + this._y;
          };

          window.SVGPathSegLinetoRel.prototype.clone = function () {
            return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);
          };

          Object.defineProperty(window.SVGPathSegLinetoRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegLinetoRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, "C", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
            this._x2 = x2;
            this._y2 = y2;
          };

          window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {
            return "[object SVGPathSegCurvetoCubicAbs]";
          };

          window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {
            return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);
          };

          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, "x1", {
            get: function get() {
              return this._x1;
            },
            set: function set(x1) {
              this._x1 = x1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, "y1", {
            get: function get() {
              return this._y1;
            },
            set: function set(y1) {
              this._y1 = y1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, "x2", {
            get: function get() {
              return this._x2;
            },
            set: function set(x2) {
              this._x2 = x2;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, "y2", {
            get: function get() {
              return this._y2;
            },
            set: function set(y2) {
              this._y2 = y2;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, "c", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
            this._x2 = x2;
            this._y2 = y2;
          };

          window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {
            return "[object SVGPathSegCurvetoCubicRel]";
          };

          window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {
            return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);
          };

          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, "x1", {
            get: function get() {
              return this._x1;
            },
            set: function set(x1) {
              this._x1 = x1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, "y1", {
            get: function get() {
              return this._y1;
            },
            set: function set(y1) {
              this._y1 = y1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, "x2", {
            get: function get() {
              return this._x2;
            },
            set: function set(x2) {
              this._x2 = x2;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, "y2", {
            get: function get() {
              return this._y2;
            },
            set: function set(y2) {
              this._y2 = y2;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, "Q", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
          };

          window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {
            return "[object SVGPathSegCurvetoQuadraticAbs]";
          };

          window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {
            return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);
          };

          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, "x1", {
            get: function get() {
              return this._x1;
            },
            set: function set(x1) {
              this._x1 = x1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, "y1", {
            get: function get() {
              return this._y1;
            },
            set: function set(y1) {
              this._y1 = y1;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, "q", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x1 = x1;
            this._y1 = y1;
          };

          window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {
            return "[object SVGPathSegCurvetoQuadraticRel]";
          };

          window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x1 + " " + this._y1 + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {
            return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);
          };

          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, "x1", {
            get: function get() {
              return this._x1;
            },
            set: function set(x1) {
              this._x1 = x1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, "y1", {
            get: function get() {
              return this._y1;
            },
            set: function set(y1) {
              this._y1 = y1;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, "A", owningPathSegList);
            this._x = x;
            this._y = y;
            this._r1 = r1;
            this._r2 = r2;
            this._angle = angle;
            this._largeArcFlag = largeArcFlag;
            this._sweepFlag = sweepFlag;
          };

          window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegArcAbs.prototype.toString = function () {
            return "[object SVGPathSegArcAbs]";
          };

          window.SVGPathSegArcAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._r1 + " " + this._r2 + " " + this._angle + " " + (this._largeArcFlag ? "1" : "0") + " " + (this._sweepFlag ? "1" : "0") + " " + this._x + " " + this._y;
          };

          window.SVGPathSegArcAbs.prototype.clone = function () {
            return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);
          };

          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "r1", {
            get: function get() {
              return this._r1;
            },
            set: function set(r1) {
              this._r1 = r1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "r2", {
            get: function get() {
              return this._r2;
            },
            set: function set(r2) {
              this._r2 = r2;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "angle", {
            get: function get() {
              return this._angle;
            },
            set: function set(angle) {
              this._angle = angle;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "largeArcFlag", {
            get: function get() {
              return this._largeArcFlag;
            },
            set: function set(largeArcFlag) {
              this._largeArcFlag = largeArcFlag;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcAbs.prototype, "sweepFlag", {
            get: function get() {
              return this._sweepFlag;
            },
            set: function set(sweepFlag) {
              this._sweepFlag = sweepFlag;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, "a", owningPathSegList);
            this._x = x;
            this._y = y;
            this._r1 = r1;
            this._r2 = r2;
            this._angle = angle;
            this._largeArcFlag = largeArcFlag;
            this._sweepFlag = sweepFlag;
          };

          window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegArcRel.prototype.toString = function () {
            return "[object SVGPathSegArcRel]";
          };

          window.SVGPathSegArcRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._r1 + " " + this._r2 + " " + this._angle + " " + (this._largeArcFlag ? "1" : "0") + " " + (this._sweepFlag ? "1" : "0") + " " + this._x + " " + this._y;
          };

          window.SVGPathSegArcRel.prototype.clone = function () {
            return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);
          };

          Object.defineProperty(window.SVGPathSegArcRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcRel.prototype, "r1", {
            get: function get() {
              return this._r1;
            },
            set: function set(r1) {
              this._r1 = r1;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcRel.prototype, "r2", {
            get: function get() {
              return this._r2;
            },
            set: function set(r2) {
              this._r2 = r2;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcRel.prototype, "angle", {
            get: function get() {
              return this._angle;
            },
            set: function set(angle) {
              this._angle = angle;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcRel.prototype, "largeArcFlag", {
            get: function get() {
              return this._largeArcFlag;
            },
            set: function set(largeArcFlag) {
              this._largeArcFlag = largeArcFlag;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegArcRel.prototype, "sweepFlag", {
            get: function get() {
              return this._sweepFlag;
            },
            set: function set(sweepFlag) {
              this._sweepFlag = sweepFlag;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, "H", owningPathSegList);
            this._x = x;
          };

          window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {
            return "[object SVGPathSegLinetoHorizontalAbs]";
          };

          window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x;
          };

          window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {
            return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);
          };

          Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, "h", owningPathSegList);
            this._x = x;
          };

          window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {
            return "[object SVGPathSegLinetoHorizontalRel]";
          };

          window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x;
          };

          window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {
            return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);
          };

          Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, "V", owningPathSegList);
            this._y = y;
          };

          window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {
            return "[object SVGPathSegLinetoVerticalAbs]";
          };

          window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._y;
          };

          window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {
            return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);
          };

          Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, "v", owningPathSegList);
            this._y = y;
          };

          window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {
            return "[object SVGPathSegLinetoVerticalRel]";
          };

          window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._y;
          };

          window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {
            return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);
          };

          Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, "S", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x2 = x2;
            this._y2 = y2;
          };

          window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {
            return "[object SVGPathSegCurvetoCubicSmoothAbs]";
          };

          window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {
            return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);
          };

          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, "x2", {
            get: function get() {
              return this._x2;
            },
            set: function set(x2) {
              this._x2 = x2;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, "y2", {
            get: function get() {
              return this._y2;
            },
            set: function set(y2) {
              this._y2 = y2;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, "s", owningPathSegList);
            this._x = x;
            this._y = y;
            this._x2 = x2;
            this._y2 = y2;
          };

          window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {
            return "[object SVGPathSegCurvetoCubicSmoothRel]";
          };

          window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x2 + " " + this._y2 + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {
            return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);
          };

          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, "x2", {
            get: function get() {
              return this._x2;
            },
            set: function set(x2) {
              this._x2 = x2;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, "y2", {
            get: function get() {
              return this._y2;
            },
            set: function set(y2) {
              this._y2 = y2;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, "T", owningPathSegList);
            this._x = x;
            this._y = y;
          };

          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {
            return "[object SVGPathSegCurvetoQuadraticSmoothAbs]";
          };

          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {
            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);
          };

          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          });

          window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {
            window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, "t", owningPathSegList);
            this._x = x;
            this._y = y;
          };

          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);

          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {
            return "[object SVGPathSegCurvetoQuadraticSmoothRel]";
          };

          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {
            return this.pathSegTypeAsLetter + " " + this._x + " " + this._y;
          };

          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {
            return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);
          };

          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, "x", {
            get: function get() {
              return this._x;
            },
            set: function set(x) {
              this._x = x;

              this._segmentChanged();
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, "y", {
            get: function get() {
              return this._y;
            },
            set: function set(y) {
              this._y = y;

              this._segmentChanged();
            },
            enumerable: true
          }); // Add createSVGPathSeg* functions to window.SVGPathElement.
          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.

          window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {
            return new window.SVGPathSegClosePath(undefined);
          };

          window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {
            return new window.SVGPathSegMovetoAbs(undefined, x, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {
            return new window.SVGPathSegMovetoRel(undefined, x, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {
            return new window.SVGPathSegLinetoAbs(undefined, x, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {
            return new window.SVGPathSegLinetoRel(undefined, x, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {
            return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {
            return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {
            return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {
            return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);
          };

          window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {
            return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);
          };

          window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {
            return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);
          };

          window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {
            return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);
          };

          window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {
            return new window.SVGPathSegLinetoHorizontalRel(undefined, x);
          };

          window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {
            return new window.SVGPathSegLinetoVerticalAbs(undefined, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {
            return new window.SVGPathSegLinetoVerticalRel(undefined, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {
            return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {
            return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {
            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);
          };

          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {
            return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);
          };

          if (!("getPathSegAtLength" in window.SVGPathElement.prototype)) {
            // Add getPathSegAtLength to SVGPathElement.
            // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength
            // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.
            window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {
              if (distance === undefined || !isFinite(distance)) throw "Invalid arguments.";
              var measurementElement = document.createElementNS("http://www.w3.org/2000/svg", "path");
              measurementElement.setAttribute("d", this.getAttribute("d"));
              var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1; // If the path is empty, return 0.

              if (lastPathSegment <= 0) return 0;

              do {
                measurementElement.pathSegList.removeItem(lastPathSegment);
                if (distance > measurementElement.getTotalLength()) break;
                lastPathSegment--;
              } while (lastPathSegment > 0);

              return lastPathSegment;
            };
          }
        }

        if (!("SVGPathSegList" in window)) {
          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList
          window.SVGPathSegList = function (pathElement) {
            this._pathElement = pathElement;
            this._list = this._parsePath(this._pathElement.getAttribute("d")); // Use a MutationObserver to catch changes to the path's "d" attribute.

            this._mutationObserverConfig = {
              "attributes": true,
              "attributeFilter": ["d"]
            };
            this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));

            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);
          };

          window.SVGPathSegList.prototype.classname = "SVGPathSegList";
          Object.defineProperty(window.SVGPathSegList.prototype, "numberOfItems", {
            get: function get() {
              this._checkPathSynchronizedToList();

              return this._list.length;
            },
            enumerable: true
          }); // Add the pathSegList accessors to window.SVGPathElement.
          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData

          Object.defineProperty(window.SVGPathElement.prototype, "pathSegList", {
            get: function get() {
              if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);
              return this._pathSegList;
            },
            enumerable: true
          }); // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.

          Object.defineProperty(window.SVGPathElement.prototype, "normalizedPathSegList", {
            get: function get() {
              return this.pathSegList;
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathElement.prototype, "animatedPathSegList", {
            get: function get() {
              return this.pathSegList;
            },
            enumerable: true
          });
          Object.defineProperty(window.SVGPathElement.prototype, "animatedNormalizedPathSegList", {
            get: function get() {
              return this.pathSegList;
            },
            enumerable: true
          }); // Process any pending mutations to the path element and update the list as needed.
          // This should be the first call of all public functions and is needed because
          // MutationObservers are not synchronous so we can have pending asynchronous mutations.

          window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {
            this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());
          };

          window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {
            if (!this._pathElement) return;
            var hasPathMutations = false;
            mutationRecords.forEach(function (record) {
              if (record.attributeName == "d") hasPathMutations = true;
            });
            if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute("d"));
          }; // Serialize the list and update the path's 'd' attribute.


          window.SVGPathSegList.prototype._writeListToPath = function () {
            this._pathElementMutationObserver.disconnect();

            this._pathElement.setAttribute("d", window.SVGPathSegList._pathSegArrayAsString(this._list));

            this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);
          }; // When a path segment changes the list needs to be synchronized back to the path element.


          window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {
            this._writeListToPath();
          };

          window.SVGPathSegList.prototype.clear = function () {
            this._checkPathSynchronizedToList();

            this._list.forEach(function (pathSeg) {
              pathSeg._owningPathSegList = null;
            });

            this._list = [];

            this._writeListToPath();
          };

          window.SVGPathSegList.prototype.initialize = function (newItem) {
            this._checkPathSynchronizedToList();

            this._list = [newItem];
            newItem._owningPathSegList = this;

            this._writeListToPath();

            return newItem;
          };

          window.SVGPathSegList.prototype._checkValidIndex = function (index) {
            if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw "INDEX_SIZE_ERR";
          };

          window.SVGPathSegList.prototype.getItem = function (index) {
            this._checkPathSynchronizedToList();

            this._checkValidIndex(index);

            return this._list[index];
          };

          window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {
            this._checkPathSynchronizedToList(); // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.


            if (index > this.numberOfItems) index = this.numberOfItems;

            if (newItem._owningPathSegList) {
              // SVG2 spec says to make a copy.
              newItem = newItem.clone();
            }

            this._list.splice(index, 0, newItem);

            newItem._owningPathSegList = this;

            this._writeListToPath();

            return newItem;
          };

          window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {
            this._checkPathSynchronizedToList();

            if (newItem._owningPathSegList) {
              // SVG2 spec says to make a copy.
              newItem = newItem.clone();
            }

            this._checkValidIndex(index);

            this._list[index] = newItem;
            newItem._owningPathSegList = this;

            this._writeListToPath();

            return newItem;
          };

          window.SVGPathSegList.prototype.removeItem = function (index) {
            this._checkPathSynchronizedToList();

            this._checkValidIndex(index);

            var item = this._list[index];

            this._list.splice(index, 1);

            this._writeListToPath();

            return item;
          };

          window.SVGPathSegList.prototype.appendItem = function (newItem) {
            this._checkPathSynchronizedToList();

            if (newItem._owningPathSegList) {
              // SVG2 spec says to make a copy.
              newItem = newItem.clone();
            }

            this._list.push(newItem);

            newItem._owningPathSegList = this; // TODO: Optimize this to just append to the existing attribute.

            this._writeListToPath();

            return newItem;
          };

          window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {
            var string = "";
            var first = true;
            pathSegArray.forEach(function (pathSeg) {
              if (first) {
                first = false;
                string += pathSeg._asPathString();
              } else {
                string += " " + pathSeg._asPathString();
              }
            });
            return string;
          }; // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.


          window.SVGPathSegList.prototype._parsePath = function (string) {
            if (!string || string.length == 0) return [];
            var owningPathSegList = this;

            var Builder = function Builder() {
              this.pathSegList = [];
            };

            Builder.prototype.appendSegment = function (pathSeg) {
              this.pathSegList.push(pathSeg);
            };

            var Source = function Source(string) {
              this._string = string;
              this._currentIndex = 0;
              this._endIndex = this._string.length;
              this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;

              this._skipOptionalSpaces();
            };

            Source.prototype._isCurrentSpace = function () {
              var character = this._string[this._currentIndex];
              return character <= " " && (character == " " || character == "\n" || character == "\t" || character == "\r" || character == "\f");
            };

            Source.prototype._skipOptionalSpaces = function () {
              while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {
                this._currentIndex++;
              }

              return this._currentIndex < this._endIndex;
            };

            Source.prototype._skipOptionalSpacesOrDelimiter = function () {
              if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != ",") return false;

              if (this._skipOptionalSpaces()) {
                if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == ",") {
                  this._currentIndex++;

                  this._skipOptionalSpaces();
                }
              }

              return this._currentIndex < this._endIndex;
            };

            Source.prototype.hasMoreData = function () {
              return this._currentIndex < this._endIndex;
            };

            Source.prototype.peekSegmentType = function () {
              var lookahead = this._string[this._currentIndex];
              return this._pathSegTypeFromChar(lookahead);
            };

            Source.prototype._pathSegTypeFromChar = function (lookahead) {
              switch (lookahead) {
                case "Z":
                case "z":
                  return window.SVGPathSeg.PATHSEG_CLOSEPATH;

                case "M":
                  return window.SVGPathSeg.PATHSEG_MOVETO_ABS;

                case "m":
                  return window.SVGPathSeg.PATHSEG_MOVETO_REL;

                case "L":
                  return window.SVGPathSeg.PATHSEG_LINETO_ABS;

                case "l":
                  return window.SVGPathSeg.PATHSEG_LINETO_REL;

                case "C":
                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;

                case "c":
                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;

                case "Q":
                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;

                case "q":
                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;

                case "A":
                  return window.SVGPathSeg.PATHSEG_ARC_ABS;

                case "a":
                  return window.SVGPathSeg.PATHSEG_ARC_REL;

                case "H":
                  return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;

                case "h":
                  return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;

                case "V":
                  return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;

                case "v":
                  return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;

                case "S":
                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;

                case "s":
                  return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;

                case "T":
                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;

                case "t":
                  return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;

                default:
                  return window.SVGPathSeg.PATHSEG_UNKNOWN;
              }
            };

            Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {
              // Check for remaining coordinates in the current command.
              if ((lookahead == "+" || lookahead == "-" || lookahead == "." || lookahead >= "0" && lookahead <= "9") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {
                if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;
                if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;
                return previousCommand;
              }

              return window.SVGPathSeg.PATHSEG_UNKNOWN;
            };

            Source.prototype.initialCommandIsMoveTo = function () {
              // If the path is empty it is still valid, so return true.
              if (!this.hasMoreData()) return true;
              var command = this.peekSegmentType(); // Path must start with moveTo.

              return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;
            }; // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.
            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF


            Source.prototype._parseNumber = function () {
              var exponent = 0;
              var integer = 0;
              var frac = 1;
              var decimal = 0;
              var sign = 1;
              var expsign = 1;
              var startIndex = this._currentIndex;

              this._skipOptionalSpaces(); // Read the sign.


              if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == "+") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == "-") {
                this._currentIndex++;
                sign = -1;
              }
              if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < "0" || this._string.charAt(this._currentIndex) > "9") && this._string.charAt(this._currentIndex) != ".") // The first character of a number must be one of [0-9+-.].
                return undefined; // Read the integer part, build right-to-left.

              var startIntPartIndex = this._currentIndex;

              while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= "0" && this._string.charAt(this._currentIndex) <= "9") {
                this._currentIndex++;
              } // Advance to first non-digit.


              if (this._currentIndex != startIntPartIndex) {
                var scanIntPartIndex = this._currentIndex - 1;
                var multiplier = 1;

                while (scanIntPartIndex >= startIntPartIndex) {
                  integer += multiplier * (this._string.charAt(scanIntPartIndex--) - "0");
                  multiplier *= 10;
                }
              } // Read the decimals.


              if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == ".") {
                this._currentIndex++; // There must be a least one digit following the .

                if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < "0" || this._string.charAt(this._currentIndex) > "9") return undefined;

                while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= "0" && this._string.charAt(this._currentIndex) <= "9") {
                  frac *= 10;
                  decimal += (this._string.charAt(this._currentIndex) - "0") / frac;
                  this._currentIndex += 1;
                }
              } // Read the exponent part.


              if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == "e" || this._string.charAt(this._currentIndex) == "E") && this._string.charAt(this._currentIndex + 1) != "x" && this._string.charAt(this._currentIndex + 1) != "m") {
                this._currentIndex++; // Read the sign of the exponent.

                if (this._string.charAt(this._currentIndex) == "+") {
                  this._currentIndex++;
                } else if (this._string.charAt(this._currentIndex) == "-") {
                  this._currentIndex++;
                  expsign = -1;
                } // There must be an exponent.


                if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < "0" || this._string.charAt(this._currentIndex) > "9") return undefined;

                while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= "0" && this._string.charAt(this._currentIndex) <= "9") {
                  exponent *= 10;
                  exponent += this._string.charAt(this._currentIndex) - "0";
                  this._currentIndex++;
                }
              }

              var number = integer + decimal;
              number *= sign;
              if (exponent) number *= Math.pow(10, expsign * exponent);
              if (startIndex == this._currentIndex) return undefined;

              this._skipOptionalSpacesOrDelimiter();

              return number;
            };

            Source.prototype._parseArcFlag = function () {
              if (this._currentIndex >= this._endIndex) return undefined;
              var flag = false;

              var flagChar = this._string.charAt(this._currentIndex++);

              if (flagChar == "0") flag = false;else if (flagChar == "1") flag = true;else return undefined;

              this._skipOptionalSpacesOrDelimiter();

              return flag;
            };

            Source.prototype.parseSegment = function () {
              var lookahead = this._string[this._currentIndex];

              var command = this._pathSegTypeFromChar(lookahead);

              if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {
                // Possibly an implicit command. Not allowed if this is the first command.
                if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;
                command = this._nextCommandHelper(lookahead, this._previousCommand);
                if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;
              } else {
                this._currentIndex++;
              }

              this._previousCommand = command;

              switch (command) {
                case window.SVGPathSeg.PATHSEG_MOVETO_REL:
                  return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());

                case window.SVGPathSeg.PATHSEG_MOVETO_ABS:
                  return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());

                case window.SVGPathSeg.PATHSEG_LINETO_REL:
                  return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());

                case window.SVGPathSeg.PATHSEG_LINETO_ABS:
                  return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());

                case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:
                  return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());

                case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:
                  return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());

                case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:
                  return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());

                case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:
                  return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());

                case window.SVGPathSeg.PATHSEG_CLOSEPATH:
                  this._skipOptionalSpaces();

                  return new window.SVGPathSegClosePath(owningPathSegList);

                case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:
                  var points = {
                    x1: this._parseNumber(),
                    y1: this._parseNumber(),
                    x2: this._parseNumber(),
                    y2: this._parseNumber(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);

                case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:
                  var points = {
                    x1: this._parseNumber(),
                    y1: this._parseNumber(),
                    x2: this._parseNumber(),
                    y2: this._parseNumber(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);

                case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:
                  var points = {
                    x2: this._parseNumber(),
                    y2: this._parseNumber(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);

                case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:
                  var points = {
                    x2: this._parseNumber(),
                    y2: this._parseNumber(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);

                case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:
                  var points = {
                    x1: this._parseNumber(),
                    y1: this._parseNumber(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);

                case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:
                  var points = {
                    x1: this._parseNumber(),
                    y1: this._parseNumber(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);

                case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:
                  return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());

                case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:
                  return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());

                case window.SVGPathSeg.PATHSEG_ARC_REL:
                  var points = {
                    x1: this._parseNumber(),
                    y1: this._parseNumber(),
                    arcAngle: this._parseNumber(),
                    arcLarge: this._parseArcFlag(),
                    arcSweep: this._parseArcFlag(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);

                case window.SVGPathSeg.PATHSEG_ARC_ABS:
                  var points = {
                    x1: this._parseNumber(),
                    y1: this._parseNumber(),
                    arcAngle: this._parseNumber(),
                    arcLarge: this._parseArcFlag(),
                    arcSweep: this._parseArcFlag(),
                    x: this._parseNumber(),
                    y: this._parseNumber()
                  };
                  return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);

                default:
                  throw "Unknown path seg type.";
              }
            };

            var builder = new Builder();
            var source = new Source(string);
            if (!source.initialCommandIsMoveTo()) return [];

            while (source.hasMoreData()) {
              var pathSeg = source.parseSegment();
              if (!pathSeg) return [];
              builder.appendSegment(pathSeg);
            }

            return builder.pathSegList;
          };
        }
      })(); // String.padEnd polyfill for IE11
      //
      // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd


      if (!String.prototype.padEnd) {
        String.prototype.padEnd = function padEnd(targetLength, padString) {
          targetLength = targetLength >> 0; //floor if number or convert non-number to 0;

          padString = String(typeof padString !== 'undefined' ? padString : ' ');

          if (this.length > targetLength) {
            return String(this);
          } else {
            targetLength = targetLength - this.length;

            if (targetLength > padString.length) {
              padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
            }

            return String(this) + padString.slice(0, targetLength);
          }
        };
      }
      /* jshint ignore:end */


      c3_chart_fn.axis = function () {};

      c3_chart_fn.axis.labels = function (labels) {
        var $$ = this.internal;

        if (arguments.length) {
          Object.keys(labels).forEach(function (axisId) {
            $$.axis.setLabelText(axisId, labels[axisId]);
          });
          $$.axis.updateLabels();
        } // TODO: return some values?

      };

      c3_chart_fn.axis.max = function (max) {
        var $$ = this.internal,
            config = $$.config;

        if (arguments.length) {
          if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {
            if (isValue(max.x)) {
              config.axis_x_max = max.x;
            }

            if (isValue(max.y)) {
              config.axis_y_max = max.y;
            }

            if (isValue(max.y2)) {
              config.axis_y2_max = max.y2;
            }
          } else {
            config.axis_y_max = config.axis_y2_max = max;
          }

          $$.redraw({
            withUpdateOrgXDomain: true,
            withUpdateXDomain: true
          });
        } else {
          return {
            x: config.axis_x_max,
            y: config.axis_y_max,
            y2: config.axis_y2_max
          };
        }
      };

      c3_chart_fn.axis.min = function (min) {
        var $$ = this.internal,
            config = $$.config;

        if (arguments.length) {
          if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {
            if (isValue(min.x)) {
              config.axis_x_min = min.x;
            }

            if (isValue(min.y)) {
              config.axis_y_min = min.y;
            }

            if (isValue(min.y2)) {
              config.axis_y2_min = min.y2;
            }
          } else {
            config.axis_y_min = config.axis_y2_min = min;
          }

          $$.redraw({
            withUpdateOrgXDomain: true,
            withUpdateXDomain: true
          });
        } else {
          return {
            x: config.axis_x_min,
            y: config.axis_y_min,
            y2: config.axis_y2_min
          };
        }
      };

      c3_chart_fn.axis.range = function (range) {
        if (arguments.length) {
          if (isDefined(range.max)) {
            this.axis.max(range.max);
          }

          if (isDefined(range.min)) {
            this.axis.min(range.min);
          }
        } else {
          return {
            max: this.axis.max(),
            min: this.axis.min()
          };
        }
      };

      c3_chart_fn.category = function (i, category) {
        var $$ = this.internal,
            config = $$.config;

        if (arguments.length > 1) {
          config.axis_x_categories[i] = category;
          $$.redraw();
        }

        return config.axis_x_categories[i];
      };

      c3_chart_fn.categories = function (categories) {
        var $$ = this.internal,
            config = $$.config;

        if (!arguments.length) {
          return config.axis_x_categories;
        }

        config.axis_x_categories = categories;
        $$.redraw();
        return config.axis_x_categories;
      };

      c3_chart_fn.resize = function (size) {
        var $$ = this.internal,
            config = $$.config;
        config.size_width = size ? size.width : null;
        config.size_height = size ? size.height : null;
        this.flush();
      };

      c3_chart_fn.flush = function () {
        var $$ = this.internal;
        $$.updateAndRedraw({
          withLegend: true,
          withTransition: false,
          withTransitionForTransform: false
        });
      };

      c3_chart_fn.destroy = function () {
        var $$ = this.internal;
        window.clearInterval($$.intervalForObserveInserted);

        if ($$.resizeTimeout !== undefined) {
          window.clearTimeout($$.resizeTimeout);
        }

        if (window.detachEvent) {
          window.detachEvent('onresize', $$.resizeIfElementDisplayed);
        } else if (window.removeEventListener) {
          window.removeEventListener('resize', $$.resizeIfElementDisplayed);
        } else {
          var wrapper = window.onresize; // check if no one else removed our wrapper and remove our resizeFunction from it

          if (wrapper && wrapper.add && wrapper.remove) {
            wrapper.remove($$.resizeFunction);
          }
        } // remove the inner resize functions


        $$.resizeFunction.remove();
        $$.selectChart.classed('c3', false).html(""); // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.

        Object.keys($$).forEach(function (key) {
          $$[key] = null;
        });
        return null;
      }; // TODO: fix


      c3_chart_fn.color = function (id) {
        var $$ = this.internal;
        return $$.color(id); // more patterns
      };

      c3_chart_fn.data = function (targetIds) {
        var targets = this.internal.data.targets;
        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {
          return [].concat(targetIds).indexOf(t.id) >= 0;
        });
      };

      c3_chart_fn.data.shown = function (targetIds) {
        return this.internal.filterTargetsToShow(this.data(targetIds));
      };

      c3_chart_fn.data.values = function (targetId) {
        var targets,
            values = null;

        if (targetId) {
          targets = this.data(targetId);
          values = targets[0] ? targets[0].values.map(function (d) {
            return d.value;
          }) : null;
        }

        return values;
      };

      c3_chart_fn.data.names = function (names) {
        this.internal.clearLegendItemTextBoxCache();
        return this.internal.updateDataAttributes('names', names);
      };

      c3_chart_fn.data.colors = function (colors) {
        return this.internal.updateDataAttributes('colors', colors);
      };

      c3_chart_fn.data.axes = function (axes) {
        return this.internal.updateDataAttributes('axes', axes);
      };

      c3_chart_fn.flow = function (args) {
        var $$ = this.internal,
            targets,
            data,
            notfoundIds = [],
            orgDataCount = $$.getMaxDataCount(),
            dataCount,
            domain,
            baseTarget,
            baseValue,
            length = 0,
            tail = 0,
            diff,
            to;

        if (args.json) {
          data = $$.convertJsonToData(args.json, args.keys);
        } else if (args.rows) {
          data = $$.convertRowsToData(args.rows);
        } else if (args.columns) {
          data = $$.convertColumnsToData(args.columns);
        } else {
          return;
        }

        targets = $$.convertDataToTargets(data, true); // Update/Add data

        $$.data.targets.forEach(function (t) {
          var found = false,
              i,
              j;

          for (i = 0; i < targets.length; i++) {
            if (t.id === targets[i].id) {
              found = true;

              if (t.values[t.values.length - 1]) {
                tail = t.values[t.values.length - 1].index + 1;
              }

              length = targets[i].values.length;

              for (j = 0; j < length; j++) {
                targets[i].values[j].index = tail + j;

                if (!$$.isTimeSeries()) {
                  targets[i].values[j].x = tail + j;
                }
              }

              t.values = t.values.concat(targets[i].values);
              targets.splice(i, 1);
              break;
            }
          }

          if (!found) {
            notfoundIds.push(t.id);
          }
        }); // Append null for not found targets

        $$.data.targets.forEach(function (t) {
          var i, j;

          for (i = 0; i < notfoundIds.length; i++) {
            if (t.id === notfoundIds[i]) {
              tail = t.values[t.values.length - 1].index + 1;

              for (j = 0; j < length; j++) {
                t.values.push({
                  id: t.id,
                  index: tail + j,
                  x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,
                  value: null
                });
              }
            }
          }
        }); // Generate null values for new target

        if ($$.data.targets.length) {
          targets.forEach(function (t) {
            var i,
                missing = [];

            for (i = $$.data.targets[0].values[0].index; i < tail; i++) {
              missing.push({
                id: t.id,
                index: i,
                x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,
                value: null
              });
            }

            t.values.forEach(function (v) {
              v.index += tail;

              if (!$$.isTimeSeries()) {
                v.x += tail;
              }
            });
            t.values = missing.concat(t.values);
          });
        }

        $$.data.targets = $$.data.targets.concat(targets); // add remained
        // check data count because behavior needs to change when it's only one

        dataCount = $$.getMaxDataCount();
        baseTarget = $$.data.targets[0];
        baseValue = baseTarget.values[0]; // Update length to flow if needed

        if (isDefined(args.to)) {
          length = 0;
          to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;
          baseTarget.values.forEach(function (v) {
            if (v.x < to) {
              length++;
            }
          });
        } else if (isDefined(args.length)) {
          length = args.length;
        } // If only one data, update the domain to flow from left edge of the chart


        if (!orgDataCount) {
          if ($$.isTimeSeries()) {
            if (baseTarget.values.length > 1) {
              diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;
            } else {
              diff = baseValue.x - $$.getXDomain($$.data.targets)[0];
            }
          } else {
            diff = 1;
          }

          domain = [baseValue.x - diff, baseValue.x];
          $$.updateXDomain(null, true, true, false, domain);
        } else if (orgDataCount === 1) {
          if ($$.isTimeSeries()) {
            diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;
            domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];
            $$.updateXDomain(null, true, true, false, domain);
          }
        } // Set targets


        $$.updateTargets($$.data.targets); // Redraw with new targets

        $$.redraw({
          flow: {
            index: baseValue.index,
            length: length,
            duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,
            done: args.done,
            orgDataCount: orgDataCount
          },
          withLegend: true,
          withTransition: orgDataCount > 1,
          withTrimXDomain: false,
          withUpdateXAxis: true
        });
      };

      c3_chart_internal_fn.generateFlow = function (args) {
        var $$ = this,
            config = $$.config,
            d3 = $$.d3;
        return function () {
          var targets = args.targets,
              flow = args.flow,
              drawBar = args.drawBar,
              drawLine = args.drawLine,
              drawArea = args.drawArea,
              cx = args.cx,
              cy = args.cy,
              xv = args.xv,
              xForText = args.xForText,
              yForText = args.yForText,
              duration = args.duration;

          var translateX,
              scaleX = 1,
              transform,
              flowIndex = flow.index,
              flowLength = flow.length,
              flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),
              flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),
              orgDomain = $$.x.domain(),
              domain,
              durationForFlow = flow.duration || duration,
              done = flow.done || function () {},
              wait = $$.generateWait();

          var xgrid = $$.xgrid || d3.selectAll([]),
              xgridLines = $$.xgridLines || d3.selectAll([]),
              mainRegion = $$.mainRegion || d3.selectAll([]),
              mainText = $$.mainText || d3.selectAll([]),
              mainBar = $$.mainBar || d3.selectAll([]),
              mainLine = $$.mainLine || d3.selectAll([]),
              mainArea = $$.mainArea || d3.selectAll([]),
              mainCircle = $$.mainCircle || d3.selectAll([]); // set flag

          $$.flowing = true; // remove head data after rendered

          $$.data.targets.forEach(function (d) {
            d.values.splice(0, flowLength);
          }); // update x domain to generate axis elements for flow

          domain = $$.updateXDomain(targets, true, true); // update elements related to x scale

          if ($$.updateXGrid) {
            $$.updateXGrid(true);
          } // generate transform to flow


          if (!flow.orgDataCount) {
            // if empty
            if ($$.data.targets[0].values.length !== 1) {
              translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);
            } else {
              if ($$.isTimeSeries()) {
                flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);
                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);
                translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);
              } else {
                translateX = diffDomain(domain) / 2;
              }
            }
          } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {
            translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);
          } else {
            if ($$.isTimeSeries()) {
              translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);
            } else {
              translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);
            }
          }

          scaleX = diffDomain(orgDomain) / diffDomain(domain);
          transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';
          $$.hideXGridFocus();
          d3.transition().ease('linear').duration(durationForFlow).each(function () {
            wait.add($$.axes.x.transition().call($$.xAxis));
            wait.add(mainBar.transition().attr('transform', transform));
            wait.add(mainLine.transition().attr('transform', transform));
            wait.add(mainArea.transition().attr('transform', transform));
            wait.add(mainCircle.transition().attr('transform', transform));
            wait.add(mainText.transition().attr('transform', transform));
            wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));
            wait.add(xgrid.transition().attr('transform', transform));
            wait.add(xgridLines.transition().attr('transform', transform));
          }).call(wait, function () {
            var i,
                shapes = [],
                texts = [],
                eventRects = []; // remove flowed elements

            if (flowLength) {
              for (i = 0; i < flowLength; i++) {
                shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));
                texts.push('.' + CLASS.text + '-' + (flowIndex + i));
                eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));
              }

              $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();
              $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();
              $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();
              $$.svg.select('.' + CLASS.xgrid).remove();
            } // draw again for removing flowed elements and reverting attr


            xgrid.attr('transform', null).attr($$.xgridAttr);
            xgridLines.attr('transform', null);
            xgridLines.select('line').attr("x1", config.axis_rotated ? 0 : xv).attr("x2", config.axis_rotated ? $$.width : xv);
            xgridLines.select('text').attr("x", config.axis_rotated ? $$.width : 0).attr("y", xv);
            mainBar.attr('transform', null).attr("d", drawBar);
            mainLine.attr('transform', null).attr("d", drawLine);
            mainArea.attr('transform', null).attr("d", drawArea);
            mainCircle.attr('transform', null).attr("cx", cx).attr("cy", cy);
            mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));
            mainRegion.attr('transform', null);
            mainRegion.select('rect').filter($$.isRegionOnX).attr("x", $$.regionX.bind($$)).attr("width", $$.regionWidth.bind($$));

            if (config.interaction_enabled) {
              $$.redrawEventRect();
            } // callback for end of flow


            done();
            $$.flowing = false;
          });
        };
      };

      c3_chart_fn.focus = function (targetIds) {
        var $$ = this.internal,
            candidates;
        targetIds = $$.mapToTargetIds(targetIds);
        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();
        this.defocus();
        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);

        if ($$.hasArcType()) {
          $$.expandArc(targetIds);
        }

        $$.toggleFocusLegend(targetIds, true);
        $$.focusedTargetIds = targetIds;
        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {
          return targetIds.indexOf(id) < 0;
        });
      };

      c3_chart_fn.defocus = function (targetIds) {
        var $$ = this.internal,
            candidates;
        targetIds = $$.mapToTargetIds(targetIds);
        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);

        if ($$.hasArcType()) {
          $$.unexpandArc(targetIds);
        }

        $$.toggleFocusLegend(targetIds, false);
        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {
          return targetIds.indexOf(id) < 0;
        });
        $$.defocusedTargetIds = targetIds;
      };

      c3_chart_fn.revert = function (targetIds) {
        var $$ = this.internal,
            candidates;
        targetIds = $$.mapToTargetIds(targetIds);
        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets

        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);

        if ($$.hasArcType()) {
          $$.unexpandArc(targetIds);
        }

        if ($$.config.legend_show) {
          $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));
          $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {
            return $$.d3.select(this).classed(CLASS.legendItemFocused);
          }).classed(CLASS.legendItemFocused, false);
        }

        $$.focusedTargetIds = [];
        $$.defocusedTargetIds = [];
      };

      c3_chart_fn.xgrids = function (grids) {
        var $$ = this.internal,
            config = $$.config;

        if (!grids) {
          return config.grid_x_lines;
        }

        config.grid_x_lines = grids;
        $$.redrawWithoutRescale();
        return config.grid_x_lines;
      };

      c3_chart_fn.xgrids.add = function (grids) {
        var $$ = this.internal;
        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));
      };

      c3_chart_fn.xgrids.remove = function (params) {
        // TODO: multiple
        var $$ = this.internal;
        $$.removeGridLines(params, true);
      };

      c3_chart_fn.ygrids = function (grids) {
        var $$ = this.internal,
            config = $$.config;

        if (!grids) {
          return config.grid_y_lines;
        }

        config.grid_y_lines = grids;
        $$.redrawWithoutRescale();
        return config.grid_y_lines;
      };

      c3_chart_fn.ygrids.add = function (grids) {
        var $$ = this.internal;
        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));
      };

      c3_chart_fn.ygrids.remove = function (params) {
        // TODO: multiple
        var $$ = this.internal;
        $$.removeGridLines(params, false);
      };

      c3_chart_fn.groups = function (groups) {
        var $$ = this.internal,
            config = $$.config;

        if (isUndefined(groups)) {
          return config.data_groups;
        }

        config.data_groups = groups;
        $$.redraw();
        return config.data_groups;
      };

      c3_chart_fn.legend = function () {};

      c3_chart_fn.legend.show = function (targetIds) {
        var $$ = this.internal;
        $$.showLegend($$.mapToTargetIds(targetIds));
        $$.updateAndRedraw({
          withLegend: true
        });
      };

      c3_chart_fn.legend.hide = function (targetIds) {
        var $$ = this.internal;
        $$.hideLegend($$.mapToTargetIds(targetIds));
        $$.updateAndRedraw({
          withLegend: true
        });
      };

      c3_chart_fn.load = function (args) {
        var $$ = this.internal,
            config = $$.config; // update xs if specified

        if (args.xs) {
          $$.addXs(args.xs);
        } // update names if exists


        if ('names' in args) {
          c3_chart_fn.data.names.bind(this)(args.names);
        } // update classes if exists


        if ('classes' in args) {
          Object.keys(args.classes).forEach(function (id) {
            config.data_classes[id] = args.classes[id];
          });
        } // update categories if exists


        if ('categories' in args && $$.isCategorized()) {
          config.axis_x_categories = args.categories;
        } // update axes if exists


        if ('axes' in args) {
          Object.keys(args.axes).forEach(function (id) {
            config.data_axes[id] = args.axes[id];
          });
        } // update colors if exists


        if ('colors' in args) {
          Object.keys(args.colors).forEach(function (id) {
            config.data_colors[id] = args.colors[id];
          });
        } // use cache if exists


        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {
          $$.load($$.getCaches(args.cacheIds), args.done);
          return;
        } // unload if needed


        if ('unload' in args) {
          // TODO: do not unload if target will load (included in url/rows/columns)
          $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {
            $$.loadFromArgs(args);
          });
        } else {
          $$.loadFromArgs(args);
        }
      };

      c3_chart_fn.unload = function (args) {
        var $$ = this.internal;
        args = args || {};

        if (args instanceof Array) {
          args = {
            ids: args
          };
        } else if (typeof args === 'string') {
          args = {
            ids: [args]
          };
        }

        $$.unload($$.mapToTargetIds(args.ids), function () {
          $$.redraw({
            withUpdateOrgXDomain: true,
            withUpdateXDomain: true,
            withLegend: true
          });

          if (args.done) {
            args.done();
          }
        });
      };

      c3_chart_fn.regions = function (regions) {
        var $$ = this.internal,
            config = $$.config;

        if (!regions) {
          return config.regions;
        }

        config.regions = regions;
        $$.redrawWithoutRescale();
        return config.regions;
      };

      c3_chart_fn.regions.add = function (regions) {
        var $$ = this.internal,
            config = $$.config;

        if (!regions) {
          return config.regions;
        }

        config.regions = config.regions.concat(regions);
        $$.redrawWithoutRescale();
        return config.regions;
      };

      c3_chart_fn.regions.remove = function (options) {
        var $$ = this.internal,
            config = $$.config,
            duration,
            classes,
            regions;
        options = options || {};
        duration = $$.getOption(options, "duration", config.transition_duration);
        classes = $$.getOption(options, "classes", [CLASS.region]);
        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {
          return '.' + c;
        }));
        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();
        config.regions = config.regions.filter(function (region) {
          var found = false;

          if (!region['class']) {
            return true;
          }

          region['class'].split(' ').forEach(function (c) {
            if (classes.indexOf(c) >= 0) {
              found = true;
            }
          });
          return !found;
        });
        return config.regions;
      };

      c3_chart_fn.selected = function (targetId) {
        var $$ = this.internal,
            d3 = $$.d3;
        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {
          return d3.select(this).classed(CLASS.SELECTED);
        }).map(function (d) {
          return d.map(function (d) {
            var data = d.__data__;
            return data.data ? data.data : data;
          });
        }));
      };

      c3_chart_fn.select = function (ids, indices, resetOther) {
        var $$ = this.internal,
            d3 = $$.d3,
            config = $$.config;

        if (!config.data_selection_enabled) {
          return;
        }

        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {
          var shape = d3.select(this),
              id = d.data ? d.data.id : d.id,
              toggle = $$.getToggle(this, d).bind($$),
              isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,
              isTargetIndex = !indices || indices.indexOf(i) >= 0,
              isSelected = shape.classed(CLASS.SELECTED); // line/area selection not supported yet

          if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {
            return;
          }

          if (isTargetId && isTargetIndex) {
            if (config.data_selection_isselectable(d) && !isSelected) {
              toggle(true, shape.classed(CLASS.SELECTED, true), d, i);
            }
          } else if (isDefined(resetOther) && resetOther) {
            if (isSelected) {
              toggle(false, shape.classed(CLASS.SELECTED, false), d, i);
            }
          }
        });
      };

      c3_chart_fn.unselect = function (ids, indices) {
        var $$ = this.internal,
            d3 = $$.d3,
            config = $$.config;

        if (!config.data_selection_enabled) {
          return;
        }

        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {
          var shape = d3.select(this),
              id = d.data ? d.data.id : d.id,
              toggle = $$.getToggle(this, d).bind($$),
              isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,
              isTargetIndex = !indices || indices.indexOf(i) >= 0,
              isSelected = shape.classed(CLASS.SELECTED); // line/area selection not supported yet

          if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {
            return;
          }

          if (isTargetId && isTargetIndex) {
            if (config.data_selection_isselectable(d)) {
              if (isSelected) {
                toggle(false, shape.classed(CLASS.SELECTED, false), d, i);
              }
            }
          }
        });
      };

      c3_chart_fn.show = function (targetIds, options) {
        var $$ = this.internal,
            targets;
        targetIds = $$.mapToTargetIds(targetIds);
        options = options || {};
        $$.removeHiddenTargetIds(targetIds);
        targets = $$.svg.selectAll($$.selectorTargets(targetIds));
        targets.transition().style('opacity', 1, 'important').call($$.endall, function () {
          targets.style('opacity', null).style('opacity', 1);
        });

        if (options.withLegend) {
          $$.showLegend(targetIds);
        }

        $$.redraw({
          withUpdateOrgXDomain: true,
          withUpdateXDomain: true,
          withLegend: true
        });
      };

      c3_chart_fn.hide = function (targetIds, options) {
        var $$ = this.internal,
            targets;
        targetIds = $$.mapToTargetIds(targetIds);
        options = options || {};
        $$.addHiddenTargetIds(targetIds);
        targets = $$.svg.selectAll($$.selectorTargets(targetIds));
        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {
          targets.style('opacity', null).style('opacity', 0);
        });

        if (options.withLegend) {
          $$.hideLegend(targetIds);
        }

        $$.redraw({
          withUpdateOrgXDomain: true,
          withUpdateXDomain: true,
          withLegend: true
        });
      };

      c3_chart_fn.toggle = function (targetIds, options) {
        var that = this,
            $$ = this.internal;
        $$.mapToTargetIds(targetIds).forEach(function (targetId) {
          $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);
        });
      };

      c3_chart_fn.tooltip = function () {};

      c3_chart_fn.tooltip.show = function (args) {
        var $$ = this.internal,
            index,
            mouse; // determine mouse position on the chart

        if (args.mouse) {
          mouse = args.mouse;
        } // determine focus data


        if (args.data) {
          if ($$.isMultipleX()) {
            // if multiple xs, target point will be determined by mouse
            mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];
            index = null;
          } else {
            // TODO: when tooltip_grouped = false
            index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);
          }
        } else if (typeof args.x !== 'undefined') {
          index = $$.getIndexByX(args.x);
        } else if (typeof args.index !== 'undefined') {
          index = args.index;
        } // emulate mouse events to show


        $$.dispatchEvent('mouseover', index, mouse);
        $$.dispatchEvent('mousemove', index, mouse);
        $$.config.tooltip_onshow.call($$, args.data);
      };

      c3_chart_fn.tooltip.hide = function () {
        // TODO: get target data by checking the state of focus
        this.internal.dispatchEvent('mouseout', 0);
        this.internal.config.tooltip_onhide.call(this);
      };

      c3_chart_fn.transform = function (type, targetIds) {
        var $$ = this.internal,
            options = ['pie', 'donut'].indexOf(type) >= 0 ? {
          withTransform: true
        } : null;
        $$.transformTo(targetIds, type, options);
      };

      c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {
        var $$ = this,
            withTransitionForAxis = !$$.hasArcType(),
            options = optionsForRedraw || {
          withTransitionForAxis: withTransitionForAxis
        };
        options.withTransitionForTransform = false;
        $$.transiting = false;
        $$.setTargetType(targetIds, type);
        $$.updateTargets($$.data.targets); // this is needed when transforming to arc

        $$.updateAndRedraw(options);
      };

      c3_chart_fn.x = function (x) {
        var $$ = this.internal;

        if (arguments.length) {
          $$.updateTargetX($$.data.targets, x);
          $$.redraw({
            withUpdateOrgXDomain: true,
            withUpdateXDomain: true
          });
        }

        return $$.data.xs;
      };

      c3_chart_fn.xs = function (xs) {
        var $$ = this.internal;

        if (arguments.length) {
          $$.updateTargetXs($$.data.targets, xs);
          $$.redraw({
            withUpdateOrgXDomain: true,
            withUpdateXDomain: true
          });
        }

        return $$.data.xs;
      };

      c3_chart_fn.zoom = function (domain) {
        var $$ = this.internal;

        if (domain) {
          if ($$.isTimeSeries()) {
            domain = domain.map(function (x) {
              return $$.parseDate(x);
            });
          }

          $$.brush.extent(domain);
          $$.redraw({
            withUpdateXDomain: true,
            withY: $$.config.zoom_rescale
          });
          $$.config.zoom_onzoom.call(this, $$.x.orgDomain());
        }

        return $$.brush.extent();
      };

      c3_chart_fn.zoom.enable = function (enabled) {
        var $$ = this.internal;
        $$.config.zoom_enabled = enabled;
        $$.updateAndRedraw();
      };

      c3_chart_fn.unzoom = function () {
        var $$ = this.internal;
        $$.brush.clear().update();
        $$.redraw({
          withUpdateXDomain: true
        });
      };

      c3_chart_fn.zoom.max = function (max) {
        var $$ = this.internal,
            config = $$.config,
            d3 = $$.d3;

        if (max === 0 || max) {
          config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);
        } else {
          return config.zoom_x_max;
        }
      };

      c3_chart_fn.zoom.min = function (min) {
        var $$ = this.internal,
            config = $$.config,
            d3 = $$.d3;

        if (min === 0 || min) {
          config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);
        } else {
          return config.zoom_x_min;
        }
      };

      c3_chart_fn.zoom.range = function (range) {
        if (arguments.length) {
          if (isDefined(range.max)) {
            this.domain.max(range.max);
          }

          if (isDefined(range.min)) {
            this.domain.min(range.min);
          }
        } else {
          return {
            max: this.domain.max(),
            min: this.domain.min()
          };
        }
      };

      c3_chart_internal_fn.initPie = function () {
        var $$ = this,
            d3 = $$.d3;
        $$.pie = d3.layout.pie().value(function (d) {
          return d.values.reduce(function (a, b) {
            return a + b.value;
          }, 0);
        });
        $$.pie.sort($$.getOrderFunction() || null);
      };

      c3_chart_internal_fn.updateRadius = function () {
        var $$ = this,
            config = $$.config,
            w = config.gauge_width || config.donut_width,
            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;
        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);
        $$.radius = $$.radiusExpanded * 0.95;
        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;
        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;
        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;
      };

      c3_chart_internal_fn.updateArc = function () {
        var $$ = this;
        $$.svgArc = $$.getSvgArc();
        $$.svgArcExpanded = $$.getSvgArcExpanded();
        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);
      };

      c3_chart_internal_fn.updateAngle = function (d) {
        var $$ = this,
            config = $$.config,
            found = false,
            index = 0,
            gMin,
            gMax,
            gTic,
            gValue;

        if (!config) {
          return null;
        }

        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {
          if (!found && t.data.id === d.data.id) {
            found = true;
            d = t;
            d.index = index;
          }

          index++;
        });

        if (isNaN(d.startAngle)) {
          d.startAngle = 0;
        }

        if (isNaN(d.endAngle)) {
          d.endAngle = d.startAngle;
        }

        if ($$.isGaugeType(d.data)) {
          gMin = config.gauge_min;
          gMax = config.gauge_max;
          gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);
          gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;
          d.startAngle = config.gauge_startingAngle;
          d.endAngle = d.startAngle + gTic * gValue;
        }

        return found ? d : null;
      };

      c3_chart_internal_fn.getSvgArc = function () {
        var $$ = this,
            hasGaugeType = $$.hasType('gauge'),
            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,
            arc = $$.d3.svg.arc().outerRadius(function (d) {
          return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;
        }).innerRadius(function (d) {
          return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;
        }),
            newArc = function newArc(d, withoutUpdate) {
          var updated;

          if (withoutUpdate) {
            return arc(d);
          } // for interpolate


          updated = $$.updateAngle(d);
          return updated ? arc(updated) : "M 0 0";
        }; // TODO: extends all function


        newArc.centroid = arc.centroid;
        return newArc;
      };

      c3_chart_internal_fn.getSvgArcExpanded = function (rate) {
        rate = rate || 1;
        var $$ = this,
            hasGaugeType = $$.hasType('gauge'),
            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,
            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),
            arc = $$.d3.svg.arc().outerRadius(function (d) {
          return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;
        }).innerRadius(function (d) {
          return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;
        });
        return function (d) {
          var updated = $$.updateAngle(d);
          return updated ? arc(updated) : "M 0 0";
        };
      };

      c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {
        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : "M 0 0";
      };

      c3_chart_internal_fn.transformForArcLabel = function (d) {
        var $$ = this,
            config = $$.config,
            updated = $$.updateAngle(d),
            c,
            x,
            y,
            h,
            ratio,
            translate = "",
            hasGauge = $$.hasType('gauge');

        if (updated && !hasGauge) {
          c = this.svgArc.centroid(updated);
          x = isNaN(c[0]) ? 0 : c[0];
          y = isNaN(c[1]) ? 0 : c[1];
          h = Math.sqrt(x * x + y * y);

          if ($$.hasType('donut') && config.donut_label_ratio) {
            ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;
          } else if ($$.hasType('pie') && config.pie_label_ratio) {
            ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;
          } else {
            ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;
          }

          translate = "translate(" + x * ratio + ',' + y * ratio + ")";
        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {
          var y1 = Math.sin(updated.endAngle - Math.PI / 2);
          x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);
          y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;
          translate = "translate(" + x + ',' + y + ")";
        }

        return translate;
      };

      c3_chart_internal_fn.getArcRatio = function (d) {
        var $$ = this,
            config = $$.config,
            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);
        return d ? (d.endAngle - d.startAngle) / whole : null;
      };

      c3_chart_internal_fn.convertToArcData = function (d) {
        return this.addName({
          id: d.data.id,
          value: d.value,
          ratio: this.getArcRatio(d),
          index: d.index
        });
      };

      c3_chart_internal_fn.textForArcLabel = function (d) {
        var $$ = this,
            updated,
            value,
            ratio,
            id,
            format;

        if (!$$.shouldShowArcLabel()) {
          return "";
        }

        updated = $$.updateAngle(d);
        value = updated ? updated.value : null;
        ratio = $$.getArcRatio(updated);
        id = d.data.id;

        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {
          return "";
        }

        format = $$.getArcLabelFormat();
        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);
      };

      c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {
        var $$ = this,
            format = $$.getGaugeLabelExtents();
        return format ? format(value, isMax) : value;
      };

      c3_chart_internal_fn.expandArc = function (targetIds) {
        var $$ = this,
            interval; // MEMO: avoid to cancel transition

        if ($$.transiting) {
          interval = window.setInterval(function () {
            if (!$$.transiting) {
              window.clearInterval(interval);

              if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {
                $$.expandArc(targetIds);
              }
            }
          }, 10);
          return;
        }

        targetIds = $$.mapToTargetIds(targetIds);
        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {
          if (!$$.shouldExpand(d.data.id)) {
            return;
          }

          $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr("d", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr("d", $$.svgArcExpandedSub).each(function (d) {
            if ($$.isDonutType(d.data)) ;
          });
        });
      };

      c3_chart_internal_fn.unexpandArc = function (targetIds) {
        var $$ = this;

        if ($$.transiting) {
          return;
        }

        targetIds = $$.mapToTargetIds(targetIds);
        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {
          return $$.expandDuration(d.data.id);
        }).attr("d", $$.svgArc);
        $$.svg.selectAll('.' + CLASS.arc);
      };

      c3_chart_internal_fn.expandDuration = function (id) {
        var $$ = this,
            config = $$.config;

        if ($$.isDonutType(id)) {
          return config.donut_expand_duration;
        } else if ($$.isGaugeType(id)) {
          return config.gauge_expand_duration;
        } else if ($$.isPieType(id)) {
          return config.pie_expand_duration;
        } else {
          return 50;
        }
      };

      c3_chart_internal_fn.shouldExpand = function (id) {
        var $$ = this,
            config = $$.config;
        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;
      };

      c3_chart_internal_fn.shouldShowArcLabel = function () {
        var $$ = this,
            config = $$.config,
            shouldShow = true;

        if ($$.hasType('donut')) {
          shouldShow = config.donut_label_show;
        } else if ($$.hasType('pie')) {
          shouldShow = config.pie_label_show;
        } // when gauge, always true


        return shouldShow;
      };

      c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {
        var $$ = this,
            config = $$.config,
            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;
        return ratio >= threshold;
      };

      c3_chart_internal_fn.getArcLabelFormat = function () {
        var $$ = this,
            config = $$.config,
            format = config.pie_label_format;

        if ($$.hasType('gauge')) {
          format = config.gauge_label_format;
        } else if ($$.hasType('donut')) {
          format = config.donut_label_format;
        }

        return format;
      };

      c3_chart_internal_fn.getGaugeLabelExtents = function () {
        var $$ = this,
            config = $$.config;
        return config.gauge_label_extents;
      };

      c3_chart_internal_fn.getArcTitle = function () {
        var $$ = this;
        return $$.hasType('donut') ? $$.config.donut_title : "";
      };

      c3_chart_internal_fn.updateTargetsForArc = function (targets) {
        var $$ = this,
            main = $$.main,
            mainPieUpdate,
            mainPieEnter,
            classChartArc = $$.classChartArc.bind($$),
            classArcs = $$.classArcs.bind($$),
            classFocus = $$.classFocus.bind($$);
        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr("class", function (d) {
          return classChartArc(d) + classFocus(d.data);
        });
        mainPieEnter = mainPieUpdate.enter().append("g").attr("class", classChartArc);
        mainPieEnter.append('g').attr('class', classArcs);
        mainPieEnter.append("text").attr("dy", $$.hasType('gauge') ? "-.1em" : ".35em").style("opacity", 0).style("text-anchor", "middle").style("pointer-events", "none"); // MEMO: can not keep same color..., but not bad to update color in redraw
        //mainPieUpdate.exit().remove();
      };

      c3_chart_internal_fn.initArc = function () {
        var $$ = this;
        $$.arcs = $$.main.select('.' + CLASS.chart).append("g").attr("class", CLASS.chartArcs).attr("transform", $$.getTranslate('arc'));
        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style("text-anchor", "middle").text($$.getArcTitle());
      };

      c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config,
            main = $$.main,
            mainArc,
            backgroundArc,
            mainArcLabelLine,
            hasGaugeType = $$.hasType('gauge');
        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));
        mainArc.enter().append('path').attr("class", $$.classArc.bind($$)).style("fill", function (d) {
          return $$.color(d.data);
        }).style("cursor", function (d) {
          return config.interaction_enabled && config.data_selection_isselectable(d) ? "pointer" : null;
        }).each(function (d) {
          if ($$.isGaugeType(d.data)) {
            d.startAngle = d.endAngle = config.gauge_startingAngle;
          }

          this._current = d;
        });

        if (hasGaugeType) {
          mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));
          mainArcLabelLine.enter().append('rect').attr("class", function (d) {
            return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;
          });

          if ($$.filterTargetsToShow($$.data.targets).length === 1) {
            mainArcLabelLine.style("display", "none");
          } else {
            mainArcLabelLine.style("fill", function (d) {
              return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);
            }).style("display", config.gauge_labelLine_show ? "" : "none").each(function (d) {
              var lineLength = 0,
                  lineThickness = 2,
                  x = 0,
                  y = 0,
                  transform = "";

              if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {
                var updated = $$.updateAngle(d),
                    innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),
                    lineAngle = updated.endAngle - Math.PI / 2,
                    arcInnerRadius = $$.radius - innerLineLength,
                    linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);
                lineLength = $$.radiusExpanded - $$.radius + innerLineLength;
                x = Math.cos(linePositioningAngle) * arcInnerRadius;
                y = Math.sin(linePositioningAngle) * arcInnerRadius;
                transform = "rotate(" + lineAngle * 180 / Math.PI + ", " + x + ", " + y + ")";
              }

              d3.select(this).attr({
                x: x,
                y: y,
                width: lineLength,
                height: lineThickness,
                transform: transform
              }).style("stroke-dasharray", "0, " + (lineLength + lineThickness) + ", 0");
            });
          }
        }

        mainArc.attr("transform", function (d) {
          return !$$.isGaugeType(d.data) && withTransform ? "scale(0)" : "";
        }).on('mouseover', config.interaction_enabled ? function (d) {
          var updated, arcData;

          if ($$.transiting) {
            // skip while transiting
            return;
          }

          updated = $$.updateAngle(d);

          if (updated) {
            arcData = $$.convertToArcData(updated); // transitions

            $$.expandArc(updated.data.id);
            $$.api.focus(updated.data.id);
            $$.toggleFocusLegend(updated.data.id, true);
            $$.config.data_onmouseover(arcData, this);
          }
        } : null).on('mousemove', config.interaction_enabled ? function (d) {
          var updated = $$.updateAngle(d),
              arcData,
              selectedData;

          if (updated) {
            arcData = $$.convertToArcData(updated), selectedData = [arcData];
            $$.showTooltip(selectedData, this);
          }
        } : null).on('mouseout', config.interaction_enabled ? function (d) {
          var updated, arcData;

          if ($$.transiting) {
            // skip while transiting
            return;
          }

          updated = $$.updateAngle(d);

          if (updated) {
            arcData = $$.convertToArcData(updated); // transitions

            $$.unexpandArc(updated.data.id);
            $$.api.revert();
            $$.revertLegend();
            $$.hideTooltip();
            $$.config.data_onmouseout(arcData, this);
          }
        } : null).on('click', config.interaction_enabled ? function (d, i) {
          var updated = $$.updateAngle(d),
              arcData;

          if (updated) {
            arcData = $$.convertToArcData(updated);

            if ($$.toggleShape) {
              $$.toggleShape(this, arcData, i);
            }

            $$.config.data_onclick.call($$.api, arcData, this);
          }
        } : null).each(function () {
          $$.transiting = true;
        }).transition().duration(duration).attrTween("d", function (d) {
          var updated = $$.updateAngle(d),
              interpolate;

          if (!updated) {
            return function () {
              return "M 0 0";
            };
          } //                if (this._current === d) {
          //                    this._current = {
          //                        startAngle: Math.PI*2,
          //                        endAngle: Math.PI*2,
          //                    };
          //                }


          if (isNaN(this._current.startAngle)) {
            this._current.startAngle = 0;
          }

          if (isNaN(this._current.endAngle)) {
            this._current.endAngle = this._current.startAngle;
          }

          interpolate = d3.interpolate(this._current, updated);
          this._current = interpolate(0);
          return function (t) {
            var interpolated = interpolate(t);
            interpolated.data = d.data; // data.id will be updated by interporator

            return $$.getArc(interpolated, true);
          };
        }).attr("transform", withTransform ? "scale(1)" : "").style("fill", function (d) {
          return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);
        }) // Where gauge reading color would receive customization.
        .call($$.endall, function () {
          $$.transiting = false;
        });
        mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();
        main.selectAll('.' + CLASS.chartArc).select('text').style("opacity", 0).attr('class', function (d) {
          return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';
        }).text($$.textForArcLabel.bind($$)).attr("transform", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {
          return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';
        }).transition().duration(duration).style("opacity", function (d) {
          return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;
        });
        main.select('.' + CLASS.chartArcsTitle).style("opacity", $$.hasType('donut') || hasGaugeType ? 1 : 0);

        if (hasGaugeType) {
          var index = 0;
          backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);
          backgroundArc.enter().append("path");
          backgroundArc.attr("class", function (d, i) {
            return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;
          }).attr("d", function (d1) {
            if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {
              return "M 0 0";
            }

            var d = {
              data: [{
                value: config.gauge_max
              }],
              startAngle: config.gauge_startingAngle,
              endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),
              index: index++
            };
            return $$.getArc(d, true, true);
          });
          backgroundArc.exit().remove();
          $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr("dy", ".75em").text(config.gauge_label_show ? config.gauge_units : '');
          $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr("dx", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + "px").attr("dy", "1.2em").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');
          $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr("dx", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + "px").attr("dy", "1.2em").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');
        }
      };

      c3_chart_internal_fn.initGauge = function () {
        var arcs = this.arcs;

        if (this.hasType('gauge')) {
          arcs.append('g').attr("class", CLASS.chartArcsBackground);
          arcs.append("text").attr("class", CLASS.chartArcsGaugeUnit).style("text-anchor", "middle").style("pointer-events", "none");
          arcs.append("text").attr("class", CLASS.chartArcsGaugeMin).style("text-anchor", "middle").style("pointer-events", "none");
          arcs.append("text").attr("class", CLASS.chartArcsGaugeMax).style("text-anchor", "middle").style("pointer-events", "none");
        }
      };

      c3_chart_internal_fn.getGaugeLabelHeight = function () {
        return this.config.gauge_label_show ? 20 : 0;
      };

      c3_chart_internal_fn.hasCaches = function (ids) {
        for (var i = 0; i < ids.length; i++) {
          if (!(ids[i] in this.cache)) {
            return false;
          }
        }

        return true;
      };

      c3_chart_internal_fn.addCache = function (id, target) {
        this.cache[id] = this.cloneTarget(target);
      };

      c3_chart_internal_fn.getCaches = function (ids) {
        var targets = [],
            i;

        for (i = 0; i < ids.length; i++) {
          if (ids[i] in this.cache) {
            targets.push(this.cloneTarget(this.cache[ids[i]]));
          }
        }

        return targets;
      };

      c3_chart_internal_fn.categoryName = function (i) {
        var config = this.config;
        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;
      };

      c3_chart_internal_fn.generateClass = function (prefix, targetId) {
        return " " + prefix + " " + prefix + this.getTargetSelectorSuffix(targetId);
      };

      c3_chart_internal_fn.classText = function (d) {
        return this.generateClass(CLASS.text, d.index);
      };

      c3_chart_internal_fn.classTexts = function (d) {
        return this.generateClass(CLASS.texts, d.id);
      };

      c3_chart_internal_fn.classShape = function (d) {
        return this.generateClass(CLASS.shape, d.index);
      };

      c3_chart_internal_fn.classShapes = function (d) {
        return this.generateClass(CLASS.shapes, d.id);
      };

      c3_chart_internal_fn.classLine = function (d) {
        return this.classShape(d) + this.generateClass(CLASS.line, d.id);
      };

      c3_chart_internal_fn.classLines = function (d) {
        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);
      };

      c3_chart_internal_fn.classCircle = function (d) {
        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);
      };

      c3_chart_internal_fn.classCircles = function (d) {
        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);
      };

      c3_chart_internal_fn.classBar = function (d) {
        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);
      };

      c3_chart_internal_fn.classBars = function (d) {
        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);
      };

      c3_chart_internal_fn.classArc = function (d) {
        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);
      };

      c3_chart_internal_fn.classArcs = function (d) {
        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);
      };

      c3_chart_internal_fn.classArea = function (d) {
        return this.classShape(d) + this.generateClass(CLASS.area, d.id);
      };

      c3_chart_internal_fn.classAreas = function (d) {
        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);
      };

      c3_chart_internal_fn.classRegion = function (d, i) {
        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');
      };

      c3_chart_internal_fn.classEvent = function (d) {
        return this.generateClass(CLASS.eventRect, d.index);
      };

      c3_chart_internal_fn.classTarget = function (id) {
        var $$ = this;
        var additionalClassSuffix = $$.config.data_classes[id],
            additionalClass = '';

        if (additionalClassSuffix) {
          additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;
        }

        return $$.generateClass(CLASS.target, id) + additionalClass;
      };

      c3_chart_internal_fn.classFocus = function (d) {
        return this.classFocused(d) + this.classDefocused(d);
      };

      c3_chart_internal_fn.classFocused = function (d) {
        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');
      };

      c3_chart_internal_fn.classDefocused = function (d) {
        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');
      };

      c3_chart_internal_fn.classChartText = function (d) {
        return CLASS.chartText + this.classTarget(d.id);
      };

      c3_chart_internal_fn.classChartLine = function (d) {
        return CLASS.chartLine + this.classTarget(d.id);
      };

      c3_chart_internal_fn.classChartBar = function (d) {
        return CLASS.chartBar + this.classTarget(d.id);
      };

      c3_chart_internal_fn.classChartArc = function (d) {
        return CLASS.chartArc + this.classTarget(d.data.id);
      };

      c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {
        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\s?!@#$%^&*()_=+,.<>'":;\[\]\/|~`{}\\]/g, '-') : '';
      };

      c3_chart_internal_fn.selectorTarget = function (id, prefix) {
        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);
      };

      c3_chart_internal_fn.selectorTargets = function (ids, prefix) {
        var $$ = this;
        ids = ids || [];
        return ids.length ? ids.map(function (id) {
          return $$.selectorTarget(id, prefix);
        }) : null;
      };

      c3_chart_internal_fn.selectorLegend = function (id) {
        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);
      };

      c3_chart_internal_fn.selectorLegends = function (ids) {
        var $$ = this;
        return ids && ids.length ? ids.map(function (id) {
          return $$.selectorLegend(id);
        }) : null;
      };

      c3_chart_internal_fn.getClipPath = function (id) {
        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf("msie 9.") >= 0;
        return "url(" + (isIE9 ? "" : document.URL.split('#')[0]) + "#" + id + ")";
      };

      c3_chart_internal_fn.appendClip = function (parent, id) {
        return parent.append("clipPath").attr("id", id).append("rect");
      };

      c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {
        // axis line width + padding for left
        var left = Math.max(30, this.margin.left);
        return forHorizontal ? -(1 + left) : -(left - 1);
      };

      c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {
        return forHorizontal ? -20 : -this.margin.top;
      };

      c3_chart_internal_fn.getXAxisClipX = function () {
        var $$ = this;
        return $$.getAxisClipX(!$$.config.axis_rotated);
      };

      c3_chart_internal_fn.getXAxisClipY = function () {
        var $$ = this;
        return $$.getAxisClipY(!$$.config.axis_rotated);
      };

      c3_chart_internal_fn.getYAxisClipX = function () {
        var $$ = this;
        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);
      };

      c3_chart_internal_fn.getYAxisClipY = function () {
        var $$ = this;
        return $$.getAxisClipY($$.config.axis_rotated);
      };

      c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {
        var $$ = this,
            left = Math.max(30, $$.margin.left),
            right = Math.max(30, $$.margin.right); // width + axis line width + padding for left/right

        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;
      };

      c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {
        // less than 20 is not enough to show the axis label 'outer' without legend
        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;
      };

      c3_chart_internal_fn.getXAxisClipWidth = function () {
        var $$ = this;
        return $$.getAxisClipWidth(!$$.config.axis_rotated);
      };

      c3_chart_internal_fn.getXAxisClipHeight = function () {
        var $$ = this;
        return $$.getAxisClipHeight(!$$.config.axis_rotated);
      };

      c3_chart_internal_fn.getYAxisClipWidth = function () {
        var $$ = this;
        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);
      };

      c3_chart_internal_fn.getYAxisClipHeight = function () {
        var $$ = this;
        return $$.getAxisClipHeight($$.config.axis_rotated);
      };

      c3_chart_internal_fn.generateColor = function () {
        var $$ = this,
            config = $$.config,
            d3 = $$.d3,
            colors = config.data_colors,
            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),
            callback = config.data_color,
            ids = [];
        return function (d) {
          var id = d.id || d.data && d.data.id || d,
              color; // if callback function is provided

          if (colors[id] instanceof Function) {
            color = colors[id](d);
          } // if specified, choose that color
          else if (colors[id]) {
              color = colors[id];
            } // if not specified, choose from pattern
            else {
                if (ids.indexOf(id) < 0) {
                  ids.push(id);
                }

                color = pattern[ids.indexOf(id) % pattern.length];
                colors[id] = color;
              }

          return callback instanceof Function ? callback(color, d) : color;
        };
      };

      c3_chart_internal_fn.generateLevelColor = function () {
        var $$ = this,
            config = $$.config,
            colors = config.color_pattern,
            threshold = config.color_threshold,
            asValue = threshold.unit === 'value',
            values = threshold.values && threshold.values.length ? threshold.values : [],
            max = threshold.max || 100;
        return notEmpty(config.color_threshold) ? function (value) {
          var i,
              v,
              color = colors[colors.length - 1];

          for (i = 0; i < values.length; i++) {
            v = asValue ? value : value * 100 / max;

            if (v < values[i]) {
              color = colors[i];
              break;
            }
          }

          return color;
        } : null;
      };

      c3_chart_internal_fn.getDefaultConfig = function () {
        var config = {
          bindto: '#chart',
          svg_classname: undefined,
          size_width: undefined,
          size_height: undefined,
          padding_left: undefined,
          padding_right: undefined,
          padding_top: undefined,
          padding_bottom: undefined,
          resize_auto: true,
          zoom_enabled: false,
          zoom_extent: undefined,
          zoom_privileged: false,
          zoom_rescale: false,
          zoom_onzoom: function zoom_onzoom() {},
          zoom_onzoomstart: function zoom_onzoomstart() {},
          zoom_onzoomend: function zoom_onzoomend() {},
          zoom_x_min: undefined,
          zoom_x_max: undefined,
          interaction_brighten: true,
          interaction_enabled: true,
          onmouseover: function onmouseover() {},
          onmouseout: function onmouseout() {},
          onresize: function onresize() {},
          onresized: function onresized() {},
          oninit: function oninit() {},
          onrendered: function onrendered() {},
          transition_duration: 350,
          data_x: undefined,
          data_xs: {},
          data_xFormat: '%Y-%m-%d',
          data_xLocaltime: true,
          data_xSort: true,
          data_idConverter: function data_idConverter(id) {
            return id;
          },
          data_names: {},
          data_classes: {},
          data_groups: [],
          data_axes: {},
          data_type: undefined,
          data_types: {},
          data_labels: {},
          data_order: 'desc',
          data_regions: {},
          data_color: undefined,
          data_colors: {},
          data_hide: false,
          data_filter: undefined,
          data_selection_enabled: false,
          data_selection_grouped: false,
          data_selection_isselectable: function data_selection_isselectable() {
            return true;
          },
          data_selection_multiple: true,
          data_selection_draggable: false,
          data_onclick: function data_onclick() {},
          data_onmouseover: function data_onmouseover() {},
          data_onmouseout: function data_onmouseout() {},
          data_onselected: function data_onselected() {},
          data_onunselected: function data_onunselected() {},
          data_url: undefined,
          data_headers: undefined,
          data_json: undefined,
          data_rows: undefined,
          data_columns: undefined,
          data_mimeType: undefined,
          data_keys: undefined,
          // configuration for no plot-able data supplied.
          data_empty_label_text: "",
          // subchart
          subchart_show: false,
          subchart_size_height: 60,
          subchart_axis_x_show: true,
          subchart_onbrush: function subchart_onbrush() {},
          // color
          color_pattern: [],
          color_threshold: {},
          // legend
          legend_show: true,
          legend_hide: false,
          legend_position: 'bottom',
          legend_inset_anchor: 'top-left',
          legend_inset_x: 10,
          legend_inset_y: 0,
          legend_inset_step: undefined,
          legend_item_onclick: undefined,
          legend_item_onmouseover: undefined,
          legend_item_onmouseout: undefined,
          legend_equally: false,
          legend_padding: 0,
          legend_item_tile_width: 10,
          legend_item_tile_height: 10,
          // axis
          axis_rotated: false,
          axis_x_show: true,
          axis_x_type: 'indexed',
          axis_x_localtime: true,
          axis_x_categories: [],
          axis_x_tick_centered: false,
          axis_x_tick_format: undefined,
          axis_x_tick_culling: {},
          axis_x_tick_culling_max: 10,
          axis_x_tick_count: undefined,
          axis_x_tick_fit: true,
          axis_x_tick_values: null,
          axis_x_tick_rotate: 0,
          axis_x_tick_outer: true,
          axis_x_tick_multiline: true,
          axis_x_tick_multilineMax: 0,
          axis_x_tick_width: null,
          axis_x_max: undefined,
          axis_x_min: undefined,
          axis_x_padding: {},
          axis_x_height: undefined,
          axis_x_extent: undefined,
          axis_x_label: {},
          axis_x_inner: undefined,
          axis_y_show: true,
          axis_y_type: undefined,
          axis_y_max: undefined,
          axis_y_min: undefined,
          axis_y_inverted: false,
          axis_y_center: undefined,
          axis_y_inner: undefined,
          axis_y_label: {},
          axis_y_tick_format: undefined,
          axis_y_tick_outer: true,
          axis_y_tick_values: null,
          axis_y_tick_rotate: 0,
          axis_y_tick_count: undefined,
          axis_y_tick_time_value: undefined,
          axis_y_tick_time_interval: undefined,
          axis_y_padding: {},
          axis_y_default: undefined,
          axis_y2_show: false,
          axis_y2_max: undefined,
          axis_y2_min: undefined,
          axis_y2_inverted: false,
          axis_y2_center: undefined,
          axis_y2_inner: undefined,
          axis_y2_label: {},
          axis_y2_tick_format: undefined,
          axis_y2_tick_outer: true,
          axis_y2_tick_values: null,
          axis_y2_tick_count: undefined,
          axis_y2_padding: {},
          axis_y2_default: undefined,
          // grid
          grid_x_show: false,
          grid_x_type: 'tick',
          grid_x_lines: [],
          grid_y_show: false,
          // not used
          // grid_y_type: 'tick',
          grid_y_lines: [],
          grid_y_ticks: 10,
          grid_focus_show: true,
          grid_lines_front: true,
          // point - point of each data
          point_show: true,
          point_r: 2.5,
          point_sensitivity: 10,
          point_focus_expand_enabled: true,
          point_focus_expand_r: undefined,
          point_select_r: undefined,
          // line
          line_connectNull: false,
          line_step_type: 'step',
          // bar
          bar_width: undefined,
          bar_width_ratio: 0.6,
          bar_width_max: undefined,
          bar_zerobased: true,
          bar_space: 0,
          // area
          area_zerobased: true,
          area_above: false,
          // pie
          pie_label_show: true,
          pie_label_format: undefined,
          pie_label_threshold: 0.05,
          pie_label_ratio: undefined,
          pie_expand: {},
          pie_expand_duration: 50,
          // gauge
          gauge_fullCircle: false,
          gauge_label_show: true,
          gauge_labelLine_show: true,
          gauge_label_format: undefined,
          gauge_min: 0,
          gauge_max: 100,
          gauge_startingAngle: -1 * Math.PI / 2,
          gauge_label_extents: undefined,
          gauge_units: undefined,
          gauge_width: undefined,
          gauge_arcs_minWidth: 5,
          gauge_expand: {},
          gauge_expand_duration: 50,
          // donut
          donut_label_show: true,
          donut_label_format: undefined,
          donut_label_threshold: 0.05,
          donut_label_ratio: undefined,
          donut_width: undefined,
          donut_title: "",
          donut_expand: {},
          donut_expand_duration: 50,
          // spline
          spline_interpolation_type: 'cardinal',
          // region - region to change style
          regions: [],
          // tooltip - show when mouseover on each data
          tooltip_show: true,
          tooltip_grouped: true,
          tooltip_order: undefined,
          tooltip_format_title: undefined,
          tooltip_format_name: undefined,
          tooltip_format_value: undefined,
          tooltip_position: undefined,
          tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {
            return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';
          },
          tooltip_init_show: false,
          tooltip_init_x: 0,
          tooltip_init_position: {
            top: '0px',
            left: '50px'
          },
          tooltip_onshow: function tooltip_onshow() {},
          tooltip_onhide: function tooltip_onhide() {},
          // title
          title_text: undefined,
          title_padding: {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0
          },
          title_position: 'top-center'
        };
        Object.keys(this.additionalConfig).forEach(function (key) {
          config[key] = this.additionalConfig[key];
        }, this);
        return config;
      };

      c3_chart_internal_fn.additionalConfig = {};

      c3_chart_internal_fn.loadConfig = function (config) {
        var this_config = this.config,
            target,
            keys,
            read;

        function find() {
          var key = keys.shift(); //        console.log("key =>", key, ", target =>", target);

          if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {
            target = target[key];
            return find();
          } else if (!key) {
            return target;
          } else {
            return undefined;
          }
        }

        Object.keys(this_config).forEach(function (key) {
          target = config;
          keys = key.split('_');
          read = find(); //        console.log("CONFIG : ", key, read);

          if (isDefined(read)) {
            this_config[key] = read;
          }
        });
      };

      c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {
        var $$ = this,
            type = mimeType ? mimeType : 'csv';
        var req = $$.d3.xhr(url);

        if (headers) {
          Object.keys(headers).forEach(function (header) {
            req.header(header, headers[header]);
          });
        }

        req.get(function (error, data) {
          var d;
          var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345

          if (!data) {
            throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');
          }

          if (type === 'json') {
            d = $$.convertJsonToData(JSON.parse(dataResponse), keys);
          } else if (type === 'tsv') {
            d = $$.convertTsvToData(dataResponse);
          } else {
            d = $$.convertCsvToData(dataResponse);
          }

          done.call($$, d);
        });
      };

      c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {
        var rows = parser.parseRows(xsv),
            d;

        if (rows.length === 1) {
          d = [{}];
          rows[0].forEach(function (id) {
            d[0][id] = null;
          });
        } else {
          d = parser.parse(xsv);
        }

        return d;
      };

      c3_chart_internal_fn.convertCsvToData = function (csv) {
        return this.convertXsvToData(csv, this.d3.csv);
      };

      c3_chart_internal_fn.convertTsvToData = function (tsv) {
        return this.convertXsvToData(tsv, this.d3.tsv);
      };

      c3_chart_internal_fn.convertJsonToData = function (json, keys) {
        var $$ = this,
            new_rows = [],
            targetKeys,
            data;

        if (keys) {
          // when keys specified, json would be an array that includes objects
          if (keys.x) {
            targetKeys = keys.value.concat(keys.x);
            $$.config.data_x = keys.x;
          } else {
            targetKeys = keys.value;
          }

          new_rows.push(targetKeys);
          json.forEach(function (o) {
            var new_row = [];
            targetKeys.forEach(function (key) {
              // convert undefined to null because undefined data will be removed in convertDataToTargets()
              var v = $$.findValueInJson(o, key);

              if (isUndefined(v)) {
                v = null;
              }

              new_row.push(v);
            });
            new_rows.push(new_row);
          });
          data = $$.convertRowsToData(new_rows);
        } else {
          Object.keys(json).forEach(function (key) {
            new_rows.push([key].concat(json[key]));
          });
          data = $$.convertColumnsToData(new_rows);
        }

        return data;
      };

      c3_chart_internal_fn.findValueInJson = function (object, path) {
        path = path.replace(/\[(\w+)\]/g, '.$1'); // convert indexes to properties (replace [] with .)

        path = path.replace(/^\./, ''); // strip a leading dot

        var pathArray = path.split('.');

        for (var i = 0; i < pathArray.length; ++i) {
          var k = pathArray[i];

          if (k in object) {
            object = object[k];
          } else {
            return;
          }
        }

        return object;
      };
      /**
       * Converts the rows to normalized data.
       * @param {any[][]} rows The row data
       * @return {Object[]}
       */


      c3_chart_internal_fn.convertRowsToData = function (rows) {
        var newRows = [];
        var keys = rows[0];

        for (var i = 1; i < rows.length; i++) {
          var newRow = {};

          for (var j = 0; j < rows[i].length; j++) {
            if (isUndefined(rows[i][j])) {
              throw new Error("Source data is missing a component at (" + i + "," + j + ")!");
            }

            newRow[keys[j]] = rows[i][j];
          }

          newRows.push(newRow);
        }

        return newRows;
      };
      /**
       * Converts the columns to normalized data.
       * @param {any[][]} columns The column data
       * @return {Object[]}
       */


      c3_chart_internal_fn.convertColumnsToData = function (columns) {
        var newRows = [];

        for (var i = 0; i < columns.length; i++) {
          var key = columns[i][0];

          for (var j = 1; j < columns[i].length; j++) {
            if (isUndefined(newRows[j - 1])) {
              newRows[j - 1] = {};
            }

            if (isUndefined(columns[i][j])) {
              throw new Error("Source data is missing a component at (" + i + "," + j + ")!");
            }

            newRows[j - 1][key] = columns[i][j];
          }
        }

        return newRows;
      };

      c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {
        var $$ = this,
            config = $$.config,
            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),
            xs = $$.d3.keys(data[0]).filter($$.isX, $$),
            targets; // save x for update data by load when custom x and c3.x API

        ids.forEach(function (id) {
          var xKey = $$.getXKey(id);

          if ($$.isCustomX() || $$.isTimeSeries()) {
            // if included in input data
            if (xs.indexOf(xKey) >= 0) {
              $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {
                return d[xKey];
              }).filter(isValue).map(function (rawX, i) {
                return $$.generateTargetX(rawX, id, i);
              }));
            } // if not included in input data, find from preloaded data of other id's x
            else if (config.data_x) {
                $$.data.xs[id] = $$.getOtherTargetXs();
              } // if not included in input data, find from preloaded data
              else if (notEmpty(config.data_xs)) {
                  $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);
                } // MEMO: if no x included, use same x of current will be used

          } else {
            $$.data.xs[id] = data.map(function (d, i) {
              return i;
            });
          }
        }); // check x is defined

        ids.forEach(function (id) {
          if (!$$.data.xs[id]) {
            throw new Error('x is not defined for id = "' + id + '".');
          }
        }); // convert to target

        targets = ids.map(function (id, index) {
          var convertedId = config.data_idConverter(id);
          return {
            id: convertedId,
            id_org: id,
            values: data.map(function (d, i) {
              var xKey = $$.getXKey(id),
                  rawX = d[xKey],
                  value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,
                  x; // use x as categories if custom x and categorized

              if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {
                if (index === 0 && i === 0) {
                  config.axis_x_categories = [];
                }

                x = config.axis_x_categories.indexOf(rawX);

                if (x === -1) {
                  x = config.axis_x_categories.length;
                  config.axis_x_categories.push(rawX);
                }
              } else {
                x = $$.generateTargetX(rawX, id, i);
              } // mark as x = undefined if value is undefined and filter to remove after mapped


              if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {
                x = undefined;
              }

              return {
                x: x,
                value: value,
                id: convertedId
              };
            }).filter(function (v) {
              return isDefined(v.x);
            })
          };
        }); // finish targets

        targets.forEach(function (t) {
          var i; // sort values by its x

          if (config.data_xSort) {
            t.values = t.values.sort(function (v1, v2) {
              var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,
                  x2 = v2.x || v2.x === 0 ? v2.x : Infinity;
              return x1 - x2;
            });
          } // indexing each value


          i = 0;
          t.values.forEach(function (v) {
            v.index = i++;
          }); // this needs to be sorted because its index and value.index is identical

          $$.data.xs[t.id].sort(function (v1, v2) {
            return v1 - v2;
          });
        }); // cache information about values

        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);
        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets); // set target types

        if (config.data_type) {
          $$.setTargetType($$.mapToIds(targets).filter(function (id) {
            return !(id in config.data_types);
          }), config.data_type);
        } // cache as original id keyed


        targets.forEach(function (d) {
          $$.addCache(d.id_org, d);
        });
        return targets;
      };

      c3_chart_internal_fn.isX = function (key) {
        var $$ = this,
            config = $$.config;
        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);
      };

      c3_chart_internal_fn.isNotX = function (key) {
        return !this.isX(key);
      };

      c3_chart_internal_fn.getXKey = function (id) {
        var $$ = this,
            config = $$.config;
        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;
      };

      c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {
        var $$ = this,
            xValues,
            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];
        ids.forEach(function (id) {
          if ($$.getXKey(id) === key) {
            xValues = $$.data.xs[id];
          }
        });
        return xValues;
      };

      c3_chart_internal_fn.getIndexByX = function (x) {
        var $$ = this,
            data = $$.filterByX($$.data.targets, x);
        return data.length ? data[0].index : null;
      };

      c3_chart_internal_fn.getXValue = function (id, i) {
        var $$ = this;
        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;
      };

      c3_chart_internal_fn.getOtherTargetXs = function () {
        var $$ = this,
            idsForX = Object.keys($$.data.xs);
        return idsForX.length ? $$.data.xs[idsForX[0]] : null;
      };

      c3_chart_internal_fn.getOtherTargetX = function (index) {
        var xs = this.getOtherTargetXs();
        return xs && index < xs.length ? xs[index] : null;
      };

      c3_chart_internal_fn.addXs = function (xs) {
        var $$ = this;
        Object.keys(xs).forEach(function (id) {
          $$.config.data_xs[id] = xs[id];
        });
      };

      c3_chart_internal_fn.hasMultipleX = function (xs) {
        return this.d3.set(Object.keys(xs).map(function (id) {
          return xs[id];
        })).size() > 1;
      };

      c3_chart_internal_fn.isMultipleX = function () {
        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');
      };

      c3_chart_internal_fn.addName = function (data) {
        var $$ = this,
            name;

        if (data) {
          name = $$.config.data_names[data.id];
          data.name = name !== undefined ? name : data.id;
        }

        return data;
      };

      c3_chart_internal_fn.getValueOnIndex = function (values, index) {
        var valueOnIndex = values.filter(function (v) {
          return v.index === index;
        });
        return valueOnIndex.length ? valueOnIndex[0] : null;
      };

      c3_chart_internal_fn.updateTargetX = function (targets, x) {
        var $$ = this;
        targets.forEach(function (t) {
          t.values.forEach(function (v, i) {
            v.x = $$.generateTargetX(x[i], t.id, i);
          });
          $$.data.xs[t.id] = x;
        });
      };

      c3_chart_internal_fn.updateTargetXs = function (targets, xs) {
        var $$ = this;
        targets.forEach(function (t) {
          if (xs[t.id]) {
            $$.updateTargetX([t], xs[t.id]);
          }
        });
      };

      c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {
        var $$ = this,
            x;

        if ($$.isTimeSeries()) {
          x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));
        } else if ($$.isCustomX() && !$$.isCategorized()) {
          x = isValue(rawX) ? +rawX : $$.getXValue(id, index);
        } else {
          x = index;
        }

        return x;
      };

      c3_chart_internal_fn.cloneTarget = function (target) {
        return {
          id: target.id,
          id_org: target.id_org,
          values: target.values.map(function (d) {
            return {
              x: d.x,
              value: d.value,
              id: d.id
            };
          })
        };
      };

      c3_chart_internal_fn.updateXs = function () {
        var $$ = this;

        if ($$.data.targets.length) {
          $$.xs = [];
          $$.data.targets[0].values.forEach(function (v) {
            $$.xs[v.index] = v.x;
          });
        }
      };

      c3_chart_internal_fn.getPrevX = function (i) {
        var x = this.xs[i - 1];
        return typeof x !== 'undefined' ? x : null;
      };

      c3_chart_internal_fn.getNextX = function (i) {
        var x = this.xs[i + 1];
        return typeof x !== 'undefined' ? x : null;
      };

      c3_chart_internal_fn.getMaxDataCount = function () {
        var $$ = this;
        return $$.d3.max($$.data.targets, function (t) {
          return t.values.length;
        });
      };

      c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {
        var length = targets.length,
            max = 0,
            maxTarget;

        if (length > 1) {
          targets.forEach(function (t) {
            if (t.values.length > max) {
              maxTarget = t;
              max = t.values.length;
            }
          });
        } else {
          maxTarget = length ? targets[0] : null;
        }

        return maxTarget;
      };

      c3_chart_internal_fn.getEdgeX = function (targets) {
        var $$ = this;
        return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {
          return t.values[0].x;
        }), $$.d3.max(targets, function (t) {
          return t.values[t.values.length - 1].x;
        })];
      };

      c3_chart_internal_fn.mapToIds = function (targets) {
        return targets.map(function (d) {
          return d.id;
        });
      };

      c3_chart_internal_fn.mapToTargetIds = function (ids) {
        var $$ = this;
        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);
      };

      c3_chart_internal_fn.hasTarget = function (targets, id) {
        var ids = this.mapToIds(targets),
            i;

        for (i = 0; i < ids.length; i++) {
          if (ids[i] === id) {
            return true;
          }
        }

        return false;
      };

      c3_chart_internal_fn.isTargetToShow = function (targetId) {
        return this.hiddenTargetIds.indexOf(targetId) < 0;
      };

      c3_chart_internal_fn.isLegendToShow = function (targetId) {
        return this.hiddenLegendIds.indexOf(targetId) < 0;
      };

      c3_chart_internal_fn.filterTargetsToShow = function (targets) {
        var $$ = this;
        return targets.filter(function (t) {
          return $$.isTargetToShow(t.id);
        });
      };

      c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {
        var $$ = this;
        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {
          return t.values.map(function (v) {
            return +v.x;
          });
        }))).values();
        xs = $$.isTimeSeries() ? xs.map(function (x) {
          return new Date(+x);
        }) : xs.map(function (x) {
          return +x;
        });
        return xs.sort(function (a, b) {
          return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
        });
      };

      c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {
        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);

        for (var i = 0; i < targetIds.length; i++) {
          if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {
            this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);
          }
        }
      };

      c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {
        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {
          return targetIds.indexOf(id) < 0;
        });
      };

      c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {
        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);

        for (var i = 0; i < targetIds.length; i++) {
          if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {
            this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);
          }
        }
      };

      c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {
        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {
          return targetIds.indexOf(id) < 0;
        });
      };

      c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {
        var ys = {};
        targets.forEach(function (t) {
          ys[t.id] = [];
          t.values.forEach(function (v) {
            ys[t.id].push(v.value);
          });
        });
        return ys;
      };

      c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {
        var ids = Object.keys(targets),
            i,
            j,
            values;

        for (i = 0; i < ids.length; i++) {
          values = targets[ids[i]].values;

          for (j = 0; j < values.length; j++) {
            if (checker(values[j].value)) {
              return true;
            }
          }
        }

        return false;
      };

      c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {
        return this.checkValueInTargets(targets, function (v) {
          return v < 0;
        });
      };

      c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {
        return this.checkValueInTargets(targets, function (v) {
          return v > 0;
        });
      };

      c3_chart_internal_fn.isOrderDesc = function () {
        var config = this.config;
        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';
      };

      c3_chart_internal_fn.isOrderAsc = function () {
        var config = this.config;
        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';
      };

      c3_chart_internal_fn.getOrderFunction = function () {
        var $$ = this,
            config = $$.config,
            orderAsc = $$.isOrderAsc(),
            orderDesc = $$.isOrderDesc();

        if (orderAsc || orderDesc) {
          return function (t1, t2) {
            var reducer = function reducer(p, c) {
              return p + Math.abs(c.value);
            };

            var t1Sum = t1.values.reduce(reducer, 0),
                t2Sum = t2.values.reduce(reducer, 0);
            return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;
          };
        } else if (isFunction(config.data_order)) {
          return config.data_order;
        } else if (isArray(config.data_order)) {
          var order = config.data_order;
          return function (t1, t2) {
            return order.indexOf(t1.id) - order.indexOf(t2.id);
          };
        }
      };

      c3_chart_internal_fn.orderTargets = function (targets) {
        var fct = this.getOrderFunction();

        if (fct) {
          targets.sort(fct);

          if (this.isOrderAsc() || this.isOrderDesc()) {
            targets.reverse();
          }
        }

        return targets;
      };

      c3_chart_internal_fn.filterByX = function (targets, x) {
        return this.d3.merge(targets.map(function (t) {
          return t.values;
        })).filter(function (v) {
          return v.x - x === 0;
        });
      };

      c3_chart_internal_fn.filterRemoveNull = function (data) {
        return data.filter(function (d) {
          return isValue(d.value);
        });
      };

      c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {
        return targets.map(function (t) {
          return {
            id: t.id,
            id_org: t.id_org,
            values: t.values.filter(function (v) {
              return xDomain[0] <= v.x && v.x <= xDomain[1];
            })
          };
        });
      };

      c3_chart_internal_fn.hasDataLabel = function () {
        var config = this.config;

        if (typeof config.data_labels === 'boolean' && config.data_labels) {
          return true;
        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {
          return true;
        }

        return false;
      };

      c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {
        var $$ = this,
            lengths = [0, 0],
            paddingCoef = 1.3;
        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {
          return $$.dataLabelFormat(d.id)(d);
        }).each(function (d, i) {
          lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;
        }).remove();
        return lengths;
      };

      c3_chart_internal_fn.isNoneArc = function (d) {
        return this.hasTarget(this.data.targets, d.id);
      }, c3_chart_internal_fn.isArc = function (d) {
        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);
      };

      c3_chart_internal_fn.findSameXOfValues = function (values, index) {
        var i,
            targetX = values[index].x,
            sames = [];

        for (i = index - 1; i >= 0; i--) {
          if (targetX !== values[i].x) {
            break;
          }

          sames.push(values[i]);
        }

        for (i = index; i < values.length; i++) {
          if (targetX !== values[i].x) {
            break;
          }

          sames.push(values[i]);
        }

        return sames;
      };

      c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {
        var $$ = this,
            candidates; // map to array of closest points of each target

        candidates = targets.map(function (target) {
          return $$.findClosest(target.values, pos);
        }); // decide closest point and return

        return $$.findClosest(candidates, pos);
      };

      c3_chart_internal_fn.findClosest = function (values, pos) {
        var $$ = this,
            minDist = $$.config.point_sensitivity,
            closest; // find mouseovering bar

        values.filter(function (v) {
          return v && $$.isBarType(v.id);
        }).forEach(function (v) {
          var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();

          if (!closest && $$.isWithinBar(shape)) {
            closest = v;
          }
        }); // find closest point from non-bar

        values.filter(function (v) {
          return v && !$$.isBarType(v.id);
        }).forEach(function (v) {
          var d = $$.dist(v, pos);

          if (d < minDist) {
            minDist = d;
            closest = v;
          }
        });
        return closest;
      };

      c3_chart_internal_fn.dist = function (data, pos) {
        var $$ = this,
            config = $$.config,
            xIndex = config.axis_rotated ? 1 : 0,
            yIndex = config.axis_rotated ? 0 : 1,
            y = $$.circleY(data, data.index),
            x = $$.x(data.x);
        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));
      };

      c3_chart_internal_fn.convertValuesToStep = function (values) {
        var converted = [].concat(values),
            i;

        if (!this.isCategorized()) {
          return values;
        }

        for (i = values.length + 1; 0 < i; i--) {
          converted[i] = converted[i - 1];
        }

        converted[0] = {
          x: converted[0].x - 1,
          value: converted[0].value,
          id: converted[0].id
        };
        converted[values.length + 1] = {
          x: converted[values.length].x + 1,
          value: converted[values.length].value,
          id: converted[values.length].id
        };
        return converted;
      };

      c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {
        var $$ = this,
            config = $$.config,
            current = config['data_' + name];

        if (typeof attrs === 'undefined') {
          return current;
        }

        Object.keys(attrs).forEach(function (id) {
          current[id] = attrs[id];
        });
        $$.redraw({
          withLegend: true
        });
        return current;
      };

      c3_chart_internal_fn.load = function (targets, args) {
        var $$ = this;

        if (targets) {
          // filter loading targets if needed
          if (args.filter) {
            targets = targets.filter(args.filter);
          } // set type if args.types || args.type specified


          if (args.type || args.types) {
            targets.forEach(function (t) {
              var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;
              $$.setTargetType(t.id, type);
            });
          } // Update/Add data


          $$.data.targets.forEach(function (d) {
            for (var i = 0; i < targets.length; i++) {
              if (d.id === targets[i].id) {
                d.values = targets[i].values;
                targets.splice(i, 1);
                break;
              }
            }
          });
          $$.data.targets = $$.data.targets.concat(targets); // add remained
        } // Set targets


        $$.updateTargets($$.data.targets); // Redraw with new targets

        $$.redraw({
          withUpdateOrgXDomain: true,
          withUpdateXDomain: true,
          withLegend: true
        });

        if (args.done) {
          args.done();
        }
      };

      c3_chart_internal_fn.loadFromArgs = function (args) {
        var $$ = this;

        if (args.data) {
          $$.load($$.convertDataToTargets(args.data), args);
        } else if (args.url) {
          $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {
            $$.load($$.convertDataToTargets(data), args);
          });
        } else if (args.json) {
          $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);
        } else if (args.rows) {
          $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);
        } else if (args.columns) {
          $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);
        } else {
          $$.load(null, args);
        }
      };

      c3_chart_internal_fn.unload = function (targetIds, done) {
        var $$ = this;

        if (!done) {
          done = function done() {};
        } // filter existing target


        targetIds = targetIds.filter(function (id) {
          return $$.hasTarget($$.data.targets, id);
        }); // If no target, call done and return

        if (!targetIds || targetIds.length === 0) {
          done();
          return;
        }

        $$.svg.selectAll(targetIds.map(function (id) {
          return $$.selectorTarget(id);
        })).transition().style('opacity', 0).remove().call($$.endall, done);
        targetIds.forEach(function (id) {
          // Reset fadein for future load
          $$.withoutFadeIn[id] = false; // Remove target's elements

          if ($$.legend) {
            $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();
          } // Remove target


          $$.data.targets = $$.data.targets.filter(function (t) {
            return t.id !== id;
          });
        });
      };

      c3_chart_internal_fn.getYDomainMin = function (targets) {
        var $$ = this,
            config = $$.config,
            ids = $$.mapToIds(targets),
            ys = $$.getValuesAsIdKeyed(targets),
            j,
            k,
            baseId,
            idsInGroup,
            id,
            hasNegativeValue;

        if (config.data_groups.length > 0) {
          hasNegativeValue = $$.hasNegativeValueInTargets(targets);

          for (j = 0; j < config.data_groups.length; j++) {
            // Determine baseId
            idsInGroup = config.data_groups[j].filter(function (id) {
              return ids.indexOf(id) >= 0;
            });

            if (idsInGroup.length === 0) {
              continue;
            }

            baseId = idsInGroup[0]; // Consider negative values

            if (hasNegativeValue && ys[baseId]) {
              ys[baseId].forEach(function (v, i) {
                ys[baseId][i] = v < 0 ? v : 0;
              });
            } // Compute min


            for (k = 1; k < idsInGroup.length; k++) {
              id = idsInGroup[k];

              if (!ys[id]) {
                continue;
              }

              ys[id].forEach(function (v, i) {
                if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {
                  ys[baseId][i] += +v;
                }
              });
            }
          }
        }

        return $$.d3.min(Object.keys(ys).map(function (key) {
          return $$.d3.min(ys[key]);
        }));
      };

      c3_chart_internal_fn.getYDomainMax = function (targets) {
        var $$ = this,
            config = $$.config,
            ids = $$.mapToIds(targets),
            ys = $$.getValuesAsIdKeyed(targets),
            j,
            k,
            baseId,
            idsInGroup,
            id,
            hasPositiveValue;

        if (config.data_groups.length > 0) {
          hasPositiveValue = $$.hasPositiveValueInTargets(targets);

          for (j = 0; j < config.data_groups.length; j++) {
            // Determine baseId
            idsInGroup = config.data_groups[j].filter(function (id) {
              return ids.indexOf(id) >= 0;
            });

            if (idsInGroup.length === 0) {
              continue;
            }

            baseId = idsInGroup[0]; // Consider positive values

            if (hasPositiveValue && ys[baseId]) {
              ys[baseId].forEach(function (v, i) {
                ys[baseId][i] = v > 0 ? v : 0;
              });
            } // Compute max


            for (k = 1; k < idsInGroup.length; k++) {
              id = idsInGroup[k];

              if (!ys[id]) {
                continue;
              }

              ys[id].forEach(function (v, i) {
                if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {
                  ys[baseId][i] += +v;
                }
              });
            }
          }
        }

        return $$.d3.max(Object.keys(ys).map(function (key) {
          return $$.d3.max(ys[key]);
        }));
      };

      c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {
        var $$ = this,
            config = $$.config,
            targetsByAxisId = targets.filter(function (t) {
          return $$.axis.getId(t.id) === axisId;
        }),
            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,
            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,
            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,
            yDomainMin = $$.getYDomainMin(yTargets),
            yDomainMax = $$.getYDomainMax(yTargets),
            domain,
            domainLength,
            padding,
            padding_top,
            padding_bottom,
            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,
            yDomainAbs,
            lengths,
            diff,
            ratio,
            isAllPositive,
            isAllNegative,
            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,
            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,
            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,
            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated; // MEMO: avoid inverting domain unexpectedly

        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;
        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;

        if (yTargets.length === 0) {
          // use current domain if target of axisId is none
          return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();
        }

        if (isNaN(yDomainMin)) {
          // set minimum to zero when not number
          yDomainMin = 0;
        }

        if (isNaN(yDomainMax)) {
          // set maximum to have same value as yDomainMin
          yDomainMax = yDomainMin;
        }

        if (yDomainMin === yDomainMax) {
          yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;
        }

        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;
        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0; // Cancel zerobased if axis_*_min / axis_*_max specified

        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {
          isZeroBased = false;
        } // Bar/Area chart should be 0-based if all positive|negative


        if (isZeroBased) {
          if (isAllPositive) {
            yDomainMin = 0;
          }

          if (isAllNegative) {
            yDomainMax = 0;
          }
        }

        domainLength = Math.abs(yDomainMax - yDomainMin);
        padding = padding_top = padding_bottom = domainLength * 0.1;

        if (typeof center !== 'undefined') {
          yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));
          yDomainMax = center + yDomainAbs;
          yDomainMin = center - yDomainAbs;
        } // add padding for data label


        if (showHorizontalDataLabel) {
          lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');
          diff = diffDomain($$.y.range());
          ratio = [lengths[0] / diff, lengths[1] / diff];
          padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));
          padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));
        } else if (showVerticalDataLabel) {
          lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');
          padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);
          padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);
        }

        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {
          padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);
          padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);
        }

        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {
          padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);
          padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);
        } // Bar/Area chart should be 0-based if all positive|negative


        if (isZeroBased) {
          if (isAllPositive) {
            padding_bottom = yDomainMin;
          }

          if (isAllNegative) {
            padding_top = -yDomainMax;
          }
        }

        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];
        return isInverted ? domain.reverse() : domain;
      };

      c3_chart_internal_fn.getXDomainMin = function (targets) {
        var $$ = this,
            config = $$.config;
        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {
          return $$.d3.min(t.values, function (v) {
            return v.x;
          });
        });
      };

      c3_chart_internal_fn.getXDomainMax = function (targets) {
        var $$ = this,
            config = $$.config;
        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {
          return $$.d3.max(t.values, function (v) {
            return v.x;
          });
        });
      };

      c3_chart_internal_fn.getXDomainPadding = function (domain) {
        var $$ = this,
            config = $$.config,
            diff = domain[1] - domain[0],
            maxDataCount,
            padding,
            paddingLeft,
            paddingRight;

        if ($$.isCategorized()) {
          padding = 0;
        } else if ($$.hasType('bar')) {
          maxDataCount = $$.getMaxDataCount();
          padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;
        } else {
          padding = diff * 0.01;
        }

        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {
          paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;
          paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;
        } else if (typeof config.axis_x_padding === 'number') {
          paddingLeft = paddingRight = config.axis_x_padding;
        } else {
          paddingLeft = paddingRight = padding;
        }

        return {
          left: paddingLeft,
          right: paddingRight
        };
      };

      c3_chart_internal_fn.getXDomain = function (targets) {
        var $$ = this,
            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],
            firstX = xDomain[0],
            lastX = xDomain[1],
            padding = $$.getXDomainPadding(xDomain),
            min = 0,
            max = 0; // show center of x domain if min and max are the same

        if (firstX - lastX === 0 && !$$.isCategorized()) {
          if ($$.isTimeSeries()) {
            firstX = new Date(firstX.getTime() * 0.5);
            lastX = new Date(lastX.getTime() * 1.5);
          } else {
            firstX = firstX === 0 ? 1 : firstX * 0.5;
            lastX = lastX === 0 ? -1 : lastX * 1.5;
          }
        }

        if (firstX || firstX === 0) {
          min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;
        }

        if (lastX || lastX === 0) {
          max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;
        }

        return [min, max];
      };

      c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {
        var $$ = this,
            config = $$.config;

        if (withUpdateOrgXDomain) {
          $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));
          $$.orgXDomain = $$.x.domain();

          if (config.zoom_enabled) {
            $$.zoom.scale($$.x).updateScaleExtent();
          }

          $$.subX.domain($$.x.domain());

          if ($$.brush) {
            $$.brush.scale($$.subX);
          }
        }

        if (withUpdateXDomain) {
          $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());

          if (config.zoom_enabled) {
            $$.zoom.scale($$.x).updateScaleExtent();
          }
        } // Trim domain when too big by zoom mousemove event


        if (withTrim) {
          $$.x.domain($$.trimXDomain($$.x.orgDomain()));
        }

        return $$.x.domain();
      };

      c3_chart_internal_fn.trimXDomain = function (domain) {
        var zoomDomain = this.getZoomDomain(),
            min = zoomDomain[0],
            max = zoomDomain[1];

        if (domain[0] <= min) {
          domain[1] = +domain[1] + (min - domain[0]);
          domain[0] = min;
        }

        if (max <= domain[1]) {
          domain[0] = +domain[0] - (domain[1] - max);
          domain[1] = max;
        }

        return domain;
      };

      c3_chart_internal_fn.drag = function (mouse) {
        var $$ = this,
            config = $$.config,
            main = $$.main,
            d3 = $$.d3;
        var sx, sy, mx, my, minX, maxX, minY, maxY;

        if ($$.hasArcType()) {
          return;
        }

        if (!config.data_selection_enabled) {
          return;
        } // do nothing if not selectable


        if (config.zoom_enabled && !$$.zoom.altDomain) {
          return;
        } // skip if zoomable because of conflict drag dehavior


        if (!config.data_selection_multiple) {
          return;
        } // skip when single selection because drag is used for multiple selection


        sx = $$.dragStart[0];
        sy = $$.dragStart[1];
        mx = mouse[0];
        my = mouse[1];
        minX = Math.min(sx, mx);
        maxX = Math.max(sx, mx);
        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);
        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);
        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY); // TODO: binary search when multiple xs

        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {
          return config.data_selection_isselectable(d);
        }).each(function (d, i) {
          var shape = d3.select(this),
              isSelected = shape.classed(CLASS.SELECTED),
              isIncluded = shape.classed(CLASS.INCLUDED),
              _x,
              _y,
              _w,
              _h,
              toggle,
              isWithin = false,
              box;

          if (shape.classed(CLASS.circle)) {
            _x = shape.attr("cx") * 1;
            _y = shape.attr("cy") * 1;
            toggle = $$.togglePoint;
            isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;
          } else if (shape.classed(CLASS.bar)) {
            box = getPathBox(this);
            _x = box.x;
            _y = box.y;
            _w = box.width;
            _h = box.height;
            toggle = $$.togglePath;
            isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);
          } else {
            // line/area selection not supported yet
            return;
          }

          if (isWithin ^ isIncluded) {
            shape.classed(CLASS.INCLUDED, !isIncluded); // TODO: included/unincluded callback here

            shape.classed(CLASS.SELECTED, !isSelected);
            toggle.call($$, !isSelected, shape, d, i);
          }
        });
      };

      c3_chart_internal_fn.dragstart = function (mouse) {
        var $$ = this,
            config = $$.config;

        if ($$.hasArcType()) {
          return;
        }

        if (!config.data_selection_enabled) {
          return;
        } // do nothing if not selectable


        $$.dragStart = mouse;
        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);
        $$.dragging = true;
      };

      c3_chart_internal_fn.dragend = function () {
        var $$ = this,
            config = $$.config;

        if ($$.hasArcType()) {
          return;
        }

        if (!config.data_selection_enabled) {
          return;
        } // do nothing if not selectable


        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();
        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);
        $$.dragging = false;
      };

      c3_chart_internal_fn.getYFormat = function (forArc) {
        var $$ = this,
            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,
            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;
        return function (v, ratio, id) {
          var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;
          return format.call($$, v, ratio);
        };
      };

      c3_chart_internal_fn.yFormat = function (v) {
        var $$ = this,
            config = $$.config,
            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;
        return format(v);
      };

      c3_chart_internal_fn.y2Format = function (v) {
        var $$ = this,
            config = $$.config,
            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;
        return format(v);
      };

      c3_chart_internal_fn.defaultValueFormat = function (v) {
        return isValue(v) ? +v : "";
      };

      c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {
        return (ratio * 100).toFixed(1) + '%';
      };

      c3_chart_internal_fn.dataLabelFormat = function (targetId) {
        var $$ = this,
            data_labels = $$.config.data_labels,
            format,
            defaultFormat = function defaultFormat(v) {
          return isValue(v) ? +v : "";
        }; // find format according to axis id


        if (typeof data_labels.format === 'function') {
          format = data_labels.format;
        } else if (_typeof(data_labels.format) === 'object') {
          if (data_labels.format[targetId]) {
            format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];
          } else {
            format = function format() {
              return '';
            };
          }
        } else {
          format = defaultFormat;
        }

        return format;
      };

      c3_chart_internal_fn.initGrid = function () {
        var $$ = this,
            config = $$.config,
            d3 = $$.d3;
        $$.grid = $$.main.append('g').attr("clip-path", $$.clipPathForGrid).attr('class', CLASS.grid);

        if (config.grid_x_show) {
          $$.grid.append("g").attr("class", CLASS.xgrids);
        }

        if (config.grid_y_show) {
          $$.grid.append('g').attr('class', CLASS.ygrids);
        }

        if (config.grid_focus_show) {
          $$.grid.append('g').attr("class", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);
        }

        $$.xgrid = d3.selectAll([]);

        if (!config.grid_lines_front) {
          $$.initGridLines();
        }
      };

      c3_chart_internal_fn.initGridLines = function () {
        var $$ = this,
            d3 = $$.d3;
        $$.gridLines = $$.main.append('g').attr("clip-path", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);
        $$.gridLines.append('g').attr("class", CLASS.xgridLines);
        $$.gridLines.append('g').attr('class', CLASS.ygridLines);
        $$.xgridLines = d3.selectAll([]);
      };

      c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {
        var $$ = this,
            config = $$.config,
            d3 = $$.d3,
            xgridData = $$.generateGridData(config.grid_x_type, $$.x),
            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;
        $$.xgridAttr = config.axis_rotated ? {
          'x1': 0,
          'x2': $$.width,
          'y1': function y1(d) {
            return $$.x(d) - tickOffset;
          },
          'y2': function y2(d) {
            return $$.x(d) - tickOffset;
          }
        } : {
          'x1': function x1(d) {
            return $$.x(d) + tickOffset;
          },
          'x2': function x2(d) {
            return $$.x(d) + tickOffset;
          },
          'y1': 0,
          'y2': $$.height
        };
        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);
        $$.xgrid.enter().append('line').attr("class", CLASS.xgrid);

        if (!withoutUpdate) {
          $$.xgrid.attr($$.xgridAttr).style("opacity", function () {
            return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;
          });
        }

        $$.xgrid.exit().remove();
      };

      c3_chart_internal_fn.updateYGrid = function () {
        var $$ = this,
            config = $$.config,
            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);
        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);
        $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);
        $$.ygrid.attr("x1", config.axis_rotated ? $$.y : 0).attr("x2", config.axis_rotated ? $$.y : $$.width).attr("y1", config.axis_rotated ? 0 : $$.y).attr("y2", config.axis_rotated ? $$.height : $$.y);
        $$.ygrid.exit().remove();
        $$.smoothLines($$.ygrid, 'grid');
      };

      c3_chart_internal_fn.gridTextAnchor = function (d) {
        return d.position ? d.position : "end";
      };

      c3_chart_internal_fn.gridTextDx = function (d) {
        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;
      };

      c3_chart_internal_fn.xGridTextX = function (d) {
        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;
      };

      c3_chart_internal_fn.yGridTextX = function (d) {
        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;
      };

      c3_chart_internal_fn.updateGrid = function (duration) {
        var $$ = this,
            main = $$.main,
            config = $$.config,
            xgridLine,
            ygridLine,
            yv; // hide if arc type

        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');
        main.select('line.' + CLASS.xgridFocus).style("visibility", "hidden");

        if (config.grid_x_show) {
          $$.updateXGrid();
        }

        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines); // enter

        xgridLine = $$.xgridLines.enter().append('g').attr("class", function (d) {
          return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');
        });
        xgridLine.append('line').style("opacity", 0);
        xgridLine.append('text').attr("text-anchor", $$.gridTextAnchor).attr("transform", config.axis_rotated ? "" : "rotate(-90)").attr('dx', $$.gridTextDx).attr('dy', -5).style("opacity", 0); // udpate
        // done in d3.transition() of the end of this function
        // exit

        $$.xgridLines.exit().transition().duration(duration).style("opacity", 0).remove(); // Y-Grid

        if (config.grid_y_show) {
          $$.updateYGrid();
        }

        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines); // enter

        ygridLine = $$.ygridLines.enter().append('g').attr("class", function (d) {
          return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');
        });
        ygridLine.append('line').style("opacity", 0);
        ygridLine.append('text').attr("text-anchor", $$.gridTextAnchor).attr("transform", config.axis_rotated ? "rotate(-90)" : "").attr('dx', $$.gridTextDx).attr('dy', -5).style("opacity", 0); // update

        yv = $$.yv.bind($$);
        $$.ygridLines.select('line').transition().duration(duration).attr("x1", config.axis_rotated ? yv : 0).attr("x2", config.axis_rotated ? yv : $$.width).attr("y1", config.axis_rotated ? 0 : yv).attr("y2", config.axis_rotated ? $$.height : yv).style("opacity", 1);
        $$.ygridLines.select('text').transition().duration(duration).attr("x", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr("y", yv).text(function (d) {
          return d.text;
        }).style("opacity", 1); // exit

        $$.ygridLines.exit().transition().duration(duration).style("opacity", 0).remove();
      };

      c3_chart_internal_fn.redrawGrid = function (withTransition) {
        var $$ = this,
            config = $$.config,
            xv = $$.xv.bind($$),
            lines = $$.xgridLines.select('line'),
            texts = $$.xgridLines.select('text');
        return [(withTransition ? lines.transition() : lines).attr("x1", config.axis_rotated ? 0 : xv).attr("x2", config.axis_rotated ? $$.width : xv).attr("y1", config.axis_rotated ? xv : 0).attr("y2", config.axis_rotated ? xv : $$.height).style("opacity", 1), (withTransition ? texts.transition() : texts).attr("x", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr("y", xv).text(function (d) {
          return d.text;
        }).style("opacity", 1)];
      };

      c3_chart_internal_fn.showXGridFocus = function (selectedData) {
        var $$ = this,
            config = $$.config,
            dataToShow = selectedData.filter(function (d) {
          return d && isValue(d.value);
        }),
            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),
            xx = $$.xx.bind($$);

        if (!config.tooltip_show) {
          return;
        } // Hide when scatter plot exists


        if ($$.hasType('scatter') || $$.hasArcType()) {
          return;
        }

        focusEl.style("visibility", "visible").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);
        $$.smoothLines(focusEl, 'grid');
      };

      c3_chart_internal_fn.hideXGridFocus = function () {
        this.main.select('line.' + CLASS.xgridFocus).style("visibility", "hidden");
      };

      c3_chart_internal_fn.updateXgridFocus = function () {
        var $$ = this,
            config = $$.config;
        $$.main.select('line.' + CLASS.xgridFocus).attr("x1", config.axis_rotated ? 0 : -10).attr("x2", config.axis_rotated ? $$.width : -10).attr("y1", config.axis_rotated ? -10 : 0).attr("y2", config.axis_rotated ? -10 : $$.height);
      };

      c3_chart_internal_fn.generateGridData = function (type, scale) {
        var $$ = this,
            gridData = [],
            xDomain,
            firstYear,
            lastYear,
            i,
            tickNum = $$.main.select("." + CLASS.axisX).selectAll('.tick').size();

        if (type === 'year') {
          xDomain = $$.getXDomain();
          firstYear = xDomain[0].getFullYear();
          lastYear = xDomain[1].getFullYear();

          for (i = firstYear; i <= lastYear; i++) {
            gridData.push(new Date(i + '-01-01 00:00:00'));
          }
        } else {
          gridData = scale.ticks(10);

          if (gridData.length > tickNum) {
            // use only int
            gridData = gridData.filter(function (d) {
              return ("" + d).indexOf('.') < 0;
            });
          }
        }

        return gridData;
      };

      c3_chart_internal_fn.getGridFilterToRemove = function (params) {
        return params ? function (line) {
          var found = false;
          [].concat(params).forEach(function (param) {
            if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {
              found = true;
            }
          });
          return found;
        } : function () {
          return true;
        };
      };

      c3_chart_internal_fn.removeGridLines = function (params, forX) {
        var $$ = this,
            config = $$.config,
            toRemove = $$.getGridFilterToRemove(params),
            toShow = function toShow(line) {
          return !toRemove(line);
        },
            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,
            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;

        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();

        if (forX) {
          config.grid_x_lines = config.grid_x_lines.filter(toShow);
        } else {
          config.grid_y_lines = config.grid_y_lines.filter(toShow);
        }
      };

      c3_chart_internal_fn.initEventRect = function () {
        var $$ = this;
        $$.main.select('.' + CLASS.chart).append("g").attr("class", CLASS.eventRects).style('fill-opacity', 0);
      };

      c3_chart_internal_fn.redrawEventRect = function () {
        var $$ = this,
            config = $$.config,
            eventRectUpdate,
            maxDataCountTarget,
            isMultipleX = $$.isMultipleX(); // rects for mouseover

        var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX); // clear old rects

        eventRects.selectAll('.' + CLASS.eventRect).remove(); // open as public variable

        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);

        if (isMultipleX) {
          eventRectUpdate = $$.eventRect.data([0]); // enter : only one rect will be added

          $$.generateEventRectsForMultipleXs(eventRectUpdate.enter()); // update

          $$.updateEventRect(eventRectUpdate); // exit : not needed because always only one rect exists
        } else {
          // Set data and update $$.eventRect
          maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);
          eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);
          $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);
          eventRectUpdate = $$.eventRect.data(function (d) {
            return d;
          }); // enter

          $$.generateEventRectsForSingleX(eventRectUpdate.enter()); // update

          $$.updateEventRect(eventRectUpdate); // exit

          eventRectUpdate.exit().remove();
        }
      };

      c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {
        var $$ = this,
            config = $$.config,
            x,
            y,
            w,
            h,
            rectW,
            rectX; // set update selection if null

        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {
          return d;
        });

        if ($$.isMultipleX()) {
          // TODO: rotated not supported yet
          x = 0;
          y = 0;
          w = $$.width;
          h = $$.height;
        } else {
          if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {
            // update index for x that is used by prevX and nextX
            $$.updateXs();

            rectW = function rectW(d) {
              var prevX = $$.getPrevX(d.index),
                  nextX = $$.getNextX(d.index); // if there this is a single data point make the eventRect full width (or height)

              if (prevX === null && nextX === null) {
                return config.axis_rotated ? $$.height : $$.width;
              }

              if (prevX === null) {
                prevX = $$.x.domain()[0];
              }

              if (nextX === null) {
                nextX = $$.x.domain()[1];
              }

              return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);
            };

            rectX = function rectX(d) {
              var prevX = $$.getPrevX(d.index),
                  nextX = $$.getNextX(d.index),
                  thisX = $$.data.xs[d.id][d.index]; // if there this is a single data point position the eventRect at 0

              if (prevX === null && nextX === null) {
                return 0;
              }

              if (prevX === null) {
                prevX = $$.x.domain()[0];
              }

              return ($$.x(thisX) + $$.x(prevX)) / 2;
            };
          } else {
            rectW = $$.getEventRectWidth();

            rectX = function rectX(d) {
              return $$.x(d.x) - rectW / 2;
            };
          }

          x = config.axis_rotated ? 0 : rectX;
          y = config.axis_rotated ? rectX : 0;
          w = config.axis_rotated ? $$.width : rectW;
          h = config.axis_rotated ? rectW : $$.height;
        }

        eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr("x", x).attr("y", y).attr("width", w).attr("height", h);
      };

      c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config;
        eventRectEnter.append("rect").attr("class", $$.classEvent.bind($$)).style("cursor", config.data_selection_enabled && config.data_selection_grouped ? "pointer" : null).on('mouseover', function (d) {
          var index = d.index;

          if ($$.dragging || $$.flowing) {
            return;
          } // do nothing while dragging/flowing


          if ($$.hasArcType()) {
            return;
          } // Expand shapes for selection


          if (config.point_focus_expand_enabled) {
            $$.expandCircles(index, null, true);
          }

          $$.expandBars(index, null, true); // Call event handler

          $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {
            config.data_onmouseover.call($$.api, d);
          });
        }).on('mouseout', function (d) {
          var index = d.index;

          if (!$$.config) {
            return;
          } // chart is destroyed


          if ($$.hasArcType()) {
            return;
          }

          $$.hideXGridFocus();
          $$.hideTooltip(); // Undo expanded shapes

          $$.unexpandCircles();
          $$.unexpandBars(); // Call event handler

          $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {
            config.data_onmouseout.call($$.api, d);
          });
        }).on('mousemove', function (d) {
          var selectedData,
              index = d.index,
              eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);

          if ($$.dragging || $$.flowing) {
            return;
          } // do nothing while dragging/flowing


          if ($$.hasArcType()) {
            return;
          }

          if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {
            index -= 1;
          } // Show tooltip


          selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {
            return $$.addName($$.getValueOnIndex(t.values, index));
          });

          if (config.tooltip_grouped) {
            $$.showTooltip(selectedData, this);
            $$.showXGridFocus(selectedData);
          }

          if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {
            return;
          }

          $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {
            d3.select(this).classed(CLASS.EXPANDED, true);

            if (config.data_selection_enabled) {
              eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);
            }

            if (!config.tooltip_grouped) {
              $$.hideXGridFocus();
              $$.hideTooltip();

              if (!config.data_selection_grouped) {
                $$.unexpandCircles(index);
                $$.unexpandBars(index);
              }
            }
          }).filter(function (d) {
            return $$.isWithinShape(this, d);
          }).each(function (d) {
            if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {
              eventRect.style('cursor', 'pointer');
            }

            if (!config.tooltip_grouped) {
              $$.showTooltip([d], this);
              $$.showXGridFocus([d]);

              if (config.point_focus_expand_enabled) {
                $$.expandCircles(index, d.id, true);
              }

              $$.expandBars(index, d.id, true);
            }
          });
        }).on('click', function (d) {
          var index = d.index;

          if ($$.hasArcType() || !$$.toggleShape) {
            return;
          }

          if ($$.cancelClick) {
            $$.cancelClick = false;
            return;
          }

          if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {
            index -= 1;
          }

          $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {
            if (config.data_selection_grouped || $$.isWithinShape(this, d)) {
              $$.toggleShape(this, d, index);
              $$.config.data_onclick.call($$.api, d, this);
            }
          });
        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {
          $$.drag(d3.mouse(this));
        }).on('dragstart', function () {
          $$.dragstart(d3.mouse(this));
        }).on('dragend', function () {
          $$.dragend();
        }) : function () {});
      };

      c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config;

        function mouseout() {
          $$.svg.select('.' + CLASS.eventRect).style('cursor', null);
          $$.hideXGridFocus();
          $$.hideTooltip();
          $$.unexpandCircles();
          $$.unexpandBars();
        }

        eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {
          if (!$$.config) {
            return;
          } // chart is destroyed


          if ($$.hasArcType()) {
            return;
          }

          mouseout();
        }).on('mousemove', function () {
          var targetsToShow = $$.filterTargetsToShow($$.data.targets);
          var mouse, closest, sameXData, selectedData;

          if ($$.dragging) {
            return;
          } // do nothing when dragging


          if ($$.hasArcType(targetsToShow)) {
            return;
          }

          mouse = d3.mouse(this);
          closest = $$.findClosestFromTargets(targetsToShow, mouse);

          if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {
            config.data_onmouseout.call($$.api, $$.mouseover);
            $$.mouseover = undefined;
          }

          if (!closest) {
            mouseout();
            return;
          }

          if ($$.isScatterType(closest) || !config.tooltip_grouped) {
            sameXData = [closest];
          } else {
            sameXData = $$.filterByX(targetsToShow, closest.x);
          } // show tooltip when cursor is close to some point


          selectedData = sameXData.map(function (d) {
            return $$.addName(d);
          });
          $$.showTooltip(selectedData, this); // expand points

          if (config.point_focus_expand_enabled) {
            $$.expandCircles(closest.index, closest.id, true);
          }

          $$.expandBars(closest.index, closest.id, true); // Show xgrid focus line

          $$.showXGridFocus(selectedData); // Show cursor as pointer if point is close to mouse position

          if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {
            $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');

            if (!$$.mouseover) {
              config.data_onmouseover.call($$.api, closest);
              $$.mouseover = closest;
            }
          }
        }).on('click', function () {
          var targetsToShow = $$.filterTargetsToShow($$.data.targets);
          var mouse, closest;

          if ($$.hasArcType(targetsToShow)) {
            return;
          }

          mouse = d3.mouse(this);
          closest = $$.findClosestFromTargets(targetsToShow, mouse);

          if (!closest) {
            return;
          } // select if selection enabled


          if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {
            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {
              if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {
                $$.toggleShape(this, closest, closest.index);
                $$.config.data_onclick.call($$.api, closest, this);
              }
            });
          }
        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {
          $$.drag(d3.mouse(this));
        }).on('dragstart', function () {
          $$.dragstart(d3.mouse(this));
        }).on('dragend', function () {
          $$.dragend();
        }) : function () {});
      };

      c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {
        var $$ = this,
            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),
            eventRect = $$.main.select(selector).node(),
            box = eventRect.getBoundingClientRect(),
            x = box.left + (mouse ? mouse[0] : 0),
            y = box.top + (mouse ? mouse[1] : 0),
            event = document.createEvent("MouseEvents");
        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);
        eventRect.dispatchEvent(event);
      };

      c3_chart_internal_fn.initLegend = function () {
        var $$ = this;
        $$.legendItemTextBox = {};
        $$.legendHasRendered = false;
        $$.legend = $$.svg.append("g").attr("transform", $$.getTranslate('legend'));

        if (!$$.config.legend_show) {
          $$.legend.style('visibility', 'hidden');
          $$.hiddenLegendIds = $$.mapToIds($$.data.targets);
          return;
        } // MEMO: call here to update legend box and tranlate for all
        // MEMO: translate will be upated by this, so transform not needed in updateLegend()


        $$.updateLegendWithDefaults();
      };

      c3_chart_internal_fn.updateLegendWithDefaults = function () {
        var $$ = this;
        $$.updateLegend($$.mapToIds($$.data.targets), {
          withTransform: false,
          withTransitionForTransform: false,
          withTransition: false
        });
      };

      c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {
        var $$ = this,
            config = $$.config,
            insetLegendPosition = {
          top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,
          left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5
        };
        $$.margin3 = {
          top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,
          right: NaN,
          bottom: 0,
          left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0
        };
      };

      c3_chart_internal_fn.transformLegend = function (withTransition) {
        var $$ = this;
        (withTransition ? $$.legend.transition() : $$.legend).attr("transform", $$.getTranslate('legend'));
      };

      c3_chart_internal_fn.updateLegendStep = function (step) {
        this.legendStep = step;
      };

      c3_chart_internal_fn.updateLegendItemWidth = function (w) {
        this.legendItemWidth = w;
      };

      c3_chart_internal_fn.updateLegendItemHeight = function (h) {
        this.legendItemHeight = h;
      };

      c3_chart_internal_fn.getLegendWidth = function () {
        var $$ = this;
        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;
      };

      c3_chart_internal_fn.getLegendHeight = function () {
        var $$ = this,
            h = 0;

        if ($$.config.legend_show) {
          if ($$.isLegendRight) {
            h = $$.currentHeight;
          } else {
            h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);
          }
        }

        return h;
      };

      c3_chart_internal_fn.opacityForLegend = function (legendItem) {
        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;
      };

      c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {
        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;
      };

      c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {
        var $$ = this;
        targetIds = $$.mapToTargetIds(targetIds);
        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {
          return targetIds.indexOf(id) >= 0;
        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {
          var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;
          return opacity.call($$, $$.d3.select(this));
        });
      };

      c3_chart_internal_fn.revertLegend = function () {
        var $$ = this,
            d3 = $$.d3;
        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {
          return $$.opacityForLegend(d3.select(this));
        });
      };

      c3_chart_internal_fn.showLegend = function (targetIds) {
        var $$ = this,
            config = $$.config;

        if (!config.legend_show) {
          config.legend_show = true;
          $$.legend.style('visibility', 'visible');

          if (!$$.legendHasRendered) {
            $$.updateLegendWithDefaults();
          }
        }

        $$.removeHiddenLegendIds(targetIds);
        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {
          return $$.opacityForLegend($$.d3.select(this));
        });
      };

      c3_chart_internal_fn.hideLegend = function (targetIds) {
        var $$ = this,
            config = $$.config;

        if (config.legend_show && isEmpty(targetIds)) {
          config.legend_show = false;
          $$.legend.style('visibility', 'hidden');
        }

        $$.addHiddenLegendIds(targetIds);
        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');
      };

      c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {
        this.legendItemTextBox = {};
      };

      c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {
        var $$ = this,
            config = $$.config;
        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;
        var paddingTop = 4,
            paddingRight = 10,
            maxWidth = 0,
            maxHeight = 0,
            posMin = 10,
            tileWidth = config.legend_item_tile_width + 5;
        var l,
            totalLength = 0,
            offsets = {},
            widths = {},
            heights = {},
            margins = [0],
            steps = {},
            step = 0;
        var withTransition, withTransitionForTransform;
        var texts, rects, tiles, background; // Skip elements when their name is set to null

        targetIds = targetIds.filter(function (id) {
          return !isDefined(config.data_names[id]) || config.data_names[id] !== null;
        });
        options = options || {};
        withTransition = getOption(options, "withTransition", true);
        withTransitionForTransform = getOption(options, "withTransitionForTransform", true);

        function getTextBox(textElement, id) {
          if (!$$.legendItemTextBox[id]) {
            $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);
          }

          return $$.legendItemTextBox[id];
        }

        function updatePositions(textElement, id, index) {
          var reset = index === 0,
              isLast = index === targetIds.length - 1,
              box = getTextBox(textElement, id),
              itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,
              itemHeight = box.height + paddingTop,
              itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,
              areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),
              margin,
              maxLength; // MEMO: care about condifion of step, totalLength

          function updateValues(id, withoutStep) {
            if (!withoutStep) {
              margin = (areaLength - totalLength - itemLength) / 2;

              if (margin < posMin) {
                margin = (areaLength - itemLength) / 2;
                totalLength = 0;
                step++;
              }
            }

            steps[id] = step;
            margins[step] = $$.isLegendInset ? 10 : margin;
            offsets[id] = totalLength;
            totalLength += itemLength;
          }

          if (reset) {
            totalLength = 0;
            step = 0;
            maxWidth = 0;
            maxHeight = 0;
          }

          if (config.legend_show && !$$.isLegendToShow(id)) {
            widths[id] = heights[id] = steps[id] = offsets[id] = 0;
            return;
          }

          widths[id] = itemWidth;
          heights[id] = itemHeight;

          if (!maxWidth || itemWidth >= maxWidth) {
            maxWidth = itemWidth;
          }

          if (!maxHeight || itemHeight >= maxHeight) {
            maxHeight = itemHeight;
          }

          maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;

          if (config.legend_equally) {
            Object.keys(widths).forEach(function (id) {
              widths[id] = maxWidth;
            });
            Object.keys(heights).forEach(function (id) {
              heights[id] = maxHeight;
            });
            margin = (areaLength - maxLength * targetIds.length) / 2;

            if (margin < posMin) {
              totalLength = 0;
              step = 0;
              targetIds.forEach(function (id) {
                updateValues(id);
              });
            } else {
              updateValues(id, true);
            }
          } else {
            updateValues(id);
          }
        }

        if ($$.isLegendInset) {
          step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;
          $$.updateLegendStep(step);
        }

        if ($$.isLegendRight) {
          xForLegend = function xForLegend(id) {
            return maxWidth * steps[id];
          };

          yForLegend = function yForLegend(id) {
            return margins[steps[id]] + offsets[id];
          };
        } else if ($$.isLegendInset) {
          xForLegend = function xForLegend(id) {
            return maxWidth * steps[id] + 10;
          };

          yForLegend = function yForLegend(id) {
            return margins[steps[id]] + offsets[id];
          };
        } else {
          xForLegend = function xForLegend(id) {
            return margins[steps[id]] + offsets[id];
          };

          yForLegend = function yForLegend(id) {
            return maxHeight * steps[id];
          };
        }

        xForLegendText = function xForLegendText(id, i) {
          return xForLegend(id, i) + 4 + config.legend_item_tile_width;
        };

        yForLegendText = function yForLegendText(id, i) {
          return yForLegend(id, i) + 9;
        };

        xForLegendRect = function xForLegendRect(id, i) {
          return xForLegend(id, i);
        };

        yForLegendRect = function yForLegendRect(id, i) {
          return yForLegend(id, i) - 5;
        };

        x1ForLegendTile = function x1ForLegendTile(id, i) {
          return xForLegend(id, i) - 2;
        };

        x2ForLegendTile = function x2ForLegendTile(id, i) {
          return xForLegend(id, i) - 2 + config.legend_item_tile_width;
        };

        yForLegendTile = function yForLegendTile(id, i) {
          return yForLegend(id, i) + 4;
        }; // Define g for legend area


        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {
          return $$.generateClass(CLASS.legendItem, id);
        }).style('visibility', function (id) {
          return $$.isLegendToShow(id) ? 'visible' : 'hidden';
        }).style('cursor', 'pointer').on('click', function (id) {
          if (config.legend_item_onclick) {
            config.legend_item_onclick.call($$, id);
          } else {
            if ($$.d3.event.altKey) {
              $$.api.hide();
              $$.api.show(id);
            } else {
              $$.api.toggle(id);
              $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();
            }
          }
        }).on('mouseover', function (id) {
          if (config.legend_item_onmouseover) {
            config.legend_item_onmouseover.call($$, id);
          } else {
            $$.d3.select(this).classed(CLASS.legendItemFocused, true);

            if (!$$.transiting && $$.isTargetToShow(id)) {
              $$.api.focus(id);
            }
          }
        }).on('mouseout', function (id) {
          if (config.legend_item_onmouseout) {
            config.legend_item_onmouseout.call($$, id);
          } else {
            $$.d3.select(this).classed(CLASS.legendItemFocused, false);
            $$.api.revert();
          }
        });
        l.append('text').text(function (id) {
          return isDefined(config.data_names[id]) ? config.data_names[id] : id;
        }).each(function (id, i) {
          updatePositions(this, id, i);
        }).style("pointer-events", "none").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);
        l.append('rect').attr("class", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);
        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style("pointer-events", "none").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height); // Set background for inset legend

        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');

        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {
          background = $$.legend.insert('g', '.' + CLASS.legendItem).attr("class", CLASS.legendBackground).append('rect');
        }

        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {
          return isDefined(config.data_names[id]) ? config.data_names[id] : id;
        }) // MEMO: needed for update
        .each(function (id, i) {
          updatePositions(this, id, i);
        });
        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);
        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);
        (withTransition ? rects.transition() : rects).attr('width', function (id) {
          return widths[id];
        }).attr('height', function (id) {
          return heights[id];
        }).attr('x', xForLegendRect).attr('y', yForLegendRect);
        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);
        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {
          return $$.levelColor($$.cache[id].values[0].value);
        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);

        if (background) {
          (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);
        } // toggle legend state


        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {
          return !$$.isTargetToShow(id);
        }); // Update all to reflect change of legend

        $$.updateLegendItemWidth(maxWidth);
        $$.updateLegendItemHeight(maxHeight);
        $$.updateLegendStep(step); // Update size and scale

        $$.updateSizes();
        $$.updateScales();
        $$.updateSvgSize(); // Update g positions

        $$.transformAll(withTransitionForTransform, transitions);
        $$.legendHasRendered = true;
      };

      c3_chart_internal_fn.initRegion = function () {
        var $$ = this;
        $$.region = $$.main.append('g').attr("clip-path", $$.clipPath).attr("class", CLASS.regions);
      };

      c3_chart_internal_fn.updateRegion = function (duration) {
        var $$ = this,
            config = $$.config; // hide if arc type

        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');
        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);
        $$.mainRegion.enter().append('g').append('rect').style("fill-opacity", 0);
        $$.mainRegion.attr('class', $$.classRegion.bind($$));
        $$.mainRegion.exit().transition().duration(duration).style("opacity", 0).remove();
      };

      c3_chart_internal_fn.redrawRegion = function (withTransition) {
        var $$ = this,
            regions = $$.mainRegion.selectAll('rect').each(function () {
          // data is binded to g and it's not transferred to rect (child node) automatically,
          // then data of each rect has to be updated manually.
          // TODO: there should be more efficient way to solve this?
          var parentData = $$.d3.select(this.parentNode).datum();
          $$.d3.select(this).datum(parentData);
        }),
            x = $$.regionX.bind($$),
            y = $$.regionY.bind($$),
            w = $$.regionWidth.bind($$),
            h = $$.regionHeight.bind($$);
        return [(withTransition ? regions.transition() : regions).attr("x", x).attr("y", y).attr("width", w).attr("height", h).style("fill-opacity", function (d) {
          return isValue(d.opacity) ? d.opacity : 0.1;
        })];
      };

      c3_chart_internal_fn.regionX = function (d) {
        var $$ = this,
            config = $$.config,
            xPos,
            yScale = d.axis === 'y' ? $$.y : $$.y2;

        if (d.axis === 'y' || d.axis === 'y2') {
          xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;
        } else {
          xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;
        }

        return xPos;
      };

      c3_chart_internal_fn.regionY = function (d) {
        var $$ = this,
            config = $$.config,
            yPos,
            yScale = d.axis === 'y' ? $$.y : $$.y2;

        if (d.axis === 'y' || d.axis === 'y2') {
          yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;
        } else {
          yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;
        }

        return yPos;
      };

      c3_chart_internal_fn.regionWidth = function (d) {
        var $$ = this,
            config = $$.config,
            start = $$.regionX(d),
            end,
            yScale = d.axis === 'y' ? $$.y : $$.y2;

        if (d.axis === 'y' || d.axis === 'y2') {
          end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;
        } else {
          end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;
        }

        return end < start ? 0 : end - start;
      };

      c3_chart_internal_fn.regionHeight = function (d) {
        var $$ = this,
            config = $$.config,
            start = this.regionY(d),
            end,
            yScale = d.axis === 'y' ? $$.y : $$.y2;

        if (d.axis === 'y' || d.axis === 'y2') {
          end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;
        } else {
          end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;
        }

        return end < start ? 0 : end - start;
      };

      c3_chart_internal_fn.isRegionOnX = function (d) {
        return !d.axis || d.axis === 'x';
      };

      c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {
        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);
      };

      c3_chart_internal_fn.getX = function (min, max, domain, offset) {
        var $$ = this,
            scale = $$.getScale(min, max, $$.isTimeSeries()),
            _scale = domain ? scale.domain(domain) : scale,
            key; // Define customized scale if categorized axis


        if ($$.isCategorized()) {
          offset = offset || function () {
            return 0;
          };

          scale = function scale(d, raw) {
            var v = _scale(d) + offset(d);
            return raw ? v : Math.ceil(v);
          };
        } else {
          scale = function scale(d, raw) {
            var v = _scale(d);

            return raw ? v : Math.ceil(v);
          };
        } // define functions


        for (key in _scale) {
          scale[key] = _scale[key];
        }

        scale.orgDomain = function () {
          return _scale.domain();
        }; // define custom domain() for categorized axis


        if ($$.isCategorized()) {
          scale.domain = function (domain) {
            if (!arguments.length) {
              domain = this.orgDomain();
              return [domain[0], domain[1] + 1];
            }

            _scale.domain(domain);

            return scale;
          };
        }

        return scale;
      };

      c3_chart_internal_fn.getY = function (min, max, domain) {
        var scale = this.getScale(min, max, this.isTimeSeriesY());

        if (domain) {
          scale.domain(domain);
        }

        return scale;
      };

      c3_chart_internal_fn.getYScale = function (id) {
        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;
      };

      c3_chart_internal_fn.getSubYScale = function (id) {
        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;
      };

      c3_chart_internal_fn.updateScales = function () {
        var $$ = this,
            config = $$.config,
            forInit = !$$.x; // update edges

        $$.xMin = config.axis_rotated ? 1 : 0;
        $$.xMax = config.axis_rotated ? $$.height : $$.width;
        $$.yMin = config.axis_rotated ? 0 : $$.height;
        $$.yMax = config.axis_rotated ? $$.width : 1;
        $$.subXMin = $$.xMin;
        $$.subXMax = $$.xMax;
        $$.subYMin = config.axis_rotated ? 0 : $$.height2;
        $$.subYMax = config.axis_rotated ? $$.width2 : 1; // update scales

        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {
          return $$.xAxis.tickOffset();
        });
        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());
        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());
        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {
          return d % 1 ? 0 : $$.subXAxis.tickOffset();
        });
        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());
        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain()); // update axes

        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();
        $$.xAxisTickValues = $$.axis.getXAxisTickValues();
        $$.yAxisTickValues = $$.axis.getYAxisTickValues();
        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();
        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);
        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);
        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);
        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer); // Set initialized scales to brush and zoom

        if (!forInit) {
          if ($$.brush) {
            $$.brush.scale($$.subX);
          }

          if (config.zoom_enabled) {
            $$.zoom.scale($$.x);
          }
        } // update for arc


        if ($$.updateArc) {
          $$.updateArc();
        }
      };

      c3_chart_internal_fn.selectPoint = function (target, d, i) {
        var $$ = this,
            config = $$.config,
            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),
            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),
            r = $$.pointSelectR.bind($$);
        config.data_onselected.call($$.api, d, target.node()); // add selected-circle on low layer g

        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr("class", function () {
          return $$.generateClass(CLASS.selectedCircle, i);
        }).attr("cx", cx).attr("cy", cy).attr("stroke", function () {
          return $$.color(d);
        }).attr("r", function (d) {
          return $$.pointSelectR(d) * 1.4;
        }).transition().duration(100).attr("r", r);
      };

      c3_chart_internal_fn.unselectPoint = function (target, d, i) {
        var $$ = this;
        $$.config.data_onunselected.call($$.api, d, target.node()); // remove selected-circle from low layer g

        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();
      };

      c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {
        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);
      };

      c3_chart_internal_fn.selectPath = function (target, d) {
        var $$ = this;
        $$.config.data_onselected.call($$, d, target.node());

        if ($$.config.interaction_brighten) {
          target.transition().duration(100).style("fill", function () {
            return $$.d3.rgb($$.color(d)).brighter(0.75);
          });
        }
      };

      c3_chart_internal_fn.unselectPath = function (target, d) {
        var $$ = this;
        $$.config.data_onunselected.call($$, d, target.node());

        if ($$.config.interaction_brighten) {
          target.transition().duration(100).style("fill", function () {
            return $$.color(d);
          });
        }
      };

      c3_chart_internal_fn.togglePath = function (selected, target, d, i) {
        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);
      };

      c3_chart_internal_fn.getToggle = function (that, d) {
        var $$ = this,
            toggle;

        if (that.nodeName === 'circle') {
          if ($$.isStepType(d)) {
            // circle is hidden in step chart, so treat as within the click area
            toggle = function toggle() {}; // TODO: how to select step chart?

          } else {
            toggle = $$.togglePoint;
          }
        } else if (that.nodeName === 'path') {
          toggle = $$.togglePath;
        }

        return toggle;
      };

      c3_chart_internal_fn.toggleShape = function (that, d, i) {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config,
            shape = d3.select(that),
            isSelected = shape.classed(CLASS.SELECTED),
            toggle = $$.getToggle(that, d).bind($$);

        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {
          if (!config.data_selection_multiple) {
            $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : "")).selectAll('.' + CLASS.shape).each(function (d, i) {
              var shape = d3.select(this);

              if (shape.classed(CLASS.SELECTED)) {
                toggle(false, shape.classed(CLASS.SELECTED, false), d, i);
              }
            });
          }

          shape.classed(CLASS.SELECTED, !isSelected);
          toggle(!isSelected, shape, d, i);
        }
      };

      c3_chart_internal_fn.initBar = function () {
        var $$ = this;
        $$.main.select('.' + CLASS.chart).append("g").attr("class", CLASS.chartBars);
      };

      c3_chart_internal_fn.updateTargetsForBar = function (targets) {
        var $$ = this,
            config = $$.config,
            mainBarUpdate,
            mainBarEnter,
            classChartBar = $$.classChartBar.bind($$),
            classBars = $$.classBars.bind($$),
            classFocus = $$.classFocus.bind($$);
        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {
          return classChartBar(d) + classFocus(d);
        });
        mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style("pointer-events", "none"); // Bars for each data

        mainBarEnter.append('g').attr("class", classBars).style("cursor", function (d) {
          return config.data_selection_isselectable(d) ? "pointer" : null;
        });
      };

      c3_chart_internal_fn.updateBar = function (durationForExit) {
        var $$ = this,
            barData = $$.barData.bind($$),
            classBar = $$.classBar.bind($$),
            initialOpacity = $$.initialOpacity.bind($$),
            color = function color(d) {
          return $$.color(d.id);
        };

        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);
        $$.mainBar.enter().append('path').attr("class", classBar).style("stroke", color).style("fill", color);
        $$.mainBar.style("opacity", initialOpacity);
        $$.mainBar.exit().transition().duration(durationForExit).remove();
      };

      c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {
        return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style("stroke", this.color).style("fill", this.color).style("opacity", 1)];
      };

      c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {
        var $$ = this,
            config = $$.config,
            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;
        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;
      };

      c3_chart_internal_fn.getBars = function (i, id) {
        var $$ = this;
        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));
      };

      c3_chart_internal_fn.expandBars = function (i, id, reset) {
        var $$ = this;

        if (reset) {
          $$.unexpandBars();
        }

        $$.getBars(i, id).classed(CLASS.EXPANDED, true);
      };

      c3_chart_internal_fn.unexpandBars = function (i) {
        var $$ = this;
        $$.getBars(i).classed(CLASS.EXPANDED, false);
      };

      c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {
        var $$ = this,
            config = $$.config,
            getPoints = $$.generateGetBarPoints(barIndices, isSub);
        return function (d, i) {
          // 4 points that make a bar
          var points = getPoints(d, i); // switch points if axis is rotated, not applicable for sub chart

          var indexX = config.axis_rotated ? 1 : 0;
          var indexY = config.axis_rotated ? 0 : 1;
          var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';
          return path;
        };
      };

      c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {
        var $$ = this,
            axis = isSub ? $$.subXAxis : $$.xAxis,
            barTargetsNum = barIndices.__max__ + 1,
            barW = $$.getBarW(axis, barTargetsNum),
            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),
            barY = $$.getShapeY(!!isSub),
            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),
            barSpaceOffset = barW * ($$.config.bar_space / 2),
            yScale = isSub ? $$.getSubYScale : $$.getYScale;
        return function (d, i) {
          var y0 = yScale.call($$, d.id)(0),
              offset = barOffset(d, i) || y0,
              // offset is for stacked bar chart
          posX = barX(d),
              posY = barY(d); // fix posY not to overflow opposite quadrant

          if ($$.config.axis_rotated) {
            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {
              posY = y0;
            }
          } // 4 points that make a bar


          return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];
        };
      };

      c3_chart_internal_fn.isWithinBar = function (that) {
        var mouse = this.d3.mouse(that),
            box = that.getBoundingClientRect(),
            seg0 = that.pathSegList.getItem(0),
            seg1 = that.pathSegList.getItem(1),
            x = Math.min(seg0.x, seg1.x),
            y = Math.min(seg0.y, seg1.y),
            w = box.width,
            h = box.height,
            offset = 2,
            sx = x - offset,
            ex = x + w + offset,
            sy = y + h + offset,
            ey = y - offset;
        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;
      };

      c3_chart_internal_fn.getShapeIndices = function (typeFilter) {
        var $$ = this,
            config = $$.config,
            indices = {},
            i = 0,
            j,
            k;
        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {
          for (j = 0; j < config.data_groups.length; j++) {
            if (config.data_groups[j].indexOf(d.id) < 0) {
              continue;
            }

            for (k = 0; k < config.data_groups[j].length; k++) {
              if (config.data_groups[j][k] in indices) {
                indices[d.id] = indices[config.data_groups[j][k]];
                break;
              }
            }
          }

          if (isUndefined(indices[d.id])) {
            indices[d.id] = i++;
          }
        });
        indices.__max__ = i - 1;
        return indices;
      };

      c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {
        var $$ = this,
            scale = isSub ? $$.subX : $$.x;
        return function (d) {
          var index = d.id in indices ? indices[d.id] : 0;
          return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;
        };
      };

      c3_chart_internal_fn.getShapeY = function (isSub) {
        var $$ = this;
        return function (d) {
          var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);
          return scale(d.value);
        };
      };

      c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {
        var $$ = this,
            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),
            targetIds = targets.map(function (t) {
          return t.id;
        });
        return function (d, i) {
          var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),
              y0 = scale(0),
              offset = y0;
          targets.forEach(function (t) {
            var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;

            if (t.id === d.id || indices[t.id] !== indices[d.id]) {
              return;
            }

            if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {
              // check if the x values line up
              if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {
                // "+" for timeseries
                // if not, try to find the value that does line up
                i = -1;
                values.forEach(function (v, j) {
                  if (v.x === d.x) {
                    i = j;
                  }
                });
              }

              if (i in values && values[i].value * d.value >= 0) {
                offset += scale(values[i].value) - y0;
              }
            }
          });
          return offset;
        };
      };

      c3_chart_internal_fn.isWithinShape = function (that, d) {
        var $$ = this,
            shape = $$.d3.select(that),
            isWithin;

        if (!$$.isTargetToShow(d.id)) {
          isWithin = false;
        } else if (that.nodeName === 'circle') {
          isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);
        } else if (that.nodeName === 'path') {
          isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;
        }

        return isWithin;
      };

      c3_chart_internal_fn.getInterpolate = function (d) {
        var $$ = this,
            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';
        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : "linear";
      };

      c3_chart_internal_fn.initLine = function () {
        var $$ = this;
        $$.main.select('.' + CLASS.chart).append("g").attr("class", CLASS.chartLines);
      };

      c3_chart_internal_fn.updateTargetsForLine = function (targets) {
        var $$ = this,
            config = $$.config,
            mainLineUpdate,
            mainLineEnter,
            classChartLine = $$.classChartLine.bind($$),
            classLines = $$.classLines.bind($$),
            classAreas = $$.classAreas.bind($$),
            classCircles = $$.classCircles.bind($$),
            classFocus = $$.classFocus.bind($$);
        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {
          return classChartLine(d) + classFocus(d);
        });
        mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style("pointer-events", "none"); // Lines for each data

        mainLineEnter.append('g').attr("class", classLines); // Areas

        mainLineEnter.append('g').attr('class', classAreas); // Circles for each data point on lines

        mainLineEnter.append('g').attr("class", function (d) {
          return $$.generateClass(CLASS.selectedCircles, d.id);
        });
        mainLineEnter.append('g').attr("class", classCircles).style("cursor", function (d) {
          return config.data_selection_isselectable(d) ? "pointer" : null;
        }); // Update date for selected circles

        targets.forEach(function (t) {
          $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {
            d.value = t.values[d.index].value;
          });
        }); // MEMO: can not keep same color...
        //mainLineUpdate.exit().remove();
      };

      c3_chart_internal_fn.updateLine = function (durationForExit) {
        var $$ = this;
        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));
        $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style("stroke", $$.color);
        $$.mainLine.style("opacity", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {
          return $$.isStepType(d) ? 'crispEdges' : '';
        }).attr('transform', null);
        $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();
      };

      c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {
        return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr("d", drawLine).style("stroke", this.color).style("opacity", 1)];
      };

      c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {
        var $$ = this,
            config = $$.config,
            line = $$.d3.svg.line(),
            getPoints = $$.generateGetLinePoints(lineIndices, isSub),
            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,
            xValue = function xValue(d) {
          return (isSub ? $$.subxx : $$.xx).call($$, d);
        },
            yValue = function yValue(d, i) {
          return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);
        };

        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);

        if (!config.line_connectNull) {
          line = line.defined(function (d) {
            return d.value != null;
          });
        }

        return function (d) {
          var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,
              x = isSub ? $$.subX : $$.x,
              y = yScaleGetter.call($$, d.id),
              x0 = 0,
              y0 = 0,
              path;

          if ($$.isLineType(d)) {
            if (config.data_regions[d.id]) {
              path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);
            } else {
              if ($$.isStepType(d)) {
                values = $$.convertValuesToStep(values);
              }

              path = line.interpolate($$.getInterpolate(d))(values);
            }
          } else {
            if (values[0]) {
              x0 = x(values[0].x);
              y0 = y(values[0].value);
            }

            path = config.axis_rotated ? "M " + y0 + " " + x0 : "M " + x0 + " " + y0;
          }

          return path ? path : "M 0 0";
        };
      };

      c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {
        // partial duplication of generateGetBarPoints
        var $$ = this,
            config = $$.config,
            lineTargetsNum = lineIndices.__max__ + 1,
            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),
            y = $$.getShapeY(!!isSub),
            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),
            yScale = isSub ? $$.getSubYScale : $$.getYScale;
        return function (d, i) {
          var y0 = yScale.call($$, d.id)(0),
              offset = lineOffset(d, i) || y0,
              // offset is for stacked area chart
          posX = x(d),
              posY = y(d); // fix posY not to overflow opposite quadrant

          if (config.axis_rotated) {
            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {
              posY = y0;
            }
          } // 1 point that marks the line position


          return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility
          [posX, posY - (y0 - offset)], // needed for compatibility
          [posX, posY - (y0 - offset)] // needed for compatibility
          ];
        };
      };

      c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {
        var $$ = this,
            config = $$.config,
            prev = -1,
            i,
            j,
            s = "M",
            sWithRegion,
            xp,
            yp,
            dx,
            dy,
            dd,
            diff,
            diffx2,
            xOffset = $$.isCategorized() ? 0.5 : 0,
            xValue,
            yValue,
            regions = [];

        function isWithinRegions(x, regions) {
          var i;

          for (i = 0; i < regions.length; i++) {
            if (regions[i].start < x && x <= regions[i].end) {
              return true;
            }
          }

          return false;
        } // Check start/end of regions


        if (isDefined(_regions)) {
          for (i = 0; i < _regions.length; i++) {
            regions[i] = {};

            if (isUndefined(_regions[i].start)) {
              regions[i].start = d[0].x;
            } else {
              regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;
            }

            if (isUndefined(_regions[i].end)) {
              regions[i].end = d[d.length - 1].x;
            } else {
              regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;
            }
          }
        } // Set scales


        xValue = config.axis_rotated ? function (d) {
          return y(d.value);
        } : function (d) {
          return x(d.x);
        };
        yValue = config.axis_rotated ? function (d) {
          return x(d.x);
        } : function (d) {
          return y(d.value);
        }; // Define svg generator function for region

        function generateM(points) {
          return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];
        }

        if ($$.isTimeSeries()) {
          sWithRegion = function sWithRegion(d0, d1, j, diff) {
            var x0 = d0.x.getTime(),
                x_diff = d1.x - d0.x,
                xv0 = new Date(x0 + x_diff * j),
                xv1 = new Date(x0 + x_diff * (j + diff)),
                points;

            if (config.axis_rotated) {
              points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];
            } else {
              points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];
            }

            return generateM(points);
          };
        } else {
          sWithRegion = function sWithRegion(d0, d1, j, diff) {
            var points;

            if (config.axis_rotated) {
              points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];
            } else {
              points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];
            }

            return generateM(points);
          };
        } // Generate


        for (i = 0; i < d.length; i++) {
          // Draw as normal
          if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {
            s += " " + xValue(d[i]) + " " + yValue(d[i]);
          } // Draw with region // TODO: Fix for horizotal charts
          else {
              xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());
              yp = $$.getScale(d[i - 1].value, d[i].value);
              dx = x(d[i].x) - x(d[i - 1].x);
              dy = y(d[i].value) - y(d[i - 1].value);
              dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
              diff = 2 / dd;
              diffx2 = diff * 2;

              for (j = diff; j <= 1; j += diffx2) {
                s += sWithRegion(d[i - 1], d[i], j, diff);
              }
            }

          prev = d[i].x;
        }

        return s;
      };

      c3_chart_internal_fn.updateArea = function (durationForExit) {
        var $$ = this,
            d3 = $$.d3;
        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));
        $$.mainArea.enter().append('path').attr("class", $$.classArea.bind($$)).style("fill", $$.color).style("opacity", function () {
          $$.orgAreaOpacity = +d3.select(this).style('opacity');
          return 0;
        });
        $$.mainArea.style("opacity", $$.orgAreaOpacity);
        $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();
      };

      c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {
        return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr("d", drawArea).style("fill", this.color).style("opacity", this.orgAreaOpacity)];
      };

      c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {
        var $$ = this,
            config = $$.config,
            area = $$.d3.svg.area(),
            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),
            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,
            xValue = function xValue(d) {
          return (isSub ? $$.subxx : $$.xx).call($$, d);
        },
            value0 = function value0(d, i) {
          return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));
        },
            value1 = function value1(d, i) {
          return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);
        };

        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);

        if (!config.line_connectNull) {
          area = area.defined(function (d) {
            return d.value !== null;
          });
        }

        return function (d) {
          var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,
              x0 = 0,
              y0 = 0,
              path;

          if ($$.isAreaType(d)) {
            if ($$.isStepType(d)) {
              values = $$.convertValuesToStep(values);
            }

            path = area.interpolate($$.getInterpolate(d))(values);
          } else {
            if (values[0]) {
              x0 = $$.x(values[0].x);
              y0 = $$.getYScale(d.id)(values[0].value);
            }

            path = config.axis_rotated ? "M " + y0 + " " + x0 : "M " + x0 + " " + y0;
          }

          return path ? path : "M 0 0";
        };
      };

      c3_chart_internal_fn.getAreaBaseValue = function () {
        return 0;
      };

      c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {
        // partial duplication of generateGetBarPoints
        var $$ = this,
            config = $$.config,
            areaTargetsNum = areaIndices.__max__ + 1,
            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),
            y = $$.getShapeY(!!isSub),
            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),
            yScale = isSub ? $$.getSubYScale : $$.getYScale;
        return function (d, i) {
          var y0 = yScale.call($$, d.id)(0),
              offset = areaOffset(d, i) || y0,
              // offset is for stacked area chart
          posX = x(d),
              posY = y(d); // fix posY not to overflow opposite quadrant

          if (config.axis_rotated) {
            if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {
              posY = y0;
            }
          } // 1 point that marks the area position


          return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility
          [posX, offset] // needed for compatibility
          ];
        };
      };

      c3_chart_internal_fn.updateCircle = function () {
        var $$ = this;
        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));
        $$.mainCircle.enter().append("circle").attr("class", $$.classCircle.bind($$)).attr("r", $$.pointR.bind($$)).style("fill", $$.color);
        $$.mainCircle.style("opacity", $$.initialOpacityForCircle.bind($$));
        $$.mainCircle.exit().remove();
      };

      c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {
        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);
        return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style("fill", this.color).attr("cx", cx).attr("cy", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr("cx", cx).attr("cy", cy)];
      };

      c3_chart_internal_fn.circleX = function (d) {
        return d.x || d.x === 0 ? this.x(d.x) : null;
      };

      c3_chart_internal_fn.updateCircleY = function () {
        var $$ = this,
            lineIndices,
            getPoints;

        if ($$.config.data_groups.length > 0) {
          lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);

          $$.circleY = function (d, i) {
            return getPoints(d, i)[0][1];
          };
        } else {
          $$.circleY = function (d) {
            return $$.getYScale(d.id)(d.value);
          };
        }
      };

      c3_chart_internal_fn.getCircles = function (i, id) {
        var $$ = this;
        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));
      };

      c3_chart_internal_fn.expandCircles = function (i, id, reset) {
        var $$ = this,
            r = $$.pointExpandedR.bind($$);

        if (reset) {
          $$.unexpandCircles();
        }

        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);
      };

      c3_chart_internal_fn.unexpandCircles = function (i) {
        var $$ = this,
            r = $$.pointR.bind($$);
        $$.getCircles(i).filter(function () {
          return $$.d3.select(this).classed(CLASS.EXPANDED);
        }).classed(CLASS.EXPANDED, false).attr('r', r);
      };

      c3_chart_internal_fn.pointR = function (d) {
        var $$ = this,
            config = $$.config;
        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;
      };

      c3_chart_internal_fn.pointExpandedR = function (d) {
        var $$ = this,
            config = $$.config;

        if (config.point_focus_expand_enabled) {
          return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;
        } else {
          return $$.pointR(d);
        }
      };

      c3_chart_internal_fn.pointSelectR = function (d) {
        var $$ = this,
            config = $$.config;
        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;
      };

      c3_chart_internal_fn.isWithinCircle = function (that, r) {
        var d3 = this.d3,
            mouse = d3.mouse(that),
            d3_this = d3.select(that),
            cx = +d3_this.attr("cx"),
            cy = +d3_this.attr("cy");
        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;
      };

      c3_chart_internal_fn.isWithinStep = function (that, y) {
        return Math.abs(y - this.d3.mouse(that)[1]) < 30;
      };

      c3_chart_internal_fn.getCurrentWidth = function () {
        var $$ = this,
            config = $$.config;
        return config.size_width ? config.size_width : $$.getParentWidth();
      };

      c3_chart_internal_fn.getCurrentHeight = function () {
        var $$ = this,
            config = $$.config,
            h = config.size_height ? config.size_height : $$.getParentHeight();
        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);
      };

      c3_chart_internal_fn.getCurrentPaddingTop = function () {
        var $$ = this,
            config = $$.config,
            padding = isValue(config.padding_top) ? config.padding_top : 0;

        if ($$.title && $$.title.node()) {
          padding += $$.getTitlePadding();
        }

        return padding;
      };

      c3_chart_internal_fn.getCurrentPaddingBottom = function () {
        var config = this.config;
        return isValue(config.padding_bottom) ? config.padding_bottom : 0;
      };

      c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {
        var $$ = this,
            config = $$.config;

        if (isValue(config.padding_left)) {
          return config.padding_left;
        } else if (config.axis_rotated) {
          return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);
        } else if (!config.axis_y_show || config.axis_y_inner) {
          // && !config.axis_rotated
          return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;
        } else {
          return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));
        }
      };

      c3_chart_internal_fn.getCurrentPaddingRight = function () {
        var $$ = this,
            config = $$.config,
            defaultPadding = 10,
            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;

        if (isValue(config.padding_right)) {
          return config.padding_right + 1; // 1 is needed not to hide tick line
        } else if (config.axis_rotated) {
          return defaultPadding + legendWidthOnRight;
        } else if (!config.axis_y2_show || config.axis_y2_inner) {
          // && !config.axis_rotated
          return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);
        } else {
          return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;
        }
      };

      c3_chart_internal_fn.getParentRectValue = function (key) {
        var parent = this.selectChart.node(),
            v;

        while (parent && parent.tagName !== 'BODY') {
          try {
            v = parent.getBoundingClientRect()[key];
          } catch (e) {
            if (key === 'width') {
              // In IE in certain cases getBoundingClientRect
              // will cause an "unspecified error"
              v = parent.offsetWidth;
            }
          }

          if (v) {
            break;
          }

          parent = parent.parentNode;
        }

        return v;
      };

      c3_chart_internal_fn.getParentWidth = function () {
        return this.getParentRectValue('width');
      };

      c3_chart_internal_fn.getParentHeight = function () {
        var h = this.selectChart.style('height');
        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;
      };

      c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {
        var $$ = this,
            config = $$.config,
            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,
            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,
            leftAxis = $$.main.select('.' + leftAxisClass).node(),
            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {
          right: 0
        },
            chartRect = $$.selectChart.node().getBoundingClientRect(),
            hasArc = $$.hasArcType(),
            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));
        return svgLeft > 0 ? svgLeft : 0;
      };

      c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {
        var $$ = this,
            position = $$.axis.getLabelPositionById(id);
        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);
      };

      c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {
        var $$ = this,
            config = $$.config,
            h = 30;

        if (axisId === 'x' && !config.axis_x_show) {
          return 8;
        }

        if (axisId === 'x' && config.axis_x_height) {
          return config.axis_x_height;
        }

        if (axisId === 'y' && !config.axis_y_show) {
          return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;
        }

        if (axisId === 'y2' && !config.axis_y2_show) {
          return $$.rotated_padding_top;
        } // Calculate x axis height when tick rotated


        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {
          h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);
        } // Calculate y axis height when tick rotated


        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {
          h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);
        }

        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);
      };

      c3_chart_internal_fn.getEventRectWidth = function () {
        return Math.max(0, this.xAxis.tickInterval());
      };

      c3_chart_internal_fn.initBrush = function () {
        var $$ = this,
            d3 = $$.d3;
        $$.brush = d3.svg.brush().on("brush", function () {
          $$.redrawForBrush();
        });

        $$.brush.update = function () {
          if ($$.context) {
            $$.context.select('.' + CLASS.brush).call(this);
          }

          return this;
        };

        $$.brush.scale = function (scale) {
          return $$.config.axis_rotated ? this.y(scale) : this.x(scale);
        };
      };

      c3_chart_internal_fn.initSubchart = function () {
        var $$ = this,
            config = $$.config,
            context = $$.context = $$.svg.append("g").attr("transform", $$.getTranslate('context')),
            visibility = config.subchart_show ? 'visible' : 'hidden';
        context.style('visibility', visibility); // Define g for chart area

        context.append('g').attr("clip-path", $$.clipPathForSubchart).attr('class', CLASS.chart); // Define g for bar chart area

        context.select('.' + CLASS.chart).append("g").attr("class", CLASS.chartBars); // Define g for line chart area

        context.select('.' + CLASS.chart).append("g").attr("class", CLASS.chartLines); // Add extent rect for Brush

        context.append("g").attr("clip-path", $$.clipPath).attr("class", CLASS.brush).call($$.brush); // ATTENTION: This must be called AFTER chart added
        // Add Axis

        $$.axes.subx = context.append("g").attr("class", CLASS.axisX).attr("transform", $$.getTranslate('subx')).attr("clip-path", config.axis_rotated ? "" : $$.clipPathForXAxis).style("visibility", config.subchart_axis_x_show ? visibility : 'hidden');
      };

      c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {
        var $$ = this,
            context = $$.context,
            config = $$.config,
            contextLineEnter,
            contextLineUpdate,
            contextBarEnter,
            contextBarUpdate,
            classChartBar = $$.classChartBar.bind($$),
            classBars = $$.classBars.bind($$),
            classChartLine = $$.classChartLine.bind($$),
            classLines = $$.classLines.bind($$),
            classAreas = $$.classAreas.bind($$);

        if (config.subchart_show) {
          //-- Bar --//
          contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);
          contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar); // Bars for each data

          contextBarEnter.append('g').attr("class", classBars); //-- Line --//

          contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);
          contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine); // Lines for each data

          contextLineEnter.append("g").attr("class", classLines); // Area

          contextLineEnter.append("g").attr("class", classAreas); //-- Brush --//

          context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? "width" : "height", config.axis_rotated ? $$.width2 : $$.height2);
        }
      };

      c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {
        var $$ = this;
        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));
        $$.contextBar.enter().append('path').attr("class", $$.classBar.bind($$)).style("stroke", 'none').style("fill", $$.color);
        $$.contextBar.style("opacity", $$.initialOpacity.bind($$));
        $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();
      };

      c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {
        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);
      };

      c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {
        var $$ = this;
        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));
        $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);
        $$.contextLine.style("opacity", $$.initialOpacity.bind($$));
        $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();
      };

      c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {
        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr("d", drawLineOnSub).style('opacity', 1);
      };

      c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {
        var $$ = this,
            d3 = $$.d3;
        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));
        $$.contextArea.enter().append('path').attr("class", $$.classArea.bind($$)).style("fill", $$.color).style("opacity", function () {
          $$.orgAreaOpacity = +d3.select(this).style('opacity');
          return 0;
        });
        $$.contextArea.style("opacity", 0);
        $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();
      };

      c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {
        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr("d", drawAreaOnSub).style("fill", this.color).style("opacity", this.orgAreaOpacity);
      };

      c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config,
            drawAreaOnSub,
            drawBarOnSub,
            drawLineOnSub;
        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden'); // subchart

        if (config.subchart_show) {
          // reflect main chart to extent on subchart if zoomed
          if (d3.event && d3.event.type === 'zoom') {
            $$.brush.extent($$.x.orgDomain()).update();
          } // update subchart elements if needed


          if (withSubchart) {
            // extent rect
            if (!$$.brush.empty()) {
              $$.brush.extent($$.x.orgDomain()).update();
            } // setup drawer - MEMO: this must be called after axis updated


            drawAreaOnSub = $$.generateDrawArea(areaIndices, true);
            drawBarOnSub = $$.generateDrawBar(barIndices, true);
            drawLineOnSub = $$.generateDrawLine(lineIndices, true);
            $$.updateBarForSubchart(duration);
            $$.updateLineForSubchart(duration);
            $$.updateAreaForSubchart(duration);
            $$.redrawBarForSubchart(drawBarOnSub, duration, duration);
            $$.redrawLineForSubchart(drawLineOnSub, duration, duration);
            $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);
          }
        }
      };

      c3_chart_internal_fn.redrawForBrush = function () {
        var $$ = this,
            x = $$.x;
        $$.redraw({
          withTransition: false,
          withY: $$.config.zoom_rescale,
          withSubchart: false,
          withUpdateXDomain: true,
          withDimension: false
        });
        $$.config.subchart_onbrush.call($$.api, x.orgDomain());
      };

      c3_chart_internal_fn.transformContext = function (withTransition, transitions) {
        var $$ = this,
            subXAxis;

        if (transitions && transitions.axisSubX) {
          subXAxis = transitions.axisSubX;
        } else {
          subXAxis = $$.context.select('.' + CLASS.axisX);

          if (withTransition) {
            subXAxis = subXAxis.transition();
          }
        }

        $$.context.attr("transform", $$.getTranslate('context'));
        subXAxis.attr("transform", $$.getTranslate('subx'));
      };

      c3_chart_internal_fn.getDefaultExtent = function () {
        var $$ = this,
            config = $$.config,
            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;

        if ($$.isTimeSeries()) {
          extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];
        }

        return extent;
      };

      c3_chart_internal_fn.initText = function () {
        var $$ = this;
        $$.main.select('.' + CLASS.chart).append("g").attr("class", CLASS.chartTexts);
        $$.mainText = $$.d3.selectAll([]);
      };

      c3_chart_internal_fn.updateTargetsForText = function (targets) {
        var $$ = this,
            mainTextUpdate,
            mainTextEnter,
            classChartText = $$.classChartText.bind($$),
            classTexts = $$.classTexts.bind($$),
            classFocus = $$.classFocus.bind($$);
        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {
          return classChartText(d) + classFocus(d);
        });
        mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style("pointer-events", "none");
        mainTextEnter.append('g').attr('class', classTexts);
      };

      c3_chart_internal_fn.updateText = function (durationForExit) {
        var $$ = this,
            config = $$.config,
            barOrLineData = $$.barOrLineData.bind($$),
            classText = $$.classText.bind($$);
        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);
        $$.mainText.enter().append('text').attr("class", classText).attr('text-anchor', function (d) {
          return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';
        }).style("stroke", 'none').style("fill", function (d) {
          return $$.color(d);
        }).style("fill-opacity", 0);
        $$.mainText.text(function (d, i, j) {
          return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);
        });
        $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();
      };

      c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {
        return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style("fill", this.color).style("fill-opacity", forFlow ? 0 : this.opacityForText.bind(this))];
      };

      c3_chart_internal_fn.getTextRect = function (text, cls, element) {
        var dummy = this.d3.select('body').append('div').classed('c3', true),
            svg = dummy.append("svg").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),
            font = this.d3.select(element).style('font'),
            rect;
        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : "", true).style('font', font).text(text).each(function () {
          rect = this.getBoundingClientRect();
        });
        dummy.remove();
        return rect;
      };

      c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {
        var $$ = this,
            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),
            getBarPoints = $$.generateGetBarPoints(barIndices, false),
            getLinePoints = $$.generateGetLinePoints(lineIndices, false),
            getter = forX ? $$.getXForText : $$.getYForText;
        return function (d, i) {
          var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;
          return getter.call($$, getPoints(d, i), d, this);
        };
      };

      c3_chart_internal_fn.getXForText = function (points, d, textElement) {
        var $$ = this,
            box = textElement.getBoundingClientRect(),
            xPos,
            padding;

        if ($$.config.axis_rotated) {
          padding = $$.isBarType(d) ? 4 : 6;
          xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);
        } else {
          xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];
        } // show labels regardless of the domain if value is null


        if (d.value === null) {
          if (xPos > $$.width) {
            xPos = $$.width - box.width;
          } else if (xPos < 0) {
            xPos = 4;
          }
        }

        return xPos;
      };

      c3_chart_internal_fn.getYForText = function (points, d, textElement) {
        var $$ = this,
            box = textElement.getBoundingClientRect(),
            yPos;

        if ($$.config.axis_rotated) {
          yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;
        } else {
          yPos = points[2][1];

          if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {
            yPos += box.height;

            if ($$.isBarType(d) && $$.isSafari()) {
              yPos -= 3;
            } else if (!$$.isBarType(d) && $$.isChrome()) {
              yPos += 3;
            }
          } else {
            yPos += $$.isBarType(d) ? -3 : -6;
          }
        } // show labels regardless of the domain if value is null


        if (d.value === null && !$$.config.axis_rotated) {
          if (yPos < box.height) {
            yPos = box.height;
          } else if (yPos > this.height) {
            yPos = this.height - 4;
          }
        }

        return yPos;
      };

      c3_chart_internal_fn.initTitle = function () {
        var $$ = this;
        $$.title = $$.svg.append("text").text($$.config.title_text).attr("class", $$.CLASS.title);
      };

      c3_chart_internal_fn.redrawTitle = function () {
        var $$ = this;
        $$.title.attr("x", $$.xForTitle.bind($$)).attr("y", $$.yForTitle.bind($$));
      };

      c3_chart_internal_fn.xForTitle = function () {
        var $$ = this,
            config = $$.config,
            position = config.title_position || 'left',
            x;

        if (position.indexOf('right') >= 0) {
          x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;
        } else if (position.indexOf('center') >= 0) {
          x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;
        } else {
          // left
          x = config.title_padding.left;
        }

        return x;
      };

      c3_chart_internal_fn.yForTitle = function () {
        var $$ = this;
        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;
      };

      c3_chart_internal_fn.getTitlePadding = function () {
        var $$ = this;
        return $$.yForTitle() + $$.config.title_padding.bottom;
      };

      c3_chart_internal_fn.initTooltip = function () {
        var $$ = this,
            config = $$.config,
            i;
        $$.tooltip = $$.selectChart.style("position", "relative").append("div").attr('class', CLASS.tooltipContainer).style("position", "absolute").style("pointer-events", "none").style("display", "none"); // Show tooltip if needed

        if (config.tooltip_init_show) {
          if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {
            config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);

            for (i = 0; i < $$.data.targets[0].values.length; i++) {
              if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {
                break;
              }
            }

            config.tooltip_init_x = i;
          }

          $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {
            return $$.addName(d.values[config.tooltip_init_x]);
          }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));
          $$.tooltip.style("top", config.tooltip_init_position.top).style("left", config.tooltip_init_position.left).style("display", "block");
        }
      };

      c3_chart_internal_fn.getTooltipSortFunction = function () {
        var $$ = this,
            config = $$.config;

        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {
          // if data are not grouped or if an order is specified
          // for the tooltip values we sort them by their values
          var order = config.tooltip_order;

          if (order === undefined) {
            order = config.data_order;
          }

          var valueOf = function valueOf(obj) {
            return obj ? obj.value : null;
          }; // if data are not grouped, we sort them by their value


          if (isString(order) && order.toLowerCase() === 'asc') {
            return function (a, b) {
              return valueOf(a) - valueOf(b);
            };
          } else if (isString(order) && order.toLowerCase() === 'desc') {
            return function (a, b) {
              return valueOf(b) - valueOf(a);
            };
          } else if (isFunction(order)) {
            // if the function is from data_order we need
            // to wrap the returned function in order to format
            // the sorted value to the expected format
            var sortFunction = order;

            if (config.tooltip_order === undefined) {
              sortFunction = function sortFunction(a, b) {
                return order(a ? {
                  id: a.id,
                  values: [a]
                } : null, b ? {
                  id: b.id,
                  values: [b]
                } : null);
              };
            }

            return sortFunction;
          } else if (isArray(order)) {
            return function (a, b) {
              return order.indexOf(a.id) - order.indexOf(b.id);
            };
          }
        } else {
          // if data are grouped, we follow the order of grouped targets
          var ids = $$.orderTargets($$.data.targets).map(function (i) {
            return i.id;
          }); // if it was either asc or desc we need to invert the order
          // returned by orderTargets

          if ($$.isOrderAsc() || $$.isOrderDesc()) {
            ids = ids.reverse();
          }

          return function (a, b) {
            return ids.indexOf(a.id) - ids.indexOf(b.id);
          };
        }
      };

      c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {
        var $$ = this,
            config = $$.config,
            titleFormat = config.tooltip_format_title || defaultTitleFormat,
            nameFormat = config.tooltip_format_name || function (name) {
          return name;
        },
            valueFormat = config.tooltip_format_value || defaultValueFormat,
            text,
            i,
            title,
            value,
            name,
            bgcolor;

        var tooltipSortFunction = this.getTooltipSortFunction();

        if (tooltipSortFunction) {
          d.sort(tooltipSortFunction);
        }

        for (i = 0; i < d.length; i++) {
          if (!(d[i] && (d[i].value || d[i].value === 0))) {
            continue;
          }

          if (!text) {
            title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);
            text = "<table class='" + $$.CLASS.tooltip + "'>" + (title || title === 0 ? "<tr><th colspan='2'>" + title + "</th></tr>" : "");
          }

          value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));

          if (value !== undefined) {
            // Skip elements when their name is set to null
            if (d[i].name === null) {
              continue;
            }

            name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));
            bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);
            text += "<tr class='" + $$.CLASS.tooltipName + "-" + $$.getTargetSelectorSuffix(d[i].id) + "'>";
            text += "<td class='name'><span style='background-color:" + bgcolor + "'></span>" + name + "</td>";
            text += "<td class='value'>" + value + "</td>";
            text += "</tr>";
          }
        }

        return text + "</table>";
      };

      c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {
        var $$ = this,
            config = $$.config,
            d3 = $$.d3;
        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;
        var forArc = $$.hasArcType(),
            mouse = d3.mouse(element); // Determin tooltip position

        if (forArc) {
          tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];
          tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;
        } else {
          svgLeft = $$.getSvgLeft(true);

          if (config.axis_rotated) {
            tooltipLeft = svgLeft + mouse[0] + 100;
            tooltipRight = tooltipLeft + tWidth;
            chartRight = $$.currentWidth - $$.getCurrentPaddingRight();
            tooltipTop = $$.x(dataToShow[0].x) + 20;
          } else {
            tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;
            tooltipRight = tooltipLeft + tWidth;
            chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();
            tooltipTop = mouse[1] + 15;
          }

          if (tooltipRight > chartRight) {
            // 20 is needed for Firefox to keep tooltip width
            tooltipLeft -= tooltipRight - chartRight + 20;
          }

          if (tooltipTop + tHeight > $$.currentHeight) {
            tooltipTop -= tHeight + 30;
          }
        }

        if (tooltipTop < 0) {
          tooltipTop = 0;
        }

        return {
          top: tooltipTop,
          left: tooltipLeft
        };
      };

      c3_chart_internal_fn.showTooltip = function (selectedData, element) {
        var $$ = this,
            config = $$.config;
        var tWidth, tHeight, position;
        var forArc = $$.hasArcType(),
            dataToShow = selectedData.filter(function (d) {
          return d && isValue(d.value);
        }),
            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;

        if (dataToShow.length === 0 || !config.tooltip_show) {
          return;
        }

        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style("display", "block"); // Get tooltip dimensions

        tWidth = $$.tooltip.property('offsetWidth');
        tHeight = $$.tooltip.property('offsetHeight');
        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element); // Set tooltip

        $$.tooltip.style("top", position.top + "px").style("left", position.left + 'px');
      };

      c3_chart_internal_fn.hideTooltip = function () {
        this.tooltip.style("display", "none");
      };

      c3_chart_internal_fn.setTargetType = function (targetIds, type) {
        var $$ = this,
            config = $$.config;
        $$.mapToTargetIds(targetIds).forEach(function (id) {
          $$.withoutFadeIn[id] = type === config.data_types[id];
          config.data_types[id] = type;
        });

        if (!targetIds) {
          config.data_type = type;
        }
      };

      c3_chart_internal_fn.hasType = function (type, targets) {
        var $$ = this,
            types = $$.config.data_types,
            has = false;
        targets = targets || $$.data.targets;

        if (targets && targets.length) {
          targets.forEach(function (target) {
            var t = types[target.id];

            if (t && t.indexOf(type) >= 0 || !t && type === 'line') {
              has = true;
            }
          });
        } else if (Object.keys(types).length) {
          Object.keys(types).forEach(function (id) {
            if (types[id] === type) {
              has = true;
            }
          });
        } else {
          has = $$.config.data_type === type;
        }

        return has;
      };

      c3_chart_internal_fn.hasArcType = function (targets) {
        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);
      };

      c3_chart_internal_fn.isLineType = function (d) {
        var config = this.config,
            id = isString(d) ? d : d.id;
        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;
      };

      c3_chart_internal_fn.isStepType = function (d) {
        var id = isString(d) ? d : d.id;
        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;
      };

      c3_chart_internal_fn.isSplineType = function (d) {
        var id = isString(d) ? d : d.id;
        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;
      };

      c3_chart_internal_fn.isAreaType = function (d) {
        var id = isString(d) ? d : d.id;
        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;
      };

      c3_chart_internal_fn.isBarType = function (d) {
        var id = isString(d) ? d : d.id;
        return this.config.data_types[id] === 'bar';
      };

      c3_chart_internal_fn.isScatterType = function (d) {
        var id = isString(d) ? d : d.id;
        return this.config.data_types[id] === 'scatter';
      };

      c3_chart_internal_fn.isPieType = function (d) {
        var id = isString(d) ? d : d.id;
        return this.config.data_types[id] === 'pie';
      };

      c3_chart_internal_fn.isGaugeType = function (d) {
        var id = isString(d) ? d : d.id;
        return this.config.data_types[id] === 'gauge';
      };

      c3_chart_internal_fn.isDonutType = function (d) {
        var id = isString(d) ? d : d.id;
        return this.config.data_types[id] === 'donut';
      };

      c3_chart_internal_fn.isArcType = function (d) {
        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);
      };

      c3_chart_internal_fn.lineData = function (d) {
        return this.isLineType(d) ? [d] : [];
      };

      c3_chart_internal_fn.arcData = function (d) {
        return this.isArcType(d.data) ? [d] : [];
      };
      /* not used
       function scatterData(d) {
       return isScatterType(d) ? d.values : [];
       }
       */


      c3_chart_internal_fn.barData = function (d) {
        return this.isBarType(d) ? d.values : [];
      };

      c3_chart_internal_fn.lineOrScatterData = function (d) {
        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];
      };

      c3_chart_internal_fn.barOrLineData = function (d) {
        return this.isBarType(d) || this.isLineType(d) ? d.values : [];
      };

      c3_chart_internal_fn.isInterpolationType = function (type) {
        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;
      };

      c3_chart_internal_fn.isSafari = function () {
        var ua = window.navigator.userAgent;
        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;
      };

      c3_chart_internal_fn.isChrome = function () {
        var ua = window.navigator.userAgent;
        return ua.indexOf('Chrome') >= 0;
      };

      c3_chart_internal_fn.initZoom = function () {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config,
            startEvent;
        $$.zoom = d3.behavior.zoom().on("zoomstart", function () {
          startEvent = d3.event.sourceEvent;
          $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;
          config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);
        }).on("zoom", function () {
          $$.redrawForZoom.call($$);
        }).on('zoomend', function () {
          var event = d3.event.sourceEvent; // if click, do nothing. otherwise, click interaction will be canceled.

          if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {
            return;
          }

          $$.redrawEventRect();
          $$.updateZoom();
          config.zoom_onzoomend.call($$.api, $$.x.orgDomain());
        });

        $$.zoom.scale = function (scale) {
          return config.axis_rotated ? this.y(scale) : this.x(scale);
        };

        $$.zoom.orgScaleExtent = function () {
          var extent = config.zoom_extent ? config.zoom_extent : [1, 10];
          return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];
        };

        $$.zoom.updateScaleExtent = function () {
          var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),
              extent = this.orgScaleExtent();
          this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);
          return this;
        };
      };

      c3_chart_internal_fn.getZoomDomain = function () {
        var $$ = this,
            config = $$.config,
            d3 = $$.d3,
            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),
            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);
        return [min, max];
      };

      c3_chart_internal_fn.updateZoom = function () {
        var $$ = this,
            z = $$.config.zoom_enabled ? $$.zoom : function () {};
        $$.main.select('.' + CLASS.zoomRect).call(z).on("dblclick.zoom", null);
        $$.main.selectAll('.' + CLASS.eventRect).call(z).on("dblclick.zoom", null);
      };

      c3_chart_internal_fn.redrawForZoom = function () {
        var $$ = this,
            d3 = $$.d3,
            config = $$.config,
            zoom = $$.zoom,
            x = $$.x;

        if (!config.zoom_enabled) {
          return;
        }

        if ($$.filterTargetsToShow($$.data.targets).length === 0) {
          return;
        }

        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {
          x.domain(zoom.altDomain);
          zoom.scale(x).updateScaleExtent();
          return;
        }

        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {
          x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);
        }

        $$.redraw({
          withTransition: false,
          withY: config.zoom_rescale,
          withSubchart: false,
          withEventRect: false,
          withDimension: false
        });

        if (d3.event.sourceEvent.type === 'mousemove') {
          $$.cancelClick = true;
        }

        config.zoom_onzoom.call($$.api, x.orgDomain());
      };

      return c3;
    });
    /***/

  },

  /***/
  "./node_modules/c3/node_modules/d3/d3.js":
  /*!***********************************************!*\
    !*** ./node_modules/c3/node_modules/d3/d3.js ***!
    \***********************************************/

  /*! no static exports found */

  /***/
  function node_modulesC3Node_modulesD3D3Js(module, exports, __webpack_require__) {
    var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;

    !function () {
      var d3 = {
        version: "3.5.17"
      };

      var d3_arraySlice = [].slice,
          d3_array = function d3_array(list) {
        return d3_arraySlice.call(list);
      };

      var d3_document = this.document;

      function d3_documentElement(node) {
        return node && (node.ownerDocument || node.document || node).documentElement;
      }

      function d3_window(node) {
        return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
      }

      if (d3_document) {
        try {
          d3_array(d3_document.documentElement.childNodes)[0].nodeType;
        } catch (e) {
          d3_array = function d3_array(list) {
            var i = list.length,
                array = new Array(i);

            while (i--) {
              array[i] = list[i];
            }

            return array;
          };
        }
      }

      if (!Date.now) Date.now = function () {
        return +new Date();
      };

      if (d3_document) {
        try {
          d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
        } catch (error) {
          var d3_element_prototype = this.Element.prototype,
              d3_element_setAttribute = d3_element_prototype.setAttribute,
              d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,
              d3_style_prototype = this.CSSStyleDeclaration.prototype,
              d3_style_setProperty = d3_style_prototype.setProperty;

          d3_element_prototype.setAttribute = function (name, value) {
            d3_element_setAttribute.call(this, name, value + "");
          };

          d3_element_prototype.setAttributeNS = function (space, local, value) {
            d3_element_setAttributeNS.call(this, space, local, value + "");
          };

          d3_style_prototype.setProperty = function (name, value, priority) {
            d3_style_setProperty.call(this, name, value + "", priority);
          };
        }
      }

      d3.ascending = d3_ascending;

      function d3_ascending(a, b) {
        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
      }

      d3.descending = function (a, b) {
        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
      };

      d3.min = function (array, f) {
        var i = -1,
            n = array.length,
            a,
            b;

        if (arguments.length === 1) {
          while (++i < n) {
            if ((b = array[i]) != null && b >= b) {
              a = b;
              break;
            }
          }

          while (++i < n) {
            if ((b = array[i]) != null && a > b) a = b;
          }
        } else {
          while (++i < n) {
            if ((b = f.call(array, array[i], i)) != null && b >= b) {
              a = b;
              break;
            }
          }

          while (++i < n) {
            if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
          }
        }

        return a;
      };

      d3.max = function (array, f) {
        var i = -1,
            n = array.length,
            a,
            b;

        if (arguments.length === 1) {
          while (++i < n) {
            if ((b = array[i]) != null && b >= b) {
              a = b;
              break;
            }
          }

          while (++i < n) {
            if ((b = array[i]) != null && b > a) a = b;
          }
        } else {
          while (++i < n) {
            if ((b = f.call(array, array[i], i)) != null && b >= b) {
              a = b;
              break;
            }
          }

          while (++i < n) {
            if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
          }
        }

        return a;
      };

      d3.extent = function (array, f) {
        var i = -1,
            n = array.length,
            a,
            b,
            c;

        if (arguments.length === 1) {
          while (++i < n) {
            if ((b = array[i]) != null && b >= b) {
              a = c = b;
              break;
            }
          }

          while (++i < n) {
            if ((b = array[i]) != null) {
              if (a > b) a = b;
              if (c < b) c = b;
            }
          }
        } else {
          while (++i < n) {
            if ((b = f.call(array, array[i], i)) != null && b >= b) {
              a = c = b;
              break;
            }
          }

          while (++i < n) {
            if ((b = f.call(array, array[i], i)) != null) {
              if (a > b) a = b;
              if (c < b) c = b;
            }
          }
        }

        return [a, c];
      };

      function d3_number(x) {
        return x === null ? NaN : +x;
      }

      function d3_numeric(x) {
        return !isNaN(x);
      }

      d3.sum = function (array, f) {
        var s = 0,
            n = array.length,
            a,
            i = -1;

        if (arguments.length === 1) {
          while (++i < n) {
            if (d3_numeric(a = +array[i])) s += a;
          }
        } else {
          while (++i < n) {
            if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
          }
        }

        return s;
      };

      d3.mean = function (array, f) {
        var s = 0,
            n = array.length,
            a,
            i = -1,
            j = n;

        if (arguments.length === 1) {
          while (++i < n) {
            if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;
          }
        } else {
          while (++i < n) {
            if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;
          }
        }

        if (j) return s / j;
      };

      d3.quantile = function (values, p) {
        var H = (values.length - 1) * p + 1,
            h = Math.floor(H),
            v = +values[h - 1],
            e = H - h;
        return e ? v + e * (values[h] - v) : v;
      };

      d3.median = function (array, f) {
        var numbers = [],
            n = array.length,
            a,
            i = -1;

        if (arguments.length === 1) {
          while (++i < n) {
            if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
          }
        } else {
          while (++i < n) {
            if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
          }
        }

        if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
      };

      d3.variance = function (array, f) {
        var n = array.length,
            m = 0,
            a,
            d,
            s = 0,
            i = -1,
            j = 0;

        if (arguments.length === 1) {
          while (++i < n) {
            if (d3_numeric(a = d3_number(array[i]))) {
              d = a - m;
              m += d / ++j;
              s += d * (a - m);
            }
          }
        } else {
          while (++i < n) {
            if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
              d = a - m;
              m += d / ++j;
              s += d * (a - m);
            }
          }
        }

        if (j > 1) return s / (j - 1);
      };

      d3.deviation = function () {
        var v = d3.variance.apply(this, arguments);
        return v ? Math.sqrt(v) : v;
      };

      function d3_bisector(compare) {
        return {
          left: function left(a, x, lo, hi) {
            if (arguments.length < 3) lo = 0;
            if (arguments.length < 4) hi = a.length;

            while (lo < hi) {
              var mid = lo + hi >>> 1;
              if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
            }

            return lo;
          },
          right: function right(a, x, lo, hi) {
            if (arguments.length < 3) lo = 0;
            if (arguments.length < 4) hi = a.length;

            while (lo < hi) {
              var mid = lo + hi >>> 1;
              if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
            }

            return lo;
          }
        };
      }

      var d3_bisect = d3_bisector(d3_ascending);
      d3.bisectLeft = d3_bisect.left;
      d3.bisect = d3.bisectRight = d3_bisect.right;

      d3.bisector = function (f) {
        return d3_bisector(f.length === 1 ? function (d, x) {
          return d3_ascending(f(d), x);
        } : f);
      };

      d3.shuffle = function (array, i0, i1) {
        if ((m = arguments.length) < 3) {
          i1 = array.length;
          if (m < 2) i0 = 0;
        }

        var m = i1 - i0,
            t,
            i;

        while (m) {
          i = Math.random() * m-- | 0;
          t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
        }

        return array;
      };

      d3.permute = function (array, indexes) {
        var i = indexes.length,
            permutes = new Array(i);

        while (i--) {
          permutes[i] = array[indexes[i]];
        }

        return permutes;
      };

      d3.pairs = function (array) {
        var i = 0,
            n = array.length - 1,
            p0,
            p1 = array[0],
            pairs = new Array(n < 0 ? 0 : n);

        while (i < n) {
          pairs[i] = [p0 = p1, p1 = array[++i]];
        }

        return pairs;
      };

      d3.transpose = function (matrix) {
        if (!(n = matrix.length)) return [];

        for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {
          for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
            row[j] = matrix[j][i];
          }
        }

        return transpose;
      };

      function d3_transposeLength(d) {
        return d.length;
      }

      d3.zip = function () {
        return d3.transpose(arguments);
      };

      d3.keys = function (map) {
        var keys = [];

        for (var key in map) {
          keys.push(key);
        }

        return keys;
      };

      d3.values = function (map) {
        var values = [];

        for (var key in map) {
          values.push(map[key]);
        }

        return values;
      };

      d3.entries = function (map) {
        var entries = [];

        for (var key in map) {
          entries.push({
            key: key,
            value: map[key]
          });
        }

        return entries;
      };

      d3.merge = function (arrays) {
        var n = arrays.length,
            m,
            i = -1,
            j = 0,
            merged,
            array;

        while (++i < n) {
          j += arrays[i].length;
        }

        merged = new Array(j);

        while (--n >= 0) {
          array = arrays[n];
          m = array.length;

          while (--m >= 0) {
            merged[--j] = array[m];
          }
        }

        return merged;
      };

      var abs = Math.abs;

      d3.range = function (start, stop, step) {
        if (arguments.length < 3) {
          step = 1;

          if (arguments.length < 2) {
            stop = start;
            start = 0;
          }
        }

        if ((stop - start) / step === Infinity) throw new Error("infinite range");
        var range = [],
            k = d3_range_integerScale(abs(step)),
            i = -1,
            j;
        start *= k, stop *= k, step *= k;
        if (step < 0) while ((j = start + step * ++i) > stop) {
          range.push(j / k);
        } else while ((j = start + step * ++i) < stop) {
          range.push(j / k);
        }
        return range;
      };

      function d3_range_integerScale(x) {
        var k = 1;

        while (x * k % 1) {
          k *= 10;
        }

        return k;
      }

      function d3_class(ctor, properties) {
        for (var key in properties) {
          Object.defineProperty(ctor.prototype, key, {
            value: properties[key],
            enumerable: false
          });
        }
      }

      d3.map = function (object, f) {
        var map = new d3_Map();

        if (object instanceof d3_Map) {
          object.forEach(function (key, value) {
            map.set(key, value);
          });
        } else if (Array.isArray(object)) {
          var i = -1,
              n = object.length,
              o;
          if (arguments.length === 1) while (++i < n) {
            map.set(i, object[i]);
          } else while (++i < n) {
            map.set(f.call(object, o = object[i], i), o);
          }
        } else {
          for (var key in object) {
            map.set(key, object[key]);
          }
        }

        return map;
      };

      function d3_Map() {
        this._ = Object.create(null);
      }

      var d3_map_proto = "__proto__",
          d3_map_zero = "\x00";
      d3_class(d3_Map, {
        has: d3_map_has,
        get: function get(key) {
          return this._[d3_map_escape(key)];
        },
        set: function set(key, value) {
          return this._[d3_map_escape(key)] = value;
        },
        remove: d3_map_remove,
        keys: d3_map_keys,
        values: function values() {
          var values = [];

          for (var key in this._) {
            values.push(this._[key]);
          }

          return values;
        },
        entries: function entries() {
          var entries = [];

          for (var key in this._) {
            entries.push({
              key: d3_map_unescape(key),
              value: this._[key]
            });
          }

          return entries;
        },
        size: d3_map_size,
        empty: d3_map_empty,
        forEach: function forEach(f) {
          for (var key in this._) {
            f.call(this, d3_map_unescape(key), this._[key]);
          }
        }
      });

      function d3_map_escape(key) {
        return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
      }

      function d3_map_unescape(key) {
        return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
      }

      function d3_map_has(key) {
        return d3_map_escape(key) in this._;
      }

      function d3_map_remove(key) {
        return (key = d3_map_escape(key)) in this._ && delete this._[key];
      }

      function d3_map_keys() {
        var keys = [];

        for (var key in this._) {
          keys.push(d3_map_unescape(key));
        }

        return keys;
      }

      function d3_map_size() {
        var size = 0;

        for (var key in this._) {
          ++size;
        }

        return size;
      }

      function d3_map_empty() {
        for (var key in this._) {
          return false;
        }

        return true;
      }

      d3.nest = function () {
        var nest = {},
            keys = [],
            sortKeys = [],
            sortValues,
            rollup;

        function map(mapType, array, depth) {
          if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
          var i = -1,
              n = array.length,
              key = keys[depth++],
              keyValue,
              object,
              setter,
              valuesByKey = new d3_Map(),
              values;

          while (++i < n) {
            if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
              values.push(object);
            } else {
              valuesByKey.set(keyValue, [object]);
            }
          }

          if (mapType) {
            object = mapType();

            setter = function setter(keyValue, values) {
              object.set(keyValue, map(mapType, values, depth));
            };
          } else {
            object = {};

            setter = function setter(keyValue, values) {
              object[keyValue] = map(mapType, values, depth);
            };
          }

          valuesByKey.forEach(setter);
          return object;
        }

        function entries(map, depth) {
          if (depth >= keys.length) return map;
          var array = [],
              sortKey = sortKeys[depth++];
          map.forEach(function (key, keyMap) {
            array.push({
              key: key,
              values: entries(keyMap, depth)
            });
          });
          return sortKey ? array.sort(function (a, b) {
            return sortKey(a.key, b.key);
          }) : array;
        }

        nest.map = function (array, mapType) {
          return map(mapType, array, 0);
        };

        nest.entries = function (array) {
          return entries(map(d3.map, array, 0), 0);
        };

        nest.key = function (d) {
          keys.push(d);
          return nest;
        };

        nest.sortKeys = function (order) {
          sortKeys[keys.length - 1] = order;
          return nest;
        };

        nest.sortValues = function (order) {
          sortValues = order;
          return nest;
        };

        nest.rollup = function (f) {
          rollup = f;
          return nest;
        };

        return nest;
      };

      d3.set = function (array) {
        var set = new d3_Set();
        if (array) for (var i = 0, n = array.length; i < n; ++i) {
          set.add(array[i]);
        }
        return set;
      };

      function d3_Set() {
        this._ = Object.create(null);
      }

      d3_class(d3_Set, {
        has: d3_map_has,
        add: function add(key) {
          this._[d3_map_escape(key += "")] = true;
          return key;
        },
        remove: d3_map_remove,
        values: d3_map_keys,
        size: d3_map_size,
        empty: d3_map_empty,
        forEach: function forEach(f) {
          for (var key in this._) {
            f.call(this, d3_map_unescape(key));
          }
        }
      });
      d3.behavior = {};

      function d3_identity(d) {
        return d;
      }

      d3.rebind = function (target, source) {
        var i = 1,
            n = arguments.length,
            method;

        while (++i < n) {
          target[method = arguments[i]] = d3_rebind(target, source, source[method]);
        }

        return target;
      };

      function d3_rebind(target, source, method) {
        return function () {
          var value = method.apply(source, arguments);
          return value === source ? target : value;
        };
      }

      function d3_vendorSymbol(object, name) {
        if (name in object) return name;
        name = name.charAt(0).toUpperCase() + name.slice(1);

        for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
          var prefixName = d3_vendorPrefixes[i] + name;
          if (prefixName in object) return prefixName;
        }
      }

      var d3_vendorPrefixes = ["webkit", "ms", "moz", "Moz", "o", "O"];

      function d3_noop() {}

      d3.dispatch = function () {
        var dispatch = new d3_dispatch(),
            i = -1,
            n = arguments.length;

        while (++i < n) {
          dispatch[arguments[i]] = d3_dispatch_event(dispatch);
        }

        return dispatch;
      };

      function d3_dispatch() {}

      d3_dispatch.prototype.on = function (type, listener) {
        var i = type.indexOf("."),
            name = "";

        if (i >= 0) {
          name = type.slice(i + 1);
          type = type.slice(0, i);
        }

        if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);

        if (arguments.length === 2) {
          if (listener == null) for (type in this) {
            if (this.hasOwnProperty(type)) this[type].on(name, null);
          }
          return this;
        }
      };

      function d3_dispatch_event(dispatch) {
        var listeners = [],
            listenerByName = new d3_Map();

        function event() {
          var z = listeners,
              i = -1,
              n = z.length,
              l;

          while (++i < n) {
            if (l = z[i].on) l.apply(this, arguments);
          }

          return dispatch;
        }

        event.on = function (name, listener) {
          var l = listenerByName.get(name),
              i;
          if (arguments.length < 2) return l && l.on;

          if (l) {
            l.on = null;
            listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
            listenerByName.remove(name);
          }

          if (listener) listeners.push(listenerByName.set(name, {
            on: listener
          }));
          return dispatch;
        };

        return event;
      }

      d3.event = null;

      function d3_eventPreventDefault() {
        d3.event.preventDefault();
      }

      function d3_eventSource() {
        var e = d3.event,
            s;

        while (s = e.sourceEvent) {
          e = s;
        }

        return e;
      }

      function d3_eventDispatch(target) {
        var dispatch = new d3_dispatch(),
            i = 0,
            n = arguments.length;

        while (++i < n) {
          dispatch[arguments[i]] = d3_dispatch_event(dispatch);
        }

        dispatch.of = function (thiz, argumentz) {
          return function (e1) {
            try {
              var e0 = e1.sourceEvent = d3.event;
              e1.target = target;
              d3.event = e1;
              dispatch[e1.type].apply(thiz, argumentz);
            } finally {
              d3.event = e0;
            }
          };
        };

        return dispatch;
      }

      d3.requote = function (s) {
        return s.replace(d3_requote_re, "\\$&");
      };

      var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
      var d3_subclass = {}.__proto__ ? function (object, prototype) {
        object.__proto__ = prototype;
      } : function (object, prototype) {
        for (var property in prototype) {
          object[property] = prototype[property];
        }
      };

      function d3_selection(groups) {
        d3_subclass(groups, d3_selectionPrototype);
        return groups;
      }

      var d3_select = function d3_select(s, n) {
        return n.querySelector(s);
      },
          d3_selectAll = function d3_selectAll(s, n) {
        return n.querySelectorAll(s);
      },
          _d3_selectMatches = function d3_selectMatches(n, s) {
        var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];

        _d3_selectMatches = function d3_selectMatches(n, s) {
          return d3_selectMatcher.call(n, s);
        };

        return _d3_selectMatches(n, s);
      };

      if (typeof Sizzle === "function") {
        d3_select = function d3_select(s, n) {
          return Sizzle(s, n)[0] || null;
        };

        d3_selectAll = Sizzle;
        _d3_selectMatches = Sizzle.matchesSelector;
      }

      d3.selection = function () {
        return d3.select(d3_document.documentElement);
      };

      var d3_selectionPrototype = d3.selection.prototype = [];

      d3_selectionPrototype.select = function (selector) {
        var subgroups = [],
            subgroup,
            subnode,
            group,
            node;
        selector = d3_selection_selector(selector);

        for (var j = -1, m = this.length; ++j < m;) {
          subgroups.push(subgroup = []);
          subgroup.parentNode = (group = this[j]).parentNode;

          for (var i = -1, n = group.length; ++i < n;) {
            if (node = group[i]) {
              subgroup.push(subnode = selector.call(node, node.__data__, i, j));
              if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
            } else {
              subgroup.push(null);
            }
          }
        }

        return d3_selection(subgroups);
      };

      function d3_selection_selector(selector) {
        return typeof selector === "function" ? selector : function () {
          return d3_select(selector, this);
        };
      }

      d3_selectionPrototype.selectAll = function (selector) {
        var subgroups = [],
            subgroup,
            node;
        selector = d3_selection_selectorAll(selector);

        for (var j = -1, m = this.length; ++j < m;) {
          for (var group = this[j], i = -1, n = group.length; ++i < n;) {
            if (node = group[i]) {
              subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
              subgroup.parentNode = node;
            }
          }
        }

        return d3_selection(subgroups);
      };

      function d3_selection_selectorAll(selector) {
        return typeof selector === "function" ? selector : function () {
          return d3_selectAll(selector, this);
        };
      }

      var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
      var d3_nsPrefix = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: d3_nsXhtml,
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
      };
      d3.ns = {
        prefix: d3_nsPrefix,
        qualify: function qualify(name) {
          var i = name.indexOf(":"),
              prefix = name;
          if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
          return d3_nsPrefix.hasOwnProperty(prefix) ? {
            space: d3_nsPrefix[prefix],
            local: name
          } : name;
        }
      };

      d3_selectionPrototype.attr = function (name, value) {
        if (arguments.length < 2) {
          if (typeof name === "string") {
            var node = this.node();
            name = d3.ns.qualify(name);
            return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
          }

          for (value in name) {
            this.each(d3_selection_attr(value, name[value]));
          }

          return this;
        }

        return this.each(d3_selection_attr(name, value));
      };

      function d3_selection_attr(name, value) {
        name = d3.ns.qualify(name);

        function attrNull() {
          this.removeAttribute(name);
        }

        function attrNullNS() {
          this.removeAttributeNS(name.space, name.local);
        }

        function attrConstant() {
          this.setAttribute(name, value);
        }

        function attrConstantNS() {
          this.setAttributeNS(name.space, name.local, value);
        }

        function attrFunction() {
          var x = value.apply(this, arguments);
          if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);
        }

        function attrFunctionNS() {
          var x = value.apply(this, arguments);
          if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);
        }

        return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
      }

      function d3_collapse(s) {
        return s.trim().replace(/\s+/g, " ");
      }

      d3_selectionPrototype.classed = function (name, value) {
        if (arguments.length < 2) {
          if (typeof name === "string") {
            var node = this.node(),
                n = (name = d3_selection_classes(name)).length,
                i = -1;

            if (value = node.classList) {
              while (++i < n) {
                if (!value.contains(name[i])) return false;
              }
            } else {
              value = node.getAttribute("class");

              while (++i < n) {
                if (!d3_selection_classedRe(name[i]).test(value)) return false;
              }
            }

            return true;
          }

          for (value in name) {
            this.each(d3_selection_classed(value, name[value]));
          }

          return this;
        }

        return this.each(d3_selection_classed(name, value));
      };

      function d3_selection_classedRe(name) {
        return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
      }

      function d3_selection_classes(name) {
        return (name + "").trim().split(/^|\s+/);
      }

      function d3_selection_classed(name, value) {
        name = d3_selection_classes(name).map(d3_selection_classedName);
        var n = name.length;

        function classedConstant() {
          var i = -1;

          while (++i < n) {
            name[i](this, value);
          }
        }

        function classedFunction() {
          var i = -1,
              x = value.apply(this, arguments);

          while (++i < n) {
            name[i](this, x);
          }
        }

        return typeof value === "function" ? classedFunction : classedConstant;
      }

      function d3_selection_classedName(name) {
        var re = d3_selection_classedRe(name);
        return function (node, value) {
          if (c = node.classList) return value ? c.add(name) : c.remove(name);
          var c = node.getAttribute("class") || "";

          if (value) {
            re.lastIndex = 0;
            if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
          } else {
            node.setAttribute("class", d3_collapse(c.replace(re, " ")));
          }
        };
      }

      d3_selectionPrototype.style = function (name, value, priority) {
        var n = arguments.length;

        if (n < 3) {
          if (typeof name !== "string") {
            if (n < 2) value = "";

            for (priority in name) {
              this.each(d3_selection_style(priority, name[priority], value));
            }

            return this;
          }

          if (n < 2) {
            var node = this.node();
            return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
          }

          priority = "";
        }

        return this.each(d3_selection_style(name, value, priority));
      };

      function d3_selection_style(name, value, priority) {
        function styleNull() {
          this.style.removeProperty(name);
        }

        function styleConstant() {
          this.style.setProperty(name, value, priority);
        }

        function styleFunction() {
          var x = value.apply(this, arguments);
          if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);
        }

        return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
      }

      d3_selectionPrototype.property = function (name, value) {
        if (arguments.length < 2) {
          if (typeof name === "string") return this.node()[name];

          for (value in name) {
            this.each(d3_selection_property(value, name[value]));
          }

          return this;
        }

        return this.each(d3_selection_property(name, value));
      };

      function d3_selection_property(name, value) {
        function propertyNull() {
          delete this[name];
        }

        function propertyConstant() {
          this[name] = value;
        }

        function propertyFunction() {
          var x = value.apply(this, arguments);
          if (x == null) delete this[name];else this[name] = x;
        }

        return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
      }

      d3_selectionPrototype.text = function (value) {
        return arguments.length ? this.each(typeof value === "function" ? function () {
          var v = value.apply(this, arguments);
          this.textContent = v == null ? "" : v;
        } : value == null ? function () {
          this.textContent = "";
        } : function () {
          this.textContent = value;
        }) : this.node().textContent;
      };

      d3_selectionPrototype.html = function (value) {
        return arguments.length ? this.each(typeof value === "function" ? function () {
          var v = value.apply(this, arguments);
          this.innerHTML = v == null ? "" : v;
        } : value == null ? function () {
          this.innerHTML = "";
        } : function () {
          this.innerHTML = value;
        }) : this.node().innerHTML;
      };

      d3_selectionPrototype.append = function (name) {
        name = d3_selection_creator(name);
        return this.select(function () {
          return this.appendChild(name.apply(this, arguments));
        });
      };

      function d3_selection_creator(name) {
        function create() {
          var document = this.ownerDocument,
              namespace = this.namespaceURI;
          return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
        }

        function createNS() {
          return this.ownerDocument.createElementNS(name.space, name.local);
        }

        return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
      }

      d3_selectionPrototype.insert = function (name, before) {
        name = d3_selection_creator(name);
        before = d3_selection_selector(before);
        return this.select(function () {
          return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
        });
      };

      d3_selectionPrototype.remove = function () {
        return this.each(d3_selectionRemove);
      };

      function d3_selectionRemove() {
        var parent = this.parentNode;
        if (parent) parent.removeChild(this);
      }

      d3_selectionPrototype.data = function (value, key) {
        var i = -1,
            n = this.length,
            group,
            node;

        if (!arguments.length) {
          value = new Array(n = (group = this[0]).length);

          while (++i < n) {
            if (node = group[i]) {
              value[i] = node.__data__;
            }
          }

          return value;
        }

        function bind(group, groupData) {
          var i,
              n = group.length,
              m = groupData.length,
              n0 = Math.min(n, m),
              updateNodes = new Array(m),
              enterNodes = new Array(m),
              exitNodes = new Array(n),
              node,
              nodeData;

          if (key) {
            var nodeByKeyValue = new d3_Map(),
                keyValues = new Array(n),
                keyValue;

            for (i = -1; ++i < n;) {
              if (node = group[i]) {
                if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
                  exitNodes[i] = node;
                } else {
                  nodeByKeyValue.set(keyValue, node);
                }

                keyValues[i] = keyValue;
              }
            }

            for (i = -1; ++i < m;) {
              if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
                enterNodes[i] = d3_selection_dataNode(nodeData);
              } else if (node !== true) {
                updateNodes[i] = node;
                node.__data__ = nodeData;
              }

              nodeByKeyValue.set(keyValue, true);
            }

            for (i = -1; ++i < n;) {
              if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
                exitNodes[i] = group[i];
              }
            }
          } else {
            for (i = -1; ++i < n0;) {
              node = group[i];
              nodeData = groupData[i];

              if (node) {
                node.__data__ = nodeData;
                updateNodes[i] = node;
              } else {
                enterNodes[i] = d3_selection_dataNode(nodeData);
              }
            }

            for (; i < m; ++i) {
              enterNodes[i] = d3_selection_dataNode(groupData[i]);
            }

            for (; i < n; ++i) {
              exitNodes[i] = group[i];
            }
          }

          enterNodes.update = updateNodes;
          enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
          enter.push(enterNodes);
          update.push(updateNodes);
          exit.push(exitNodes);
        }

        var enter = d3_selection_enter([]),
            update = d3_selection([]),
            exit = d3_selection([]);

        if (typeof value === "function") {
          while (++i < n) {
            bind(group = this[i], value.call(group, group.parentNode.__data__, i));
          }
        } else {
          while (++i < n) {
            bind(group = this[i], value);
          }
        }

        update.enter = function () {
          return enter;
        };

        update.exit = function () {
          return exit;
        };

        return update;
      };

      function d3_selection_dataNode(data) {
        return {
          __data__: data
        };
      }

      d3_selectionPrototype.datum = function (value) {
        return arguments.length ? this.property("__data__", value) : this.property("__data__");
      };

      d3_selectionPrototype.filter = function (filter) {
        var subgroups = [],
            subgroup,
            group,
            node;
        if (typeof filter !== "function") filter = d3_selection_filter(filter);

        for (var j = 0, m = this.length; j < m; j++) {
          subgroups.push(subgroup = []);
          subgroup.parentNode = (group = this[j]).parentNode;

          for (var i = 0, n = group.length; i < n; i++) {
            if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
              subgroup.push(node);
            }
          }
        }

        return d3_selection(subgroups);
      };

      function d3_selection_filter(selector) {
        return function () {
          return _d3_selectMatches(this, selector);
        };
      }

      d3_selectionPrototype.order = function () {
        for (var j = -1, m = this.length; ++j < m;) {
          for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
            if (node = group[i]) {
              if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
              next = node;
            }
          }
        }

        return this;
      };

      d3_selectionPrototype.sort = function (comparator) {
        comparator = d3_selection_sortComparator.apply(this, arguments);

        for (var j = -1, m = this.length; ++j < m;) {
          this[j].sort(comparator);
        }

        return this.order();
      };

      function d3_selection_sortComparator(comparator) {
        if (!arguments.length) comparator = d3_ascending;
        return function (a, b) {
          return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
        };
      }

      d3_selectionPrototype.each = function (callback) {
        return d3_selection_each(this, function (node, i, j) {
          callback.call(node, node.__data__, i, j);
        });
      };

      function d3_selection_each(groups, callback) {
        for (var j = 0, m = groups.length; j < m; j++) {
          for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
            if (node = group[i]) callback(node, i, j);
          }
        }

        return groups;
      }

      d3_selectionPrototype.call = function (callback) {
        var args = d3_array(arguments);
        callback.apply(args[0] = this, args);
        return this;
      };

      d3_selectionPrototype.empty = function () {
        return !this.node();
      };

      d3_selectionPrototype.node = function () {
        for (var j = 0, m = this.length; j < m; j++) {
          for (var group = this[j], i = 0, n = group.length; i < n; i++) {
            var node = group[i];
            if (node) return node;
          }
        }

        return null;
      };

      d3_selectionPrototype.size = function () {
        var n = 0;
        d3_selection_each(this, function () {
          ++n;
        });
        return n;
      };

      function d3_selection_enter(selection) {
        d3_subclass(selection, d3_selection_enterPrototype);
        return selection;
      }

      var d3_selection_enterPrototype = [];
      d3.selection.enter = d3_selection_enter;
      d3.selection.enter.prototype = d3_selection_enterPrototype;
      d3_selection_enterPrototype.append = d3_selectionPrototype.append;
      d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
      d3_selection_enterPrototype.node = d3_selectionPrototype.node;
      d3_selection_enterPrototype.call = d3_selectionPrototype.call;
      d3_selection_enterPrototype.size = d3_selectionPrototype.size;

      d3_selection_enterPrototype.select = function (selector) {
        var subgroups = [],
            subgroup,
            subnode,
            upgroup,
            group,
            node;

        for (var j = -1, m = this.length; ++j < m;) {
          upgroup = (group = this[j]).update;
          subgroups.push(subgroup = []);
          subgroup.parentNode = group.parentNode;

          for (var i = -1, n = group.length; ++i < n;) {
            if (node = group[i]) {
              subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
              subnode.__data__ = node.__data__;
            } else {
              subgroup.push(null);
            }
          }
        }

        return d3_selection(subgroups);
      };

      d3_selection_enterPrototype.insert = function (name, before) {
        if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
        return d3_selectionPrototype.insert.call(this, name, before);
      };

      function d3_selection_enterInsertBefore(enter) {
        var i0, j0;
        return function (d, i, j) {
          var group = enter[j].update,
              n = group.length,
              node;
          if (j != j0) j0 = j, i0 = 0;
          if (i >= i0) i0 = i + 1;

          while (!(node = group[i0]) && ++i0 < n) {
            ;
          }

          return node;
        };
      }

      d3.select = function (node) {
        var group;

        if (typeof node === "string") {
          group = [d3_select(node, d3_document)];
          group.parentNode = d3_document.documentElement;
        } else {
          group = [node];
          group.parentNode = d3_documentElement(node);
        }

        return d3_selection([group]);
      };

      d3.selectAll = function (nodes) {
        var group;

        if (typeof nodes === "string") {
          group = d3_array(d3_selectAll(nodes, d3_document));
          group.parentNode = d3_document.documentElement;
        } else {
          group = d3_array(nodes);
          group.parentNode = null;
        }

        return d3_selection([group]);
      };

      d3_selectionPrototype.on = function (type, listener, capture) {
        var n = arguments.length;

        if (n < 3) {
          if (typeof type !== "string") {
            if (n < 2) listener = false;

            for (capture in type) {
              this.each(d3_selection_on(capture, type[capture], listener));
            }

            return this;
          }

          if (n < 2) return (n = this.node()["__on" + type]) && n._;
          capture = false;
        }

        return this.each(d3_selection_on(type, listener, capture));
      };

      function d3_selection_on(type, listener, capture) {
        var name = "__on" + type,
            i = type.indexOf("."),
            wrap = d3_selection_onListener;
        if (i > 0) type = type.slice(0, i);
        var filter = d3_selection_onFilters.get(type);
        if (filter) type = filter, wrap = d3_selection_onFilter;

        function onRemove() {
          var l = this[name];

          if (l) {
            this.removeEventListener(type, l, l.$);
            delete this[name];
          }
        }

        function onAdd() {
          var l = wrap(listener, d3_array(arguments));
          onRemove.call(this);
          this.addEventListener(type, this[name] = l, l.$ = capture);
          l._ = listener;
        }

        function removeAll() {
          var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"),
              match;

          for (var name in this) {
            if (match = name.match(re)) {
              var l = this[name];
              this.removeEventListener(match[1], l, l.$);
              delete this[name];
            }
          }
        }

        return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
      }

      var d3_selection_onFilters = d3.map({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
      });

      if (d3_document) {
        d3_selection_onFilters.forEach(function (k) {
          if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
        });
      }

      function d3_selection_onListener(listener, argumentz) {
        return function (e) {
          var o = d3.event;
          d3.event = e;
          argumentz[0] = this.__data__;

          try {
            listener.apply(this, argumentz);
          } finally {
            d3.event = o;
          }
        };
      }

      function d3_selection_onFilter(listener, argumentz) {
        var l = d3_selection_onListener(listener, argumentz);
        return function (e) {
          var target = this,
              related = e.relatedTarget;

          if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
            l.call(target, e);
          }
        };
      }

      var d3_event_dragSelect,
          d3_event_dragId = 0;

      function d3_event_dragSuppress(node) {
        var name = ".dragsuppress-" + ++d3_event_dragId,
            click = "click" + name,
            w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);

        if (d3_event_dragSelect == null) {
          d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
        }

        if (d3_event_dragSelect) {
          var style = d3_documentElement(node).style,
              select = style[d3_event_dragSelect];
          style[d3_event_dragSelect] = "none";
        }

        return function (suppressClick) {
          w.on(name, null);
          if (d3_event_dragSelect) style[d3_event_dragSelect] = select;

          if (suppressClick) {
            var off = function off() {
              w.on(click, null);
            };

            w.on(click, function () {
              d3_eventPreventDefault();
              off();
            }, true);
            setTimeout(off, 0);
          }
        };
      }

      d3.mouse = function (container) {
        return d3_mousePoint(container, d3_eventSource());
      };

      var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;

      function d3_mousePoint(container, e) {
        if (e.changedTouches) e = e.changedTouches[0];
        var svg = container.ownerSVGElement || container;

        if (svg.createSVGPoint) {
          var point = svg.createSVGPoint();

          if (d3_mouse_bug44083 < 0) {
            var window = d3_window(container);

            if (window.scrollX || window.scrollY) {
              svg = d3.select("body").append("svg").style({
                position: "absolute",
                top: 0,
                left: 0,
                margin: 0,
                padding: 0,
                border: "none"
              }, "important");
              var ctm = svg[0][0].getScreenCTM();
              d3_mouse_bug44083 = !(ctm.f || ctm.e);
              svg.remove();
            }
          }

          if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;
          point = point.matrixTransform(container.getScreenCTM().inverse());
          return [point.x, point.y];
        }

        var rect = container.getBoundingClientRect();
        return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];
      }

      d3.touch = function (container, touches, identifier) {
        if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
        if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
          if ((touch = touches[i]).identifier === identifier) {
            return d3_mousePoint(container, touch);
          }
        }
      };

      d3.behavior.drag = function () {
        var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"),
            origin = null,
            mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"),
            touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");

        function drag() {
          this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
        }

        function dragstart(id, position, subject, move, end) {
          return function () {
            var that = this,
                target = d3.event.target.correspondingElement || d3.event.target,
                parent = that.parentNode,
                dispatch = event.of(that, arguments),
                dragged = 0,
                dragId = id(),
                dragName = ".drag" + (dragId == null ? "" : "-" + dragId),
                dragOffset,
                dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),
                dragRestore = d3_event_dragSuppress(target),
                position0 = position(parent, dragId);

            if (origin) {
              dragOffset = origin.apply(that, arguments);
              dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];
            } else {
              dragOffset = [0, 0];
            }

            dispatch({
              type: "dragstart"
            });

            function moved() {
              var position1 = position(parent, dragId),
                  dx,
                  dy;
              if (!position1) return;
              dx = position1[0] - position0[0];
              dy = position1[1] - position0[1];
              dragged |= dx | dy;
              position0 = position1;
              dispatch({
                type: "drag",
                x: position1[0] + dragOffset[0],
                y: position1[1] + dragOffset[1],
                dx: dx,
                dy: dy
              });
            }

            function ended() {
              if (!position(parent, dragId)) return;
              dragSubject.on(move + dragName, null).on(end + dragName, null);
              dragRestore(dragged);
              dispatch({
                type: "dragend"
              });
            }
          };
        }

        drag.origin = function (x) {
          if (!arguments.length) return origin;
          origin = x;
          return drag;
        };

        return d3.rebind(drag, event, "on");
      };

      function d3_behavior_dragTouchId() {
        return d3.event.changedTouches[0].identifier;
      }

      d3.touches = function (container, touches) {
        if (arguments.length < 2) touches = d3_eventSource().touches;
        return touches ? d3_array(touches).map(function (touch) {
          var point = d3_mousePoint(container, touch);
          point.identifier = touch.identifier;
          return point;
        }) : [];
      };

      var ε = 1e-6,
          ε2 = ε * ε,
          π = Math.PI,
          τ = 2 * π,
          τε = τ - ε,
          halfπ = π / 2,
          d3_radians = π / 180,
          d3_degrees = 180 / π;

      function d3_sgn(x) {
        return x > 0 ? 1 : x < 0 ? -1 : 0;
      }

      function d3_cross2d(a, b, c) {
        return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
      }

      function d3_acos(x) {
        return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
      }

      function d3_asin(x) {
        return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
      }

      function d3_sinh(x) {
        return ((x = Math.exp(x)) - 1 / x) / 2;
      }

      function d3_cosh(x) {
        return ((x = Math.exp(x)) + 1 / x) / 2;
      }

      function d3_tanh(x) {
        return ((x = Math.exp(2 * x)) - 1) / (x + 1);
      }

      function d3_haversin(x) {
        return (x = Math.sin(x / 2)) * x;
      }

      var ρ = Math.SQRT2,
          ρ2 = 2,
          ρ4 = 4;

      d3.interpolateZoom = function (p0, p1) {
        var ux0 = p0[0],
            uy0 = p0[1],
            w0 = p0[2],
            ux1 = p1[0],
            uy1 = p1[1],
            w1 = p1[2],
            dx = ux1 - ux0,
            dy = uy1 - uy0,
            d2 = dx * dx + dy * dy,
            i,
            S;

        if (d2 < ε2) {
          S = Math.log(w1 / w0) / ρ;

          i = function i(t) {
            return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];
          };
        } else {
          var d1 = Math.sqrt(d2),
              b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),
              b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),
              r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
              r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
          S = (r1 - r0) / ρ;

          i = function i(t) {
            var s = t * S,
                coshr0 = d3_cosh(r0),
                u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
            return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];
          };
        }

        i.duration = S * 1e3;
        return i;
      };

      d3.behavior.zoom = function () {
        var view = {
          x: 0,
          y: 0,
          k: 1
        },
            translate0,
            center0,
            center,
            size = [960, 500],
            scaleExtent = d3_behavior_zoomInfinity,
            duration = 250,
            zooming = 0,
            mousedown = "mousedown.zoom",
            mousemove = "mousemove.zoom",
            mouseup = "mouseup.zoom",
            mousewheelTimer,
            touchstart = "touchstart.zoom",
            touchtime,
            event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"),
            x0,
            x1,
            y0,
            y1;

        if (!d3_behavior_zoomWheel) {
          d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {
            return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
          }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {
            return d3.event.wheelDelta;
          }, "mousewheel") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {
            return -d3.event.detail;
          }, "MozMousePixelScroll");
        }

        function zoom(g) {
          g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
        }

        zoom.event = function (g) {
          g.each(function () {
            var dispatch = event.of(this, arguments),
                view1 = view;

            if (d3_transitionInheritId) {
              d3.select(this).transition().each("start.zoom", function () {
                view = this.__chart__ || {
                  x: 0,
                  y: 0,
                  k: 1
                };
                zoomstarted(dispatch);
              }).tween("zoom:zoom", function () {
                var dx = size[0],
                    dy = size[1],
                    cx = center0 ? center0[0] : dx / 2,
                    cy = center0 ? center0[1] : dy / 2,
                    i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);
                return function (t) {
                  var l = i(t),
                      k = dx / l[2];
                  this.__chart__ = view = {
                    x: cx - l[0] * k,
                    y: cy - l[1] * k,
                    k: k
                  };
                  zoomed(dispatch);
                };
              }).each("interrupt.zoom", function () {
                zoomended(dispatch);
              }).each("end.zoom", function () {
                zoomended(dispatch);
              });
            } else {
              this.__chart__ = view;
              zoomstarted(dispatch);
              zoomed(dispatch);
              zoomended(dispatch);
            }
          });
        };

        zoom.translate = function (_) {
          if (!arguments.length) return [view.x, view.y];
          view = {
            x: +_[0],
            y: +_[1],
            k: view.k
          };
          rescale();
          return zoom;
        };

        zoom.scale = function (_) {
          if (!arguments.length) return view.k;
          view = {
            x: view.x,
            y: view.y,
            k: null
          };
          scaleTo(+_);
          rescale();
          return zoom;
        };

        zoom.scaleExtent = function (_) {
          if (!arguments.length) return scaleExtent;
          scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];
          return zoom;
        };

        zoom.center = function (_) {
          if (!arguments.length) return center;
          center = _ && [+_[0], +_[1]];
          return zoom;
        };

        zoom.size = function (_) {
          if (!arguments.length) return size;
          size = _ && [+_[0], +_[1]];
          return zoom;
        };

        zoom.duration = function (_) {
          if (!arguments.length) return duration;
          duration = +_;
          return zoom;
        };

        zoom.x = function (z) {
          if (!arguments.length) return x1;
          x1 = z;
          x0 = z.copy();
          view = {
            x: 0,
            y: 0,
            k: 1
          };
          return zoom;
        };

        zoom.y = function (z) {
          if (!arguments.length) return y1;
          y1 = z;
          y0 = z.copy();
          view = {
            x: 0,
            y: 0,
            k: 1
          };
          return zoom;
        };

        function location(p) {
          return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];
        }

        function point(l) {
          return [l[0] * view.k + view.x, l[1] * view.k + view.y];
        }

        function scaleTo(s) {
          view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
        }

        function translateTo(p, l) {
          l = point(l);
          view.x += p[0] - l[0];
          view.y += p[1] - l[1];
        }

        function zoomTo(that, p, l, k) {
          that.__chart__ = {
            x: view.x,
            y: view.y,
            k: view.k
          };
          scaleTo(Math.pow(2, k));
          translateTo(center0 = p, l);
          that = d3.select(that);
          if (duration > 0) that = that.transition().duration(duration);
          that.call(zoom.event);
        }

        function rescale() {
          if (x1) x1.domain(x0.range().map(function (x) {
            return (x - view.x) / view.k;
          }).map(x0.invert));
          if (y1) y1.domain(y0.range().map(function (y) {
            return (y - view.y) / view.k;
          }).map(y0.invert));
        }

        function zoomstarted(dispatch) {
          if (!zooming++) dispatch({
            type: "zoomstart"
          });
        }

        function zoomed(dispatch) {
          rescale();
          dispatch({
            type: "zoom",
            scale: view.k,
            translate: [view.x, view.y]
          });
        }

        function zoomended(dispatch) {
          if (! --zooming) dispatch({
            type: "zoomend"
          }), center0 = null;
        }

        function mousedowned() {
          var that = this,
              dispatch = event.of(that, arguments),
              dragged = 0,
              subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),
              location0 = location(d3.mouse(that)),
              dragRestore = d3_event_dragSuppress(that);
          d3_selection_interrupt.call(that);
          zoomstarted(dispatch);

          function moved() {
            dragged = 1;
            translateTo(d3.mouse(that), location0);
            zoomed(dispatch);
          }

          function ended() {
            subject.on(mousemove, null).on(mouseup, null);
            dragRestore(dragged);
            zoomended(dispatch);
          }
        }

        function touchstarted() {
          var that = this,
              dispatch = event.of(that, arguments),
              locations0 = {},
              distance0 = 0,
              scale0,
              zoomName = ".zoom-" + d3.event.changedTouches[0].identifier,
              touchmove = "touchmove" + zoomName,
              touchend = "touchend" + zoomName,
              targets = [],
              subject = d3.select(that),
              dragRestore = d3_event_dragSuppress(that);
          started();
          zoomstarted(dispatch);
          subject.on(mousedown, null).on(touchstart, started);

          function relocate() {
            var touches = d3.touches(that);
            scale0 = view.k;
            touches.forEach(function (t) {
              if (t.identifier in locations0) locations0[t.identifier] = location(t);
            });
            return touches;
          }

          function started() {
            var target = d3.event.target;
            d3.select(target).on(touchmove, moved).on(touchend, ended);
            targets.push(target);
            var changed = d3.event.changedTouches;

            for (var i = 0, n = changed.length; i < n; ++i) {
              locations0[changed[i].identifier] = null;
            }

            var touches = relocate(),
                now = Date.now();

            if (touches.length === 1) {
              if (now - touchtime < 500) {
                var p = touches[0];
                zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
                d3_eventPreventDefault();
              }

              touchtime = now;
            } else if (touches.length > 1) {
              var p = touches[0],
                  q = touches[1],
                  dx = p[0] - q[0],
                  dy = p[1] - q[1];
              distance0 = dx * dx + dy * dy;
            }
          }

          function moved() {
            var touches = d3.touches(that),
                p0,
                l0,
                p1,
                l1;
            d3_selection_interrupt.call(that);

            for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
              p1 = touches[i];

              if (l1 = locations0[p1.identifier]) {
                if (l0) break;
                p0 = p1, l0 = l1;
              }
            }

            if (l1) {
              var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,
                  scale1 = distance0 && Math.sqrt(distance1 / distance0);
              p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
              l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
              scaleTo(scale1 * scale0);
            }

            touchtime = null;
            translateTo(p0, l0);
            zoomed(dispatch);
          }

          function ended() {
            if (d3.event.touches.length) {
              var changed = d3.event.changedTouches;

              for (var i = 0, n = changed.length; i < n; ++i) {
                delete locations0[changed[i].identifier];
              }

              for (var identifier in locations0) {
                return void relocate();
              }
            }

            d3.selectAll(targets).on(zoomName, null);
            subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
            dragRestore();
            zoomended(dispatch);
          }
        }

        function mousewheeled() {
          var dispatch = event.of(this, arguments);
          if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
          mousewheelTimer = setTimeout(function () {
            mousewheelTimer = null;
            zoomended(dispatch);
          }, 50);
          d3_eventPreventDefault();
          scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
          translateTo(center0, translate0);
          zoomed(dispatch);
        }

        function dblclicked() {
          var p = d3.mouse(this),
              k = Math.log(view.k) / Math.LN2;
          zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
        }

        return d3.rebind(zoom, event, "on");
      };

      var d3_behavior_zoomInfinity = [0, Infinity],
          d3_behavior_zoomDelta,
          d3_behavior_zoomWheel;
      d3.color = d3_color;

      function d3_color() {}

      d3_color.prototype.toString = function () {
        return this.rgb() + "";
      };

      d3.hsl = d3_hsl;

      function d3_hsl(h, s, l) {
        return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
      }

      var d3_hslPrototype = d3_hsl.prototype = new d3_color();

      d3_hslPrototype.brighter = function (k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        return new d3_hsl(this.h, this.s, this.l / k);
      };

      d3_hslPrototype.darker = function (k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        return new d3_hsl(this.h, this.s, k * this.l);
      };

      d3_hslPrototype.rgb = function () {
        return d3_hsl_rgb(this.h, this.s, this.l);
      };

      function d3_hsl_rgb(h, s, l) {
        var m1, m2;
        h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
        s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
        l = l < 0 ? 0 : l > 1 ? 1 : l;
        m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
        m1 = 2 * l - m2;

        function v(h) {
          if (h > 360) h -= 360;else if (h < 0) h += 360;
          if (h < 60) return m1 + (m2 - m1) * h / 60;
          if (h < 180) return m2;
          if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
          return m1;
        }

        function vv(h) {
          return Math.round(v(h) * 255);
        }

        return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
      }

      d3.hcl = d3_hcl;

      function d3_hcl(h, c, l) {
        return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
      }

      var d3_hclPrototype = d3_hcl.prototype = new d3_color();

      d3_hclPrototype.brighter = function (k) {
        return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
      };

      d3_hclPrototype.darker = function (k) {
        return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
      };

      d3_hclPrototype.rgb = function () {
        return d3_hcl_lab(this.h, this.c, this.l).rgb();
      };

      function d3_hcl_lab(h, c, l) {
        if (isNaN(h)) h = 0;
        if (isNaN(c)) c = 0;
        return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
      }

      d3.lab = d3_lab;

      function d3_lab(l, a, b) {
        return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
      }

      var d3_lab_K = 18;
      var d3_lab_X = .95047,
          d3_lab_Y = 1,
          d3_lab_Z = 1.08883;
      var d3_labPrototype = d3_lab.prototype = new d3_color();

      d3_labPrototype.brighter = function (k) {
        return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
      };

      d3_labPrototype.darker = function (k) {
        return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
      };

      d3_labPrototype.rgb = function () {
        return d3_lab_rgb(this.l, this.a, this.b);
      };

      function d3_lab_rgb(l, a, b) {
        var y = (l + 16) / 116,
            x = y + a / 500,
            z = y - b / 200;
        x = d3_lab_xyz(x) * d3_lab_X;
        y = d3_lab_xyz(y) * d3_lab_Y;
        z = d3_lab_xyz(z) * d3_lab_Z;
        return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
      }

      function d3_lab_hcl(l, a, b) {
        return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
      }

      function d3_lab_xyz(x) {
        return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
      }

      function d3_xyz_lab(x) {
        return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
      }

      function d3_xyz_rgb(r) {
        return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
      }

      d3.rgb = d3_rgb;

      function d3_rgb(r, g, b) {
        return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
      }

      function d3_rgbNumber(value) {
        return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
      }

      function d3_rgbString(value) {
        return d3_rgbNumber(value) + "";
      }

      var d3_rgbPrototype = d3_rgb.prototype = new d3_color();

      d3_rgbPrototype.brighter = function (k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        var r = this.r,
            g = this.g,
            b = this.b,
            i = 30;
        if (!r && !g && !b) return new d3_rgb(i, i, i);
        if (r && r < i) r = i;
        if (g && g < i) g = i;
        if (b && b < i) b = i;
        return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
      };

      d3_rgbPrototype.darker = function (k) {
        k = Math.pow(.7, arguments.length ? k : 1);
        return new d3_rgb(k * this.r, k * this.g, k * this.b);
      };

      d3_rgbPrototype.hsl = function () {
        return d3_rgb_hsl(this.r, this.g, this.b);
      };

      d3_rgbPrototype.toString = function () {
        return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
      };

      function d3_rgb_hex(v) {
        return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
      }

      function d3_rgb_parse(format, rgb, hsl) {
        var r = 0,
            g = 0,
            b = 0,
            m1,
            m2,
            color;
        m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());

        if (m1) {
          m2 = m1[2].split(",");

          switch (m1[1]) {
            case "hsl":
              {
                return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
              }

            case "rgb":
              {
                return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
              }
          }
        }

        if (color = d3_rgb_names.get(format)) {
          return rgb(color.r, color.g, color.b);
        }

        if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
          if (format.length === 4) {
            r = (color & 3840) >> 4;
            r = r >> 4 | r;
            g = color & 240;
            g = g >> 4 | g;
            b = color & 15;
            b = b << 4 | b;
          } else if (format.length === 7) {
            r = (color & 16711680) >> 16;
            g = (color & 65280) >> 8;
            b = color & 255;
          }
        }

        return rgb(r, g, b);
      }

      function d3_rgb_hsl(r, g, b) {
        var min = Math.min(r /= 255, g /= 255, b /= 255),
            max = Math.max(r, g, b),
            d = max - min,
            h,
            s,
            l = (max + min) / 2;

        if (d) {
          s = l < .5 ? d / (max + min) : d / (2 - max - min);
          if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;
          h *= 60;
        } else {
          h = NaN;
          s = l > 0 && l < 1 ? 0 : h;
        }

        return new d3_hsl(h, s, l);
      }

      function d3_rgb_lab(r, g, b) {
        r = d3_rgb_xyz(r);
        g = d3_rgb_xyz(g);
        b = d3_rgb_xyz(b);
        var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),
            y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),
            z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
        return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
      }

      function d3_rgb_xyz(r) {
        return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
      }

      function d3_rgb_parseNumber(c) {
        var f = parseFloat(c);
        return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
      }

      var d3_rgb_names = d3.map({
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
      });
      d3_rgb_names.forEach(function (key, value) {
        d3_rgb_names.set(key, d3_rgbNumber(value));
      });

      function d3_functor(v) {
        return typeof v === "function" ? v : function () {
          return v;
        };
      }

      d3.functor = d3_functor;
      d3.xhr = d3_xhrType(d3_identity);

      function d3_xhrType(response) {
        return function (url, mimeType, callback) {
          if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, mimeType = null;
          return d3_xhr(url, mimeType, response, callback);
        };
      }

      function d3_xhr(url, mimeType, response, callback) {
        var xhr = {},
            dispatch = d3.dispatch("beforesend", "progress", "load", "error"),
            headers = {},
            request = new XMLHttpRequest(),
            responseType = null;
        if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
        "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {
          request.readyState > 3 && respond();
        };

        function respond() {
          var status = request.status,
              result;

          if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
            try {
              result = response.call(xhr, request);
            } catch (e) {
              dispatch.error.call(xhr, e);
              return;
            }

            dispatch.load.call(xhr, result);
          } else {
            dispatch.error.call(xhr, request);
          }
        }

        request.onprogress = function (event) {
          var o = d3.event;
          d3.event = event;

          try {
            dispatch.progress.call(xhr, request);
          } finally {
            d3.event = o;
          }
        };

        xhr.header = function (name, value) {
          name = (name + "").toLowerCase();
          if (arguments.length < 2) return headers[name];
          if (value == null) delete headers[name];else headers[name] = value + "";
          return xhr;
        };

        xhr.mimeType = function (value) {
          if (!arguments.length) return mimeType;
          mimeType = value == null ? null : value + "";
          return xhr;
        };

        xhr.responseType = function (value) {
          if (!arguments.length) return responseType;
          responseType = value;
          return xhr;
        };

        xhr.response = function (value) {
          response = value;
          return xhr;
        };

        ["get", "post"].forEach(function (method) {
          xhr[method] = function () {
            return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));
          };
        });

        xhr.send = function (method, data, callback) {
          if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
          request.open(method, url, true);
          if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
          if (request.setRequestHeader) for (var name in headers) {
            request.setRequestHeader(name, headers[name]);
          }
          if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
          if (responseType != null) request.responseType = responseType;
          if (callback != null) xhr.on("error", callback).on("load", function (request) {
            callback(null, request);
          });
          dispatch.beforesend.call(xhr, request);
          request.send(data == null ? null : data);
          return xhr;
        };

        xhr.abort = function () {
          request.abort();
          return xhr;
        };

        d3.rebind(xhr, dispatch, "on");
        return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
      }

      function d3_xhr_fixCallback(callback) {
        return callback.length === 1 ? function (error, request) {
          callback(error == null ? request : null);
        } : callback;
      }

      function d3_xhrHasResponse(request) {
        var type = request.responseType;
        return type && type !== "text" ? request.response : request.responseText;
      }

      d3.dsv = function (delimiter, mimeType) {
        var reFormat = new RegExp('["' + delimiter + "\n]"),
            delimiterCode = delimiter.charCodeAt(0);

        function dsv(url, row, callback) {
          if (arguments.length < 3) callback = row, row = null;
          var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);

          xhr.row = function (_) {
            return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
          };

          return xhr;
        }

        function response(request) {
          return dsv.parse(request.responseText);
        }

        function typedResponse(f) {
          return function (request) {
            return dsv.parse(request.responseText, f);
          };
        }

        dsv.parse = function (text, f) {
          var o;
          return dsv.parseRows(text, function (row, i) {
            if (o) return o(row, i - 1);
            var a = new Function("d", "return {" + row.map(function (name, i) {
              return JSON.stringify(name) + ": d[" + i + "]";
            }).join(",") + "}");
            o = f ? function (row, i) {
              return f(a(row), i);
            } : a;
          });
        };

        dsv.parseRows = function (text, f) {
          var EOL = {},
              EOF = {},
              rows = [],
              N = text.length,
              I = 0,
              n = 0,
              t,
              eol;

          function token() {
            if (I >= N) return EOF;
            if (eol) return eol = false, EOL;
            var j = I;

            if (text.charCodeAt(j) === 34) {
              var i = j;

              while (i++ < N) {
                if (text.charCodeAt(i) === 34) {
                  if (text.charCodeAt(i + 1) !== 34) break;
                  ++i;
                }
              }

              I = i + 2;
              var c = text.charCodeAt(i + 1);

              if (c === 13) {
                eol = true;
                if (text.charCodeAt(i + 2) === 10) ++I;
              } else if (c === 10) {
                eol = true;
              }

              return text.slice(j + 1, i).replace(/""/g, '"');
            }

            while (I < N) {
              var c = text.charCodeAt(I++),
                  k = 1;
              if (c === 10) eol = true;else if (c === 13) {
                eol = true;
                if (text.charCodeAt(I) === 10) ++I, ++k;
              } else if (c !== delimiterCode) continue;
              return text.slice(j, I - k);
            }

            return text.slice(j);
          }

          while ((t = token()) !== EOF) {
            var a = [];

            while (t !== EOL && t !== EOF) {
              a.push(t);
              t = token();
            }

            if (f && (a = f(a, n++)) == null) continue;
            rows.push(a);
          }

          return rows;
        };

        dsv.format = function (rows) {
          if (Array.isArray(rows[0])) return dsv.formatRows(rows);
          var fieldSet = new d3_Set(),
              fields = [];
          rows.forEach(function (row) {
            for (var field in row) {
              if (!fieldSet.has(field)) {
                fields.push(fieldSet.add(field));
              }
            }
          });
          return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {
            return fields.map(function (field) {
              return formatValue(row[field]);
            }).join(delimiter);
          })).join("\n");
        };

        dsv.formatRows = function (rows) {
          return rows.map(formatRow).join("\n");
        };

        function formatRow(row) {
          return row.map(formatValue).join(delimiter);
        }

        function formatValue(text) {
          return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
        }

        return dsv;
      };

      d3.csv = d3.dsv(",", "text/csv");
      d3.tsv = d3.dsv("	", "text/tab-separated-values");

      var d3_timer_queueHead,
          d3_timer_queueTail,
          d3_timer_interval,
          d3_timer_timeout,
          d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function (callback) {
        setTimeout(callback, 17);
      };

      d3.timer = function () {
        d3_timer.apply(this, arguments);
      };

      function d3_timer(callback, delay, then) {
        var n = arguments.length;
        if (n < 2) delay = 0;
        if (n < 3) then = Date.now();
        var time = then + delay,
            timer = {
          c: callback,
          t: time,
          n: null
        };
        if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;
        d3_timer_queueTail = timer;

        if (!d3_timer_interval) {
          d3_timer_timeout = clearTimeout(d3_timer_timeout);
          d3_timer_interval = 1;
          d3_timer_frame(d3_timer_step);
        }

        return timer;
      }

      function d3_timer_step() {
        var now = d3_timer_mark(),
            delay = d3_timer_sweep() - now;

        if (delay > 24) {
          if (isFinite(delay)) {
            clearTimeout(d3_timer_timeout);
            d3_timer_timeout = setTimeout(d3_timer_step, delay);
          }

          d3_timer_interval = 0;
        } else {
          d3_timer_interval = 1;
          d3_timer_frame(d3_timer_step);
        }
      }

      d3.timer.flush = function () {
        d3_timer_mark();
        d3_timer_sweep();
      };

      function d3_timer_mark() {
        var now = Date.now(),
            timer = d3_timer_queueHead;

        while (timer) {
          if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;
          timer = timer.n;
        }

        return now;
      }

      function d3_timer_sweep() {
        var t0,
            t1 = d3_timer_queueHead,
            time = Infinity;

        while (t1) {
          if (t1.c) {
            if (t1.t < time) time = t1.t;
            t1 = (t0 = t1).n;
          } else {
            t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
          }
        }

        d3_timer_queueTail = t0;
        return time;
      }

      function d3_format_precision(x, p) {
        return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
      }

      d3.round = function (x, n) {
        return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
      };

      var d3_formatPrefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(d3_formatPrefix);

      d3.formatPrefix = function (value, precision) {
        var i = 0;

        if (value = +value) {
          if (value < 0) value *= -1;
          if (precision) value = d3.round(value, d3_format_precision(value, precision));
          i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
          i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
        }

        return d3_formatPrefixes[8 + i / 3];
      };

      function d3_formatPrefix(d, i) {
        var k = Math.pow(10, abs(8 - i) * 3);
        return {
          scale: i > 8 ? function (d) {
            return d / k;
          } : function (d) {
            return d * k;
          },
          symbol: d
        };
      }

      function d3_locale_numberFormat(locale) {
        var locale_decimal = locale.decimal,
            locale_thousands = locale.thousands,
            locale_grouping = locale.grouping,
            locale_currency = locale.currency,
            formatGroup = locale_grouping && locale_thousands ? function (value, width) {
          var i = value.length,
              t = [],
              j = 0,
              g = locale_grouping[0],
              length = 0;

          while (i > 0 && g > 0) {
            if (length + g + 1 > width) g = Math.max(1, width - length);
            t.push(value.substring(i -= g, i + g));
            if ((length += g + 1) > width) break;
            g = locale_grouping[j = (j + 1) % locale_grouping.length];
          }

          return t.reverse().join(locale_thousands);
        } : d3_identity;
        return function (specifier) {
          var match = d3_format_re.exec(specifier),
              fill = match[1] || " ",
              align = match[2] || ">",
              sign = match[3] || "-",
              symbol = match[4] || "",
              zfill = match[5],
              width = +match[6],
              comma = match[7],
              precision = match[8],
              type = match[9],
              scale = 1,
              prefix = "",
              suffix = "",
              integer = false,
              exponent = true;
          if (precision) precision = +precision.substring(1);

          if (zfill || fill === "0" && align === "=") {
            zfill = fill = "0";
            align = "=";
          }

          switch (type) {
            case "n":
              comma = true;
              type = "g";
              break;

            case "%":
              scale = 100;
              suffix = "%";
              type = "f";
              break;

            case "p":
              scale = 100;
              suffix = "%";
              type = "r";
              break;

            case "b":
            case "o":
            case "x":
            case "X":
              if (symbol === "#") prefix = "0" + type.toLowerCase();

            case "c":
              exponent = false;

            case "d":
              integer = true;
              precision = 0;
              break;

            case "s":
              scale = -1;
              type = "r";
              break;
          }

          if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
          if (type == "r" && !precision) type = "g";

          if (precision != null) {
            if (type == "g") precision = Math.max(1, Math.min(21, precision));else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
          }

          type = d3_format_types.get(type) || d3_format_typeDefault;
          var zcomma = zfill && comma;
          return function (value) {
            var fullSuffix = suffix;
            if (integer && value % 1) return "";
            var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;

            if (scale < 0) {
              var unit = d3.formatPrefix(value, precision);
              value = unit.scale(value);
              fullSuffix = unit.symbol + suffix;
            } else {
              value *= scale;
            }

            value = type(value, precision);
            var i = value.lastIndexOf("."),
                before,
                after;

            if (i < 0) {
              var j = exponent ? value.lastIndexOf("e") : -1;
              if (j < 0) before = value, after = "";else before = value.substring(0, j), after = value.substring(j);
            } else {
              before = value.substring(0, i);
              after = locale_decimal + value.substring(i + 1);
            }

            if (!zfill && comma) before = formatGroup(before, Infinity);
            var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),
                padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
            if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
            negative += prefix;
            value = before + after;
            return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
          };
        };
      }

      var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
      var d3_format_types = d3.map({
        b: function b(x) {
          return x.toString(2);
        },
        c: function c(x) {
          return String.fromCharCode(x);
        },
        o: function o(x) {
          return x.toString(8);
        },
        x: function x(_x2) {
          return _x2.toString(16);
        },
        X: function X(x) {
          return x.toString(16).toUpperCase();
        },
        g: function g(x, p) {
          return x.toPrecision(p);
        },
        e: function e(x, p) {
          return x.toExponential(p);
        },
        f: function f(x, p) {
          return x.toFixed(p);
        },
        r: function r(x, p) {
          return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
        }
      });

      function d3_format_typeDefault(x) {
        return x + "";
      }

      var d3_time = d3.time = {},
          d3_date = Date;

      function d3_date_utc() {
        this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
      }

      d3_date_utc.prototype = {
        getDate: function getDate() {
          return this._.getUTCDate();
        },
        getDay: function getDay() {
          return this._.getUTCDay();
        },
        getFullYear: function getFullYear() {
          return this._.getUTCFullYear();
        },
        getHours: function getHours() {
          return this._.getUTCHours();
        },
        getMilliseconds: function getMilliseconds() {
          return this._.getUTCMilliseconds();
        },
        getMinutes: function getMinutes() {
          return this._.getUTCMinutes();
        },
        getMonth: function getMonth() {
          return this._.getUTCMonth();
        },
        getSeconds: function getSeconds() {
          return this._.getUTCSeconds();
        },
        getTime: function getTime() {
          return this._.getTime();
        },
        getTimezoneOffset: function getTimezoneOffset() {
          return 0;
        },
        valueOf: function valueOf() {
          return this._.valueOf();
        },
        setDate: function setDate() {
          d3_time_prototype.setUTCDate.apply(this._, arguments);
        },
        setDay: function setDay() {
          d3_time_prototype.setUTCDay.apply(this._, arguments);
        },
        setFullYear: function setFullYear() {
          d3_time_prototype.setUTCFullYear.apply(this._, arguments);
        },
        setHours: function setHours() {
          d3_time_prototype.setUTCHours.apply(this._, arguments);
        },
        setMilliseconds: function setMilliseconds() {
          d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
        },
        setMinutes: function setMinutes() {
          d3_time_prototype.setUTCMinutes.apply(this._, arguments);
        },
        setMonth: function setMonth() {
          d3_time_prototype.setUTCMonth.apply(this._, arguments);
        },
        setSeconds: function setSeconds() {
          d3_time_prototype.setUTCSeconds.apply(this._, arguments);
        },
        setTime: function setTime() {
          d3_time_prototype.setTime.apply(this._, arguments);
        }
      };
      var d3_time_prototype = Date.prototype;

      function d3_time_interval(local, step, number) {
        function round(date) {
          var d0 = local(date),
              d1 = offset(d0, 1);
          return date - d0 < d1 - date ? d0 : d1;
        }

        function ceil(date) {
          step(date = local(new d3_date(date - 1)), 1);
          return date;
        }

        function offset(date, k) {
          step(date = new d3_date(+date), k);
          return date;
        }

        function range(t0, t1, dt) {
          var time = ceil(t0),
              times = [];

          if (dt > 1) {
            while (time < t1) {
              if (!(number(time) % dt)) times.push(new Date(+time));
              step(time, 1);
            }
          } else {
            while (time < t1) {
              times.push(new Date(+time)), step(time, 1);
            }
          }

          return times;
        }

        function range_utc(t0, t1, dt) {
          try {
            d3_date = d3_date_utc;
            var utc = new d3_date_utc();
            utc._ = t0;
            return range(utc, t1, dt);
          } finally {
            d3_date = Date;
          }
        }

        local.floor = local;
        local.round = round;
        local.ceil = ceil;
        local.offset = offset;
        local.range = range;
        var utc = local.utc = d3_time_interval_utc(local);
        utc.floor = utc;
        utc.round = d3_time_interval_utc(round);
        utc.ceil = d3_time_interval_utc(ceil);
        utc.offset = d3_time_interval_utc(offset);
        utc.range = range_utc;
        return local;
      }

      function d3_time_interval_utc(method) {
        return function (date, k) {
          try {
            d3_date = d3_date_utc;
            var utc = new d3_date_utc();
            utc._ = date;
            return method(utc, k)._;
          } finally {
            d3_date = Date;
          }
        };
      }

      d3_time.year = d3_time_interval(function (date) {
        date = d3_time.day(date);
        date.setMonth(0, 1);
        return date;
      }, function (date, offset) {
        date.setFullYear(date.getFullYear() + offset);
      }, function (date) {
        return date.getFullYear();
      });
      d3_time.years = d3_time.year.range;
      d3_time.years.utc = d3_time.year.utc.range;
      d3_time.day = d3_time_interval(function (date) {
        var day = new d3_date(2e3, 0);
        day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
        return day;
      }, function (date, offset) {
        date.setDate(date.getDate() + offset);
      }, function (date) {
        return date.getDate() - 1;
      });
      d3_time.days = d3_time.day.range;
      d3_time.days.utc = d3_time.day.utc.range;

      d3_time.dayOfYear = function (date) {
        var year = d3_time.year(date);
        return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
      };

      ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function (day, i) {
        i = 7 - i;
        var interval = d3_time[day] = d3_time_interval(function (date) {
          (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
          return date;
        }, function (date, offset) {
          date.setDate(date.getDate() + Math.floor(offset) * 7);
        }, function (date) {
          var day = d3_time.year(date).getDay();
          return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
        });
        d3_time[day + "s"] = interval.range;
        d3_time[day + "s"].utc = interval.utc.range;

        d3_time[day + "OfYear"] = function (date) {
          var day = d3_time.year(date).getDay();
          return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
        };
      });
      d3_time.week = d3_time.sunday;
      d3_time.weeks = d3_time.sunday.range;
      d3_time.weeks.utc = d3_time.sunday.utc.range;
      d3_time.weekOfYear = d3_time.sundayOfYear;

      function d3_locale_timeFormat(locale) {
        var locale_dateTime = locale.dateTime,
            locale_date = locale.date,
            locale_time = locale.time,
            locale_periods = locale.periods,
            locale_days = locale.days,
            locale_shortDays = locale.shortDays,
            locale_months = locale.months,
            locale_shortMonths = locale.shortMonths;

        function d3_time_format(template) {
          var n = template.length;

          function format(date) {
            var string = [],
                i = -1,
                j = 0,
                c,
                p,
                f;

            while (++i < n) {
              if (template.charCodeAt(i) === 37) {
                string.push(template.slice(j, i));
                if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
                if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
                string.push(c);
                j = i + 1;
              }
            }

            string.push(template.slice(j, i));
            return string.join("");
          }

          format.parse = function (string) {
            var d = {
              y: 1900,
              m: 0,
              d: 1,
              H: 0,
              M: 0,
              S: 0,
              L: 0,
              Z: null
            },
                i = d3_time_parse(d, template, string, 0);
            if (i != string.length) return null;
            if ("p" in d) d.H = d.H % 12 + d.p * 12;
            var localZ = d.Z != null && d3_date !== d3_date_utc,
                date = new (localZ ? d3_date_utc : d3_date)();
            if ("j" in d) date.setFullYear(d.y, 0, d.j);else if ("W" in d || "U" in d) {
              if (!("w" in d)) d.w = "W" in d ? 1 : 0;
              date.setFullYear(d.y, 0, 1);
              date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
            } else date.setFullYear(d.y, d.m, d.d);
            date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
            return localZ ? date._ : date;
          };

          format.toString = function () {
            return template;
          };

          return format;
        }

        function d3_time_parse(date, template, string, j) {
          var c,
              p,
              t,
              i = 0,
              n = template.length,
              m = string.length;

          while (i < n) {
            if (j >= m) return -1;
            c = template.charCodeAt(i++);

            if (c === 37) {
              t = template.charAt(i++);
              p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
              if (!p || (j = p(date, string, j)) < 0) return -1;
            } else if (c != string.charCodeAt(j++)) {
              return -1;
            }
          }

          return j;
        }

        d3_time_format.utc = function (template) {
          var local = d3_time_format(template);

          function format(date) {
            try {
              d3_date = d3_date_utc;
              var utc = new d3_date();
              utc._ = date;
              return local(utc);
            } finally {
              d3_date = Date;
            }
          }

          format.parse = function (string) {
            try {
              d3_date = d3_date_utc;
              var date = local.parse(string);
              return date && date._;
            } finally {
              d3_date = Date;
            }
          };

          format.toString = local.toString;
          return format;
        };

        d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
        var d3_time_periodLookup = d3.map(),
            d3_time_dayRe = d3_time_formatRe(locale_days),
            d3_time_dayLookup = d3_time_formatLookup(locale_days),
            d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),
            d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),
            d3_time_monthRe = d3_time_formatRe(locale_months),
            d3_time_monthLookup = d3_time_formatLookup(locale_months),
            d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),
            d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
        locale_periods.forEach(function (p, i) {
          d3_time_periodLookup.set(p.toLowerCase(), i);
        });
        var d3_time_formats = {
          a: function a(d) {
            return locale_shortDays[d.getDay()];
          },
          A: function A(d) {
            return locale_days[d.getDay()];
          },
          b: function b(d) {
            return locale_shortMonths[d.getMonth()];
          },
          B: function B(d) {
            return locale_months[d.getMonth()];
          },
          c: d3_time_format(locale_dateTime),
          d: function d(_d2, p) {
            return d3_time_formatPad(_d2.getDate(), p, 2);
          },
          e: function e(d, p) {
            return d3_time_formatPad(d.getDate(), p, 2);
          },
          H: function H(d, p) {
            return d3_time_formatPad(d.getHours(), p, 2);
          },
          I: function I(d, p) {
            return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
          },
          j: function j(d, p) {
            return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
          },
          L: function L(d, p) {
            return d3_time_formatPad(d.getMilliseconds(), p, 3);
          },
          m: function m(d, p) {
            return d3_time_formatPad(d.getMonth() + 1, p, 2);
          },
          M: function M(d, p) {
            return d3_time_formatPad(d.getMinutes(), p, 2);
          },
          p: function p(d) {
            return locale_periods[+(d.getHours() >= 12)];
          },
          S: function S(d, p) {
            return d3_time_formatPad(d.getSeconds(), p, 2);
          },
          U: function U(d, p) {
            return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
          },
          w: function w(d) {
            return d.getDay();
          },
          W: function W(d, p) {
            return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
          },
          x: d3_time_format(locale_date),
          X: d3_time_format(locale_time),
          y: function y(d, p) {
            return d3_time_formatPad(d.getFullYear() % 100, p, 2);
          },
          Y: function Y(d, p) {
            return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
          },
          Z: d3_time_zone,
          "%": function _() {
            return "%";
          }
        };
        var d3_time_parsers = {
          a: d3_time_parseWeekdayAbbrev,
          A: d3_time_parseWeekday,
          b: d3_time_parseMonthAbbrev,
          B: d3_time_parseMonth,
          c: d3_time_parseLocaleFull,
          d: d3_time_parseDay,
          e: d3_time_parseDay,
          H: d3_time_parseHour24,
          I: d3_time_parseHour24,
          j: d3_time_parseDayOfYear,
          L: d3_time_parseMilliseconds,
          m: d3_time_parseMonthNumber,
          M: d3_time_parseMinutes,
          p: d3_time_parseAmPm,
          S: d3_time_parseSeconds,
          U: d3_time_parseWeekNumberSunday,
          w: d3_time_parseWeekdayNumber,
          W: d3_time_parseWeekNumberMonday,
          x: d3_time_parseLocaleDate,
          X: d3_time_parseLocaleTime,
          y: d3_time_parseYear,
          Y: d3_time_parseFullYear,
          Z: d3_time_parseZone,
          "%": d3_time_parseLiteralPercent
        };

        function d3_time_parseWeekdayAbbrev(date, string, i) {
          d3_time_dayAbbrevRe.lastIndex = 0;
          var n = d3_time_dayAbbrevRe.exec(string.slice(i));
          return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
        }

        function d3_time_parseWeekday(date, string, i) {
          d3_time_dayRe.lastIndex = 0;
          var n = d3_time_dayRe.exec(string.slice(i));
          return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
        }

        function d3_time_parseMonthAbbrev(date, string, i) {
          d3_time_monthAbbrevRe.lastIndex = 0;
          var n = d3_time_monthAbbrevRe.exec(string.slice(i));
          return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
        }

        function d3_time_parseMonth(date, string, i) {
          d3_time_monthRe.lastIndex = 0;
          var n = d3_time_monthRe.exec(string.slice(i));
          return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
        }

        function d3_time_parseLocaleFull(date, string, i) {
          return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
        }

        function d3_time_parseLocaleDate(date, string, i) {
          return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
        }

        function d3_time_parseLocaleTime(date, string, i) {
          return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
        }

        function d3_time_parseAmPm(date, string, i) {
          var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
          return n == null ? -1 : (date.p = n, i);
        }

        return d3_time_format;
      }

      var d3_time_formatPads = {
        "-": "",
        _: " ",
        "0": "0"
      },
          d3_time_numberRe = /^\s*\d+/,
          d3_time_percentRe = /^%/;

      function d3_time_formatPad(value, fill, width) {
        var sign = value < 0 ? "-" : "",
            string = (sign ? -value : value) + "",
            length = string.length;
        return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
      }

      function d3_time_formatRe(names) {
        return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
      }

      function d3_time_formatLookup(names) {
        var map = new d3_Map(),
            i = -1,
            n = names.length;

        while (++i < n) {
          map.set(names[i].toLowerCase(), i);
        }

        return map;
      }

      function d3_time_parseWeekdayNumber(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 1));
        return n ? (date.w = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseWeekNumberSunday(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i));
        return n ? (date.U = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseWeekNumberMonday(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i));
        return n ? (date.W = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseFullYear(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 4));
        return n ? (date.y = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseYear(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
      }

      function d3_time_parseZone(date, string, i) {
        return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;
      }

      function d3_time_expandYear(d) {
        return d + (d > 68 ? 1900 : 2e3);
      }

      function d3_time_parseMonthNumber(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
      }

      function d3_time_parseDay(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.d = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseDayOfYear(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 3));
        return n ? (date.j = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseHour24(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.H = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseMinutes(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.M = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseSeconds(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 2));
        return n ? (date.S = +n[0], i + n[0].length) : -1;
      }

      function d3_time_parseMilliseconds(date, string, i) {
        d3_time_numberRe.lastIndex = 0;
        var n = d3_time_numberRe.exec(string.slice(i, i + 3));
        return n ? (date.L = +n[0], i + n[0].length) : -1;
      }

      function d3_time_zone(d) {
        var z = d.getTimezoneOffset(),
            zs = z > 0 ? "-" : "+",
            zh = abs(z) / 60 | 0,
            zm = abs(z) % 60;
        return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
      }

      function d3_time_parseLiteralPercent(date, string, i) {
        d3_time_percentRe.lastIndex = 0;
        var n = d3_time_percentRe.exec(string.slice(i, i + 1));
        return n ? i + n[0].length : -1;
      }

      function d3_time_formatMulti(formats) {
        var n = formats.length,
            i = -1;

        while (++i < n) {
          formats[i][0] = this(formats[i][0]);
        }

        return function (date) {
          var i = 0,
              f = formats[i];

          while (!f[1](date)) {
            f = formats[++i];
          }

          return f[0](date);
        };
      }

      d3.locale = function (locale) {
        return {
          numberFormat: d3_locale_numberFormat(locale),
          timeFormat: d3_locale_timeFormat(locale)
        };
      };

      var d3_locale_enUS = d3.locale({
        decimal: ".",
        thousands: ",",
        grouping: [3],
        currency: ["$", ""],
        dateTime: "%a %b %e %X %Y",
        date: "%m/%d/%Y",
        time: "%H:%M:%S",
        periods: ["AM", "PM"],
        days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
      });
      d3.format = d3_locale_enUS.numberFormat;
      d3.geo = {};

      function d3_adder() {}

      d3_adder.prototype = {
        s: 0,
        t: 0,
        add: function add(y) {
          d3_adderSum(y, this.t, d3_adderTemp);
          d3_adderSum(d3_adderTemp.s, this.s, this);
          if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;
        },
        reset: function reset() {
          this.s = this.t = 0;
        },
        valueOf: function valueOf() {
          return this.s;
        }
      };
      var d3_adderTemp = new d3_adder();

      function d3_adderSum(a, b, o) {
        var x = o.s = a + b,
            bv = x - a,
            av = x - bv;
        o.t = a - av + (b - bv);
      }

      d3.geo.stream = function (object, listener) {
        if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
          d3_geo_streamObjectType[object.type](object, listener);
        } else {
          d3_geo_streamGeometry(object, listener);
        }
      };

      function d3_geo_streamGeometry(geometry, listener) {
        if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
          d3_geo_streamGeometryType[geometry.type](geometry, listener);
        }
      }

      var d3_geo_streamObjectType = {
        Feature: function Feature(feature, listener) {
          d3_geo_streamGeometry(feature.geometry, listener);
        },
        FeatureCollection: function FeatureCollection(object, listener) {
          var features = object.features,
              i = -1,
              n = features.length;

          while (++i < n) {
            d3_geo_streamGeometry(features[i].geometry, listener);
          }
        }
      };
      var d3_geo_streamGeometryType = {
        Sphere: function Sphere(object, listener) {
          listener.sphere();
        },
        Point: function Point(object, listener) {
          object = object.coordinates;
          listener.point(object[0], object[1], object[2]);
        },
        MultiPoint: function MultiPoint(object, listener) {
          var coordinates = object.coordinates,
              i = -1,
              n = coordinates.length;

          while (++i < n) {
            object = coordinates[i], listener.point(object[0], object[1], object[2]);
          }
        },
        LineString: function LineString(object, listener) {
          d3_geo_streamLine(object.coordinates, listener, 0);
        },
        MultiLineString: function MultiLineString(object, listener) {
          var coordinates = object.coordinates,
              i = -1,
              n = coordinates.length;

          while (++i < n) {
            d3_geo_streamLine(coordinates[i], listener, 0);
          }
        },
        Polygon: function Polygon(object, listener) {
          d3_geo_streamPolygon(object.coordinates, listener);
        },
        MultiPolygon: function MultiPolygon(object, listener) {
          var coordinates = object.coordinates,
              i = -1,
              n = coordinates.length;

          while (++i < n) {
            d3_geo_streamPolygon(coordinates[i], listener);
          }
        },
        GeometryCollection: function GeometryCollection(object, listener) {
          var geometries = object.geometries,
              i = -1,
              n = geometries.length;

          while (++i < n) {
            d3_geo_streamGeometry(geometries[i], listener);
          }
        }
      };

      function d3_geo_streamLine(coordinates, listener, closed) {
        var i = -1,
            n = coordinates.length - closed,
            coordinate;
        listener.lineStart();

        while (++i < n) {
          coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
        }

        listener.lineEnd();
      }

      function d3_geo_streamPolygon(coordinates, listener) {
        var i = -1,
            n = coordinates.length;
        listener.polygonStart();

        while (++i < n) {
          d3_geo_streamLine(coordinates[i], listener, 1);
        }

        listener.polygonEnd();
      }

      d3.geo.area = function (object) {
        d3_geo_areaSum = 0;
        d3.geo.stream(object, d3_geo_area);
        return d3_geo_areaSum;
      };

      var d3_geo_areaSum,
          d3_geo_areaRingSum = new d3_adder();
      var d3_geo_area = {
        sphere: function sphere() {
          d3_geo_areaSum += 4 * π;
        },
        point: d3_noop,
        lineStart: d3_noop,
        lineEnd: d3_noop,
        polygonStart: function polygonStart() {
          d3_geo_areaRingSum.reset();
          d3_geo_area.lineStart = d3_geo_areaRingStart;
        },
        polygonEnd: function polygonEnd() {
          var area = 2 * d3_geo_areaRingSum;
          d3_geo_areaSum += area < 0 ? 4 * π + area : area;
          d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
        }
      };

      function d3_geo_areaRingStart() {
        var λ00, φ00, λ0, cosφ0, sinφ0;

        d3_geo_area.point = function (λ, φ) {
          d3_geo_area.point = nextPoint;
          λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);
        };

        function nextPoint(λ, φ) {
          λ *= d3_radians;
          φ = φ * d3_radians / 2 + π / 4;
          var dλ = λ - λ0,
              sdλ = dλ >= 0 ? 1 : -1,
              adλ = sdλ * dλ,
              cosφ = Math.cos(φ),
              sinφ = Math.sin(φ),
              k = sinφ0 * sinφ,
              u = cosφ0 * cosφ + k * Math.cos(adλ),
              v = k * sdλ * Math.sin(adλ);
          d3_geo_areaRingSum.add(Math.atan2(v, u));
          λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
        }

        d3_geo_area.lineEnd = function () {
          nextPoint(λ00, φ00);
        };
      }

      function d3_geo_cartesian(spherical) {
        var λ = spherical[0],
            φ = spherical[1],
            cosφ = Math.cos(φ);
        return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];
      }

      function d3_geo_cartesianDot(a, b) {
        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
      }

      function d3_geo_cartesianCross(a, b) {
        return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
      }

      function d3_geo_cartesianAdd(a, b) {
        a[0] += b[0];
        a[1] += b[1];
        a[2] += b[2];
      }

      function d3_geo_cartesianScale(vector, k) {
        return [vector[0] * k, vector[1] * k, vector[2] * k];
      }

      function d3_geo_cartesianNormalize(d) {
        var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
        d[0] /= l;
        d[1] /= l;
        d[2] /= l;
      }

      function d3_geo_spherical(cartesian) {
        return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];
      }

      function d3_geo_sphericalEqual(a, b) {
        return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
      }

      d3.geo.bounds = function () {
        var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
        var bound = {
          point: point,
          lineStart: lineStart,
          lineEnd: lineEnd,
          polygonStart: function polygonStart() {
            bound.point = ringPoint;
            bound.lineStart = ringStart;
            bound.lineEnd = ringEnd;
            dλSum = 0;
            d3_geo_area.polygonStart();
          },
          polygonEnd: function polygonEnd() {
            d3_geo_area.polygonEnd();
            bound.point = point;
            bound.lineStart = lineStart;
            bound.lineEnd = lineEnd;
            if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;
            range[0] = λ0, range[1] = λ1;
          }
        };

        function point(λ, φ) {
          ranges.push(range = [λ0 = λ, λ1 = λ]);
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }

        function linePoint(λ, φ) {
          var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);

          if (p0) {
            var normal = d3_geo_cartesianCross(p0, p),
                equatorial = [normal[1], -normal[0], 0],
                inflection = d3_geo_cartesianCross(equatorial, normal);
            d3_geo_cartesianNormalize(inflection);
            inflection = d3_geo_spherical(inflection);
            var dλ = λ - λ_,
                s = dλ > 0 ? 1 : -1,
                λi = inflection[0] * d3_degrees * s,
                antimeridian = abs(dλ) > 180;

            if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
              var φi = inflection[1] * d3_degrees;
              if (φi > φ1) φ1 = φi;
            } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
              var φi = -inflection[1] * d3_degrees;
              if (φi < φ0) φ0 = φi;
            } else {
              if (φ < φ0) φ0 = φ;
              if (φ > φ1) φ1 = φ;
            }

            if (antimeridian) {
              if (λ < λ_) {
                if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
              } else {
                if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
              }
            } else {
              if (λ1 >= λ0) {
                if (λ < λ0) λ0 = λ;
                if (λ > λ1) λ1 = λ;
              } else {
                if (λ > λ_) {
                  if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
                } else {
                  if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
                }
              }
            }
          } else {
            point(λ, φ);
          }

          p0 = p, λ_ = λ;
        }

        function lineStart() {
          bound.point = linePoint;
        }

        function lineEnd() {
          range[0] = λ0, range[1] = λ1;
          bound.point = point;
          p0 = null;
        }

        function ringPoint(λ, φ) {
          if (p0) {
            var dλ = λ - λ_;
            dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
          } else λ__ = λ, φ__ = φ;

          d3_geo_area.point(λ, φ);
          linePoint(λ, φ);
        }

        function ringStart() {
          d3_geo_area.lineStart();
        }

        function ringEnd() {
          ringPoint(λ__, φ__);
          d3_geo_area.lineEnd();
          if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
          range[0] = λ0, range[1] = λ1;
          p0 = null;
        }

        function angle(λ0, λ1) {
          return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
        }

        function compareRanges(a, b) {
          return a[0] - b[0];
        }

        function withinRange(x, range) {
          return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
        }

        return function (feature) {
          φ1 = λ1 = -(λ0 = φ0 = Infinity);
          ranges = [];
          d3.geo.stream(feature, bound);
          var n = ranges.length;

          if (n) {
            ranges.sort(compareRanges);

            for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {
              b = ranges[i];

              if (withinRange(b[0], a) || withinRange(b[1], a)) {
                if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
                if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
              } else {
                merged.push(a = b);
              }
            }

            var best = -Infinity,
                dλ;

            for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
              b = merged[i];
              if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
            }
          }

          ranges = range = null;
          return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];
        };
      }();

      d3.geo.centroid = function (object) {
        d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
        d3.geo.stream(object, d3_geo_centroid);
        var x = d3_geo_centroidX2,
            y = d3_geo_centroidY2,
            z = d3_geo_centroidZ2,
            m = x * x + y * y + z * z;

        if (m < ε2) {
          x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
          if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
          m = x * x + y * y + z * z;
          if (m < ε2) return [NaN, NaN];
        }

        return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];
      };

      var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
      var d3_geo_centroid = {
        sphere: d3_noop,
        point: d3_geo_centroidPoint,
        lineStart: d3_geo_centroidLineStart,
        lineEnd: d3_geo_centroidLineEnd,
        polygonStart: function polygonStart() {
          d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
        },
        polygonEnd: function polygonEnd() {
          d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
        }
      };

      function d3_geo_centroidPoint(λ, φ) {
        λ *= d3_radians;
        var cosφ = Math.cos(φ *= d3_radians);
        d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
      }

      function d3_geo_centroidPointXYZ(x, y, z) {
        ++d3_geo_centroidW0;
        d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
        d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
        d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
      }

      function d3_geo_centroidLineStart() {
        var x0, y0, z0;

        d3_geo_centroid.point = function (λ, φ) {
          λ *= d3_radians;
          var cosφ = Math.cos(φ *= d3_radians);
          x0 = cosφ * Math.cos(λ);
          y0 = cosφ * Math.sin(λ);
          z0 = Math.sin(φ);
          d3_geo_centroid.point = nextPoint;
          d3_geo_centroidPointXYZ(x0, y0, z0);
        };

        function nextPoint(λ, φ) {
          λ *= d3_radians;
          var cosφ = Math.cos(φ *= d3_radians),
              x = cosφ * Math.cos(λ),
              y = cosφ * Math.sin(λ),
              z = Math.sin(φ),
              w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
          d3_geo_centroidW1 += w;
          d3_geo_centroidX1 += w * (x0 + (x0 = x));
          d3_geo_centroidY1 += w * (y0 + (y0 = y));
          d3_geo_centroidZ1 += w * (z0 + (z0 = z));
          d3_geo_centroidPointXYZ(x0, y0, z0);
        }
      }

      function d3_geo_centroidLineEnd() {
        d3_geo_centroid.point = d3_geo_centroidPoint;
      }

      function d3_geo_centroidRingStart() {
        var λ00, φ00, x0, y0, z0;

        d3_geo_centroid.point = function (λ, φ) {
          λ00 = λ, φ00 = φ;
          d3_geo_centroid.point = nextPoint;
          λ *= d3_radians;
          var cosφ = Math.cos(φ *= d3_radians);
          x0 = cosφ * Math.cos(λ);
          y0 = cosφ * Math.sin(λ);
          z0 = Math.sin(φ);
          d3_geo_centroidPointXYZ(x0, y0, z0);
        };

        d3_geo_centroid.lineEnd = function () {
          nextPoint(λ00, φ00);
          d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
          d3_geo_centroid.point = d3_geo_centroidPoint;
        };

        function nextPoint(λ, φ) {
          λ *= d3_radians;
          var cosφ = Math.cos(φ *= d3_radians),
              x = cosφ * Math.cos(λ),
              y = cosφ * Math.sin(λ),
              z = Math.sin(φ),
              cx = y0 * z - z0 * y,
              cy = z0 * x - x0 * z,
              cz = x0 * y - y0 * x,
              m = Math.sqrt(cx * cx + cy * cy + cz * cz),
              u = x0 * x + y0 * y + z0 * z,
              v = m && -d3_acos(u) / m,
              w = Math.atan2(m, u);
          d3_geo_centroidX2 += v * cx;
          d3_geo_centroidY2 += v * cy;
          d3_geo_centroidZ2 += v * cz;
          d3_geo_centroidW1 += w;
          d3_geo_centroidX1 += w * (x0 + (x0 = x));
          d3_geo_centroidY1 += w * (y0 + (y0 = y));
          d3_geo_centroidZ1 += w * (z0 + (z0 = z));
          d3_geo_centroidPointXYZ(x0, y0, z0);
        }
      }

      function d3_geo_compose(a, b) {
        function compose(x, y) {
          return x = a(x, y), b(x[0], x[1]);
        }

        if (a.invert && b.invert) compose.invert = function (x, y) {
          return x = b.invert(x, y), x && a.invert(x[0], x[1]);
        };
        return compose;
      }

      function d3_true() {
        return true;
      }

      function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
        var subject = [],
            clip = [];
        segments.forEach(function (segment) {
          if ((n = segment.length - 1) <= 0) return;
          var n,
              p0 = segment[0],
              p1 = segment[n];

          if (d3_geo_sphericalEqual(p0, p1)) {
            listener.lineStart();

            for (var i = 0; i < n; ++i) {
              listener.point((p0 = segment[i])[0], p0[1]);
            }

            listener.lineEnd();
            return;
          }

          var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),
              b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
          a.o = b;
          subject.push(a);
          clip.push(b);
          a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
          b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
          a.o = b;
          subject.push(a);
          clip.push(b);
        });
        clip.sort(compare);
        d3_geo_clipPolygonLinkCircular(subject);
        d3_geo_clipPolygonLinkCircular(clip);
        if (!subject.length) return;

        for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
          clip[i].e = entry = !entry;
        }

        var start = subject[0],
            points,
            point;

        while (1) {
          var current = start,
              isSubject = true;

          while (current.v) {
            if ((current = current.n) === start) return;
          }

          points = current.z;
          listener.lineStart();

          do {
            current.v = current.o.v = true;

            if (current.e) {
              if (isSubject) {
                for (var i = 0, n = points.length; i < n; ++i) {
                  listener.point((point = points[i])[0], point[1]);
                }
              } else {
                interpolate(current.x, current.n.x, 1, listener);
              }

              current = current.n;
            } else {
              if (isSubject) {
                points = current.p.z;

                for (var i = points.length - 1; i >= 0; --i) {
                  listener.point((point = points[i])[0], point[1]);
                }
              } else {
                interpolate(current.x, current.p.x, -1, listener);
              }

              current = current.p;
            }

            current = current.o;
            points = current.z;
            isSubject = !isSubject;
          } while (!current.v);

          listener.lineEnd();
        }
      }

      function d3_geo_clipPolygonLinkCircular(array) {
        if (!(n = array.length)) return;
        var n,
            i = 0,
            a = array[0],
            b;

        while (++i < n) {
          a.n = b = array[i];
          b.p = a;
          a = b;
        }

        a.n = b = array[0];
        b.p = a;
      }

      function d3_geo_clipPolygonIntersection(point, points, other, entry) {
        this.x = point;
        this.z = points;
        this.o = other;
        this.e = entry;
        this.v = false;
        this.n = this.p = null;
      }

      function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
        return function (rotate, listener) {
          var line = clipLine(listener),
              rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
          var clip = {
            point: point,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: function polygonStart() {
              clip.point = pointRing;
              clip.lineStart = ringStart;
              clip.lineEnd = ringEnd;
              segments = [];
              polygon = [];
            },
            polygonEnd: function polygonEnd() {
              clip.point = point;
              clip.lineStart = lineStart;
              clip.lineEnd = lineEnd;
              segments = d3.merge(segments);
              var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);

              if (segments.length) {
                if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
                d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
              } else if (clipStartInside) {
                if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
                listener.lineStart();
                interpolate(null, null, 1, listener);
                listener.lineEnd();
              }

              if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
              segments = polygon = null;
            },
            sphere: function sphere() {
              listener.polygonStart();
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
              listener.polygonEnd();
            }
          };

          function point(λ, φ) {
            var point = rotate(λ, φ);
            if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
          }

          function pointLine(λ, φ) {
            var point = rotate(λ, φ);
            line.point(point[0], point[1]);
          }

          function lineStart() {
            clip.point = pointLine;
            line.lineStart();
          }

          function lineEnd() {
            clip.point = point;
            line.lineEnd();
          }

          var segments;
          var buffer = d3_geo_clipBufferListener(),
              ringListener = clipLine(buffer),
              polygonStarted = false,
              polygon,
              ring;

          function pointRing(λ, φ) {
            ring.push([λ, φ]);
            var point = rotate(λ, φ);
            ringListener.point(point[0], point[1]);
          }

          function ringStart() {
            ringListener.lineStart();
            ring = [];
          }

          function ringEnd() {
            pointRing(ring[0][0], ring[0][1]);
            ringListener.lineEnd();
            var clean = ringListener.clean(),
                ringSegments = buffer.buffer(),
                segment,
                n = ringSegments.length;
            ring.pop();
            polygon.push(ring);
            ring = null;
            if (!n) return;

            if (clean & 1) {
              segment = ringSegments[0];
              var n = segment.length - 1,
                  i = -1,
                  point;

              if (n > 0) {
                if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
                listener.lineStart();

                while (++i < n) {
                  listener.point((point = segment[i])[0], point[1]);
                }

                listener.lineEnd();
              }

              return;
            }

            if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
            segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
          }

          return clip;
        };
      }

      function d3_geo_clipSegmentLength1(segment) {
        return segment.length > 1;
      }

      function d3_geo_clipBufferListener() {
        var lines = [],
            line;
        return {
          lineStart: function lineStart() {
            lines.push(line = []);
          },
          point: function point(λ, φ) {
            line.push([λ, φ]);
          },
          lineEnd: d3_noop,
          buffer: function buffer() {
            var buffer = lines;
            lines = [];
            line = null;
            return buffer;
          },
          rejoin: function rejoin() {
            if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
          }
        };
      }

      function d3_geo_clipSort(a, b) {
        return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
      }

      var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);

      function d3_geo_clipAntimeridianLine(listener) {
        var λ0 = NaN,
            φ0 = NaN,
            sλ0 = NaN,
            _clean;

        return {
          lineStart: function lineStart() {
            listener.lineStart();
            _clean = 1;
          },
          point: function point(λ1, φ1) {
            var sλ1 = λ1 > 0 ? π : -π,
                dλ = abs(λ1 - λ0);

            if (abs(dλ - π) < ε) {
              listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
              listener.point(sλ0, φ0);
              listener.lineEnd();
              listener.lineStart();
              listener.point(sλ1, φ0);
              listener.point(λ1, φ0);
              _clean = 0;
            } else if (sλ0 !== sλ1 && dλ >= π) {
              if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
              if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
              φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
              listener.point(sλ0, φ0);
              listener.lineEnd();
              listener.lineStart();
              listener.point(sλ1, φ0);
              _clean = 0;
            }

            listener.point(λ0 = λ1, φ0 = φ1);
            sλ0 = sλ1;
          },
          lineEnd: function lineEnd() {
            listener.lineEnd();
            λ0 = φ0 = NaN;
          },
          clean: function clean() {
            return 2 - _clean;
          }
        };
      }

      function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
        var cosφ0,
            cosφ1,
            sinλ0_λ1 = Math.sin(λ0 - λ1);
        return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
      }

      function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
        var φ;

        if (from == null) {
          φ = direction * halfπ;
          listener.point(-π, φ);
          listener.point(0, φ);
          listener.point(π, φ);
          listener.point(π, 0);
          listener.point(π, -φ);
          listener.point(0, -φ);
          listener.point(-π, -φ);
          listener.point(-π, 0);
          listener.point(-π, φ);
        } else if (abs(from[0] - to[0]) > ε) {
          var s = from[0] < to[0] ? π : -π;
          φ = direction * s / 2;
          listener.point(-s, φ);
          listener.point(0, φ);
          listener.point(s, φ);
        } else {
          listener.point(to[0], to[1]);
        }
      }

      function d3_geo_pointInPolygon(point, polygon) {
        var meridian = point[0],
            parallel = point[1],
            meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],
            polarAngle = 0,
            winding = 0;
        d3_geo_areaRingSum.reset();

        for (var i = 0, n = polygon.length; i < n; ++i) {
          var ring = polygon[i],
              m = ring.length;
          if (!m) continue;
          var point0 = ring[0],
              λ0 = point0[0],
              φ0 = point0[1] / 2 + π / 4,
              sinφ0 = Math.sin(φ0),
              cosφ0 = Math.cos(φ0),
              j = 1;

          while (true) {
            if (j === m) j = 0;
            point = ring[j];
            var λ = point[0],
                φ = point[1] / 2 + π / 4,
                sinφ = Math.sin(φ),
                cosφ = Math.cos(φ),
                dλ = λ - λ0,
                sdλ = dλ >= 0 ? 1 : -1,
                adλ = sdλ * dλ,
                antimeridian = adλ > π,
                k = sinφ0 * sinφ;
            d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
            polarAngle += antimeridian ? dλ + sdλ * τ : dλ;

            if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
              var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
              d3_geo_cartesianNormalize(arc);
              var intersection = d3_geo_cartesianCross(meridianNormal, arc);
              d3_geo_cartesianNormalize(intersection);
              var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);

              if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
                winding += antimeridian ^ dλ >= 0 ? 1 : -1;
              }
            }

            if (!j++) break;
            λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
          }
        }

        return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;
      }

      function d3_geo_clipCircle(radius) {
        var cr = Math.cos(radius),
            smallRadius = cr > 0,
            notHemisphere = abs(cr) > ε,
            interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
        return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);

        function visible(λ, φ) {
          return Math.cos(λ) * Math.cos(φ) > cr;
        }

        function clipLine(listener) {
          var point0, c0, v0, v00, _clean2;

          return {
            lineStart: function lineStart() {
              v00 = v0 = false;
              _clean2 = 1;
            },
            point: function point(λ, φ) {
              var point1 = [λ, φ],
                  point2,
                  v = visible(λ, φ),
                  c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
              if (!point0 && (v00 = v0 = v)) listener.lineStart();

              if (v !== v0) {
                point2 = intersect(point0, point1);

                if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
                  point1[0] += ε;
                  point1[1] += ε;
                  v = visible(point1[0], point1[1]);
                }
              }

              if (v !== v0) {
                _clean2 = 0;

                if (v) {
                  listener.lineStart();
                  point2 = intersect(point1, point0);
                  listener.point(point2[0], point2[1]);
                } else {
                  point2 = intersect(point0, point1);
                  listener.point(point2[0], point2[1]);
                  listener.lineEnd();
                }

                point0 = point2;
              } else if (notHemisphere && point0 && smallRadius ^ v) {
                var t;

                if (!(c & c0) && (t = intersect(point1, point0, true))) {
                  _clean2 = 0;

                  if (smallRadius) {
                    listener.lineStart();
                    listener.point(t[0][0], t[0][1]);
                    listener.point(t[1][0], t[1][1]);
                    listener.lineEnd();
                  } else {
                    listener.point(t[1][0], t[1][1]);
                    listener.lineEnd();
                    listener.lineStart();
                    listener.point(t[0][0], t[0][1]);
                  }
                }
              }

              if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
                listener.point(point1[0], point1[1]);
              }

              point0 = point1, v0 = v, c0 = c;
            },
            lineEnd: function lineEnd() {
              if (v0) listener.lineEnd();
              point0 = null;
            },
            clean: function clean() {
              return _clean2 | (v00 && v0) << 1;
            }
          };
        }

        function intersect(a, b, two) {
          var pa = d3_geo_cartesian(a),
              pb = d3_geo_cartesian(b);
          var n1 = [1, 0, 0],
              n2 = d3_geo_cartesianCross(pa, pb),
              n2n2 = d3_geo_cartesianDot(n2, n2),
              n1n2 = n2[0],
              determinant = n2n2 - n1n2 * n1n2;
          if (!determinant) return !two && a;
          var c1 = cr * n2n2 / determinant,
              c2 = -cr * n1n2 / determinant,
              n1xn2 = d3_geo_cartesianCross(n1, n2),
              A = d3_geo_cartesianScale(n1, c1),
              B = d3_geo_cartesianScale(n2, c2);
          d3_geo_cartesianAdd(A, B);
          var u = n1xn2,
              w = d3_geo_cartesianDot(A, u),
              uu = d3_geo_cartesianDot(u, u),
              t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
          if (t2 < 0) return;
          var t = Math.sqrt(t2),
              q = d3_geo_cartesianScale(u, (-w - t) / uu);
          d3_geo_cartesianAdd(q, A);
          q = d3_geo_spherical(q);
          if (!two) return q;
          var λ0 = a[0],
              λ1 = b[0],
              φ0 = a[1],
              φ1 = b[1],
              z;
          if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
          var δλ = λ1 - λ0,
              polar = abs(δλ - π) < ε,
              meridian = polar || δλ < ε;
          if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;

          if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
            var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
            d3_geo_cartesianAdd(q1, A);
            return [q, d3_geo_spherical(q1)];
          }
        }

        function code(λ, φ) {
          var r = smallRadius ? radius : π - radius,
              code = 0;
          if (λ < -r) code |= 1;else if (λ > r) code |= 2;
          if (φ < -r) code |= 4;else if (φ > r) code |= 8;
          return code;
        }
      }

      function d3_geom_clipLine(x0, y0, x1, y1) {
        return function (line) {
          var a = line.a,
              b = line.b,
              ax = a.x,
              ay = a.y,
              bx = b.x,
              by = b.y,
              t0 = 0,
              t1 = 1,
              dx = bx - ax,
              dy = by - ay,
              r;
          r = x0 - ax;
          if (!dx && r > 0) return;
          r /= dx;

          if (dx < 0) {
            if (r < t0) return;
            if (r < t1) t1 = r;
          } else if (dx > 0) {
            if (r > t1) return;
            if (r > t0) t0 = r;
          }

          r = x1 - ax;
          if (!dx && r < 0) return;
          r /= dx;

          if (dx < 0) {
            if (r > t1) return;
            if (r > t0) t0 = r;
          } else if (dx > 0) {
            if (r < t0) return;
            if (r < t1) t1 = r;
          }

          r = y0 - ay;
          if (!dy && r > 0) return;
          r /= dy;

          if (dy < 0) {
            if (r < t0) return;
            if (r < t1) t1 = r;
          } else if (dy > 0) {
            if (r > t1) return;
            if (r > t0) t0 = r;
          }

          r = y1 - ay;
          if (!dy && r < 0) return;
          r /= dy;

          if (dy < 0) {
            if (r > t1) return;
            if (r > t0) t0 = r;
          } else if (dy > 0) {
            if (r < t0) return;
            if (r < t1) t1 = r;
          }

          if (t0 > 0) line.a = {
            x: ax + t0 * dx,
            y: ay + t0 * dy
          };
          if (t1 < 1) line.b = {
            x: ax + t1 * dx,
            y: ay + t1 * dy
          };
          return line;
        };
      }

      var d3_geo_clipExtentMAX = 1e9;

      d3.geo.clipExtent = function () {
        var x0,
            y0,
            x1,
            y1,
            _stream,
            clip,
            clipExtent = {
          stream: function stream(output) {
            if (_stream) _stream.valid = false;
            _stream = clip(output);
            _stream.valid = true;
            return _stream;
          },
          extent: function extent(_) {
            if (!arguments.length) return [[x0, y0], [x1, y1]];
            clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
            if (_stream) _stream.valid = false, _stream = null;
            return clipExtent;
          }
        };

        return clipExtent.extent([[0, 0], [960, 500]]);
      };

      function d3_geo_clipExtent(x0, y0, x1, y1) {
        return function (listener) {
          var listener_ = listener,
              bufferListener = d3_geo_clipBufferListener(),
              clipLine = d3_geom_clipLine(x0, y0, x1, y1),
              segments,
              polygon,
              ring;
          var clip = {
            point: point,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: function polygonStart() {
              listener = bufferListener;
              segments = [];
              polygon = [];
              clean = true;
            },
            polygonEnd: function polygonEnd() {
              listener = listener_;
              segments = d3.merge(segments);
              var clipStartInside = insidePolygon([x0, y1]),
                  inside = clean && clipStartInside,
                  visible = segments.length;

              if (inside || visible) {
                listener.polygonStart();

                if (inside) {
                  listener.lineStart();
                  interpolate(null, null, 1, listener);
                  listener.lineEnd();
                }

                if (visible) {
                  d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
                }

                listener.polygonEnd();
              }

              segments = polygon = ring = null;
            }
          };

          function insidePolygon(p) {
            var wn = 0,
                n = polygon.length,
                y = p[1];

            for (var i = 0; i < n; ++i) {
              for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
                b = v[j];

                if (a[1] <= y) {
                  if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
                } else {
                  if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
                }

                a = b;
              }
            }

            return wn !== 0;
          }

          function interpolate(from, to, direction, listener) {
            var a = 0,
                a1 = 0;

            if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
              do {
                listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
              } while ((a = (a + direction + 4) % 4) !== a1);
            } else {
              listener.point(to[0], to[1]);
            }
          }

          function pointVisible(x, y) {
            return x0 <= x && x <= x1 && y0 <= y && y <= y1;
          }

          function point(x, y) {
            if (pointVisible(x, y)) listener.point(x, y);
          }

          var x__, y__, v__, x_, y_, v_, first, clean;

          function lineStart() {
            clip.point = linePoint;
            if (polygon) polygon.push(ring = []);
            first = true;
            v_ = false;
            x_ = y_ = NaN;
          }

          function lineEnd() {
            if (segments) {
              linePoint(x__, y__);
              if (v__ && v_) bufferListener.rejoin();
              segments.push(bufferListener.buffer());
            }

            clip.point = point;
            if (v_) listener.lineEnd();
          }

          function linePoint(x, y) {
            x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
            y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
            var v = pointVisible(x, y);
            if (polygon) ring.push([x, y]);

            if (first) {
              x__ = x, y__ = y, v__ = v;
              first = false;

              if (v) {
                listener.lineStart();
                listener.point(x, y);
              }
            } else {
              if (v && v_) listener.point(x, y);else {
                var l = {
                  a: {
                    x: x_,
                    y: y_
                  },
                  b: {
                    x: x,
                    y: y
                  }
                };

                if (clipLine(l)) {
                  if (!v_) {
                    listener.lineStart();
                    listener.point(l.a.x, l.a.y);
                  }

                  listener.point(l.b.x, l.b.y);
                  if (!v) listener.lineEnd();
                  clean = false;
                } else if (v) {
                  listener.lineStart();
                  listener.point(x, y);
                  clean = false;
                }
              }
            }

            x_ = x, y_ = y, v_ = v;
          }

          return clip;
        };

        function corner(p, direction) {
          return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
        }

        function compare(a, b) {
          return comparePoints(a.x, b.x);
        }

        function comparePoints(a, b) {
          var ca = corner(a, 1),
              cb = corner(b, 1);
          return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
        }
      }

      function d3_geo_conic(projectAt) {
        var φ0 = 0,
            φ1 = π / 3,
            m = d3_geo_projectionMutator(projectAt),
            p = m(φ0, φ1);

        p.parallels = function (_) {
          if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];
          return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
        };

        return p;
      }

      function d3_geo_conicEqualArea(φ0, φ1) {
        var sinφ0 = Math.sin(φ0),
            n = (sinφ0 + Math.sin(φ1)) / 2,
            C = 1 + sinφ0 * (2 * n - sinφ0),
            ρ0 = Math.sqrt(C) / n;

        function forward(λ, φ) {
          var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
          return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];
        }

        forward.invert = function (x, y) {
          var ρ0_y = ρ0 - y;
          return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];
        };

        return forward;
      }

      (d3.geo.conicEqualArea = function () {
        return d3_geo_conic(d3_geo_conicEqualArea);
      }).raw = d3_geo_conicEqualArea;

      d3.geo.albers = function () {
        return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);
      };

      d3.geo.albersUsa = function () {
        var lower48 = d3.geo.albers();
        var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);
        var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);

        var _point,
            pointStream = {
          point: function point(x, y) {
            _point = [x, y];
          }
        },
            lower48Point,
            alaskaPoint,
            hawaiiPoint;

        function albersUsa(coordinates) {
          var x = coordinates[0],
              y = coordinates[1];
          _point = null;
          (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);
          return _point;
        }

        albersUsa.invert = function (coordinates) {
          var k = lower48.scale(),
              t = lower48.translate(),
              x = (coordinates[0] - t[0]) / k,
              y = (coordinates[1] - t[1]) / k;
          return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
        };

        albersUsa.stream = function (stream) {
          var lower48Stream = lower48.stream(stream),
              alaskaStream = alaska.stream(stream),
              hawaiiStream = hawaii.stream(stream);
          return {
            point: function point(x, y) {
              lower48Stream.point(x, y);
              alaskaStream.point(x, y);
              hawaiiStream.point(x, y);
            },
            sphere: function sphere() {
              lower48Stream.sphere();
              alaskaStream.sphere();
              hawaiiStream.sphere();
            },
            lineStart: function lineStart() {
              lower48Stream.lineStart();
              alaskaStream.lineStart();
              hawaiiStream.lineStart();
            },
            lineEnd: function lineEnd() {
              lower48Stream.lineEnd();
              alaskaStream.lineEnd();
              hawaiiStream.lineEnd();
            },
            polygonStart: function polygonStart() {
              lower48Stream.polygonStart();
              alaskaStream.polygonStart();
              hawaiiStream.polygonStart();
            },
            polygonEnd: function polygonEnd() {
              lower48Stream.polygonEnd();
              alaskaStream.polygonEnd();
              hawaiiStream.polygonEnd();
            }
          };
        };

        albersUsa.precision = function (_) {
          if (!arguments.length) return lower48.precision();
          lower48.precision(_);
          alaska.precision(_);
          hawaii.precision(_);
          return albersUsa;
        };

        albersUsa.scale = function (_) {
          if (!arguments.length) return lower48.scale();
          lower48.scale(_);
          alaska.scale(_ * .35);
          hawaii.scale(_);
          return albersUsa.translate(lower48.translate());
        };

        albersUsa.translate = function (_) {
          if (!arguments.length) return lower48.translate();
          var k = lower48.scale(),
              x = +_[0],
              y = +_[1];
          lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;
          alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;
          hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;
          return albersUsa;
        };

        return albersUsa.scale(1070);
      };

      var d3_geo_pathAreaSum,
          d3_geo_pathAreaPolygon,
          d3_geo_pathArea = {
        point: d3_noop,
        lineStart: d3_noop,
        lineEnd: d3_noop,
        polygonStart: function polygonStart() {
          d3_geo_pathAreaPolygon = 0;
          d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
        },
        polygonEnd: function polygonEnd() {
          d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
          d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
        }
      };

      function d3_geo_pathAreaRingStart() {
        var x00, y00, x0, y0;

        d3_geo_pathArea.point = function (x, y) {
          d3_geo_pathArea.point = nextPoint;
          x00 = x0 = x, y00 = y0 = y;
        };

        function nextPoint(x, y) {
          d3_geo_pathAreaPolygon += y0 * x - x0 * y;
          x0 = x, y0 = y;
        }

        d3_geo_pathArea.lineEnd = function () {
          nextPoint(x00, y00);
        };
      }

      var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
      var d3_geo_pathBounds = {
        point: d3_geo_pathBoundsPoint,
        lineStart: d3_noop,
        lineEnd: d3_noop,
        polygonStart: d3_noop,
        polygonEnd: d3_noop
      };

      function d3_geo_pathBoundsPoint(x, y) {
        if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
        if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
        if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
        if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
      }

      function d3_geo_pathBuffer() {
        var pointCircle = d3_geo_pathBufferCircle(4.5),
            buffer = [];
        var stream = {
          point: point,
          lineStart: function lineStart() {
            stream.point = pointLineStart;
          },
          lineEnd: lineEnd,
          polygonStart: function polygonStart() {
            stream.lineEnd = lineEndPolygon;
          },
          polygonEnd: function polygonEnd() {
            stream.lineEnd = lineEnd;
            stream.point = point;
          },
          pointRadius: function pointRadius(_) {
            pointCircle = d3_geo_pathBufferCircle(_);
            return stream;
          },
          result: function result() {
            if (buffer.length) {
              var result = buffer.join("");
              buffer = [];
              return result;
            }
          }
        };

        function point(x, y) {
          buffer.push("M", x, ",", y, pointCircle);
        }

        function pointLineStart(x, y) {
          buffer.push("M", x, ",", y);
          stream.point = pointLine;
        }

        function pointLine(x, y) {
          buffer.push("L", x, ",", y);
        }

        function lineEnd() {
          stream.point = point;
        }

        function lineEndPolygon() {
          buffer.push("Z");
        }

        return stream;
      }

      function d3_geo_pathBufferCircle(radius) {
        return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
      }

      var d3_geo_pathCentroid = {
        point: d3_geo_pathCentroidPoint,
        lineStart: d3_geo_pathCentroidLineStart,
        lineEnd: d3_geo_pathCentroidLineEnd,
        polygonStart: function polygonStart() {
          d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
        },
        polygonEnd: function polygonEnd() {
          d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
          d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
          d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
        }
      };

      function d3_geo_pathCentroidPoint(x, y) {
        d3_geo_centroidX0 += x;
        d3_geo_centroidY0 += y;
        ++d3_geo_centroidZ0;
      }

      function d3_geo_pathCentroidLineStart() {
        var x0, y0;

        d3_geo_pathCentroid.point = function (x, y) {
          d3_geo_pathCentroid.point = nextPoint;
          d3_geo_pathCentroidPoint(x0 = x, y0 = y);
        };

        function nextPoint(x, y) {
          var dx = x - x0,
              dy = y - y0,
              z = Math.sqrt(dx * dx + dy * dy);
          d3_geo_centroidX1 += z * (x0 + x) / 2;
          d3_geo_centroidY1 += z * (y0 + y) / 2;
          d3_geo_centroidZ1 += z;
          d3_geo_pathCentroidPoint(x0 = x, y0 = y);
        }
      }

      function d3_geo_pathCentroidLineEnd() {
        d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      }

      function d3_geo_pathCentroidRingStart() {
        var x00, y00, x0, y0;

        d3_geo_pathCentroid.point = function (x, y) {
          d3_geo_pathCentroid.point = nextPoint;
          d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
        };

        function nextPoint(x, y) {
          var dx = x - x0,
              dy = y - y0,
              z = Math.sqrt(dx * dx + dy * dy);
          d3_geo_centroidX1 += z * (x0 + x) / 2;
          d3_geo_centroidY1 += z * (y0 + y) / 2;
          d3_geo_centroidZ1 += z;
          z = y0 * x - x0 * y;
          d3_geo_centroidX2 += z * (x0 + x);
          d3_geo_centroidY2 += z * (y0 + y);
          d3_geo_centroidZ2 += z * 3;
          d3_geo_pathCentroidPoint(x0 = x, y0 = y);
        }

        d3_geo_pathCentroid.lineEnd = function () {
          nextPoint(x00, y00);
        };
      }

      function d3_geo_pathContext(context) {
        var _pointRadius = 4.5;
        var stream = {
          point: point,
          lineStart: function lineStart() {
            stream.point = pointLineStart;
          },
          lineEnd: lineEnd,
          polygonStart: function polygonStart() {
            stream.lineEnd = lineEndPolygon;
          },
          polygonEnd: function polygonEnd() {
            stream.lineEnd = lineEnd;
            stream.point = point;
          },
          pointRadius: function pointRadius(_) {
            _pointRadius = _;
            return stream;
          },
          result: d3_noop
        };

        function point(x, y) {
          context.moveTo(x + _pointRadius, y);
          context.arc(x, y, _pointRadius, 0, τ);
        }

        function pointLineStart(x, y) {
          context.moveTo(x, y);
          stream.point = pointLine;
        }

        function pointLine(x, y) {
          context.lineTo(x, y);
        }

        function lineEnd() {
          stream.point = point;
        }

        function lineEndPolygon() {
          context.closePath();
        }

        return stream;
      }

      function d3_geo_resample(project) {
        var δ2 = .5,
            cosMinDistance = Math.cos(30 * d3_radians),
            maxDepth = 16;

        function resample(stream) {
          return (maxDepth ? resampleRecursive : resampleNone)(stream);
        }

        function resampleNone(stream) {
          return d3_geo_transformPoint(stream, function (x, y) {
            x = project(x, y);
            stream.point(x[0], x[1]);
          });
        }

        function resampleRecursive(stream) {
          var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
          var resample = {
            point: point,
            lineStart: lineStart,
            lineEnd: lineEnd,
            polygonStart: function polygonStart() {
              stream.polygonStart();
              resample.lineStart = ringStart;
            },
            polygonEnd: function polygonEnd() {
              stream.polygonEnd();
              resample.lineStart = lineStart;
            }
          };

          function point(x, y) {
            x = project(x, y);
            stream.point(x[0], x[1]);
          }

          function lineStart() {
            x0 = NaN;
            resample.point = linePoint;
            stream.lineStart();
          }

          function linePoint(λ, φ) {
            var c = d3_geo_cartesian([λ, φ]),
                p = project(λ, φ);
            resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
            stream.point(x0, y0);
          }

          function lineEnd() {
            resample.point = point;
            stream.lineEnd();
          }

          function ringStart() {
            lineStart();
            resample.point = ringPoint;
            resample.lineEnd = ringEnd;
          }

          function ringPoint(λ, φ) {
            linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
            resample.point = linePoint;
          }

          function ringEnd() {
            resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
            resample.lineEnd = lineEnd;
            lineEnd();
          }

          return resample;
        }

        function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
          var dx = x1 - x0,
              dy = y1 - y0,
              d2 = dx * dx + dy * dy;

          if (d2 > 4 * δ2 && depth--) {
            var a = a0 + a1,
                b = b0 + b1,
                c = c0 + c1,
                m = Math.sqrt(a * a + b * b + c * c),
                φ2 = Math.asin(c /= m),
                λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),
                p = project(λ2, φ2),
                x2 = p[0],
                y2 = p[1],
                dx2 = x2 - x0,
                dy2 = y2 - y0,
                dz = dy * dx2 - dx * dy2;

            if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
              resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
              stream.point(x2, y2);
              resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
            }
          }
        }

        resample.precision = function (_) {
          if (!arguments.length) return Math.sqrt(δ2);
          maxDepth = (δ2 = _ * _) > 0 && 16;
          return resample;
        };

        return resample;
      }

      d3.geo.path = function () {
        var pointRadius = 4.5,
            projection,
            context,
            projectStream,
            contextStream,
            cacheStream;

        function path(object) {
          if (object) {
            if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
            if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
            d3.geo.stream(object, cacheStream);
          }

          return contextStream.result();
        }

        path.area = function (object) {
          d3_geo_pathAreaSum = 0;
          d3.geo.stream(object, projectStream(d3_geo_pathArea));
          return d3_geo_pathAreaSum;
        };

        path.centroid = function (object) {
          d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
          d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
          return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];
        };

        path.bounds = function (object) {
          d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
          d3.geo.stream(object, projectStream(d3_geo_pathBounds));
          return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];
        };

        path.projection = function (_) {
          if (!arguments.length) return projection;
          projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
          return reset();
        };

        path.context = function (_) {
          if (!arguments.length) return context;
          contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
          if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
          return reset();
        };

        path.pointRadius = function (_) {
          if (!arguments.length) return pointRadius;
          pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
          return path;
        };

        function reset() {
          cacheStream = null;
          return path;
        }

        return path.projection(d3.geo.albersUsa()).context(null);
      };

      function d3_geo_pathProjectStream(project) {
        var resample = d3_geo_resample(function (x, y) {
          return project([x * d3_degrees, y * d3_degrees]);
        });
        return function (stream) {
          return d3_geo_projectionRadians(resample(stream));
        };
      }

      d3.geo.transform = function (methods) {
        return {
          stream: function stream(_stream2) {
            var transform = new d3_geo_transform(_stream2);

            for (var k in methods) {
              transform[k] = methods[k];
            }

            return transform;
          }
        };
      };

      function d3_geo_transform(stream) {
        this.stream = stream;
      }

      d3_geo_transform.prototype = {
        point: function point(x, y) {
          this.stream.point(x, y);
        },
        sphere: function sphere() {
          this.stream.sphere();
        },
        lineStart: function lineStart() {
          this.stream.lineStart();
        },
        lineEnd: function lineEnd() {
          this.stream.lineEnd();
        },
        polygonStart: function polygonStart() {
          this.stream.polygonStart();
        },
        polygonEnd: function polygonEnd() {
          this.stream.polygonEnd();
        }
      };

      function d3_geo_transformPoint(stream, point) {
        return {
          point: point,
          sphere: function sphere() {
            stream.sphere();
          },
          lineStart: function lineStart() {
            stream.lineStart();
          },
          lineEnd: function lineEnd() {
            stream.lineEnd();
          },
          polygonStart: function polygonStart() {
            stream.polygonStart();
          },
          polygonEnd: function polygonEnd() {
            stream.polygonEnd();
          }
        };
      }

      d3.geo.projection = d3_geo_projection;
      d3.geo.projectionMutator = d3_geo_projectionMutator;

      function d3_geo_projection(project) {
        return d3_geo_projectionMutator(function () {
          return project;
        })();
      }

      function d3_geo_projectionMutator(projectAt) {
        var project,
            rotate,
            projectRotate,
            projectResample = d3_geo_resample(function (x, y) {
          x = project(x, y);
          return [x[0] * k + δx, δy - x[1] * k];
        }),
            k = 150,
            x = 480,
            y = 250,
            λ = 0,
            φ = 0,
            δλ = 0,
            δφ = 0,
            δγ = 0,
            δx,
            δy,
            preclip = d3_geo_clipAntimeridian,
            postclip = d3_identity,
            clipAngle = null,
            clipExtent = null,
            stream;

        function projection(point) {
          point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
          return [point[0] * k + δx, δy - point[1] * k];
        }

        function invert(point) {
          point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
          return point && [point[0] * d3_degrees, point[1] * d3_degrees];
        }

        projection.stream = function (output) {
          if (stream) stream.valid = false;
          stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
          stream.valid = true;
          return stream;
        };

        projection.clipAngle = function (_) {
          if (!arguments.length) return clipAngle;
          preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
          return invalidate();
        };

        projection.clipExtent = function (_) {
          if (!arguments.length) return clipExtent;
          clipExtent = _;
          postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
          return invalidate();
        };

        projection.scale = function (_) {
          if (!arguments.length) return k;
          k = +_;
          return reset();
        };

        projection.translate = function (_) {
          if (!arguments.length) return [x, y];
          x = +_[0];
          y = +_[1];
          return reset();
        };

        projection.center = function (_) {
          if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];
          λ = _[0] % 360 * d3_radians;
          φ = _[1] % 360 * d3_radians;
          return reset();
        };

        projection.rotate = function (_) {
          if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];
          δλ = _[0] % 360 * d3_radians;
          δφ = _[1] % 360 * d3_radians;
          δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
          return reset();
        };

        d3.rebind(projection, projectResample, "precision");

        function reset() {
          projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
          var center = project(λ, φ);
          δx = x - center[0] * k;
          δy = y + center[1] * k;
          return invalidate();
        }

        function invalidate() {
          if (stream) stream.valid = false, stream = null;
          return projection;
        }

        return function () {
          project = projectAt.apply(this, arguments);
          projection.invert = project.invert && invert;
          return reset();
        };
      }

      function d3_geo_projectionRadians(stream) {
        return d3_geo_transformPoint(stream, function (x, y) {
          stream.point(x * d3_radians, y * d3_radians);
        });
      }

      function d3_geo_equirectangular(λ, φ) {
        return [λ, φ];
      }

      (d3.geo.equirectangular = function () {
        return d3_geo_projection(d3_geo_equirectangular);
      }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;

      d3.geo.rotation = function (rotate) {
        rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);

        function forward(coordinates) {
          coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
          return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
        }

        forward.invert = function (coordinates) {
          coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
          return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
        };

        return forward;
      };

      function d3_geo_identityRotation(λ, φ) {
        return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];
      }

      d3_geo_identityRotation.invert = d3_geo_equirectangular;

      function d3_geo_rotation(δλ, δφ, δγ) {
        return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
      }

      function d3_geo_forwardRotationλ(δλ) {
        return function (λ, φ) {
          return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];
        };
      }

      function d3_geo_rotationλ(δλ) {
        var rotation = d3_geo_forwardRotationλ(δλ);
        rotation.invert = d3_geo_forwardRotationλ(-δλ);
        return rotation;
      }

      function d3_geo_rotationφγ(δφ, δγ) {
        var cosδφ = Math.cos(δφ),
            sinδφ = Math.sin(δφ),
            cosδγ = Math.cos(δγ),
            sinδγ = Math.sin(δγ);

        function rotation(λ, φ) {
          var cosφ = Math.cos(φ),
              x = Math.cos(λ) * cosφ,
              y = Math.sin(λ) * cosφ,
              z = Math.sin(φ),
              k = z * cosδφ + x * sinδφ;
          return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];
        }

        rotation.invert = function (λ, φ) {
          var cosφ = Math.cos(φ),
              x = Math.cos(λ) * cosφ,
              y = Math.sin(λ) * cosφ,
              z = Math.sin(φ),
              k = z * cosδγ - y * sinδγ;
          return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];
        };

        return rotation;
      }

      d3.geo.circle = function () {
        var origin = [0, 0],
            angle,
            precision = 6,
            interpolate;

        function circle() {
          var center = typeof origin === "function" ? origin.apply(this, arguments) : origin,
              rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,
              ring = [];
          interpolate(null, null, 1, {
            point: function point(x, y) {
              ring.push(x = rotate(x, y));
              x[0] *= d3_degrees, x[1] *= d3_degrees;
            }
          });
          return {
            type: "Polygon",
            coordinates: [ring]
          };
        }

        circle.origin = function (x) {
          if (!arguments.length) return origin;
          origin = x;
          return circle;
        };

        circle.angle = function (x) {
          if (!arguments.length) return angle;
          interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
          return circle;
        };

        circle.precision = function (_) {
          if (!arguments.length) return precision;
          interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
          return circle;
        };

        return circle.angle(90);
      };

      function d3_geo_circleInterpolate(radius, precision) {
        var cr = Math.cos(radius),
            sr = Math.sin(radius);
        return function (from, to, direction, listener) {
          var step = direction * precision;

          if (from != null) {
            from = d3_geo_circleAngle(cr, from);
            to = d3_geo_circleAngle(cr, to);
            if (direction > 0 ? from < to : from > to) from += direction * τ;
          } else {
            from = radius + direction * τ;
            to = radius - .5 * step;
          }

          for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
            listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);
          }
        };
      }

      function d3_geo_circleAngle(cr, point) {
        var a = d3_geo_cartesian(point);
        a[0] -= cr;
        d3_geo_cartesianNormalize(a);
        var angle = d3_acos(-a[1]);
        return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
      }

      d3.geo.distance = function (a, b) {
        var Δλ = (b[0] - a[0]) * d3_radians,
            φ0 = a[1] * d3_radians,
            φ1 = b[1] * d3_radians,
            sinΔλ = Math.sin(Δλ),
            cosΔλ = Math.cos(Δλ),
            sinφ0 = Math.sin(φ0),
            cosφ0 = Math.cos(φ0),
            sinφ1 = Math.sin(φ1),
            cosφ1 = Math.cos(φ1),
            t;
        return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
      };

      d3.geo.graticule = function () {
        var x1,
            x0,
            X1,
            X0,
            y1,
            y0,
            Y1,
            Y0,
            dx = 10,
            dy = dx,
            DX = 90,
            DY = 360,
            x,
            y,
            X,
            Y,
            precision = 2.5;

        function graticule() {
          return {
            type: "MultiLineString",
            coordinates: lines()
          };
        }

        function lines() {
          return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {
            return abs(x % DX) > ε;
          }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {
            return abs(y % DY) > ε;
          }).map(y));
        }

        graticule.lines = function () {
          return lines().map(function (coordinates) {
            return {
              type: "LineString",
              coordinates: coordinates
            };
          });
        };

        graticule.outline = function () {
          return {
            type: "Polygon",
            coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
          };
        };

        graticule.extent = function (_) {
          if (!arguments.length) return graticule.minorExtent();
          return graticule.majorExtent(_).minorExtent(_);
        };

        graticule.majorExtent = function (_) {
          if (!arguments.length) return [[X0, Y0], [X1, Y1]];
          X0 = +_[0][0], X1 = +_[1][0];
          Y0 = +_[0][1], Y1 = +_[1][1];
          if (X0 > X1) _ = X0, X0 = X1, X1 = _;
          if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
          return graticule.precision(precision);
        };

        graticule.minorExtent = function (_) {
          if (!arguments.length) return [[x0, y0], [x1, y1]];
          x0 = +_[0][0], x1 = +_[1][0];
          y0 = +_[0][1], y1 = +_[1][1];
          if (x0 > x1) _ = x0, x0 = x1, x1 = _;
          if (y0 > y1) _ = y0, y0 = y1, y1 = _;
          return graticule.precision(precision);
        };

        graticule.step = function (_) {
          if (!arguments.length) return graticule.minorStep();
          return graticule.majorStep(_).minorStep(_);
        };

        graticule.majorStep = function (_) {
          if (!arguments.length) return [DX, DY];
          DX = +_[0], DY = +_[1];
          return graticule;
        };

        graticule.minorStep = function (_) {
          if (!arguments.length) return [dx, dy];
          dx = +_[0], dy = +_[1];
          return graticule;
        };

        graticule.precision = function (_) {
          if (!arguments.length) return precision;
          precision = +_;
          x = d3_geo_graticuleX(y0, y1, 90);
          y = d3_geo_graticuleY(x0, x1, precision);
          X = d3_geo_graticuleX(Y0, Y1, 90);
          Y = d3_geo_graticuleY(X0, X1, precision);
          return graticule;
        };

        return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);
      };

      function d3_geo_graticuleX(y0, y1, dy) {
        var y = d3.range(y0, y1 - ε, dy).concat(y1);
        return function (x) {
          return y.map(function (y) {
            return [x, y];
          });
        };
      }

      function d3_geo_graticuleY(x0, x1, dx) {
        var x = d3.range(x0, x1 - ε, dx).concat(x1);
        return function (y) {
          return x.map(function (x) {
            return [x, y];
          });
        };
      }

      function d3_source(d) {
        return d.source;
      }

      function d3_target(d) {
        return d.target;
      }

      d3.geo.greatArc = function () {
        var source = d3_source,
            source_,
            target = d3_target,
            target_;

        function greatArc() {
          return {
            type: "LineString",
            coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]
          };
        }

        greatArc.distance = function () {
          return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
        };

        greatArc.source = function (_) {
          if (!arguments.length) return source;
          source = _, source_ = typeof _ === "function" ? null : _;
          return greatArc;
        };

        greatArc.target = function (_) {
          if (!arguments.length) return target;
          target = _, target_ = typeof _ === "function" ? null : _;
          return greatArc;
        };

        greatArc.precision = function () {
          return arguments.length ? greatArc : 0;
        };

        return greatArc;
      };

      d3.geo.interpolate = function (source, target) {
        return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
      };

      function d3_geo_interpolate(x0, y0, x1, y1) {
        var cy0 = Math.cos(y0),
            sy0 = Math.sin(y0),
            cy1 = Math.cos(y1),
            sy1 = Math.sin(y1),
            kx0 = cy0 * Math.cos(x0),
            ky0 = cy0 * Math.sin(x0),
            kx1 = cy1 * Math.cos(x1),
            ky1 = cy1 * Math.sin(x1),
            d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),
            k = 1 / Math.sin(d);
        var interpolate = d ? function (t) {
          var B = Math.sin(t *= d) * k,
              A = Math.sin(d - t) * k,
              x = A * kx0 + B * kx1,
              y = A * ky0 + B * ky1,
              z = A * sy0 + B * sy1;
          return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];
        } : function () {
          return [x0 * d3_degrees, y0 * d3_degrees];
        };
        interpolate.distance = d;
        return interpolate;
      }

      d3.geo.length = function (object) {
        d3_geo_lengthSum = 0;
        d3.geo.stream(object, d3_geo_length);
        return d3_geo_lengthSum;
      };

      var d3_geo_lengthSum;
      var d3_geo_length = {
        sphere: d3_noop,
        point: d3_noop,
        lineStart: d3_geo_lengthLineStart,
        lineEnd: d3_noop,
        polygonStart: d3_noop,
        polygonEnd: d3_noop
      };

      function d3_geo_lengthLineStart() {
        var λ0, sinφ0, cosφ0;

        d3_geo_length.point = function (λ, φ) {
          λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
          d3_geo_length.point = nextPoint;
        };

        d3_geo_length.lineEnd = function () {
          d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
        };

        function nextPoint(λ, φ) {
          var sinφ = Math.sin(φ *= d3_radians),
              cosφ = Math.cos(φ),
              t = abs((λ *= d3_radians) - λ0),
              cosΔλ = Math.cos(t);
          d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
          λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
        }
      }

      function d3_geo_azimuthal(scale, angle) {
        function azimuthal(λ, φ) {
          var cosλ = Math.cos(λ),
              cosφ = Math.cos(φ),
              k = scale(cosλ * cosφ);
          return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];
        }

        azimuthal.invert = function (x, y) {
          var ρ = Math.sqrt(x * x + y * y),
              c = angle(ρ),
              sinc = Math.sin(c),
              cosc = Math.cos(c);
          return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];
        };

        return azimuthal;
      }

      var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {
        return Math.sqrt(2 / (1 + cosλcosφ));
      }, function (ρ) {
        return 2 * Math.asin(ρ / 2);
      });
      (d3.geo.azimuthalEqualArea = function () {
        return d3_geo_projection(d3_geo_azimuthalEqualArea);
      }).raw = d3_geo_azimuthalEqualArea;
      var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {
        var c = Math.acos(cosλcosφ);
        return c && c / Math.sin(c);
      }, d3_identity);
      (d3.geo.azimuthalEquidistant = function () {
        return d3_geo_projection(d3_geo_azimuthalEquidistant);
      }).raw = d3_geo_azimuthalEquidistant;

      function d3_geo_conicConformal(φ0, φ1) {
        var cosφ0 = Math.cos(φ0),
            t = function t(φ) {
          return Math.tan(π / 4 + φ / 2);
        },
            n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),
            F = cosφ0 * Math.pow(t(φ0), n) / n;

        if (!n) return d3_geo_mercator;

        function forward(λ, φ) {
          if (F > 0) {
            if (φ < -halfπ + ε) φ = -halfπ + ε;
          } else {
            if (φ > halfπ - ε) φ = halfπ - ε;
          }

          var ρ = F / Math.pow(t(φ), n);
          return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];
        }

        forward.invert = function (x, y) {
          var ρ0_y = F - y,
              ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
          return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];
        };

        return forward;
      }

      (d3.geo.conicConformal = function () {
        return d3_geo_conic(d3_geo_conicConformal);
      }).raw = d3_geo_conicConformal;

      function d3_geo_conicEquidistant(φ0, φ1) {
        var cosφ0 = Math.cos(φ0),
            n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),
            G = cosφ0 / n + φ0;
        if (abs(n) < ε) return d3_geo_equirectangular;

        function forward(λ, φ) {
          var ρ = G - φ;
          return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];
        }

        forward.invert = function (x, y) {
          var ρ0_y = G - y;
          return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];
        };

        return forward;
      }

      (d3.geo.conicEquidistant = function () {
        return d3_geo_conic(d3_geo_conicEquidistant);
      }).raw = d3_geo_conicEquidistant;
      var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {
        return 1 / cosλcosφ;
      }, Math.atan);
      (d3.geo.gnomonic = function () {
        return d3_geo_projection(d3_geo_gnomonic);
      }).raw = d3_geo_gnomonic;

      function d3_geo_mercator(λ, φ) {
        return [λ, Math.log(Math.tan(π / 4 + φ / 2))];
      }

      d3_geo_mercator.invert = function (x, y) {
        return [x, 2 * Math.atan(Math.exp(y)) - halfπ];
      };

      function d3_geo_mercatorProjection(project) {
        var m = d3_geo_projection(project),
            scale = m.scale,
            translate = m.translate,
            clipExtent = m.clipExtent,
            clipAuto;

        m.scale = function () {
          var v = scale.apply(m, arguments);
          return v === m ? clipAuto ? m.clipExtent(null) : m : v;
        };

        m.translate = function () {
          var v = translate.apply(m, arguments);
          return v === m ? clipAuto ? m.clipExtent(null) : m : v;
        };

        m.clipExtent = function (_) {
          var v = clipExtent.apply(m, arguments);

          if (v === m) {
            if (clipAuto = _ == null) {
              var k = π * scale(),
                  t = translate();
              clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);
            }
          } else if (clipAuto) {
            v = null;
          }

          return v;
        };

        return m.clipExtent(null);
      }

      (d3.geo.mercator = function () {
        return d3_geo_mercatorProjection(d3_geo_mercator);
      }).raw = d3_geo_mercator;
      var d3_geo_orthographic = d3_geo_azimuthal(function () {
        return 1;
      }, Math.asin);
      (d3.geo.orthographic = function () {
        return d3_geo_projection(d3_geo_orthographic);
      }).raw = d3_geo_orthographic;
      var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {
        return 1 / (1 + cosλcosφ);
      }, function (ρ) {
        return 2 * Math.atan(ρ);
      });
      (d3.geo.stereographic = function () {
        return d3_geo_projection(d3_geo_stereographic);
      }).raw = d3_geo_stereographic;

      function d3_geo_transverseMercator(λ, φ) {
        return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];
      }

      d3_geo_transverseMercator.invert = function (x, y) {
        return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];
      };

      (d3.geo.transverseMercator = function () {
        var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),
            center = projection.center,
            rotate = projection.rotate;

        projection.center = function (_) {
          return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
        };

        projection.rotate = function (_) {
          return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
        };

        return rotate([0, 0, 90]);
      }).raw = d3_geo_transverseMercator;
      d3.geom = {};

      function d3_geom_pointX(d) {
        return d[0];
      }

      function d3_geom_pointY(d) {
        return d[1];
      }

      d3.geom.hull = function (vertices) {
        var x = d3_geom_pointX,
            y = d3_geom_pointY;
        if (arguments.length) return hull(vertices);

        function hull(data) {
          if (data.length < 3) return [];
          var fx = d3_functor(x),
              fy = d3_functor(y),
              i,
              n = data.length,
              points = [],
              flippedPoints = [];

          for (i = 0; i < n; i++) {
            points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);
          }

          points.sort(d3_geom_hullOrder);

          for (i = 0; i < n; i++) {
            flippedPoints.push([points[i][0], -points[i][1]]);
          }

          var upper = d3_geom_hullUpper(points),
              lower = d3_geom_hullUpper(flippedPoints);
          var skipLeft = lower[0] === upper[0],
              skipRight = lower[lower.length - 1] === upper[upper.length - 1],
              polygon = [];

          for (i = upper.length - 1; i >= 0; --i) {
            polygon.push(data[points[upper[i]][2]]);
          }

          for (i = +skipLeft; i < lower.length - skipRight; ++i) {
            polygon.push(data[points[lower[i]][2]]);
          }

          return polygon;
        }

        hull.x = function (_) {
          return arguments.length ? (x = _, hull) : x;
        };

        hull.y = function (_) {
          return arguments.length ? (y = _, hull) : y;
        };

        return hull;
      };

      function d3_geom_hullUpper(points) {
        var n = points.length,
            hull = [0, 1],
            hs = 2;

        for (var i = 2; i < n; i++) {
          while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {
            --hs;
          }

          hull[hs++] = i;
        }

        return hull.slice(0, hs);
      }

      function d3_geom_hullOrder(a, b) {
        return a[0] - b[0] || a[1] - b[1];
      }

      d3.geom.polygon = function (coordinates) {
        d3_subclass(coordinates, d3_geom_polygonPrototype);
        return coordinates;
      };

      var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];

      d3_geom_polygonPrototype.area = function () {
        var i = -1,
            n = this.length,
            a,
            b = this[n - 1],
            area = 0;

        while (++i < n) {
          a = b;
          b = this[i];
          area += a[1] * b[0] - a[0] * b[1];
        }

        return area * .5;
      };

      d3_geom_polygonPrototype.centroid = function (k) {
        var i = -1,
            n = this.length,
            x = 0,
            y = 0,
            a,
            b = this[n - 1],
            c;
        if (!arguments.length) k = -1 / (6 * this.area());

        while (++i < n) {
          a = b;
          b = this[i];
          c = a[0] * b[1] - b[0] * a[1];
          x += (a[0] + b[0]) * c;
          y += (a[1] + b[1]) * c;
        }

        return [x * k, y * k];
      };

      d3_geom_polygonPrototype.clip = function (subject) {
        var input,
            closed = d3_geom_polygonClosed(subject),
            i = -1,
            n = this.length - d3_geom_polygonClosed(this),
            j,
            m,
            a = this[n - 1],
            b,
            c,
            d;

        while (++i < n) {
          input = subject.slice();
          subject.length = 0;
          b = this[i];
          c = input[(m = input.length - closed) - 1];
          j = -1;

          while (++j < m) {
            d = input[j];

            if (d3_geom_polygonInside(d, a, b)) {
              if (!d3_geom_polygonInside(c, a, b)) {
                subject.push(d3_geom_polygonIntersect(c, d, a, b));
              }

              subject.push(d);
            } else if (d3_geom_polygonInside(c, a, b)) {
              subject.push(d3_geom_polygonIntersect(c, d, a, b));
            }

            c = d;
          }

          if (closed) subject.push(subject[0]);
          a = b;
        }

        return subject;
      };

      function d3_geom_polygonInside(p, a, b) {
        return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
      }

      function d3_geom_polygonIntersect(c, d, a, b) {
        var x1 = c[0],
            x3 = a[0],
            x21 = d[0] - x1,
            x43 = b[0] - x3,
            y1 = c[1],
            y3 = a[1],
            y21 = d[1] - y1,
            y43 = b[1] - y3,
            ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
        return [x1 + ua * x21, y1 + ua * y21];
      }

      function d3_geom_polygonClosed(coordinates) {
        var a = coordinates[0],
            b = coordinates[coordinates.length - 1];
        return !(a[0] - b[0] || a[1] - b[1]);
      }

      var d3_geom_voronoiEdges,
          d3_geom_voronoiCells,
          d3_geom_voronoiBeaches,
          d3_geom_voronoiBeachPool = [],
          d3_geom_voronoiFirstCircle,
          d3_geom_voronoiCircles,
          d3_geom_voronoiCirclePool = [];

      function d3_geom_voronoiBeach() {
        d3_geom_voronoiRedBlackNode(this);
        this.edge = this.site = this.circle = null;
      }

      function d3_geom_voronoiCreateBeach(site) {
        var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
        beach.site = site;
        return beach;
      }

      function d3_geom_voronoiDetachBeach(beach) {
        d3_geom_voronoiDetachCircle(beach);
        d3_geom_voronoiBeaches.remove(beach);
        d3_geom_voronoiBeachPool.push(beach);
        d3_geom_voronoiRedBlackNode(beach);
      }

      function d3_geom_voronoiRemoveBeach(beach) {
        var circle = beach.circle,
            x = circle.x,
            y = circle.cy,
            vertex = {
          x: x,
          y: y
        },
            previous = beach.P,
            next = beach.N,
            disappearing = [beach];
        d3_geom_voronoiDetachBeach(beach);
        var lArc = previous;

        while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
          previous = lArc.P;
          disappearing.unshift(lArc);
          d3_geom_voronoiDetachBeach(lArc);
          lArc = previous;
        }

        disappearing.unshift(lArc);
        d3_geom_voronoiDetachCircle(lArc);
        var rArc = next;

        while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
          next = rArc.N;
          disappearing.push(rArc);
          d3_geom_voronoiDetachBeach(rArc);
          rArc = next;
        }

        disappearing.push(rArc);
        d3_geom_voronoiDetachCircle(rArc);
        var nArcs = disappearing.length,
            iArc;

        for (iArc = 1; iArc < nArcs; ++iArc) {
          rArc = disappearing[iArc];
          lArc = disappearing[iArc - 1];
          d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
        }

        lArc = disappearing[0];
        rArc = disappearing[nArcs - 1];
        rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
        d3_geom_voronoiAttachCircle(lArc);
        d3_geom_voronoiAttachCircle(rArc);
      }

      function d3_geom_voronoiAddBeach(site) {
        var x = site.x,
            directrix = site.y,
            lArc,
            rArc,
            dxl,
            dxr,
            node = d3_geom_voronoiBeaches._;

        while (node) {
          dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
          if (dxl > ε) node = node.L;else {
            dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);

            if (dxr > ε) {
              if (!node.R) {
                lArc = node;
                break;
              }

              node = node.R;
            } else {
              if (dxl > -ε) {
                lArc = node.P;
                rArc = node;
              } else if (dxr > -ε) {
                lArc = node;
                rArc = node.N;
              } else {
                lArc = rArc = node;
              }

              break;
            }
          }
        }

        var newArc = d3_geom_voronoiCreateBeach(site);
        d3_geom_voronoiBeaches.insert(lArc, newArc);
        if (!lArc && !rArc) return;

        if (lArc === rArc) {
          d3_geom_voronoiDetachCircle(lArc);
          rArc = d3_geom_voronoiCreateBeach(lArc.site);
          d3_geom_voronoiBeaches.insert(newArc, rArc);
          newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
          d3_geom_voronoiAttachCircle(lArc);
          d3_geom_voronoiAttachCircle(rArc);
          return;
        }

        if (!rArc) {
          newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
          return;
        }

        d3_geom_voronoiDetachCircle(lArc);
        d3_geom_voronoiDetachCircle(rArc);
        var lSite = lArc.site,
            ax = lSite.x,
            ay = lSite.y,
            bx = site.x - ax,
            by = site.y - ay,
            rSite = rArc.site,
            cx = rSite.x - ax,
            cy = rSite.y - ay,
            d = 2 * (bx * cy - by * cx),
            hb = bx * bx + by * by,
            hc = cx * cx + cy * cy,
            vertex = {
          x: (cy * hb - by * hc) / d + ax,
          y: (bx * hc - cx * hb) / d + ay
        };
        d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
        newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
        rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
        d3_geom_voronoiAttachCircle(lArc);
        d3_geom_voronoiAttachCircle(rArc);
      }

      function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
        var site = arc.site,
            rfocx = site.x,
            rfocy = site.y,
            pby2 = rfocy - directrix;
        if (!pby2) return rfocx;
        var lArc = arc.P;
        if (!lArc) return -Infinity;
        site = lArc.site;
        var lfocx = site.x,
            lfocy = site.y,
            plby2 = lfocy - directrix;
        if (!plby2) return lfocx;
        var hl = lfocx - rfocx,
            aby2 = 1 / pby2 - 1 / plby2,
            b = hl / plby2;
        if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
        return (rfocx + lfocx) / 2;
      }

      function d3_geom_voronoiRightBreakPoint(arc, directrix) {
        var rArc = arc.N;
        if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
        var site = arc.site;
        return site.y === directrix ? site.x : Infinity;
      }

      function d3_geom_voronoiCell(site) {
        this.site = site;
        this.edges = [];
      }

      d3_geom_voronoiCell.prototype.prepare = function () {
        var halfEdges = this.edges,
            iHalfEdge = halfEdges.length,
            edge;

        while (iHalfEdge--) {
          edge = halfEdges[iHalfEdge].edge;
          if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
        }

        halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
        return halfEdges.length;
      };

      function d3_geom_voronoiCloseCells(extent) {
        var x0 = extent[0][0],
            x1 = extent[1][0],
            y0 = extent[0][1],
            y1 = extent[1][1],
            x2,
            y2,
            x3,
            y3,
            cells = d3_geom_voronoiCells,
            iCell = cells.length,
            cell,
            iHalfEdge,
            halfEdges,
            nHalfEdges,
            start,
            end;

        while (iCell--) {
          cell = cells[iCell];
          if (!cell || !cell.prepare()) continue;
          halfEdges = cell.edges;
          nHalfEdges = halfEdges.length;
          iHalfEdge = 0;

          while (iHalfEdge < nHalfEdges) {
            end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
            start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;

            if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
              halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
                x: x0,
                y: abs(x2 - x0) < ε ? y2 : y1
              } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
                x: abs(y2 - y1) < ε ? x2 : x1,
                y: y1
              } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
                x: x1,
                y: abs(x2 - x1) < ε ? y2 : y0
              } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
                x: abs(y2 - y0) < ε ? x2 : x0,
                y: y0
              } : null), cell.site, null));
              ++nHalfEdges;
            }
          }
        }
      }

      function d3_geom_voronoiHalfEdgeOrder(a, b) {
        return b.angle - a.angle;
      }

      function d3_geom_voronoiCircle() {
        d3_geom_voronoiRedBlackNode(this);
        this.x = this.y = this.arc = this.site = this.cy = null;
      }

      function d3_geom_voronoiAttachCircle(arc) {
        var lArc = arc.P,
            rArc = arc.N;
        if (!lArc || !rArc) return;
        var lSite = lArc.site,
            cSite = arc.site,
            rSite = rArc.site;
        if (lSite === rSite) return;
        var bx = cSite.x,
            by = cSite.y,
            ax = lSite.x - bx,
            ay = lSite.y - by,
            cx = rSite.x - bx,
            cy = rSite.y - by;
        var d = 2 * (ax * cy - ay * cx);
        if (d >= -ε2) return;
        var ha = ax * ax + ay * ay,
            hc = cx * cx + cy * cy,
            x = (cy * ha - ay * hc) / d,
            y = (ax * hc - cx * ha) / d,
            cy = y + by;
        var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
        circle.arc = arc;
        circle.site = cSite;
        circle.x = x + bx;
        circle.y = cy + Math.sqrt(x * x + y * y);
        circle.cy = cy;
        arc.circle = circle;
        var before = null,
            node = d3_geom_voronoiCircles._;

        while (node) {
          if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
            if (node.L) node = node.L;else {
              before = node.P;
              break;
            }
          } else {
            if (node.R) node = node.R;else {
              before = node;
              break;
            }
          }
        }

        d3_geom_voronoiCircles.insert(before, circle);
        if (!before) d3_geom_voronoiFirstCircle = circle;
      }

      function d3_geom_voronoiDetachCircle(arc) {
        var circle = arc.circle;

        if (circle) {
          if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
          d3_geom_voronoiCircles.remove(circle);
          d3_geom_voronoiCirclePool.push(circle);
          d3_geom_voronoiRedBlackNode(circle);
          arc.circle = null;
        }
      }

      function d3_geom_voronoiClipEdges(extent) {
        var edges = d3_geom_voronoiEdges,
            clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),
            i = edges.length,
            e;

        while (i--) {
          e = edges[i];

          if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
            e.a = e.b = null;
            edges.splice(i, 1);
          }
        }
      }

      function d3_geom_voronoiConnectEdge(edge, extent) {
        var vb = edge.b;
        if (vb) return true;
        var va = edge.a,
            x0 = extent[0][0],
            x1 = extent[1][0],
            y0 = extent[0][1],
            y1 = extent[1][1],
            lSite = edge.l,
            rSite = edge.r,
            lx = lSite.x,
            ly = lSite.y,
            rx = rSite.x,
            ry = rSite.y,
            fx = (lx + rx) / 2,
            fy = (ly + ry) / 2,
            fm,
            fb;

        if (ry === ly) {
          if (fx < x0 || fx >= x1) return;

          if (lx > rx) {
            if (!va) va = {
              x: fx,
              y: y0
            };else if (va.y >= y1) return;
            vb = {
              x: fx,
              y: y1
            };
          } else {
            if (!va) va = {
              x: fx,
              y: y1
            };else if (va.y < y0) return;
            vb = {
              x: fx,
              y: y0
            };
          }
        } else {
          fm = (lx - rx) / (ry - ly);
          fb = fy - fm * fx;

          if (fm < -1 || fm > 1) {
            if (lx > rx) {
              if (!va) va = {
                x: (y0 - fb) / fm,
                y: y0
              };else if (va.y >= y1) return;
              vb = {
                x: (y1 - fb) / fm,
                y: y1
              };
            } else {
              if (!va) va = {
                x: (y1 - fb) / fm,
                y: y1
              };else if (va.y < y0) return;
              vb = {
                x: (y0 - fb) / fm,
                y: y0
              };
            }
          } else {
            if (ly < ry) {
              if (!va) va = {
                x: x0,
                y: fm * x0 + fb
              };else if (va.x >= x1) return;
              vb = {
                x: x1,
                y: fm * x1 + fb
              };
            } else {
              if (!va) va = {
                x: x1,
                y: fm * x1 + fb
              };else if (va.x < x0) return;
              vb = {
                x: x0,
                y: fm * x0 + fb
              };
            }
          }
        }

        edge.a = va;
        edge.b = vb;
        return true;
      }

      function d3_geom_voronoiEdge(lSite, rSite) {
        this.l = lSite;
        this.r = rSite;
        this.a = this.b = null;
      }

      function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
        var edge = new d3_geom_voronoiEdge(lSite, rSite);
        d3_geom_voronoiEdges.push(edge);
        if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
        if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
        d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
        d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
        return edge;
      }

      function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
        var edge = new d3_geom_voronoiEdge(lSite, null);
        edge.a = va;
        edge.b = vb;
        d3_geom_voronoiEdges.push(edge);
        return edge;
      }

      function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
        if (!edge.a && !edge.b) {
          edge.a = vertex;
          edge.l = lSite;
          edge.r = rSite;
        } else if (edge.l === rSite) {
          edge.b = vertex;
        } else {
          edge.a = vertex;
        }
      }

      function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
        var va = edge.a,
            vb = edge.b;
        this.edge = edge;
        this.site = lSite;
        this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
      }

      d3_geom_voronoiHalfEdge.prototype = {
        start: function start() {
          return this.edge.l === this.site ? this.edge.a : this.edge.b;
        },
        end: function end() {
          return this.edge.l === this.site ? this.edge.b : this.edge.a;
        }
      };

      function d3_geom_voronoiRedBlackTree() {
        this._ = null;
      }

      function d3_geom_voronoiRedBlackNode(node) {
        node.U = node.C = node.L = node.R = node.P = node.N = null;
      }

      d3_geom_voronoiRedBlackTree.prototype = {
        insert: function insert(after, node) {
          var parent, grandpa, uncle;

          if (after) {
            node.P = after;
            node.N = after.N;
            if (after.N) after.N.P = node;
            after.N = node;

            if (after.R) {
              after = after.R;

              while (after.L) {
                after = after.L;
              }

              after.L = node;
            } else {
              after.R = node;
            }

            parent = after;
          } else if (this._) {
            after = d3_geom_voronoiRedBlackFirst(this._);
            node.P = null;
            node.N = after;
            after.P = after.L = node;
            parent = after;
          } else {
            node.P = node.N = null;
            this._ = node;
            parent = null;
          }

          node.L = node.R = null;
          node.U = parent;
          node.C = true;
          after = node;

          while (parent && parent.C) {
            grandpa = parent.U;

            if (parent === grandpa.L) {
              uncle = grandpa.R;

              if (uncle && uncle.C) {
                parent.C = uncle.C = false;
                grandpa.C = true;
                after = grandpa;
              } else {
                if (after === parent.R) {
                  d3_geom_voronoiRedBlackRotateLeft(this, parent);
                  after = parent;
                  parent = after.U;
                }

                parent.C = false;
                grandpa.C = true;
                d3_geom_voronoiRedBlackRotateRight(this, grandpa);
              }
            } else {
              uncle = grandpa.L;

              if (uncle && uncle.C) {
                parent.C = uncle.C = false;
                grandpa.C = true;
                after = grandpa;
              } else {
                if (after === parent.L) {
                  d3_geom_voronoiRedBlackRotateRight(this, parent);
                  after = parent;
                  parent = after.U;
                }

                parent.C = false;
                grandpa.C = true;
                d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
              }
            }

            parent = after.U;
          }

          this._.C = false;
        },
        remove: function remove(node) {
          if (node.N) node.N.P = node.P;
          if (node.P) node.P.N = node.N;
          node.N = node.P = null;
          var parent = node.U,
              sibling,
              left = node.L,
              right = node.R,
              next,
              red;
          if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);

          if (parent) {
            if (parent.L === node) parent.L = next;else parent.R = next;
          } else {
            this._ = next;
          }

          if (left && right) {
            red = next.C;
            next.C = node.C;
            next.L = left;
            left.U = next;

            if (next !== right) {
              parent = next.U;
              next.U = node.U;
              node = next.R;
              parent.L = node;
              next.R = right;
              right.U = next;
            } else {
              next.U = parent;
              parent = next;
              node = next.R;
            }
          } else {
            red = node.C;
            node = next;
          }

          if (node) node.U = parent;
          if (red) return;

          if (node && node.C) {
            node.C = false;
            return;
          }

          do {
            if (node === this._) break;

            if (node === parent.L) {
              sibling = parent.R;

              if (sibling.C) {
                sibling.C = false;
                parent.C = true;
                d3_geom_voronoiRedBlackRotateLeft(this, parent);
                sibling = parent.R;
              }

              if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
                if (!sibling.R || !sibling.R.C) {
                  sibling.L.C = false;
                  sibling.C = true;
                  d3_geom_voronoiRedBlackRotateRight(this, sibling);
                  sibling = parent.R;
                }

                sibling.C = parent.C;
                parent.C = sibling.R.C = false;
                d3_geom_voronoiRedBlackRotateLeft(this, parent);
                node = this._;
                break;
              }
            } else {
              sibling = parent.L;

              if (sibling.C) {
                sibling.C = false;
                parent.C = true;
                d3_geom_voronoiRedBlackRotateRight(this, parent);
                sibling = parent.L;
              }

              if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
                if (!sibling.L || !sibling.L.C) {
                  sibling.R.C = false;
                  sibling.C = true;
                  d3_geom_voronoiRedBlackRotateLeft(this, sibling);
                  sibling = parent.L;
                }

                sibling.C = parent.C;
                parent.C = sibling.L.C = false;
                d3_geom_voronoiRedBlackRotateRight(this, parent);
                node = this._;
                break;
              }
            }

            sibling.C = true;
            node = parent;
            parent = parent.U;
          } while (!node.C);

          if (node) node.C = false;
        }
      };

      function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
        var p = node,
            q = node.R,
            parent = p.U;

        if (parent) {
          if (parent.L === p) parent.L = q;else parent.R = q;
        } else {
          tree._ = q;
        }

        q.U = parent;
        p.U = q;
        p.R = q.L;
        if (p.R) p.R.U = p;
        q.L = p;
      }

      function d3_geom_voronoiRedBlackRotateRight(tree, node) {
        var p = node,
            q = node.L,
            parent = p.U;

        if (parent) {
          if (parent.L === p) parent.L = q;else parent.R = q;
        } else {
          tree._ = q;
        }

        q.U = parent;
        p.U = q;
        p.L = q.R;
        if (p.L) p.L.U = p;
        q.R = p;
      }

      function d3_geom_voronoiRedBlackFirst(node) {
        while (node.L) {
          node = node.L;
        }

        return node;
      }

      function d3_geom_voronoi(sites, bbox) {
        var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),
            x0,
            y0,
            circle;
        d3_geom_voronoiEdges = [];
        d3_geom_voronoiCells = new Array(sites.length);
        d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
        d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();

        while (true) {
          circle = d3_geom_voronoiFirstCircle;

          if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
            if (site.x !== x0 || site.y !== y0) {
              d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
              d3_geom_voronoiAddBeach(site);
              x0 = site.x, y0 = site.y;
            }

            site = sites.pop();
          } else if (circle) {
            d3_geom_voronoiRemoveBeach(circle.arc);
          } else {
            break;
          }
        }

        if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
        var diagram = {
          cells: d3_geom_voronoiCells,
          edges: d3_geom_voronoiEdges
        };
        d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
        return diagram;
      }

      function d3_geom_voronoiVertexOrder(a, b) {
        return b.y - a.y || b.x - a.x;
      }

      d3.geom.voronoi = function (points) {
        var x = d3_geom_pointX,
            y = d3_geom_pointY,
            fx = x,
            fy = y,
            clipExtent = d3_geom_voronoiClipExtent;
        if (points) return voronoi(points);

        function voronoi(data) {
          var polygons = new Array(data.length),
              x0 = clipExtent[0][0],
              y0 = clipExtent[0][1],
              x1 = clipExtent[1][0],
              y1 = clipExtent[1][1];
          d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {
            var edges = cell.edges,
                site = cell.site,
                polygon = polygons[i] = edges.length ? edges.map(function (e) {
              var s = e.start();
              return [s.x, s.y];
            }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];
            polygon.point = data[i];
          });
          return polygons;
        }

        function sites(data) {
          return data.map(function (d, i) {
            return {
              x: Math.round(fx(d, i) / ε) * ε,
              y: Math.round(fy(d, i) / ε) * ε,
              i: i
            };
          });
        }

        voronoi.links = function (data) {
          return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {
            return edge.l && edge.r;
          }).map(function (edge) {
            return {
              source: data[edge.l.i],
              target: data[edge.r.i]
            };
          });
        };

        voronoi.triangles = function (data) {
          var triangles = [];
          d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {
            var site = cell.site,
                edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),
                j = -1,
                m = edges.length,
                e0,
                s0,
                e1 = edges[m - 1].edge,
                s1 = e1.l === site ? e1.r : e1.l;

            while (++j < m) {
              e0 = e1;
              s0 = s1;
              e1 = edges[j].edge;
              s1 = e1.l === site ? e1.r : e1.l;

              if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
                triangles.push([data[i], data[s0.i], data[s1.i]]);
              }
            }
          });
          return triangles;
        };

        voronoi.x = function (_) {
          return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
        };

        voronoi.y = function (_) {
          return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
        };

        voronoi.clipExtent = function (_) {
          if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
          clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
          return voronoi;
        };

        voronoi.size = function (_) {
          if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
          return voronoi.clipExtent(_ && [[0, 0], _]);
        };

        return voronoi;
      };

      var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];

      function d3_geom_voronoiTriangleArea(a, b, c) {
        return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
      }

      d3.geom.delaunay = function (vertices) {
        return d3.geom.voronoi().triangles(vertices);
      };

      d3.geom.quadtree = function (points, x1, y1, x2, y2) {
        var x = d3_geom_pointX,
            y = d3_geom_pointY,
            compat;

        if (compat = arguments.length) {
          x = d3_geom_quadtreeCompatX;
          y = d3_geom_quadtreeCompatY;

          if (compat === 3) {
            y2 = y1;
            x2 = x1;
            y1 = x1 = 0;
          }

          return quadtree(points);
        }

        function quadtree(data) {
          var d,
              fx = d3_functor(x),
              fy = d3_functor(y),
              xs,
              ys,
              i,
              n,
              x1_,
              y1_,
              x2_,
              y2_;

          if (x1 != null) {
            x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
          } else {
            x2_ = y2_ = -(x1_ = y1_ = Infinity);
            xs = [], ys = [];
            n = data.length;
            if (compat) for (i = 0; i < n; ++i) {
              d = data[i];
              if (d.x < x1_) x1_ = d.x;
              if (d.y < y1_) y1_ = d.y;
              if (d.x > x2_) x2_ = d.x;
              if (d.y > y2_) y2_ = d.y;
              xs.push(d.x);
              ys.push(d.y);
            } else for (i = 0; i < n; ++i) {
              var x_ = +fx(d = data[i], i),
                  y_ = +fy(d, i);
              if (x_ < x1_) x1_ = x_;
              if (y_ < y1_) y1_ = y_;
              if (x_ > x2_) x2_ = x_;
              if (y_ > y2_) y2_ = y_;
              xs.push(x_);
              ys.push(y_);
            }
          }

          var dx = x2_ - x1_,
              dy = y2_ - y1_;
          if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;

          function insert(n, d, x, y, x1, y1, x2, y2) {
            if (isNaN(x) || isNaN(y)) return;

            if (n.leaf) {
              var nx = n.x,
                  ny = n.y;

              if (nx != null) {
                if (abs(nx - x) + abs(ny - y) < .01) {
                  insertChild(n, d, x, y, x1, y1, x2, y2);
                } else {
                  var nPoint = n.point;
                  n.x = n.y = n.point = null;
                  insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
                  insertChild(n, d, x, y, x1, y1, x2, y2);
                }
              } else {
                n.x = x, n.y = y, n.point = d;
              }
            } else {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          }

          function insertChild(n, d, x, y, x1, y1, x2, y2) {
            var xm = (x1 + x2) * .5,
                ym = (y1 + y2) * .5,
                right = x >= xm,
                below = y >= ym,
                i = below << 1 | right;
            n.leaf = false;
            n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
            if (right) x1 = xm;else x2 = xm;
            if (below) y1 = ym;else y2 = ym;
            insert(n, d, x, y, x1, y1, x2, y2);
          }

          var root = d3_geom_quadtreeNode();

          root.add = function (d) {
            insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
          };

          root.visit = function (f) {
            d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
          };

          root.find = function (point) {
            return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
          };

          i = -1;

          if (x1 == null) {
            while (++i < n) {
              insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
            }

            --i;
          } else data.forEach(root.add);

          xs = ys = data = d = null;
          return root;
        }

        quadtree.x = function (_) {
          return arguments.length ? (x = _, quadtree) : x;
        };

        quadtree.y = function (_) {
          return arguments.length ? (y = _, quadtree) : y;
        };

        quadtree.extent = function (_) {
          if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];
          if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];
          return quadtree;
        };

        quadtree.size = function (_) {
          if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];
          if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
          return quadtree;
        };

        return quadtree;
      };

      function d3_geom_quadtreeCompatX(d) {
        return d.x;
      }

      function d3_geom_quadtreeCompatY(d) {
        return d.y;
      }

      function d3_geom_quadtreeNode() {
        return {
          leaf: true,
          nodes: [],
          point: null,
          x: null,
          y: null
        };
      }

      function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
        if (!f(node, x1, y1, x2, y2)) {
          var sx = (x1 + x2) * .5,
              sy = (y1 + y2) * .5,
              children = node.nodes;
          if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
          if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
          if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
          if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
        }
      }

      function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
        var minDistance2 = Infinity,
            closestPoint;

        (function find(node, x1, y1, x2, y2) {
          if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;

          if (point = node.point) {
            var point,
                dx = x - node.x,
                dy = y - node.y,
                distance2 = dx * dx + dy * dy;

            if (distance2 < minDistance2) {
              var distance = Math.sqrt(minDistance2 = distance2);
              x0 = x - distance, y0 = y - distance;
              x3 = x + distance, y3 = y + distance;
              closestPoint = point;
            }
          }

          var children = node.nodes,
              xm = (x1 + x2) * .5,
              ym = (y1 + y2) * .5,
              right = x >= xm,
              below = y >= ym;

          for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
            if (node = children[i & 3]) switch (i & 3) {
              case 0:
                find(node, x1, y1, xm, ym);
                break;

              case 1:
                find(node, xm, y1, x2, ym);
                break;

              case 2:
                find(node, x1, ym, xm, y2);
                break;

              case 3:
                find(node, xm, ym, x2, y2);
                break;
            }
          }
        })(root, x0, y0, x3, y3);

        return closestPoint;
      }

      d3.interpolateRgb = d3_interpolateRgb;

      function d3_interpolateRgb(a, b) {
        a = d3.rgb(a);
        b = d3.rgb(b);
        var ar = a.r,
            ag = a.g,
            ab = a.b,
            br = b.r - ar,
            bg = b.g - ag,
            bb = b.b - ab;
        return function (t) {
          return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
        };
      }

      d3.interpolateObject = d3_interpolateObject;

      function d3_interpolateObject(a, b) {
        var i = {},
            c = {},
            k;

        for (k in a) {
          if (k in b) {
            i[k] = d3_interpolate(a[k], b[k]);
          } else {
            c[k] = a[k];
          }
        }

        for (k in b) {
          if (!(k in a)) {
            c[k] = b[k];
          }
        }

        return function (t) {
          for (k in i) {
            c[k] = i[k](t);
          }

          return c;
        };
      }

      d3.interpolateNumber = d3_interpolateNumber;

      function d3_interpolateNumber(a, b) {
        a = +a, b = +b;
        return function (t) {
          return a * (1 - t) + b * t;
        };
      }

      d3.interpolateString = d3_interpolateString;

      function d3_interpolateString(a, b) {
        var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,
            am,
            bm,
            bs,
            i = -1,
            s = [],
            q = [];
        a = a + "", b = b + "";

        while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
          if ((bs = bm.index) > bi) {
            bs = b.slice(bi, bs);
            if (s[i]) s[i] += bs;else s[++i] = bs;
          }

          if ((am = am[0]) === (bm = bm[0])) {
            if (s[i]) s[i] += bm;else s[++i] = bm;
          } else {
            s[++i] = null;
            q.push({
              i: i,
              x: d3_interpolateNumber(am, bm)
            });
          }

          bi = d3_interpolate_numberB.lastIndex;
        }

        if (bi < b.length) {
          bs = b.slice(bi);
          if (s[i]) s[i] += bs;else s[++i] = bs;
        }

        return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {
          return b(t) + "";
        }) : function () {
          return b;
        } : (b = q.length, function (t) {
          for (var i = 0, o; i < b; ++i) {
            s[(o = q[i]).i] = o.x(t);
          }

          return s.join("");
        });
      }

      var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
          d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
      d3.interpolate = d3_interpolate;

      function d3_interpolate(a, b) {
        var i = d3.interpolators.length,
            f;

        while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {
          ;
        }

        return f;
      }

      d3.interpolators = [function (a, b) {
        var t = typeof b;
        return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
      }];
      d3.interpolateArray = d3_interpolateArray;

      function d3_interpolateArray(a, b) {
        var x = [],
            c = [],
            na = a.length,
            nb = b.length,
            n0 = Math.min(a.length, b.length),
            i;

        for (i = 0; i < n0; ++i) {
          x.push(d3_interpolate(a[i], b[i]));
        }

        for (; i < na; ++i) {
          c[i] = a[i];
        }

        for (; i < nb; ++i) {
          c[i] = b[i];
        }

        return function (t) {
          for (i = 0; i < n0; ++i) {
            c[i] = x[i](t);
          }

          return c;
        };
      }

      var d3_ease_default = function d3_ease_default() {
        return d3_identity;
      };

      var d3_ease = d3.map({
        linear: d3_ease_default,
        poly: d3_ease_poly,
        quad: function quad() {
          return d3_ease_quad;
        },
        cubic: function cubic() {
          return d3_ease_cubic;
        },
        sin: function sin() {
          return d3_ease_sin;
        },
        exp: function exp() {
          return d3_ease_exp;
        },
        circle: function circle() {
          return d3_ease_circle;
        },
        elastic: d3_ease_elastic,
        back: d3_ease_back,
        bounce: function bounce() {
          return d3_ease_bounce;
        }
      });
      var d3_ease_mode = d3.map({
        "in": d3_identity,
        out: d3_ease_reverse,
        "in-out": d3_ease_reflect,
        "out-in": function outIn(f) {
          return d3_ease_reflect(d3_ease_reverse(f));
        }
      });

      d3.ease = function (name) {
        var i = name.indexOf("-"),
            t = i >= 0 ? name.slice(0, i) : name,
            m = i >= 0 ? name.slice(i + 1) : "in";
        t = d3_ease.get(t) || d3_ease_default;
        m = d3_ease_mode.get(m) || d3_identity;
        return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
      };

      function d3_ease_clamp(f) {
        return function (t) {
          return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
        };
      }

      function d3_ease_reverse(f) {
        return function (t) {
          return 1 - f(1 - t);
        };
      }

      function d3_ease_reflect(f) {
        return function (t) {
          return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
        };
      }

      function d3_ease_quad(t) {
        return t * t;
      }

      function d3_ease_cubic(t) {
        return t * t * t;
      }

      function d3_ease_cubicInOut(t) {
        if (t <= 0) return 0;
        if (t >= 1) return 1;
        var t2 = t * t,
            t3 = t2 * t;
        return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
      }

      function d3_ease_poly(e) {
        return function (t) {
          return Math.pow(t, e);
        };
      }

      function d3_ease_sin(t) {
        return 1 - Math.cos(t * halfπ);
      }

      function d3_ease_exp(t) {
        return Math.pow(2, 10 * (t - 1));
      }

      function d3_ease_circle(t) {
        return 1 - Math.sqrt(1 - t * t);
      }

      function d3_ease_elastic(a, p) {
        var s;
        if (arguments.length < 2) p = .45;
        if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;
        return function (t) {
          return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
        };
      }

      function d3_ease_back(s) {
        if (!s) s = 1.70158;
        return function (t) {
          return t * t * ((s + 1) * t - s);
        };
      }

      function d3_ease_bounce(t) {
        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
      }

      d3.interpolateHcl = d3_interpolateHcl;

      function d3_interpolateHcl(a, b) {
        a = d3.hcl(a);
        b = d3.hcl(b);
        var ah = a.h,
            ac = a.c,
            al = a.l,
            bh = b.h - ah,
            bc = b.c - ac,
            bl = b.l - al;
        if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
        if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;
        return function (t) {
          return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
        };
      }

      d3.interpolateHsl = d3_interpolateHsl;

      function d3_interpolateHsl(a, b) {
        a = d3.hsl(a);
        b = d3.hsl(b);
        var ah = a.h,
            as = a.s,
            al = a.l,
            bh = b.h - ah,
            bs = b.s - as,
            bl = b.l - al;
        if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
        if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;
        return function (t) {
          return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
        };
      }

      d3.interpolateLab = d3_interpolateLab;

      function d3_interpolateLab(a, b) {
        a = d3.lab(a);
        b = d3.lab(b);
        var al = a.l,
            aa = a.a,
            ab = a.b,
            bl = b.l - al,
            ba = b.a - aa,
            bb = b.b - ab;
        return function (t) {
          return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
        };
      }

      d3.interpolateRound = d3_interpolateRound;

      function d3_interpolateRound(a, b) {
        b -= a;
        return function (t) {
          return Math.round(a + b * t);
        };
      }

      d3.transform = function (string) {
        var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
        return (d3.transform = function (string) {
          if (string != null) {
            g.setAttribute("transform", string);
            var t = g.transform.baseVal.consolidate();
          }

          return new d3_transform(t ? t.matrix : d3_transformIdentity);
        })(string);
      };

      function d3_transform(m) {
        var r0 = [m.a, m.b],
            r1 = [m.c, m.d],
            kx = d3_transformNormalize(r0),
            kz = d3_transformDot(r0, r1),
            ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;

        if (r0[0] * r1[1] < r1[0] * r0[1]) {
          r0[0] *= -1;
          r0[1] *= -1;
          kx *= -1;
          kz *= -1;
        }

        this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
        this.translate = [m.e, m.f];
        this.scale = [kx, ky];
        this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
      }

      d3_transform.prototype.toString = function () {
        return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
      };

      function d3_transformDot(a, b) {
        return a[0] * b[0] + a[1] * b[1];
      }

      function d3_transformNormalize(a) {
        var k = Math.sqrt(d3_transformDot(a, a));

        if (k) {
          a[0] /= k;
          a[1] /= k;
        }

        return k;
      }

      function d3_transformCombine(a, b, k) {
        a[0] += k * b[0];
        a[1] += k * b[1];
        return a;
      }

      var d3_transformIdentity = {
        a: 1,
        b: 0,
        c: 0,
        d: 1,
        e: 0,
        f: 0
      };
      d3.interpolateTransform = d3_interpolateTransform;

      function d3_interpolateTransformPop(s) {
        return s.length ? s.pop() + "," : "";
      }

      function d3_interpolateTranslate(ta, tb, s, q) {
        if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
          var i = s.push("translate(", null, ",", null, ")");
          q.push({
            i: i - 4,
            x: d3_interpolateNumber(ta[0], tb[0])
          }, {
            i: i - 2,
            x: d3_interpolateNumber(ta[1], tb[1])
          });
        } else if (tb[0] || tb[1]) {
          s.push("translate(" + tb + ")");
        }
      }

      function d3_interpolateRotate(ra, rb, s, q) {
        if (ra !== rb) {
          if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;
          q.push({
            i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
            x: d3_interpolateNumber(ra, rb)
          });
        } else if (rb) {
          s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
        }
      }

      function d3_interpolateSkew(wa, wb, s, q) {
        if (wa !== wb) {
          q.push({
            i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
            x: d3_interpolateNumber(wa, wb)
          });
        } else if (wb) {
          s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
        }
      }

      function d3_interpolateScale(ka, kb, s, q) {
        if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
          var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
          q.push({
            i: i - 4,
            x: d3_interpolateNumber(ka[0], kb[0])
          }, {
            i: i - 2,
            x: d3_interpolateNumber(ka[1], kb[1])
          });
        } else if (kb[0] !== 1 || kb[1] !== 1) {
          s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
        }
      }

      function d3_interpolateTransform(a, b) {
        var s = [],
            q = [];
        a = d3.transform(a), b = d3.transform(b);
        d3_interpolateTranslate(a.translate, b.translate, s, q);
        d3_interpolateRotate(a.rotate, b.rotate, s, q);
        d3_interpolateSkew(a.skew, b.skew, s, q);
        d3_interpolateScale(a.scale, b.scale, s, q);
        a = b = null;
        return function (t) {
          var i = -1,
              n = q.length,
              o;

          while (++i < n) {
            s[(o = q[i]).i] = o.x(t);
          }

          return s.join("");
        };
      }

      function d3_uninterpolateNumber(a, b) {
        b = (b -= a = +a) || 1 / b;
        return function (x) {
          return (x - a) / b;
        };
      }

      function d3_uninterpolateClamp(a, b) {
        b = (b -= a = +a) || 1 / b;
        return function (x) {
          return Math.max(0, Math.min(1, (x - a) / b));
        };
      }

      d3.layout = {};

      d3.layout.bundle = function () {
        return function (links) {
          var paths = [],
              i = -1,
              n = links.length;

          while (++i < n) {
            paths.push(d3_layout_bundlePath(links[i]));
          }

          return paths;
        };
      };

      function d3_layout_bundlePath(link) {
        var start = link.source,
            end = link.target,
            lca = d3_layout_bundleLeastCommonAncestor(start, end),
            points = [start];

        while (start !== lca) {
          start = start.parent;
          points.push(start);
        }

        var k = points.length;

        while (end !== lca) {
          points.splice(k, 0, end);
          end = end.parent;
        }

        return points;
      }

      function d3_layout_bundleAncestors(node) {
        var ancestors = [],
            parent = node.parent;

        while (parent != null) {
          ancestors.push(node);
          node = parent;
          parent = parent.parent;
        }

        ancestors.push(node);
        return ancestors;
      }

      function d3_layout_bundleLeastCommonAncestor(a, b) {
        if (a === b) return a;
        var aNodes = d3_layout_bundleAncestors(a),
            bNodes = d3_layout_bundleAncestors(b),
            aNode = aNodes.pop(),
            bNode = bNodes.pop(),
            sharedNode = null;

        while (aNode === bNode) {
          sharedNode = aNode;
          aNode = aNodes.pop();
          bNode = bNodes.pop();
        }

        return sharedNode;
      }

      d3.layout.chord = function () {
        var chord = {},
            chords,
            groups,
            matrix,
            n,
            padding = 0,
            sortGroups,
            sortSubgroups,
            sortChords;

        function relayout() {
          var subgroups = {},
              groupSums = [],
              groupIndex = d3.range(n),
              subgroupIndex = [],
              k,
              x,
              x0,
              i,
              j;
          chords = [];
          groups = [];
          k = 0, i = -1;

          while (++i < n) {
            x = 0, j = -1;

            while (++j < n) {
              x += matrix[i][j];
            }

            groupSums.push(x);
            subgroupIndex.push(d3.range(n));
            k += x;
          }

          if (sortGroups) {
            groupIndex.sort(function (a, b) {
              return sortGroups(groupSums[a], groupSums[b]);
            });
          }

          if (sortSubgroups) {
            subgroupIndex.forEach(function (d, i) {
              d.sort(function (a, b) {
                return sortSubgroups(matrix[i][a], matrix[i][b]);
              });
            });
          }

          k = (τ - padding * n) / k;
          x = 0, i = -1;

          while (++i < n) {
            x0 = x, j = -1;

            while (++j < n) {
              var di = groupIndex[i],
                  dj = subgroupIndex[di][j],
                  v = matrix[di][dj],
                  a0 = x,
                  a1 = x += v * k;
              subgroups[di + "-" + dj] = {
                index: di,
                subindex: dj,
                startAngle: a0,
                endAngle: a1,
                value: v
              };
            }

            groups[di] = {
              index: di,
              startAngle: x0,
              endAngle: x,
              value: groupSums[di]
            };
            x += padding;
          }

          i = -1;

          while (++i < n) {
            j = i - 1;

            while (++j < n) {
              var source = subgroups[i + "-" + j],
                  target = subgroups[j + "-" + i];

              if (source.value || target.value) {
                chords.push(source.value < target.value ? {
                  source: target,
                  target: source
                } : {
                  source: source,
                  target: target
                });
              }
            }
          }

          if (sortChords) resort();
        }

        function resort() {
          chords.sort(function (a, b) {
            return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
          });
        }

        chord.matrix = function (x) {
          if (!arguments.length) return matrix;
          n = (matrix = x) && matrix.length;
          chords = groups = null;
          return chord;
        };

        chord.padding = function (x) {
          if (!arguments.length) return padding;
          padding = x;
          chords = groups = null;
          return chord;
        };

        chord.sortGroups = function (x) {
          if (!arguments.length) return sortGroups;
          sortGroups = x;
          chords = groups = null;
          return chord;
        };

        chord.sortSubgroups = function (x) {
          if (!arguments.length) return sortSubgroups;
          sortSubgroups = x;
          chords = null;
          return chord;
        };

        chord.sortChords = function (x) {
          if (!arguments.length) return sortChords;
          sortChords = x;
          if (chords) resort();
          return chord;
        };

        chord.chords = function () {
          if (!chords) relayout();
          return chords;
        };

        chord.groups = function () {
          if (!groups) relayout();
          return groups;
        };

        return chord;
      };

      d3.layout.force = function () {
        var force = {},
            event = d3.dispatch("start", "tick", "end"),
            timer,
            size = [1, 1],
            drag,
            alpha,
            friction = .9,
            linkDistance = d3_layout_forceLinkDistance,
            linkStrength = d3_layout_forceLinkStrength,
            charge = -30,
            chargeDistance2 = d3_layout_forceChargeDistance2,
            gravity = .1,
            theta2 = .64,
            nodes = [],
            links = [],
            distances,
            strengths,
            charges;

        function repulse(node) {
          return function (quad, x1, _, x2) {
            if (quad.point !== node) {
              var dx = quad.cx - node.x,
                  dy = quad.cy - node.y,
                  dw = x2 - x1,
                  dn = dx * dx + dy * dy;

              if (dw * dw / theta2 < dn) {
                if (dn < chargeDistance2) {
                  var k = quad.charge / dn;
                  node.px -= dx * k;
                  node.py -= dy * k;
                }

                return true;
              }

              if (quad.point && dn && dn < chargeDistance2) {
                var k = quad.pointCharge / dn;
                node.px -= dx * k;
                node.py -= dy * k;
              }
            }

            return !quad.charge;
          };
        }

        force.tick = function () {
          if ((alpha *= .99) < .005) {
            timer = null;
            event.end({
              type: "end",
              alpha: alpha = 0
            });
            return true;
          }

          var n = nodes.length,
              m = links.length,
              q,
              i,
              o,
              s,
              t,
              l,
              k,
              x,
              y;

          for (i = 0; i < m; ++i) {
            o = links[i];
            s = o.source;
            t = o.target;
            x = t.x - s.x;
            y = t.y - s.y;

            if (l = x * x + y * y) {
              l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
              x *= l;
              y *= l;
              t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
              t.y -= y * k;
              s.x += x * (k = 1 - k);
              s.y += y * k;
            }
          }

          if (k = alpha * gravity) {
            x = size[0] / 2;
            y = size[1] / 2;
            i = -1;
            if (k) while (++i < n) {
              o = nodes[i];
              o.x += (x - o.x) * k;
              o.y += (y - o.y) * k;
            }
          }

          if (charge) {
            d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
            i = -1;

            while (++i < n) {
              if (!(o = nodes[i]).fixed) {
                q.visit(repulse(o));
              }
            }
          }

          i = -1;

          while (++i < n) {
            o = nodes[i];

            if (o.fixed) {
              o.x = o.px;
              o.y = o.py;
            } else {
              o.x -= (o.px - (o.px = o.x)) * friction;
              o.y -= (o.py - (o.py = o.y)) * friction;
            }
          }

          event.tick({
            type: "tick",
            alpha: alpha
          });
        };

        force.nodes = function (x) {
          if (!arguments.length) return nodes;
          nodes = x;
          return force;
        };

        force.links = function (x) {
          if (!arguments.length) return links;
          links = x;
          return force;
        };

        force.size = function (x) {
          if (!arguments.length) return size;
          size = x;
          return force;
        };

        force.linkDistance = function (x) {
          if (!arguments.length) return linkDistance;
          linkDistance = typeof x === "function" ? x : +x;
          return force;
        };

        force.distance = force.linkDistance;

        force.linkStrength = function (x) {
          if (!arguments.length) return linkStrength;
          linkStrength = typeof x === "function" ? x : +x;
          return force;
        };

        force.friction = function (x) {
          if (!arguments.length) return friction;
          friction = +x;
          return force;
        };

        force.charge = function (x) {
          if (!arguments.length) return charge;
          charge = typeof x === "function" ? x : +x;
          return force;
        };

        force.chargeDistance = function (x) {
          if (!arguments.length) return Math.sqrt(chargeDistance2);
          chargeDistance2 = x * x;
          return force;
        };

        force.gravity = function (x) {
          if (!arguments.length) return gravity;
          gravity = +x;
          return force;
        };

        force.theta = function (x) {
          if (!arguments.length) return Math.sqrt(theta2);
          theta2 = x * x;
          return force;
        };

        force.alpha = function (x) {
          if (!arguments.length) return alpha;
          x = +x;

          if (alpha) {
            if (x > 0) {
              alpha = x;
            } else {
              timer.c = null, timer.t = NaN, timer = null;
              event.end({
                type: "end",
                alpha: alpha = 0
              });
            }
          } else if (x > 0) {
            event.start({
              type: "start",
              alpha: alpha = x
            });
            timer = d3_timer(force.tick);
          }

          return force;
        };

        force.start = function () {
          var i,
              n = nodes.length,
              m = links.length,
              w = size[0],
              h = size[1],
              neighbors,
              o;

          for (i = 0; i < n; ++i) {
            (o = nodes[i]).index = i;
            o.weight = 0;
          }

          for (i = 0; i < m; ++i) {
            o = links[i];
            if (typeof o.source == "number") o.source = nodes[o.source];
            if (typeof o.target == "number") o.target = nodes[o.target];
            ++o.source.weight;
            ++o.target.weight;
          }

          for (i = 0; i < n; ++i) {
            o = nodes[i];
            if (isNaN(o.x)) o.x = position("x", w);
            if (isNaN(o.y)) o.y = position("y", h);
            if (isNaN(o.px)) o.px = o.x;
            if (isNaN(o.py)) o.py = o.y;
          }

          distances = [];
          if (typeof linkDistance === "function") for (i = 0; i < m; ++i) {
            distances[i] = +linkDistance.call(this, links[i], i);
          } else for (i = 0; i < m; ++i) {
            distances[i] = linkDistance;
          }
          strengths = [];
          if (typeof linkStrength === "function") for (i = 0; i < m; ++i) {
            strengths[i] = +linkStrength.call(this, links[i], i);
          } else for (i = 0; i < m; ++i) {
            strengths[i] = linkStrength;
          }
          charges = [];
          if (typeof charge === "function") for (i = 0; i < n; ++i) {
            charges[i] = +charge.call(this, nodes[i], i);
          } else for (i = 0; i < n; ++i) {
            charges[i] = charge;
          }

          function position(dimension, size) {
            if (!neighbors) {
              neighbors = new Array(n);

              for (j = 0; j < n; ++j) {
                neighbors[j] = [];
              }

              for (j = 0; j < m; ++j) {
                var o = links[j];
                neighbors[o.source.index].push(o.target);
                neighbors[o.target.index].push(o.source);
              }
            }

            var candidates = neighbors[i],
                j = -1,
                l = candidates.length,
                x;

            while (++j < l) {
              if (!isNaN(x = candidates[j][dimension])) return x;
            }

            return Math.random() * size;
          }

          return force.resume();
        };

        force.resume = function () {
          return force.alpha(.1);
        };

        force.stop = function () {
          return force.alpha(0);
        };

        force.drag = function () {
          if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
          if (!arguments.length) return drag;
          this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
        };

        function dragmove(d) {
          d.px = d3.event.x, d.py = d3.event.y;
          force.resume();
        }

        return d3.rebind(force, event, "on");
      };

      function d3_layout_forceDragstart(d) {
        d.fixed |= 2;
      }

      function d3_layout_forceDragend(d) {
        d.fixed &= ~6;
      }

      function d3_layout_forceMouseover(d) {
        d.fixed |= 4;
        d.px = d.x, d.py = d.y;
      }

      function d3_layout_forceMouseout(d) {
        d.fixed &= ~4;
      }

      function d3_layout_forceAccumulate(quad, alpha, charges) {
        var cx = 0,
            cy = 0;
        quad.charge = 0;

        if (!quad.leaf) {
          var nodes = quad.nodes,
              n = nodes.length,
              i = -1,
              c;

          while (++i < n) {
            c = nodes[i];
            if (c == null) continue;
            d3_layout_forceAccumulate(c, alpha, charges);
            quad.charge += c.charge;
            cx += c.charge * c.cx;
            cy += c.charge * c.cy;
          }
        }

        if (quad.point) {
          if (!quad.leaf) {
            quad.point.x += Math.random() - .5;
            quad.point.y += Math.random() - .5;
          }

          var k = alpha * charges[quad.point.index];
          quad.charge += quad.pointCharge = k;
          cx += k * quad.point.x;
          cy += k * quad.point.y;
        }

        quad.cx = cx / quad.charge;
        quad.cy = cy / quad.charge;
      }

      var d3_layout_forceLinkDistance = 20,
          d3_layout_forceLinkStrength = 1,
          d3_layout_forceChargeDistance2 = Infinity;

      d3.layout.hierarchy = function () {
        var sort = d3_layout_hierarchySort,
            children = d3_layout_hierarchyChildren,
            value = d3_layout_hierarchyValue;

        function hierarchy(root) {
          var stack = [root],
              nodes = [],
              node;
          root.depth = 0;

          while ((node = stack.pop()) != null) {
            nodes.push(node);

            if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
              var n, childs, child;

              while (--n >= 0) {
                stack.push(child = childs[n]);
                child.parent = node;
                child.depth = node.depth + 1;
              }

              if (value) node.value = 0;
              node.children = childs;
            } else {
              if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
              delete node.children;
            }
          }

          d3_layout_hierarchyVisitAfter(root, function (node) {
            var childs, parent;
            if (sort && (childs = node.children)) childs.sort(sort);
            if (value && (parent = node.parent)) parent.value += node.value;
          });
          return nodes;
        }

        hierarchy.sort = function (x) {
          if (!arguments.length) return sort;
          sort = x;
          return hierarchy;
        };

        hierarchy.children = function (x) {
          if (!arguments.length) return children;
          children = x;
          return hierarchy;
        };

        hierarchy.value = function (x) {
          if (!arguments.length) return value;
          value = x;
          return hierarchy;
        };

        hierarchy.revalue = function (root) {
          if (value) {
            d3_layout_hierarchyVisitBefore(root, function (node) {
              if (node.children) node.value = 0;
            });
            d3_layout_hierarchyVisitAfter(root, function (node) {
              var parent;
              if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
              if (parent = node.parent) parent.value += node.value;
            });
          }

          return root;
        };

        return hierarchy;
      };

      function d3_layout_hierarchyRebind(object, hierarchy) {
        d3.rebind(object, hierarchy, "sort", "children", "value");
        object.nodes = object;
        object.links = d3_layout_hierarchyLinks;
        return object;
      }

      function d3_layout_hierarchyVisitBefore(node, callback) {
        var nodes = [node];

        while ((node = nodes.pop()) != null) {
          callback(node);

          if ((children = node.children) && (n = children.length)) {
            var n, children;

            while (--n >= 0) {
              nodes.push(children[n]);
            }
          }
        }
      }

      function d3_layout_hierarchyVisitAfter(node, callback) {
        var nodes = [node],
            nodes2 = [];

        while ((node = nodes.pop()) != null) {
          nodes2.push(node);

          if ((children = node.children) && (n = children.length)) {
            var i = -1,
                n,
                children;

            while (++i < n) {
              nodes.push(children[i]);
            }
          }
        }

        while ((node = nodes2.pop()) != null) {
          callback(node);
        }
      }

      function d3_layout_hierarchyChildren(d) {
        return d.children;
      }

      function d3_layout_hierarchyValue(d) {
        return d.value;
      }

      function d3_layout_hierarchySort(a, b) {
        return b.value - a.value;
      }

      function d3_layout_hierarchyLinks(nodes) {
        return d3.merge(nodes.map(function (parent) {
          return (parent.children || []).map(function (child) {
            return {
              source: parent,
              target: child
            };
          });
        }));
      }

      d3.layout.partition = function () {
        var hierarchy = d3.layout.hierarchy(),
            size = [1, 1];

        function position(node, x, dx, dy) {
          var children = node.children;
          node.x = x;
          node.y = node.depth * dy;
          node.dx = dx;
          node.dy = dy;

          if (children && (n = children.length)) {
            var i = -1,
                n,
                c,
                d;
            dx = node.value ? dx / node.value : 0;

            while (++i < n) {
              position(c = children[i], x, d = c.value * dx, dy);
              x += d;
            }
          }
        }

        function depth(node) {
          var children = node.children,
              d = 0;

          if (children && (n = children.length)) {
            var i = -1,
                n;

            while (++i < n) {
              d = Math.max(d, depth(children[i]));
            }
          }

          return 1 + d;
        }

        function partition(d, i) {
          var nodes = hierarchy.call(this, d, i);
          position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
          return nodes;
        }

        partition.size = function (x) {
          if (!arguments.length) return size;
          size = x;
          return partition;
        };

        return d3_layout_hierarchyRebind(partition, hierarchy);
      };

      d3.layout.pie = function () {
        var value = Number,
            sort = d3_layout_pieSortByValue,
            startAngle = 0,
            endAngle = τ,
            padAngle = 0;

        function pie(data) {
          var n = data.length,
              values = data.map(function (d, i) {
            return +value.call(pie, d, i);
          }),
              a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle),
              da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a,
              p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)),
              pa = p * (da < 0 ? -1 : 1),
              sum = d3.sum(values),
              k = sum ? (da - n * pa) / sum : 0,
              index = d3.range(n),
              arcs = [],
              v;
          if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {
            return values[j] - values[i];
          } : function (i, j) {
            return sort(data[i], data[j]);
          });
          index.forEach(function (i) {
            arcs[i] = {
              data: data[i],
              value: v = values[i],
              startAngle: a,
              endAngle: a += v * k + pa,
              padAngle: p
            };
          });
          return arcs;
        }

        pie.value = function (_) {
          if (!arguments.length) return value;
          value = _;
          return pie;
        };

        pie.sort = function (_) {
          if (!arguments.length) return sort;
          sort = _;
          return pie;
        };

        pie.startAngle = function (_) {
          if (!arguments.length) return startAngle;
          startAngle = _;
          return pie;
        };

        pie.endAngle = function (_) {
          if (!arguments.length) return endAngle;
          endAngle = _;
          return pie;
        };

        pie.padAngle = function (_) {
          if (!arguments.length) return padAngle;
          padAngle = _;
          return pie;
        };

        return pie;
      };

      var d3_layout_pieSortByValue = {};

      d3.layout.stack = function () {
        var values = d3_identity,
            order = d3_layout_stackOrderDefault,
            offset = d3_layout_stackOffsetZero,
            out = d3_layout_stackOut,
            x = d3_layout_stackX,
            y = d3_layout_stackY;

        function stack(data, index) {
          if (!(n = data.length)) return data;
          var series = data.map(function (d, i) {
            return values.call(stack, d, i);
          });
          var points = series.map(function (d) {
            return d.map(function (v, i) {
              return [x.call(stack, v, i), y.call(stack, v, i)];
            });
          });
          var orders = order.call(stack, points, index);
          series = d3.permute(series, orders);
          points = d3.permute(points, orders);
          var offsets = offset.call(stack, points, index);
          var m = series[0].length,
              n,
              i,
              j,
              o;

          for (j = 0; j < m; ++j) {
            out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);

            for (i = 1; i < n; ++i) {
              out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
            }
          }

          return data;
        }

        stack.values = function (x) {
          if (!arguments.length) return values;
          values = x;
          return stack;
        };

        stack.order = function (x) {
          if (!arguments.length) return order;
          order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
          return stack;
        };

        stack.offset = function (x) {
          if (!arguments.length) return offset;
          offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
          return stack;
        };

        stack.x = function (z) {
          if (!arguments.length) return x;
          x = z;
          return stack;
        };

        stack.y = function (z) {
          if (!arguments.length) return y;
          y = z;
          return stack;
        };

        stack.out = function (z) {
          if (!arguments.length) return out;
          out = z;
          return stack;
        };

        return stack;
      };

      function d3_layout_stackX(d) {
        return d.x;
      }

      function d3_layout_stackY(d) {
        return d.y;
      }

      function d3_layout_stackOut(d, y0, y) {
        d.y0 = y0;
        d.y = y;
      }

      var d3_layout_stackOrders = d3.map({
        "inside-out": function insideOut(data) {
          var n = data.length,
              i,
              j,
              max = data.map(d3_layout_stackMaxIndex),
              sums = data.map(d3_layout_stackReduceSum),
              index = d3.range(n).sort(function (a, b) {
            return max[a] - max[b];
          }),
              top = 0,
              bottom = 0,
              tops = [],
              bottoms = [];

          for (i = 0; i < n; ++i) {
            j = index[i];

            if (top < bottom) {
              top += sums[j];
              tops.push(j);
            } else {
              bottom += sums[j];
              bottoms.push(j);
            }
          }

          return bottoms.reverse().concat(tops);
        },
        reverse: function reverse(data) {
          return d3.range(data.length).reverse();
        },
        "default": d3_layout_stackOrderDefault
      });
      var d3_layout_stackOffsets = d3.map({
        silhouette: function silhouette(data) {
          var n = data.length,
              m = data[0].length,
              sums = [],
              max = 0,
              i,
              j,
              o,
              y0 = [];

          for (j = 0; j < m; ++j) {
            for (i = 0, o = 0; i < n; i++) {
              o += data[i][j][1];
            }

            if (o > max) max = o;
            sums.push(o);
          }

          for (j = 0; j < m; ++j) {
            y0[j] = (max - sums[j]) / 2;
          }

          return y0;
        },
        wiggle: function wiggle(data) {
          var n = data.length,
              x = data[0],
              m = x.length,
              i,
              j,
              k,
              s1,
              s2,
              s3,
              dx,
              o,
              o0,
              y0 = [];
          y0[0] = o = o0 = 0;

          for (j = 1; j < m; ++j) {
            for (i = 0, s1 = 0; i < n; ++i) {
              s1 += data[i][j][1];
            }

            for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
              for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
                s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
              }

              s2 += s3 * data[i][j][1];
            }

            y0[j] = o -= s1 ? s2 / s1 * dx : 0;
            if (o < o0) o0 = o;
          }

          for (j = 0; j < m; ++j) {
            y0[j] -= o0;
          }

          return y0;
        },
        expand: function expand(data) {
          var n = data.length,
              m = data[0].length,
              k = 1 / n,
              i,
              j,
              o,
              y0 = [];

          for (j = 0; j < m; ++j) {
            for (i = 0, o = 0; i < n; i++) {
              o += data[i][j][1];
            }

            if (o) for (i = 0; i < n; i++) {
              data[i][j][1] /= o;
            } else for (i = 0; i < n; i++) {
              data[i][j][1] = k;
            }
          }

          for (j = 0; j < m; ++j) {
            y0[j] = 0;
          }

          return y0;
        },
        zero: d3_layout_stackOffsetZero
      });

      function d3_layout_stackOrderDefault(data) {
        return d3.range(data.length);
      }

      function d3_layout_stackOffsetZero(data) {
        var j = -1,
            m = data[0].length,
            y0 = [];

        while (++j < m) {
          y0[j] = 0;
        }

        return y0;
      }

      function d3_layout_stackMaxIndex(array) {
        var i = 1,
            j = 0,
            v = array[0][1],
            k,
            n = array.length;

        for (; i < n; ++i) {
          if ((k = array[i][1]) > v) {
            j = i;
            v = k;
          }
        }

        return j;
      }

      function d3_layout_stackReduceSum(d) {
        return d.reduce(d3_layout_stackSum, 0);
      }

      function d3_layout_stackSum(p, d) {
        return p + d[1];
      }

      d3.layout.histogram = function () {
        var frequency = true,
            valuer = Number,
            ranger = d3_layout_histogramRange,
            binner = d3_layout_histogramBinSturges;

        function histogram(data, i) {
          var bins = [],
              values = data.map(valuer, this),
              range = ranger.call(this, values, i),
              thresholds = binner.call(this, range, values, i),
              bin,
              i = -1,
              n = values.length,
              m = thresholds.length - 1,
              k = frequency ? 1 : 1 / n,
              x;

          while (++i < m) {
            bin = bins[i] = [];
            bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
            bin.y = 0;
          }

          if (m > 0) {
            i = -1;

            while (++i < n) {
              x = values[i];

              if (x >= range[0] && x <= range[1]) {
                bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
                bin.y += k;
                bin.push(data[i]);
              }
            }
          }

          return bins;
        }

        histogram.value = function (x) {
          if (!arguments.length) return valuer;
          valuer = x;
          return histogram;
        };

        histogram.range = function (x) {
          if (!arguments.length) return ranger;
          ranger = d3_functor(x);
          return histogram;
        };

        histogram.bins = function (x) {
          if (!arguments.length) return binner;
          binner = typeof x === "number" ? function (range) {
            return d3_layout_histogramBinFixed(range, x);
          } : d3_functor(x);
          return histogram;
        };

        histogram.frequency = function (x) {
          if (!arguments.length) return frequency;
          frequency = !!x;
          return histogram;
        };

        return histogram;
      };

      function d3_layout_histogramBinSturges(range, values) {
        return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
      }

      function d3_layout_histogramBinFixed(range, n) {
        var x = -1,
            b = +range[0],
            m = (range[1] - b) / n,
            f = [];

        while (++x <= n) {
          f[x] = m * x + b;
        }

        return f;
      }

      function d3_layout_histogramRange(values) {
        return [d3.min(values), d3.max(values)];
      }

      d3.layout.pack = function () {
        var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),
            padding = 0,
            size = [1, 1],
            radius;

        function pack(d, i) {
          var nodes = hierarchy.call(this, d, i),
              root = nodes[0],
              w = size[0],
              h = size[1],
              r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function () {
            return radius;
          };
          root.x = root.y = 0;
          d3_layout_hierarchyVisitAfter(root, function (d) {
            d.r = +r(d.value);
          });
          d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);

          if (padding) {
            var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
            d3_layout_hierarchyVisitAfter(root, function (d) {
              d.r += dr;
            });
            d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
            d3_layout_hierarchyVisitAfter(root, function (d) {
              d.r -= dr;
            });
          }

          d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
          return nodes;
        }

        pack.size = function (_) {
          if (!arguments.length) return size;
          size = _;
          return pack;
        };

        pack.radius = function (_) {
          if (!arguments.length) return radius;
          radius = _ == null || typeof _ === "function" ? _ : +_;
          return pack;
        };

        pack.padding = function (_) {
          if (!arguments.length) return padding;
          padding = +_;
          return pack;
        };

        return d3_layout_hierarchyRebind(pack, hierarchy);
      };

      function d3_layout_packSort(a, b) {
        return a.value - b.value;
      }

      function d3_layout_packInsert(a, b) {
        var c = a._pack_next;
        a._pack_next = b;
        b._pack_prev = a;
        b._pack_next = c;
        c._pack_prev = b;
      }

      function d3_layout_packSplice(a, b) {
        a._pack_next = b;
        b._pack_prev = a;
      }

      function d3_layout_packIntersects(a, b) {
        var dx = b.x - a.x,
            dy = b.y - a.y,
            dr = a.r + b.r;
        return .999 * dr * dr > dx * dx + dy * dy;
      }

      function d3_layout_packSiblings(node) {
        if (!(nodes = node.children) || !(n = nodes.length)) return;
        var nodes,
            xMin = Infinity,
            xMax = -Infinity,
            yMin = Infinity,
            yMax = -Infinity,
            a,
            b,
            c,
            i,
            j,
            k,
            n;

        function bound(node) {
          xMin = Math.min(node.x - node.r, xMin);
          xMax = Math.max(node.x + node.r, xMax);
          yMin = Math.min(node.y - node.r, yMin);
          yMax = Math.max(node.y + node.r, yMax);
        }

        nodes.forEach(d3_layout_packLink);
        a = nodes[0];
        a.x = -a.r;
        a.y = 0;
        bound(a);

        if (n > 1) {
          b = nodes[1];
          b.x = b.r;
          b.y = 0;
          bound(b);

          if (n > 2) {
            c = nodes[2];
            d3_layout_packPlace(a, b, c);
            bound(c);
            d3_layout_packInsert(a, c);
            a._pack_prev = c;
            d3_layout_packInsert(c, b);
            b = a._pack_next;

            for (i = 3; i < n; i++) {
              d3_layout_packPlace(a, b, c = nodes[i]);
              var isect = 0,
                  s1 = 1,
                  s2 = 1;

              for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
                if (d3_layout_packIntersects(j, c)) {
                  isect = 1;
                  break;
                }
              }

              if (isect == 1) {
                for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
                  if (d3_layout_packIntersects(k, c)) {
                    break;
                  }
                }
              }

              if (isect) {
                if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);
                i--;
              } else {
                d3_layout_packInsert(a, c);
                b = c;
                bound(c);
              }
            }
          }
        }

        var cx = (xMin + xMax) / 2,
            cy = (yMin + yMax) / 2,
            cr = 0;

        for (i = 0; i < n; i++) {
          c = nodes[i];
          c.x -= cx;
          c.y -= cy;
          cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
        }

        node.r = cr;
        nodes.forEach(d3_layout_packUnlink);
      }

      function d3_layout_packLink(node) {
        node._pack_next = node._pack_prev = node;
      }

      function d3_layout_packUnlink(node) {
        delete node._pack_next;
        delete node._pack_prev;
      }

      function d3_layout_packTransform(node, x, y, k) {
        var children = node.children;
        node.x = x += k * node.x;
        node.y = y += k * node.y;
        node.r *= k;

        if (children) {
          var i = -1,
              n = children.length;

          while (++i < n) {
            d3_layout_packTransform(children[i], x, y, k);
          }
        }
      }

      function d3_layout_packPlace(a, b, c) {
        var db = a.r + c.r,
            dx = b.x - a.x,
            dy = b.y - a.y;

        if (db && (dx || dy)) {
          var da = b.r + c.r,
              dc = dx * dx + dy * dy;
          da *= da;
          db *= db;
          var x = .5 + (db - da) / (2 * dc),
              y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
          c.x = a.x + x * dx + y * dy;
          c.y = a.y + x * dy - y * dx;
        } else {
          c.x = a.x + db;
          c.y = a.y;
        }
      }

      d3.layout.tree = function () {
        var hierarchy = d3.layout.hierarchy().sort(null).value(null),
            separation = d3_layout_treeSeparation,
            size = [1, 1],
            nodeSize = null;

        function tree(d, i) {
          var nodes = hierarchy.call(this, d, i),
              root0 = nodes[0],
              root1 = wrapTree(root0);
          d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
          d3_layout_hierarchyVisitBefore(root1, secondWalk);
          if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {
            var left = root0,
                right = root0,
                bottom = root0;
            d3_layout_hierarchyVisitBefore(root0, function (node) {
              if (node.x < left.x) left = node;
              if (node.x > right.x) right = node;
              if (node.depth > bottom.depth) bottom = node;
            });
            var tx = separation(left, right) / 2 - left.x,
                kx = size[0] / (right.x + separation(right, left) / 2 + tx),
                ky = size[1] / (bottom.depth || 1);
            d3_layout_hierarchyVisitBefore(root0, function (node) {
              node.x = (node.x + tx) * kx;
              node.y = node.depth * ky;
            });
          }
          return nodes;
        }

        function wrapTree(root0) {
          var root1 = {
            A: null,
            children: [root0]
          },
              queue = [root1],
              node1;

          while ((node1 = queue.pop()) != null) {
            for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
              queue.push((children[i] = child = {
                _: children[i],
                parent: node1,
                children: (child = children[i].children) && child.slice() || [],
                A: null,
                a: null,
                z: 0,
                m: 0,
                c: 0,
                s: 0,
                t: null,
                i: i
              }).a = child);
            }
          }

          return root1.children[0];
        }

        function firstWalk(v) {
          var children = v.children,
              siblings = v.parent.children,
              w = v.i ? siblings[v.i - 1] : null;

          if (children.length) {
            d3_layout_treeShift(v);
            var midpoint = (children[0].z + children[children.length - 1].z) / 2;

            if (w) {
              v.z = w.z + separation(v._, w._);
              v.m = v.z - midpoint;
            } else {
              v.z = midpoint;
            }
          } else if (w) {
            v.z = w.z + separation(v._, w._);
          }

          v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
        }

        function secondWalk(v) {
          v._.x = v.z + v.parent.m;
          v.m += v.parent.m;
        }

        function apportion(v, w, ancestor) {
          if (w) {
            var vip = v,
                vop = v,
                vim = w,
                vom = vip.parent.children[0],
                sip = vip.m,
                sop = vop.m,
                sim = vim.m,
                som = vom.m,
                shift;

            while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
              vom = d3_layout_treeLeft(vom);
              vop = d3_layout_treeRight(vop);
              vop.a = v;
              shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

              if (shift > 0) {
                d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
                sip += shift;
                sop += shift;
              }

              sim += vim.m;
              sip += vip.m;
              som += vom.m;
              sop += vop.m;
            }

            if (vim && !d3_layout_treeRight(vop)) {
              vop.t = vim;
              vop.m += sim - sop;
            }

            if (vip && !d3_layout_treeLeft(vom)) {
              vom.t = vip;
              vom.m += sip - som;
              ancestor = v;
            }
          }

          return ancestor;
        }

        function sizeNode(node) {
          node.x *= size[0];
          node.y = node.depth * size[1];
        }

        tree.separation = function (x) {
          if (!arguments.length) return separation;
          separation = x;
          return tree;
        };

        tree.size = function (x) {
          if (!arguments.length) return nodeSize ? null : size;
          nodeSize = (size = x) == null ? sizeNode : null;
          return tree;
        };

        tree.nodeSize = function (x) {
          if (!arguments.length) return nodeSize ? size : null;
          nodeSize = (size = x) == null ? null : sizeNode;
          return tree;
        };

        return d3_layout_hierarchyRebind(tree, hierarchy);
      };

      function d3_layout_treeSeparation(a, b) {
        return a.parent == b.parent ? 1 : 2;
      }

      function d3_layout_treeLeft(v) {
        var children = v.children;
        return children.length ? children[0] : v.t;
      }

      function d3_layout_treeRight(v) {
        var children = v.children,
            n;
        return (n = children.length) ? children[n - 1] : v.t;
      }

      function d3_layout_treeMove(wm, wp, shift) {
        var change = shift / (wp.i - wm.i);
        wp.c -= change;
        wp.s += shift;
        wm.c += change;
        wp.z += shift;
        wp.m += shift;
      }

      function d3_layout_treeShift(v) {
        var shift = 0,
            change = 0,
            children = v.children,
            i = children.length,
            w;

        while (--i >= 0) {
          w = children[i];
          w.z += shift;
          w.m += shift;
          shift += w.s + (change += w.c);
        }
      }

      function d3_layout_treeAncestor(vim, v, ancestor) {
        return vim.a.parent === v.parent ? vim.a : ancestor;
      }

      d3.layout.cluster = function () {
        var hierarchy = d3.layout.hierarchy().sort(null).value(null),
            separation = d3_layout_treeSeparation,
            size = [1, 1],
            nodeSize = false;

        function cluster(d, i) {
          var nodes = hierarchy.call(this, d, i),
              root = nodes[0],
              previousNode,
              x = 0;
          d3_layout_hierarchyVisitAfter(root, function (node) {
            var children = node.children;

            if (children && children.length) {
              node.x = d3_layout_clusterX(children);
              node.y = d3_layout_clusterY(children);
            } else {
              node.x = previousNode ? x += separation(node, previousNode) : 0;
              node.y = 0;
              previousNode = node;
            }
          });
          var left = d3_layout_clusterLeft(root),
              right = d3_layout_clusterRight(root),
              x0 = left.x - separation(left, right) / 2,
              x1 = right.x + separation(right, left) / 2;
          d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {
            node.x = (node.x - root.x) * size[0];
            node.y = (root.y - node.y) * size[1];
          } : function (node) {
            node.x = (node.x - x0) / (x1 - x0) * size[0];
            node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
          });
          return nodes;
        }

        cluster.separation = function (x) {
          if (!arguments.length) return separation;
          separation = x;
          return cluster;
        };

        cluster.size = function (x) {
          if (!arguments.length) return nodeSize ? null : size;
          nodeSize = (size = x) == null;
          return cluster;
        };

        cluster.nodeSize = function (x) {
          if (!arguments.length) return nodeSize ? size : null;
          nodeSize = (size = x) != null;
          return cluster;
        };

        return d3_layout_hierarchyRebind(cluster, hierarchy);
      };

      function d3_layout_clusterY(children) {
        return 1 + d3.max(children, function (child) {
          return child.y;
        });
      }

      function d3_layout_clusterX(children) {
        return children.reduce(function (x, child) {
          return x + child.x;
        }, 0) / children.length;
      }

      function d3_layout_clusterLeft(node) {
        var children = node.children;
        return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
      }

      function d3_layout_clusterRight(node) {
        var children = node.children,
            n;
        return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
      }

      d3.layout.treemap = function () {
        var hierarchy = d3.layout.hierarchy(),
            round = Math.round,
            size = [1, 1],
            padding = null,
            pad = d3_layout_treemapPadNull,
            sticky = false,
            stickies,
            mode = "squarify",
            ratio = .5 * (1 + Math.sqrt(5));

        function scale(children, k) {
          var i = -1,
              n = children.length,
              child,
              area;

          while (++i < n) {
            area = (child = children[i]).value * (k < 0 ? 0 : k);
            child.area = isNaN(area) || area <= 0 ? 0 : area;
          }
        }

        function squarify(node) {
          var children = node.children;

          if (children && children.length) {
            var rect = pad(node),
                row = [],
                remaining = children.slice(),
                child,
                best = Infinity,
                score,
                u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),
                n;
            scale(remaining, rect.dx * rect.dy / node.value);
            row.area = 0;

            while ((n = remaining.length) > 0) {
              row.push(child = remaining[n - 1]);
              row.area += child.area;

              if (mode !== "squarify" || (score = worst(row, u)) <= best) {
                remaining.pop();
                best = score;
              } else {
                row.area -= row.pop().area;
                position(row, u, rect, false);
                u = Math.min(rect.dx, rect.dy);
                row.length = row.area = 0;
                best = Infinity;
              }
            }

            if (row.length) {
              position(row, u, rect, true);
              row.length = row.area = 0;
            }

            children.forEach(squarify);
          }
        }

        function stickify(node) {
          var children = node.children;

          if (children && children.length) {
            var rect = pad(node),
                remaining = children.slice(),
                child,
                row = [];
            scale(remaining, rect.dx * rect.dy / node.value);
            row.area = 0;

            while (child = remaining.pop()) {
              row.push(child);
              row.area += child.area;

              if (child.z != null) {
                position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
                row.length = row.area = 0;
              }
            }

            children.forEach(stickify);
          }
        }

        function worst(row, u) {
          var s = row.area,
              r,
              rmax = 0,
              rmin = Infinity,
              i = -1,
              n = row.length;

          while (++i < n) {
            if (!(r = row[i].area)) continue;
            if (r < rmin) rmin = r;
            if (r > rmax) rmax = r;
          }

          s *= s;
          u *= u;
          return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
        }

        function position(row, u, rect, flush) {
          var i = -1,
              n = row.length,
              x = rect.x,
              y = rect.y,
              v = u ? round(row.area / u) : 0,
              o;

          if (u == rect.dx) {
            if (flush || v > rect.dy) v = rect.dy;

            while (++i < n) {
              o = row[i];
              o.x = x;
              o.y = y;
              o.dy = v;
              x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
            }

            o.z = true;
            o.dx += rect.x + rect.dx - x;
            rect.y += v;
            rect.dy -= v;
          } else {
            if (flush || v > rect.dx) v = rect.dx;

            while (++i < n) {
              o = row[i];
              o.x = x;
              o.y = y;
              o.dx = v;
              y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
            }

            o.z = false;
            o.dy += rect.y + rect.dy - y;
            rect.x += v;
            rect.dx -= v;
          }
        }

        function treemap(d) {
          var nodes = stickies || hierarchy(d),
              root = nodes[0];
          root.x = root.y = 0;
          if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;
          if (stickies) hierarchy.revalue(root);
          scale([root], root.dx * root.dy / root.value);
          (stickies ? stickify : squarify)(root);
          if (sticky) stickies = nodes;
          return nodes;
        }

        treemap.size = function (x) {
          if (!arguments.length) return size;
          size = x;
          return treemap;
        };

        treemap.padding = function (x) {
          if (!arguments.length) return padding;

          function padFunction(node) {
            var p = x.call(treemap, node, node.depth);
            return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [p, p, p, p] : p);
          }

          function padConstant(node) {
            return d3_layout_treemapPad(node, x);
          }

          var type;
          pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [x, x, x, x], padConstant) : padConstant;
          return treemap;
        };

        treemap.round = function (x) {
          if (!arguments.length) return round != Number;
          round = x ? Math.round : Number;
          return treemap;
        };

        treemap.sticky = function (x) {
          if (!arguments.length) return sticky;
          sticky = x;
          stickies = null;
          return treemap;
        };

        treemap.ratio = function (x) {
          if (!arguments.length) return ratio;
          ratio = x;
          return treemap;
        };

        treemap.mode = function (x) {
          if (!arguments.length) return mode;
          mode = x + "";
          return treemap;
        };

        return d3_layout_hierarchyRebind(treemap, hierarchy);
      };

      function d3_layout_treemapPadNull(node) {
        return {
          x: node.x,
          y: node.y,
          dx: node.dx,
          dy: node.dy
        };
      }

      function d3_layout_treemapPad(node, padding) {
        var x = node.x + padding[3],
            y = node.y + padding[0],
            dx = node.dx - padding[1] - padding[3],
            dy = node.dy - padding[0] - padding[2];

        if (dx < 0) {
          x += dx / 2;
          dx = 0;
        }

        if (dy < 0) {
          y += dy / 2;
          dy = 0;
        }

        return {
          x: x,
          y: y,
          dx: dx,
          dy: dy
        };
      }

      d3.random = {
        normal: function normal(µ, σ) {
          var n = arguments.length;
          if (n < 2) σ = 1;
          if (n < 1) µ = 0;
          return function () {
            var x, y, r;

            do {
              x = Math.random() * 2 - 1;
              y = Math.random() * 2 - 1;
              r = x * x + y * y;
            } while (!r || r > 1);

            return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
          };
        },
        logNormal: function logNormal() {
          var random = d3.random.normal.apply(d3, arguments);
          return function () {
            return Math.exp(random());
          };
        },
        bates: function bates(m) {
          var random = d3.random.irwinHall(m);
          return function () {
            return random() / m;
          };
        },
        irwinHall: function irwinHall(m) {
          return function () {
            for (var s = 0, j = 0; j < m; j++) {
              s += Math.random();
            }

            return s;
          };
        }
      };
      d3.scale = {};

      function d3_scaleExtent(domain) {
        var start = domain[0],
            stop = domain[domain.length - 1];
        return start < stop ? [start, stop] : [stop, start];
      }

      function d3_scaleRange(scale) {
        return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
      }

      function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
        var u = uninterpolate(domain[0], domain[1]),
            i = interpolate(range[0], range[1]);
        return function (x) {
          return i(u(x));
        };
      }

      function d3_scale_nice(domain, nice) {
        var i0 = 0,
            i1 = domain.length - 1,
            x0 = domain[i0],
            x1 = domain[i1],
            dx;

        if (x1 < x0) {
          dx = i0, i0 = i1, i1 = dx;
          dx = x0, x0 = x1, x1 = dx;
        }

        domain[i0] = nice.floor(x0);
        domain[i1] = nice.ceil(x1);
        return domain;
      }

      function d3_scale_niceStep(step) {
        return step ? {
          floor: function floor(x) {
            return Math.floor(x / step) * step;
          },
          ceil: function ceil(x) {
            return Math.ceil(x / step) * step;
          }
        } : d3_scale_niceIdentity;
      }

      var d3_scale_niceIdentity = {
        floor: d3_identity,
        ceil: d3_identity
      };

      function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
        var u = [],
            i = [],
            j = 0,
            k = Math.min(domain.length, range.length) - 1;

        if (domain[k] < domain[0]) {
          domain = domain.slice().reverse();
          range = range.slice().reverse();
        }

        while (++j <= k) {
          u.push(uninterpolate(domain[j - 1], domain[j]));
          i.push(interpolate(range[j - 1], range[j]));
        }

        return function (x) {
          var j = d3.bisect(domain, x, 1, k) - 1;
          return i[j](u[j](x));
        };
      }

      d3.scale.linear = function () {
        return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);
      };

      function d3_scale_linear(domain, range, interpolate, clamp) {
        var output, input;

        function rescale() {
          var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,
              uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
          output = linear(domain, range, uninterpolate, interpolate);
          input = linear(range, domain, uninterpolate, d3_interpolate);
          return scale;
        }

        function scale(x) {
          return output(x);
        }

        scale.invert = function (y) {
          return input(y);
        };

        scale.domain = function (x) {
          if (!arguments.length) return domain;
          domain = x.map(Number);
          return rescale();
        };

        scale.range = function (x) {
          if (!arguments.length) return range;
          range = x;
          return rescale();
        };

        scale.rangeRound = function (x) {
          return scale.range(x).interpolate(d3_interpolateRound);
        };

        scale.clamp = function (x) {
          if (!arguments.length) return clamp;
          clamp = x;
          return rescale();
        };

        scale.interpolate = function (x) {
          if (!arguments.length) return interpolate;
          interpolate = x;
          return rescale();
        };

        scale.ticks = function (m) {
          return d3_scale_linearTicks(domain, m);
        };

        scale.tickFormat = function (m, format) {
          return d3_scale_linearTickFormat(domain, m, format);
        };

        scale.nice = function (m) {
          d3_scale_linearNice(domain, m);
          return rescale();
        };

        scale.copy = function () {
          return d3_scale_linear(domain, range, interpolate, clamp);
        };

        return rescale();
      }

      function d3_scale_linearRebind(scale, linear) {
        return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
      }

      function d3_scale_linearNice(domain, m) {
        d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
        d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
        return domain;
      }

      function d3_scale_linearTickRange(domain, m) {
        if (m == null) m = 10;
        var extent = d3_scaleExtent(domain),
            span = extent[1] - extent[0],
            step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),
            err = m / span * step;
        if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;
        extent[0] = Math.ceil(extent[0] / step) * step;
        extent[1] = Math.floor(extent[1] / step) * step + step * .5;
        extent[2] = step;
        return extent;
      }

      function d3_scale_linearTicks(domain, m) {
        return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
      }

      function d3_scale_linearTickFormat(domain, m, format) {
        var range = d3_scale_linearTickRange(domain, m);

        if (format) {
          var match = d3_format_re.exec(format);
          match.shift();

          if (match[8] === "s") {
            var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
            if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
            match[8] = "f";
            format = d3.format(match.join(""));
            return function (d) {
              return format(prefix.scale(d)) + prefix.symbol;
            };
          }

          if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
          format = match.join("");
        } else {
          format = ",." + d3_scale_linearPrecision(range[2]) + "f";
        }

        return d3.format(format);
      }

      var d3_scale_linearFormatSignificant = {
        s: 1,
        g: 1,
        p: 1,
        r: 1,
        e: 1
      };

      function d3_scale_linearPrecision(value) {
        return -Math.floor(Math.log(value) / Math.LN10 + .01);
      }

      function d3_scale_linearFormatPrecision(type, range) {
        var p = d3_scale_linearPrecision(range[2]);
        return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
      }

      d3.scale.log = function () {
        return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);
      };

      function d3_scale_log(linear, base, positive, domain) {
        function log(x) {
          return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
        }

        function pow(x) {
          return positive ? Math.pow(base, x) : -Math.pow(base, -x);
        }

        function scale(x) {
          return linear(log(x));
        }

        scale.invert = function (x) {
          return pow(linear.invert(x));
        };

        scale.domain = function (x) {
          if (!arguments.length) return domain;
          positive = x[0] >= 0;
          linear.domain((domain = x.map(Number)).map(log));
          return scale;
        };

        scale.base = function (_) {
          if (!arguments.length) return base;
          base = +_;
          linear.domain(domain.map(log));
          return scale;
        };

        scale.nice = function () {
          var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
          linear.domain(niced);
          domain = niced.map(pow);
          return scale;
        };

        scale.ticks = function () {
          var extent = d3_scaleExtent(domain),
              ticks = [],
              u = extent[0],
              v = extent[1],
              i = Math.floor(log(u)),
              j = Math.ceil(log(v)),
              n = base % 1 ? 2 : base;

          if (isFinite(j - i)) {
            if (positive) {
              for (; i < j; i++) {
                for (var k = 1; k < n; k++) {
                  ticks.push(pow(i) * k);
                }
              }

              ticks.push(pow(i));
            } else {
              ticks.push(pow(i));

              for (; i++ < j;) {
                for (var k = n - 1; k > 0; k--) {
                  ticks.push(pow(i) * k);
                }
              }
            }

            for (i = 0; ticks[i] < u; i++) {}

            for (j = ticks.length; ticks[j - 1] > v; j--) {}

            ticks = ticks.slice(i, j);
          }

          return ticks;
        };

        scale.tickFormat = function (n, format) {
          if (!arguments.length) return d3_scale_logFormat;
          if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== "function") format = d3.format(format);
          var k = Math.max(1, base * n / scale.ticks().length);
          return function (d) {
            var i = d / pow(Math.round(log(d)));
            if (i * base < base - .5) i *= base;
            return i <= k ? format(d) : "";
          };
        };

        scale.copy = function () {
          return d3_scale_log(linear.copy(), base, positive, domain);
        };

        return d3_scale_linearRebind(scale, linear);
      }

      var d3_scale_logFormat = d3.format(".0e"),
          d3_scale_logNiceNegative = {
        floor: function floor(x) {
          return -Math.ceil(-x);
        },
        ceil: function ceil(x) {
          return -Math.floor(-x);
        }
      };

      d3.scale.pow = function () {
        return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);
      };

      function d3_scale_pow(linear, exponent, domain) {
        var powp = d3_scale_powPow(exponent),
            powb = d3_scale_powPow(1 / exponent);

        function scale(x) {
          return linear(powp(x));
        }

        scale.invert = function (x) {
          return powb(linear.invert(x));
        };

        scale.domain = function (x) {
          if (!arguments.length) return domain;
          linear.domain((domain = x.map(Number)).map(powp));
          return scale;
        };

        scale.ticks = function (m) {
          return d3_scale_linearTicks(domain, m);
        };

        scale.tickFormat = function (m, format) {
          return d3_scale_linearTickFormat(domain, m, format);
        };

        scale.nice = function (m) {
          return scale.domain(d3_scale_linearNice(domain, m));
        };

        scale.exponent = function (x) {
          if (!arguments.length) return exponent;
          powp = d3_scale_powPow(exponent = x);
          powb = d3_scale_powPow(1 / exponent);
          linear.domain(domain.map(powp));
          return scale;
        };

        scale.copy = function () {
          return d3_scale_pow(linear.copy(), exponent, domain);
        };

        return d3_scale_linearRebind(scale, linear);
      }

      function d3_scale_powPow(e) {
        return function (x) {
          return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
        };
      }

      d3.scale.sqrt = function () {
        return d3.scale.pow().exponent(.5);
      };

      d3.scale.ordinal = function () {
        return d3_scale_ordinal([], {
          t: "range",
          a: [[]]
        });
      };

      function d3_scale_ordinal(domain, ranger) {
        var index, range, rangeBand;

        function scale(x) {
          return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
        }

        function steps(start, step) {
          return d3.range(domain.length).map(function (i) {
            return start + step * i;
          });
        }

        scale.domain = function (x) {
          if (!arguments.length) return domain;
          domain = [];
          index = new d3_Map();
          var i = -1,
              n = x.length,
              xi;

          while (++i < n) {
            if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
          }

          return scale[ranger.t].apply(scale, ranger.a);
        };

        scale.range = function (x) {
          if (!arguments.length) return range;
          range = x;
          rangeBand = 0;
          ranger = {
            t: "range",
            a: arguments
          };
          return scale;
        };

        scale.rangePoints = function (x, padding) {
          if (arguments.length < 2) padding = 0;
          var start = x[0],
              stop = x[1],
              step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);
          range = steps(start + step * padding / 2, step);
          rangeBand = 0;
          ranger = {
            t: "rangePoints",
            a: arguments
          };
          return scale;
        };

        scale.rangeRoundPoints = function (x, padding) {
          if (arguments.length < 2) padding = 0;
          var start = x[0],
              stop = x[1],
              step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;
          range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
          rangeBand = 0;
          ranger = {
            t: "rangeRoundPoints",
            a: arguments
          };
          return scale;
        };

        scale.rangeBands = function (x, padding, outerPadding) {
          if (arguments.length < 2) padding = 0;
          if (arguments.length < 3) outerPadding = padding;
          var reverse = x[1] < x[0],
              start = x[reverse - 0],
              stop = x[1 - reverse],
              step = (stop - start) / (domain.length - padding + 2 * outerPadding);
          range = steps(start + step * outerPadding, step);
          if (reverse) range.reverse();
          rangeBand = step * (1 - padding);
          ranger = {
            t: "rangeBands",
            a: arguments
          };
          return scale;
        };

        scale.rangeRoundBands = function (x, padding, outerPadding) {
          if (arguments.length < 2) padding = 0;
          if (arguments.length < 3) outerPadding = padding;
          var reverse = x[1] < x[0],
              start = x[reverse - 0],
              stop = x[1 - reverse],
              step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
          range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
          if (reverse) range.reverse();
          rangeBand = Math.round(step * (1 - padding));
          ranger = {
            t: "rangeRoundBands",
            a: arguments
          };
          return scale;
        };

        scale.rangeBand = function () {
          return rangeBand;
        };

        scale.rangeExtent = function () {
          return d3_scaleExtent(ranger.a[0]);
        };

        scale.copy = function () {
          return d3_scale_ordinal(domain, ranger);
        };

        return scale.domain(domain);
      }

      d3.scale.category10 = function () {
        return d3.scale.ordinal().range(d3_category10);
      };

      d3.scale.category20 = function () {
        return d3.scale.ordinal().range(d3_category20);
      };

      d3.scale.category20b = function () {
        return d3.scale.ordinal().range(d3_category20b);
      };

      d3.scale.category20c = function () {
        return d3.scale.ordinal().range(d3_category20c);
      };

      var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);
      var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);
      var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);
      var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);

      d3.scale.quantile = function () {
        return d3_scale_quantile([], []);
      };

      function d3_scale_quantile(domain, range) {
        var thresholds;

        function rescale() {
          var k = 0,
              q = range.length;
          thresholds = [];

          while (++k < q) {
            thresholds[k - 1] = d3.quantile(domain, k / q);
          }

          return scale;
        }

        function scale(x) {
          if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
        }

        scale.domain = function (x) {
          if (!arguments.length) return domain;
          domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
          return rescale();
        };

        scale.range = function (x) {
          if (!arguments.length) return range;
          range = x;
          return rescale();
        };

        scale.quantiles = function () {
          return thresholds;
        };

        scale.invertExtent = function (y) {
          y = range.indexOf(y);
          return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];
        };

        scale.copy = function () {
          return d3_scale_quantile(domain, range);
        };

        return rescale();
      }

      d3.scale.quantize = function () {
        return d3_scale_quantize(0, 1, [0, 1]);
      };

      function d3_scale_quantize(x0, x1, range) {
        var kx, i;

        function scale(x) {
          return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
        }

        function rescale() {
          kx = range.length / (x1 - x0);
          i = range.length - 1;
          return scale;
        }

        scale.domain = function (x) {
          if (!arguments.length) return [x0, x1];
          x0 = +x[0];
          x1 = +x[x.length - 1];
          return rescale();
        };

        scale.range = function (x) {
          if (!arguments.length) return range;
          range = x;
          return rescale();
        };

        scale.invertExtent = function (y) {
          y = range.indexOf(y);
          y = y < 0 ? NaN : y / kx + x0;
          return [y, y + 1 / kx];
        };

        scale.copy = function () {
          return d3_scale_quantize(x0, x1, range);
        };

        return rescale();
      }

      d3.scale.threshold = function () {
        return d3_scale_threshold([.5], [0, 1]);
      };

      function d3_scale_threshold(domain, range) {
        function scale(x) {
          if (x <= x) return range[d3.bisect(domain, x)];
        }

        scale.domain = function (_) {
          if (!arguments.length) return domain;
          domain = _;
          return scale;
        };

        scale.range = function (_) {
          if (!arguments.length) return range;
          range = _;
          return scale;
        };

        scale.invertExtent = function (y) {
          y = range.indexOf(y);
          return [domain[y - 1], domain[y]];
        };

        scale.copy = function () {
          return d3_scale_threshold(domain, range);
        };

        return scale;
      }

      d3.scale.identity = function () {
        return d3_scale_identity([0, 1]);
      };

      function d3_scale_identity(domain) {
        function identity(x) {
          return +x;
        }

        identity.invert = identity;

        identity.domain = identity.range = function (x) {
          if (!arguments.length) return domain;
          domain = x.map(identity);
          return identity;
        };

        identity.ticks = function (m) {
          return d3_scale_linearTicks(domain, m);
        };

        identity.tickFormat = function (m, format) {
          return d3_scale_linearTickFormat(domain, m, format);
        };

        identity.copy = function () {
          return d3_scale_identity(domain);
        };

        return identity;
      }

      d3.svg = {};

      function d3_zero() {
        return 0;
      }

      d3.svg.arc = function () {
        var innerRadius = d3_svg_arcInnerRadius,
            outerRadius = d3_svg_arcOuterRadius,
            cornerRadius = d3_zero,
            padRadius = d3_svg_arcAuto,
            startAngle = d3_svg_arcStartAngle,
            endAngle = d3_svg_arcEndAngle,
            padAngle = d3_svg_arcPadAngle;

        function arc() {
          var r0 = Math.max(0, +innerRadius.apply(this, arguments)),
              r1 = Math.max(0, +outerRadius.apply(this, arguments)),
              a0 = startAngle.apply(this, arguments) - halfπ,
              a1 = endAngle.apply(this, arguments) - halfπ,
              da = Math.abs(a1 - a0),
              cw = a0 > a1 ? 0 : 1;
          if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
          if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
          var rc,
              cr,
              rp,
              ap,
              p0 = 0,
              p1 = 0,
              x0,
              y0,
              x1,
              y1,
              x2,
              y2,
              x3,
              y3,
              path = [];

          if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
            rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
            if (!cw) p1 *= -1;
            if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
            if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
          }

          if (r1) {
            x0 = r1 * Math.cos(a0 + p1);
            y0 = r1 * Math.sin(a0 + p1);
            x1 = r1 * Math.cos(a1 - p1);
            y1 = r1 * Math.sin(a1 - p1);
            var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;

            if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
              var h1 = (a0 + a1) / 2;
              x0 = r1 * Math.cos(h1);
              y0 = r1 * Math.sin(h1);
              x1 = y1 = null;
            }
          } else {
            x0 = y0 = 0;
          }

          if (r0) {
            x2 = r0 * Math.cos(a1 - p0);
            y2 = r0 * Math.sin(a1 - p0);
            x3 = r0 * Math.cos(a0 + p0);
            y3 = r0 * Math.sin(a0 + p0);
            var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;

            if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
              var h0 = (a0 + a1) / 2;
              x2 = r0 * Math.cos(h0);
              y2 = r0 * Math.sin(h0);
              x3 = y3 = null;
            }
          } else {
            x2 = y2 = 0;
          }

          if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
            cr = r0 < r1 ^ cw ? 0 : 1;
            var rc1 = rc,
                rc0 = rc;

            if (da < π) {
              var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),
                  ax = x0 - oc[0],
                  ay = y0 - oc[1],
                  bx = x1 - oc[0],
                  by = y1 - oc[1],
                  kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
                  lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
              rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
            }

            if (x1 != null) {
              var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),
                  t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);

              if (rc === rc1) {
                path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
              } else {
                path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
              }
            } else {
              path.push("M", x0, ",", y0);
            }

            if (x3 != null) {
              var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),
                  t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);

              if (rc === rc0) {
                path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
              } else {
                path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
              }
            } else {
              path.push("L", x2, ",", y2);
            }
          } else {
            path.push("M", x0, ",", y0);
            if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
            path.push("L", x2, ",", y2);
            if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
          }

          path.push("Z");
          return path.join("");
        }

        function circleSegment(r1, cw) {
          return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
        }

        arc.innerRadius = function (v) {
          if (!arguments.length) return innerRadius;
          innerRadius = d3_functor(v);
          return arc;
        };

        arc.outerRadius = function (v) {
          if (!arguments.length) return outerRadius;
          outerRadius = d3_functor(v);
          return arc;
        };

        arc.cornerRadius = function (v) {
          if (!arguments.length) return cornerRadius;
          cornerRadius = d3_functor(v);
          return arc;
        };

        arc.padRadius = function (v) {
          if (!arguments.length) return padRadius;
          padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
          return arc;
        };

        arc.startAngle = function (v) {
          if (!arguments.length) return startAngle;
          startAngle = d3_functor(v);
          return arc;
        };

        arc.endAngle = function (v) {
          if (!arguments.length) return endAngle;
          endAngle = d3_functor(v);
          return arc;
        };

        arc.padAngle = function (v) {
          if (!arguments.length) return padAngle;
          padAngle = d3_functor(v);
          return arc;
        };

        arc.centroid = function () {
          var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
              a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
          return [Math.cos(a) * r, Math.sin(a) * r];
        };

        return arc;
      };

      var d3_svg_arcAuto = "auto";

      function d3_svg_arcInnerRadius(d) {
        return d.innerRadius;
      }

      function d3_svg_arcOuterRadius(d) {
        return d.outerRadius;
      }

      function d3_svg_arcStartAngle(d) {
        return d.startAngle;
      }

      function d3_svg_arcEndAngle(d) {
        return d.endAngle;
      }

      function d3_svg_arcPadAngle(d) {
        return d && d.padAngle;
      }

      function d3_svg_arcSweep(x0, y0, x1, y1) {
        return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
      }

      function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
        var x01 = p0[0] - p1[0],
            y01 = p0[1] - p1[1],
            lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
            ox = lo * y01,
            oy = -lo * x01,
            x1 = p0[0] + ox,
            y1 = p0[1] + oy,
            x2 = p1[0] + ox,
            y2 = p1[1] + oy,
            x3 = (x1 + x2) / 2,
            y3 = (y1 + y2) / 2,
            dx = x2 - x1,
            dy = y2 - y1,
            d2 = dx * dx + dy * dy,
            r = r1 - rc,
            D = x1 * y2 - x2 * y1,
            d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),
            cx0 = (D * dy - dx * d) / d2,
            cy0 = (-D * dx - dy * d) / d2,
            cx1 = (D * dy + dx * d) / d2,
            cy1 = (-D * dx + dy * d) / d2,
            dx0 = cx0 - x3,
            dy0 = cy0 - y3,
            dx1 = cx1 - x3,
            dy1 = cy1 - y3;
        if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
        return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];
      }

      function d3_svg_line(projection) {
        var x = d3_geom_pointX,
            y = d3_geom_pointY,
            defined = d3_true,
            interpolate = d3_svg_lineLinear,
            interpolateKey = interpolate.key,
            tension = .7;

        function line(data) {
          var segments = [],
              points = [],
              i = -1,
              n = data.length,
              d,
              fx = d3_functor(x),
              fy = d3_functor(y);

          function segment() {
            segments.push("M", interpolate(projection(points), tension));
          }

          while (++i < n) {
            if (defined.call(this, d = data[i], i)) {
              points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);
            } else if (points.length) {
              segment();
              points = [];
            }
          }

          if (points.length) segment();
          return segments.length ? segments.join("") : null;
        }

        line.x = function (_) {
          if (!arguments.length) return x;
          x = _;
          return line;
        };

        line.y = function (_) {
          if (!arguments.length) return y;
          y = _;
          return line;
        };

        line.defined = function (_) {
          if (!arguments.length) return defined;
          defined = _;
          return line;
        };

        line.interpolate = function (_) {
          if (!arguments.length) return interpolateKey;
          if (typeof _ === "function") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
          return line;
        };

        line.tension = function (_) {
          if (!arguments.length) return tension;
          tension = _;
          return line;
        };

        return line;
      }

      d3.svg.line = function () {
        return d3_svg_line(d3_identity);
      };

      var d3_svg_lineInterpolators = d3.map({
        linear: d3_svg_lineLinear,
        "linear-closed": d3_svg_lineLinearClosed,
        step: d3_svg_lineStep,
        "step-before": d3_svg_lineStepBefore,
        "step-after": d3_svg_lineStepAfter,
        basis: d3_svg_lineBasis,
        "basis-open": d3_svg_lineBasisOpen,
        "basis-closed": d3_svg_lineBasisClosed,
        bundle: d3_svg_lineBundle,
        cardinal: d3_svg_lineCardinal,
        "cardinal-open": d3_svg_lineCardinalOpen,
        "cardinal-closed": d3_svg_lineCardinalClosed,
        monotone: d3_svg_lineMonotone
      });
      d3_svg_lineInterpolators.forEach(function (key, value) {
        value.key = key;
        value.closed = /-closed$/.test(key);
      });

      function d3_svg_lineLinear(points) {
        return points.length > 1 ? points.join("L") : points + "Z";
      }

      function d3_svg_lineLinearClosed(points) {
        return points.join("L") + "Z";
      }

      function d3_svg_lineStep(points) {
        var i = 0,
            n = points.length,
            p = points[0],
            path = [p[0], ",", p[1]];

        while (++i < n) {
          path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
        }

        if (n > 1) path.push("H", p[0]);
        return path.join("");
      }

      function d3_svg_lineStepBefore(points) {
        var i = 0,
            n = points.length,
            p = points[0],
            path = [p[0], ",", p[1]];

        while (++i < n) {
          path.push("V", (p = points[i])[1], "H", p[0]);
        }

        return path.join("");
      }

      function d3_svg_lineStepAfter(points) {
        var i = 0,
            n = points.length,
            p = points[0],
            path = [p[0], ",", p[1]];

        while (++i < n) {
          path.push("H", (p = points[i])[0], "V", p[1]);
        }

        return path.join("");
      }

      function d3_svg_lineCardinalOpen(points, tension) {
        return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
      }

      function d3_svg_lineCardinalClosed(points, tension) {
        return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));
      }

      function d3_svg_lineCardinal(points, tension) {
        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
      }

      function d3_svg_lineHermite(points, tangents) {
        if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
          return d3_svg_lineLinear(points);
        }

        var quad = points.length != tangents.length,
            path = "",
            p0 = points[0],
            p = points[1],
            t0 = tangents[0],
            t = t0,
            pi = 1;

        if (quad) {
          path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
          p0 = points[1];
          pi = 2;
        }

        if (tangents.length > 1) {
          t = tangents[1];
          p = points[pi];
          pi++;
          path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];

          for (var i = 2; i < tangents.length; i++, pi++) {
            p = points[pi];
            t = tangents[i];
            path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
          }
        }

        if (quad) {
          var lp = points[pi];
          path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
        }

        return path;
      }

      function d3_svg_lineCardinalTangents(points, tension) {
        var tangents = [],
            a = (1 - tension) / 2,
            p0,
            p1 = points[0],
            p2 = points[1],
            i = 1,
            n = points.length;

        while (++i < n) {
          p0 = p1;
          p1 = p2;
          p2 = points[i];
          tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);
        }

        return tangents;
      }

      function d3_svg_lineBasis(points) {
        if (points.length < 3) return d3_svg_lineLinear(points);
        var i = 1,
            n = points.length,
            pi = points[0],
            x0 = pi[0],
            y0 = pi[1],
            px = [x0, x0, x0, (pi = points[1])[0]],
            py = [y0, y0, y0, pi[1]],
            path = [x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];
        points.push(points[n - 1]);

        while (++i <= n) {
          pi = points[i];
          px.shift();
          px.push(pi[0]);
          py.shift();
          py.push(pi[1]);
          d3_svg_lineBasisBezier(path, px, py);
        }

        points.pop();
        path.push("L", pi);
        return path.join("");
      }

      function d3_svg_lineBasisOpen(points) {
        if (points.length < 4) return d3_svg_lineLinear(points);
        var path = [],
            i = -1,
            n = points.length,
            pi,
            px = [0],
            py = [0];

        while (++i < 3) {
          pi = points[i];
          px.push(pi[0]);
          py.push(pi[1]);
        }

        path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
        --i;

        while (++i < n) {
          pi = points[i];
          px.shift();
          px.push(pi[0]);
          py.shift();
          py.push(pi[1]);
          d3_svg_lineBasisBezier(path, px, py);
        }

        return path.join("");
      }

      function d3_svg_lineBasisClosed(points) {
        var path,
            i = -1,
            n = points.length,
            m = n + 4,
            pi,
            px = [],
            py = [];

        while (++i < 4) {
          pi = points[i % n];
          px.push(pi[0]);
          py.push(pi[1]);
        }

        path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];
        --i;

        while (++i < m) {
          pi = points[i % n];
          px.shift();
          px.push(pi[0]);
          py.shift();
          py.push(pi[1]);
          d3_svg_lineBasisBezier(path, px, py);
        }

        return path.join("");
      }

      function d3_svg_lineBundle(points, tension) {
        var n = points.length - 1;

        if (n) {
          var x0 = points[0][0],
              y0 = points[0][1],
              dx = points[n][0] - x0,
              dy = points[n][1] - y0,
              i = -1,
              p,
              t;

          while (++i <= n) {
            p = points[i];
            t = i / n;
            p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
            p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
          }
        }

        return d3_svg_lineBasis(points);
      }

      function d3_svg_lineDot4(a, b) {
        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
      }

      var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],
          d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],
          d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];

      function d3_svg_lineBasisBezier(path, x, y) {
        path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
      }

      function d3_svg_lineSlope(p0, p1) {
        return (p1[1] - p0[1]) / (p1[0] - p0[0]);
      }

      function d3_svg_lineFiniteDifferences(points) {
        var i = 0,
            j = points.length - 1,
            m = [],
            p0 = points[0],
            p1 = points[1],
            d = m[0] = d3_svg_lineSlope(p0, p1);

        while (++i < j) {
          m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
        }

        m[i] = d;
        return m;
      }

      function d3_svg_lineMonotoneTangents(points) {
        var tangents = [],
            d,
            a,
            b,
            s,
            m = d3_svg_lineFiniteDifferences(points),
            i = -1,
            j = points.length - 1;

        while (++i < j) {
          d = d3_svg_lineSlope(points[i], points[i + 1]);

          if (abs(d) < ε) {
            m[i] = m[i + 1] = 0;
          } else {
            a = m[i] / d;
            b = m[i + 1] / d;
            s = a * a + b * b;

            if (s > 9) {
              s = d * 3 / Math.sqrt(s);
              m[i] = s * a;
              m[i + 1] = s * b;
            }
          }
        }

        i = -1;

        while (++i <= j) {
          s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
          tangents.push([s || 0, m[i] * s || 0]);
        }

        return tangents;
      }

      function d3_svg_lineMonotone(points) {
        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
      }

      d3.svg.line.radial = function () {
        var line = d3_svg_line(d3_svg_lineRadial);
        line.radius = line.x, delete line.x;
        line.angle = line.y, delete line.y;
        return line;
      };

      function d3_svg_lineRadial(points) {
        var point,
            i = -1,
            n = points.length,
            r,
            a;

        while (++i < n) {
          point = points[i];
          r = point[0];
          a = point[1] - halfπ;
          point[0] = r * Math.cos(a);
          point[1] = r * Math.sin(a);
        }

        return points;
      }

      function d3_svg_area(projection) {
        var x0 = d3_geom_pointX,
            x1 = d3_geom_pointX,
            y0 = 0,
            y1 = d3_geom_pointY,
            defined = d3_true,
            interpolate = d3_svg_lineLinear,
            interpolateKey = interpolate.key,
            interpolateReverse = interpolate,
            L = "L",
            tension = .7;

        function area(data) {
          var segments = [],
              points0 = [],
              points1 = [],
              i = -1,
              n = data.length,
              d,
              fx0 = d3_functor(x0),
              fy0 = d3_functor(y0),
              fx1 = x0 === x1 ? function () {
            return x;
          } : d3_functor(x1),
              fy1 = y0 === y1 ? function () {
            return y;
          } : d3_functor(y1),
              x,
              y;

          function segment() {
            segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
          }

          while (++i < n) {
            if (defined.call(this, d = data[i], i)) {
              points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);
              points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);
            } else if (points0.length) {
              segment();
              points0 = [];
              points1 = [];
            }
          }

          if (points0.length) segment();
          return segments.length ? segments.join("") : null;
        }

        area.x = function (_) {
          if (!arguments.length) return x1;
          x0 = x1 = _;
          return area;
        };

        area.x0 = function (_) {
          if (!arguments.length) return x0;
          x0 = _;
          return area;
        };

        area.x1 = function (_) {
          if (!arguments.length) return x1;
          x1 = _;
          return area;
        };

        area.y = function (_) {
          if (!arguments.length) return y1;
          y0 = y1 = _;
          return area;
        };

        area.y0 = function (_) {
          if (!arguments.length) return y0;
          y0 = _;
          return area;
        };

        area.y1 = function (_) {
          if (!arguments.length) return y1;
          y1 = _;
          return area;
        };

        area.defined = function (_) {
          if (!arguments.length) return defined;
          defined = _;
          return area;
        };

        area.interpolate = function (_) {
          if (!arguments.length) return interpolateKey;
          if (typeof _ === "function") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
          interpolateReverse = interpolate.reverse || interpolate;
          L = interpolate.closed ? "M" : "L";
          return area;
        };

        area.tension = function (_) {
          if (!arguments.length) return tension;
          tension = _;
          return area;
        };

        return area;
      }

      d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
      d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;

      d3.svg.area = function () {
        return d3_svg_area(d3_identity);
      };

      d3.svg.area.radial = function () {
        var area = d3_svg_area(d3_svg_lineRadial);
        area.radius = area.x, delete area.x;
        area.innerRadius = area.x0, delete area.x0;
        area.outerRadius = area.x1, delete area.x1;
        area.angle = area.y, delete area.y;
        area.startAngle = area.y0, delete area.y0;
        area.endAngle = area.y1, delete area.y1;
        return area;
      };

      d3.svg.chord = function () {
        var source = d3_source,
            target = d3_target,
            radius = d3_svg_chordRadius,
            startAngle = d3_svg_arcStartAngle,
            endAngle = d3_svg_arcEndAngle;

        function chord(d, i) {
          var s = subgroup(this, source, d, i),
              t = subgroup(this, target, d, i);
          return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
        }

        function subgroup(self, f, d, i) {
          var subgroup = f.call(self, d, i),
              r = radius.call(self, subgroup, i),
              a0 = startAngle.call(self, subgroup, i) - halfπ,
              a1 = endAngle.call(self, subgroup, i) - halfπ;
          return {
            r: r,
            a0: a0,
            a1: a1,
            p0: [r * Math.cos(a0), r * Math.sin(a0)],
            p1: [r * Math.cos(a1), r * Math.sin(a1)]
          };
        }

        function equals(a, b) {
          return a.a0 == b.a0 && a.a1 == b.a1;
        }

        function arc(r, p, a) {
          return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
        }

        function curve(r0, p0, r1, p1) {
          return "Q 0,0 " + p1;
        }

        chord.radius = function (v) {
          if (!arguments.length) return radius;
          radius = d3_functor(v);
          return chord;
        };

        chord.source = function (v) {
          if (!arguments.length) return source;
          source = d3_functor(v);
          return chord;
        };

        chord.target = function (v) {
          if (!arguments.length) return target;
          target = d3_functor(v);
          return chord;
        };

        chord.startAngle = function (v) {
          if (!arguments.length) return startAngle;
          startAngle = d3_functor(v);
          return chord;
        };

        chord.endAngle = function (v) {
          if (!arguments.length) return endAngle;
          endAngle = d3_functor(v);
          return chord;
        };

        return chord;
      };

      function d3_svg_chordRadius(d) {
        return d.radius;
      }

      d3.svg.diagonal = function () {
        var source = d3_source,
            target = d3_target,
            projection = d3_svg_diagonalProjection;

        function diagonal(d, i) {
          var p0 = source.call(this, d, i),
              p3 = target.call(this, d, i),
              m = (p0.y + p3.y) / 2,
              p = [p0, {
            x: p0.x,
            y: m
          }, {
            x: p3.x,
            y: m
          }, p3];
          p = p.map(projection);
          return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
        }

        diagonal.source = function (x) {
          if (!arguments.length) return source;
          source = d3_functor(x);
          return diagonal;
        };

        diagonal.target = function (x) {
          if (!arguments.length) return target;
          target = d3_functor(x);
          return diagonal;
        };

        diagonal.projection = function (x) {
          if (!arguments.length) return projection;
          projection = x;
          return diagonal;
        };

        return diagonal;
      };

      function d3_svg_diagonalProjection(d) {
        return [d.x, d.y];
      }

      d3.svg.diagonal.radial = function () {
        var diagonal = d3.svg.diagonal(),
            projection = d3_svg_diagonalProjection,
            projection_ = diagonal.projection;

        diagonal.projection = function (x) {
          return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
        };

        return diagonal;
      };

      function d3_svg_diagonalRadialProjection(projection) {
        return function () {
          var d = projection.apply(this, arguments),
              r = d[0],
              a = d[1] - halfπ;
          return [r * Math.cos(a), r * Math.sin(a)];
        };
      }

      d3.svg.symbol = function () {
        var type = d3_svg_symbolType,
            size = d3_svg_symbolSize;

        function symbol(d, i) {
          return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
        }

        symbol.type = function (x) {
          if (!arguments.length) return type;
          type = d3_functor(x);
          return symbol;
        };

        symbol.size = function (x) {
          if (!arguments.length) return size;
          size = d3_functor(x);
          return symbol;
        };

        return symbol;
      };

      function d3_svg_symbolSize() {
        return 64;
      }

      function d3_svg_symbolType() {
        return "circle";
      }

      function d3_svg_symbolCircle(size) {
        var r = Math.sqrt(size / π);
        return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
      }

      var d3_svg_symbols = d3.map({
        circle: d3_svg_symbolCircle,
        cross: function cross(size) {
          var r = Math.sqrt(size / 5) / 2;
          return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
        },
        diamond: function diamond(size) {
          var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),
              rx = ry * d3_svg_symbolTan30;
          return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
        },
        square: function square(size) {
          var r = Math.sqrt(size) / 2;
          return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
        },
        "triangle-down": function triangleDown(size) {
          var rx = Math.sqrt(size / d3_svg_symbolSqrt3),
              ry = rx * d3_svg_symbolSqrt3 / 2;
          return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
        },
        "triangle-up": function triangleUp(size) {
          var rx = Math.sqrt(size / d3_svg_symbolSqrt3),
              ry = rx * d3_svg_symbolSqrt3 / 2;
          return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
        }
      });
      d3.svg.symbolTypes = d3_svg_symbols.keys();
      var d3_svg_symbolSqrt3 = Math.sqrt(3),
          d3_svg_symbolTan30 = Math.tan(30 * d3_radians);

      d3_selectionPrototype.transition = function (name) {
        var id = d3_transitionInheritId || ++d3_transitionId,
            ns = d3_transitionNamespace(name),
            subgroups = [],
            subgroup,
            node,
            transition = d3_transitionInherit || {
          time: Date.now(),
          ease: d3_ease_cubicInOut,
          delay: 0,
          duration: 250
        };

        for (var j = -1, m = this.length; ++j < m;) {
          subgroups.push(subgroup = []);

          for (var group = this[j], i = -1, n = group.length; ++i < n;) {
            if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
            subgroup.push(node);
          }
        }

        return d3_transition(subgroups, ns, id);
      };

      d3_selectionPrototype.interrupt = function (name) {
        return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
      };

      var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());

      function d3_selection_interruptNS(ns) {
        return function () {
          var lock, activeId, active;

          if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
            active.timer.c = null;
            active.timer.t = NaN;
            if (--lock.count) delete lock[activeId];else delete this[ns];
            lock.active += .5;
            active.event && active.event.interrupt.call(this, this.__data__, active.index);
          }
        };
      }

      function d3_transition(groups, ns, id) {
        d3_subclass(groups, d3_transitionPrototype);
        groups.namespace = ns;
        groups.id = id;
        return groups;
      }

      var d3_transitionPrototype = [],
          d3_transitionId = 0,
          d3_transitionInheritId,
          d3_transitionInherit;
      d3_transitionPrototype.call = d3_selectionPrototype.call;
      d3_transitionPrototype.empty = d3_selectionPrototype.empty;
      d3_transitionPrototype.node = d3_selectionPrototype.node;
      d3_transitionPrototype.size = d3_selectionPrototype.size;

      d3.transition = function (selection, name) {
        return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
      };

      d3.transition.prototype = d3_transitionPrototype;

      d3_transitionPrototype.select = function (selector) {
        var id = this.id,
            ns = this.namespace,
            subgroups = [],
            subgroup,
            subnode,
            node;
        selector = d3_selection_selector(selector);

        for (var j = -1, m = this.length; ++j < m;) {
          subgroups.push(subgroup = []);

          for (var group = this[j], i = -1, n = group.length; ++i < n;) {
            if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
              if ("__data__" in node) subnode.__data__ = node.__data__;
              d3_transitionNode(subnode, i, ns, id, node[ns][id]);
              subgroup.push(subnode);
            } else {
              subgroup.push(null);
            }
          }
        }

        return d3_transition(subgroups, ns, id);
      };

      d3_transitionPrototype.selectAll = function (selector) {
        var id = this.id,
            ns = this.namespace,
            subgroups = [],
            subgroup,
            subnodes,
            node,
            subnode,
            transition;
        selector = d3_selection_selectorAll(selector);

        for (var j = -1, m = this.length; ++j < m;) {
          for (var group = this[j], i = -1, n = group.length; ++i < n;) {
            if (node = group[i]) {
              transition = node[ns][id];
              subnodes = selector.call(node, node.__data__, i, j);
              subgroups.push(subgroup = []);

              for (var k = -1, o = subnodes.length; ++k < o;) {
                if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
                subgroup.push(subnode);
              }
            }
          }
        }

        return d3_transition(subgroups, ns, id);
      };

      d3_transitionPrototype.filter = function (filter) {
        var subgroups = [],
            subgroup,
            group,
            node;
        if (typeof filter !== "function") filter = d3_selection_filter(filter);

        for (var j = 0, m = this.length; j < m; j++) {
          subgroups.push(subgroup = []);

          for (var group = this[j], i = 0, n = group.length; i < n; i++) {
            if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
              subgroup.push(node);
            }
          }
        }

        return d3_transition(subgroups, this.namespace, this.id);
      };

      d3_transitionPrototype.tween = function (name, tween) {
        var id = this.id,
            ns = this.namespace;
        if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
        return d3_selection_each(this, tween == null ? function (node) {
          node[ns][id].tween.remove(name);
        } : function (node) {
          node[ns][id].tween.set(name, tween);
        });
      };

      function d3_transition_tween(groups, name, value, tween) {
        var id = groups.id,
            ns = groups.namespace;
        return d3_selection_each(groups, typeof value === "function" ? function (node, i, j) {
          node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
        } : (value = tween(value), function (node) {
          node[ns][id].tween.set(name, value);
        }));
      }

      d3_transitionPrototype.attr = function (nameNS, value) {
        if (arguments.length < 2) {
          for (value in nameNS) {
            this.attr(value, nameNS[value]);
          }

          return this;
        }

        var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate,
            name = d3.ns.qualify(nameNS);

        function attrNull() {
          this.removeAttribute(name);
        }

        function attrNullNS() {
          this.removeAttributeNS(name.space, name.local);
        }

        function attrTween(b) {
          return b == null ? attrNull : (b += "", function () {
            var a = this.getAttribute(name),
                i;
            return a !== b && (i = interpolate(a, b), function (t) {
              this.setAttribute(name, i(t));
            });
          });
        }

        function attrTweenNS(b) {
          return b == null ? attrNullNS : (b += "", function () {
            var a = this.getAttributeNS(name.space, name.local),
                i;
            return a !== b && (i = interpolate(a, b), function (t) {
              this.setAttributeNS(name.space, name.local, i(t));
            });
          });
        }

        return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
      };

      d3_transitionPrototype.attrTween = function (nameNS, tween) {
        var name = d3.ns.qualify(nameNS);

        function attrTween(d, i) {
          var f = tween.call(this, d, i, this.getAttribute(name));
          return f && function (t) {
            this.setAttribute(name, f(t));
          };
        }

        function attrTweenNS(d, i) {
          var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
          return f && function (t) {
            this.setAttributeNS(name.space, name.local, f(t));
          };
        }

        return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
      };

      d3_transitionPrototype.style = function (name, value, priority) {
        var n = arguments.length;

        if (n < 3) {
          if (typeof name !== "string") {
            if (n < 2) value = "";

            for (priority in name) {
              this.style(priority, name[priority], value);
            }

            return this;
          }

          priority = "";
        }

        function styleNull() {
          this.style.removeProperty(name);
        }

        function styleString(b) {
          return b == null ? styleNull : (b += "", function () {
            var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),
                i;
            return a !== b && (i = d3_interpolate(a, b), function (t) {
              this.style.setProperty(name, i(t), priority);
            });
          });
        }

        return d3_transition_tween(this, "style." + name, value, styleString);
      };

      d3_transitionPrototype.styleTween = function (name, tween, priority) {
        if (arguments.length < 3) priority = "";

        function styleTween(d, i) {
          var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
          return f && function (t) {
            this.style.setProperty(name, f(t), priority);
          };
        }

        return this.tween("style." + name, styleTween);
      };

      d3_transitionPrototype.text = function (value) {
        return d3_transition_tween(this, "text", value, d3_transition_text);
      };

      function d3_transition_text(b) {
        if (b == null) b = "";
        return function () {
          this.textContent = b;
        };
      }

      d3_transitionPrototype.remove = function () {
        var ns = this.namespace;
        return this.each("end.transition", function () {
          var p;
          if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
        });
      };

      d3_transitionPrototype.ease = function (value) {
        var id = this.id,
            ns = this.namespace;
        if (arguments.length < 1) return this.node()[ns][id].ease;
        if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
        return d3_selection_each(this, function (node) {
          node[ns][id].ease = value;
        });
      };

      d3_transitionPrototype.delay = function (value) {
        var id = this.id,
            ns = this.namespace;
        if (arguments.length < 1) return this.node()[ns][id].delay;
        return d3_selection_each(this, typeof value === "function" ? function (node, i, j) {
          node[ns][id].delay = +value.call(node, node.__data__, i, j);
        } : (value = +value, function (node) {
          node[ns][id].delay = value;
        }));
      };

      d3_transitionPrototype.duration = function (value) {
        var id = this.id,
            ns = this.namespace;
        if (arguments.length < 1) return this.node()[ns][id].duration;
        return d3_selection_each(this, typeof value === "function" ? function (node, i, j) {
          node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
        } : (value = Math.max(1, value), function (node) {
          node[ns][id].duration = value;
        }));
      };

      d3_transitionPrototype.each = function (type, listener) {
        var id = this.id,
            ns = this.namespace;

        if (arguments.length < 2) {
          var inherit = d3_transitionInherit,
              inheritId = d3_transitionInheritId;

          try {
            d3_transitionInheritId = id;
            d3_selection_each(this, function (node, i, j) {
              d3_transitionInherit = node[ns][id];
              type.call(node, node.__data__, i, j);
            });
          } finally {
            d3_transitionInherit = inherit;
            d3_transitionInheritId = inheritId;
          }
        } else {
          d3_selection_each(this, function (node) {
            var transition = node[ns][id];
            (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
          });
        }

        return this;
      };

      d3_transitionPrototype.transition = function () {
        var id0 = this.id,
            id1 = ++d3_transitionId,
            ns = this.namespace,
            subgroups = [],
            subgroup,
            group,
            node,
            transition;

        for (var j = 0, m = this.length; j < m; j++) {
          subgroups.push(subgroup = []);

          for (var group = this[j], i = 0, n = group.length; i < n; i++) {
            if (node = group[i]) {
              transition = node[ns][id0];
              d3_transitionNode(node, i, ns, id1, {
                time: transition.time,
                ease: transition.ease,
                delay: transition.delay + transition.duration,
                duration: transition.duration
              });
            }

            subgroup.push(node);
          }
        }

        return d3_transition(subgroups, ns, id1);
      };

      function d3_transitionNamespace(name) {
        return name == null ? "__transition__" : "__transition_" + name + "__";
      }

      function d3_transitionNode(node, i, ns, id, inherit) {
        var lock = node[ns] || (node[ns] = {
          active: 0,
          count: 0
        }),
            transition = lock[id],
            time,
            timer,
            duration,
            ease,
            tweens;

        function schedule(elapsed) {
          var delay = transition.delay;
          timer.t = delay + time;
          if (delay <= elapsed) return start(elapsed - delay);
          timer.c = start;
        }

        function start(elapsed) {
          var activeId = lock.active,
              active = lock[activeId];

          if (active) {
            active.timer.c = null;
            active.timer.t = NaN;
            --lock.count;
            delete lock[activeId];
            active.event && active.event.interrupt.call(node, node.__data__, active.index);
          }

          for (var cancelId in lock) {
            if (+cancelId < id) {
              var cancel = lock[cancelId];
              cancel.timer.c = null;
              cancel.timer.t = NaN;
              --lock.count;
              delete lock[cancelId];
            }
          }

          timer.c = tick;
          d3_timer(function () {
            if (timer.c && tick(elapsed || 1)) {
              timer.c = null;
              timer.t = NaN;
            }

            return 1;
          }, 0, time);
          lock.active = id;
          transition.event && transition.event.start.call(node, node.__data__, i);
          tweens = [];
          transition.tween.forEach(function (key, value) {
            if (value = value.call(node, node.__data__, i)) {
              tweens.push(value);
            }
          });
          ease = transition.ease;
          duration = transition.duration;
        }

        function tick(elapsed) {
          var t = elapsed / duration,
              e = ease(t),
              n = tweens.length;

          while (n > 0) {
            tweens[--n].call(node, e);
          }

          if (t >= 1) {
            transition.event && transition.event.end.call(node, node.__data__, i);
            if (--lock.count) delete lock[id];else delete node[ns];
            return 1;
          }
        }

        if (!transition) {
          time = inherit.time;
          timer = d3_timer(schedule, 0, time);
          transition = lock[id] = {
            tween: new d3_Map(),
            time: time,
            timer: timer,
            delay: inherit.delay,
            duration: inherit.duration,
            ease: inherit.ease,
            index: i
          };
          inherit = null;
          ++lock.count;
        }
      }

      d3.svg.axis = function () {
        var scale = d3.scale.linear(),
            orient = d3_svg_axisDefaultOrient,
            innerTickSize = 6,
            outerTickSize = 6,
            tickPadding = 3,
            tickArguments_ = [10],
            tickValues = null,
            tickFormat_;

        function axis(g) {
          g.each(function () {
            var g = d3.select(this);
            var scale0 = this.__chart__ || scale,
                scale1 = this.__chart__ = scale.copy();
            var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,
                tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,
                tick = g.selectAll(".tick").data(ticks, scale1),
                tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε),
                tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(),
                tickUpdate = d3.transition(tick.order()).style("opacity", 1),
                tickSpacing = Math.max(innerTickSize, 0) + tickPadding,
                tickTransform;
            var range = d3_scaleRange(scale1),
                path = g.selectAll(".domain").data([0]),
                pathUpdate = (path.enter().append("path").attr("class", "domain"), d3.transition(path));
            tickEnter.append("line");
            tickEnter.append("text");
            var lineEnter = tickEnter.select("line"),
                lineUpdate = tickUpdate.select("line"),
                text = tick.select("text").text(tickFormat),
                textEnter = tickEnter.select("text"),
                textUpdate = tickUpdate.select("text"),
                sign = orient === "top" || orient === "left" ? -1 : 1,
                x1,
                x2,
                y1,
                y2;

            if (orient === "bottom" || orient === "top") {
              tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
              text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
              pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
            } else {
              tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
              text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
              pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
            }

            lineEnter.attr(y2, sign * innerTickSize);
            textEnter.attr(y1, sign * tickSpacing);
            lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
            textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);

            if (scale1.rangeBand) {
              var x = scale1,
                  dx = x.rangeBand() / 2;

              scale0 = scale1 = function scale1(d) {
                return x(d) + dx;
              };
            } else if (scale0.rangeBand) {
              scale0 = scale1;
            } else {
              tickExit.call(tickTransform, scale1, scale0);
            }

            tickEnter.call(tickTransform, scale0, scale1);
            tickUpdate.call(tickTransform, scale1, scale1);
          });
        }

        axis.scale = function (x) {
          if (!arguments.length) return scale;
          scale = x;
          return axis;
        };

        axis.orient = function (x) {
          if (!arguments.length) return orient;
          orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
          return axis;
        };

        axis.ticks = function () {
          if (!arguments.length) return tickArguments_;
          tickArguments_ = d3_array(arguments);
          return axis;
        };

        axis.tickValues = function (x) {
          if (!arguments.length) return tickValues;
          tickValues = x;
          return axis;
        };

        axis.tickFormat = function (x) {
          if (!arguments.length) return tickFormat_;
          tickFormat_ = x;
          return axis;
        };

        axis.tickSize = function (x) {
          var n = arguments.length;
          if (!n) return innerTickSize;
          innerTickSize = +x;
          outerTickSize = +arguments[n - 1];
          return axis;
        };

        axis.innerTickSize = function (x) {
          if (!arguments.length) return innerTickSize;
          innerTickSize = +x;
          return axis;
        };

        axis.outerTickSize = function (x) {
          if (!arguments.length) return outerTickSize;
          outerTickSize = +x;
          return axis;
        };

        axis.tickPadding = function (x) {
          if (!arguments.length) return tickPadding;
          tickPadding = +x;
          return axis;
        };

        axis.tickSubdivide = function () {
          return arguments.length && axis;
        };

        return axis;
      };

      var d3_svg_axisDefaultOrient = "bottom",
          d3_svg_axisOrients = {
        top: 1,
        right: 1,
        bottom: 1,
        left: 1
      };

      function d3_svg_axisX(selection, x0, x1) {
        selection.attr("transform", function (d) {
          var v0 = x0(d);
          return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
        });
      }

      function d3_svg_axisY(selection, y0, y1) {
        selection.attr("transform", function (d) {
          var v0 = y0(d);
          return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
        });
      }

      d3.svg.brush = function () {
        var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"),
            x = null,
            y = null,
            xExtent = [0, 0],
            yExtent = [0, 0],
            xExtentDomain,
            yExtentDomain,
            xClamp = true,
            yClamp = true,
            resizes = d3_svg_brushResizes[0];

        function brush(g) {
          g.each(function () {
            var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
            var background = g.selectAll(".background").data([0]);
            background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
            g.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");
            var resize = g.selectAll(".resize").data(resizes, d3_identity);
            resize.exit().remove();
            resize.enter().append("g").attr("class", function (d) {
              return "resize " + d;
            }).style("cursor", function (d) {
              return d3_svg_brushCursor[d];
            }).append("rect").attr("x", function (d) {
              return /[ew]$/.test(d) ? -3 : null;
            }).attr("y", function (d) {
              return /^[ns]/.test(d) ? -3 : null;
            }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
            resize.style("display", brush.empty() ? "none" : null);
            var gUpdate = d3.transition(g),
                backgroundUpdate = d3.transition(background),
                range;

            if (x) {
              range = d3_scaleRange(x);
              backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
              redrawX(gUpdate);
            }

            if (y) {
              range = d3_scaleRange(y);
              backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
              redrawY(gUpdate);
            }

            redraw(gUpdate);
          });
        }

        brush.event = function (g) {
          g.each(function () {
            var event_ = event.of(this, arguments),
                extent1 = {
              x: xExtent,
              y: yExtent,
              i: xExtentDomain,
              j: yExtentDomain
            },
                extent0 = this.__chart__ || extent1;
            this.__chart__ = extent1;

            if (d3_transitionInheritId) {
              d3.select(this).transition().each("start.brush", function () {
                xExtentDomain = extent0.i;
                yExtentDomain = extent0.j;
                xExtent = extent0.x;
                yExtent = extent0.y;
                event_({
                  type: "brushstart"
                });
              }).tween("brush:brush", function () {
                var xi = d3_interpolateArray(xExtent, extent1.x),
                    yi = d3_interpolateArray(yExtent, extent1.y);
                xExtentDomain = yExtentDomain = null;
                return function (t) {
                  xExtent = extent1.x = xi(t);
                  yExtent = extent1.y = yi(t);
                  event_({
                    type: "brush",
                    mode: "resize"
                  });
                };
              }).each("end.brush", function () {
                xExtentDomain = extent1.i;
                yExtentDomain = extent1.j;
                event_({
                  type: "brush",
                  mode: "resize"
                });
                event_({
                  type: "brushend"
                });
              });
            } else {
              event_({
                type: "brushstart"
              });
              event_({
                type: "brush",
                mode: "resize"
              });
              event_({
                type: "brushend"
              });
            }
          });
        };

        function redraw(g) {
          g.selectAll(".resize").attr("transform", function (d) {
            return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
          });
        }

        function redrawX(g) {
          g.select(".extent").attr("x", xExtent[0]);
          g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
        }

        function redrawY(g) {
          g.select(".extent").attr("y", yExtent[0]);
          g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
        }

        function brushstart() {
          var target = this,
              eventTarget = d3.select(d3.event.target),
              event_ = event.of(target, arguments),
              g = d3.select(target),
              resizing = eventTarget.datum(),
              resizingX = !/^(n|s)$/.test(resizing) && x,
              resizingY = !/^(e|w)$/.test(resizing) && y,
              dragging = eventTarget.classed("extent"),
              dragRestore = d3_event_dragSuppress(target),
              center,
              origin = d3.mouse(target),
              offset;
          var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);

          if (d3.event.changedTouches) {
            w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
          } else {
            w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
          }

          g.interrupt().selectAll("*").interrupt();

          if (dragging) {
            origin[0] = xExtent[0] - origin[0];
            origin[1] = yExtent[0] - origin[1];
          } else if (resizing) {
            var ex = +/w$/.test(resizing),
                ey = +/^n/.test(resizing);
            offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];
            origin[0] = xExtent[ex];
            origin[1] = yExtent[ey];
          } else if (d3.event.altKey) center = origin.slice();

          g.style("pointer-events", "none").selectAll(".resize").style("display", null);
          d3.select("body").style("cursor", eventTarget.style("cursor"));
          event_({
            type: "brushstart"
          });
          brushmove();

          function keydown() {
            if (d3.event.keyCode == 32) {
              if (!dragging) {
                center = null;
                origin[0] -= xExtent[1];
                origin[1] -= yExtent[1];
                dragging = 2;
              }

              d3_eventPreventDefault();
            }
          }

          function keyup() {
            if (d3.event.keyCode == 32 && dragging == 2) {
              origin[0] += xExtent[1];
              origin[1] += yExtent[1];
              dragging = 0;
              d3_eventPreventDefault();
            }
          }

          function brushmove() {
            var point = d3.mouse(target),
                moved = false;

            if (offset) {
              point[0] += offset[0];
              point[1] += offset[1];
            }

            if (!dragging) {
              if (d3.event.altKey) {
                if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];
                origin[0] = xExtent[+(point[0] < center[0])];
                origin[1] = yExtent[+(point[1] < center[1])];
              } else center = null;
            }

            if (resizingX && move1(point, x, 0)) {
              redrawX(g);
              moved = true;
            }

            if (resizingY && move1(point, y, 1)) {
              redrawY(g);
              moved = true;
            }

            if (moved) {
              redraw(g);
              event_({
                type: "brush",
                mode: dragging ? "move" : "resize"
              });
            }
          }

          function move1(point, scale, i) {
            var range = d3_scaleRange(scale),
                r0 = range[0],
                r1 = range[1],
                position = origin[i],
                extent = i ? yExtent : xExtent,
                size = extent[1] - extent[0],
                min,
                max;

            if (dragging) {
              r0 -= position;
              r1 -= size + position;
            }

            min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];

            if (dragging) {
              max = (min += position) + size;
            } else {
              if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));

              if (position < min) {
                max = min;
                min = position;
              } else {
                max = position;
              }
            }

            if (extent[0] != min || extent[1] != max) {
              if (i) yExtentDomain = null;else xExtentDomain = null;
              extent[0] = min;
              extent[1] = max;
              return true;
            }
          }

          function brushend() {
            brushmove();
            g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
            d3.select("body").style("cursor", null);
            w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
            dragRestore();
            event_({
              type: "brushend"
            });
          }
        }

        brush.x = function (z) {
          if (!arguments.length) return x;
          x = z;
          resizes = d3_svg_brushResizes[!x << 1 | !y];
          return brush;
        };

        brush.y = function (z) {
          if (!arguments.length) return y;
          y = z;
          resizes = d3_svg_brushResizes[!x << 1 | !y];
          return brush;
        };

        brush.clamp = function (z) {
          if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;
          if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;
          return brush;
        };

        brush.extent = function (z) {
          var x0, x1, y0, y1, t;

          if (!arguments.length) {
            if (x) {
              if (xExtentDomain) {
                x0 = xExtentDomain[0], x1 = xExtentDomain[1];
              } else {
                x0 = xExtent[0], x1 = xExtent[1];
                if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
                if (x1 < x0) t = x0, x0 = x1, x1 = t;
              }
            }

            if (y) {
              if (yExtentDomain) {
                y0 = yExtentDomain[0], y1 = yExtentDomain[1];
              } else {
                y0 = yExtent[0], y1 = yExtent[1];
                if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
                if (y1 < y0) t = y0, y0 = y1, y1 = t;
              }
            }

            return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];
          }

          if (x) {
            x0 = z[0], x1 = z[1];
            if (y) x0 = x0[0], x1 = x1[0];
            xExtentDomain = [x0, x1];
            if (x.invert) x0 = x(x0), x1 = x(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
            if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];
          }

          if (y) {
            y0 = z[0], y1 = z[1];
            if (x) y0 = y0[1], y1 = y1[1];
            yExtentDomain = [y0, y1];
            if (y.invert) y0 = y(y0), y1 = y(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
            if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];
          }

          return brush;
        };

        brush.clear = function () {
          if (!brush.empty()) {
            xExtent = [0, 0], yExtent = [0, 0];
            xExtentDomain = yExtentDomain = null;
          }

          return brush;
        };

        brush.empty = function () {
          return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
        };

        return d3.rebind(brush, event, "on");
      };

      var d3_svg_brushCursor = {
        n: "ns-resize",
        e: "ew-resize",
        s: "ns-resize",
        w: "ew-resize",
        nw: "nwse-resize",
        ne: "nesw-resize",
        se: "nwse-resize",
        sw: "nesw-resize"
      };
      var d3_svg_brushResizes = [["n", "e", "s", "w", "nw", "ne", "se", "sw"], ["e", "w"], ["n", "s"], []];
      var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
      var d3_time_formatUtc = d3_time_format.utc;
      var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
      d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;

      function d3_time_formatIsoNative(date) {
        return date.toISOString();
      }

      d3_time_formatIsoNative.parse = function (string) {
        var date = new Date(string);
        return isNaN(date) ? null : date;
      };

      d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
      d3_time.second = d3_time_interval(function (date) {
        return new d3_date(Math.floor(date / 1e3) * 1e3);
      }, function (date, offset) {
        date.setTime(date.getTime() + Math.floor(offset) * 1e3);
      }, function (date) {
        return date.getSeconds();
      });
      d3_time.seconds = d3_time.second.range;
      d3_time.seconds.utc = d3_time.second.utc.range;
      d3_time.minute = d3_time_interval(function (date) {
        return new d3_date(Math.floor(date / 6e4) * 6e4);
      }, function (date, offset) {
        date.setTime(date.getTime() + Math.floor(offset) * 6e4);
      }, function (date) {
        return date.getMinutes();
      });
      d3_time.minutes = d3_time.minute.range;
      d3_time.minutes.utc = d3_time.minute.utc.range;
      d3_time.hour = d3_time_interval(function (date) {
        var timezone = date.getTimezoneOffset() / 60;
        return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
      }, function (date, offset) {
        date.setTime(date.getTime() + Math.floor(offset) * 36e5);
      }, function (date) {
        return date.getHours();
      });
      d3_time.hours = d3_time.hour.range;
      d3_time.hours.utc = d3_time.hour.utc.range;
      d3_time.month = d3_time_interval(function (date) {
        date = d3_time.day(date);
        date.setDate(1);
        return date;
      }, function (date, offset) {
        date.setMonth(date.getMonth() + offset);
      }, function (date) {
        return date.getMonth();
      });
      d3_time.months = d3_time.month.range;
      d3_time.months.utc = d3_time.month.utc.range;

      function d3_time_scale(linear, methods, format) {
        function scale(x) {
          return linear(x);
        }

        scale.invert = function (x) {
          return d3_time_scaleDate(linear.invert(x));
        };

        scale.domain = function (x) {
          if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
          linear.domain(x);
          return scale;
        };

        function tickMethod(extent, count) {
          var span = extent[1] - extent[0],
              target = span / count,
              i = d3.bisect(d3_time_scaleSteps, target);
          return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {
            return d / 31536e6;
          }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
        }

        scale.nice = function (interval, skip) {
          var domain = scale.domain(),
              extent = d3_scaleExtent(domain),
              method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
          if (method) interval = method[0], skip = method[1];

          function skipped(date) {
            return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
          }

          return scale.domain(d3_scale_nice(domain, skip > 1 ? {
            floor: function floor(date) {
              while (skipped(date = interval.floor(date))) {
                date = d3_time_scaleDate(date - 1);
              }

              return date;
            },
            ceil: function ceil(date) {
              while (skipped(date = interval.ceil(date))) {
                date = d3_time_scaleDate(+date + 1);
              }

              return date;
            }
          } : interval));
        };

        scale.ticks = function (interval, skip) {
          var extent = d3_scaleExtent(scale.domain()),
              method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [{
            range: interval
          }, skip];
          if (method) interval = method[0], skip = method[1];
          return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
        };

        scale.tickFormat = function () {
          return format;
        };

        scale.copy = function () {
          return d3_time_scale(linear.copy(), methods, format);
        };

        return d3_scale_linearRebind(scale, linear);
      }

      function d3_time_scaleDate(t) {
        return new Date(t);
      }

      var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];
      var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];
      var d3_time_scaleLocalFormat = d3_time_format.multi([[".%L", function (d) {
        return d.getMilliseconds();
      }], [":%S", function (d) {
        return d.getSeconds();
      }], ["%I:%M", function (d) {
        return d.getMinutes();
      }], ["%I %p", function (d) {
        return d.getHours();
      }], ["%a %d", function (d) {
        return d.getDay() && d.getDate() != 1;
      }], ["%b %d", function (d) {
        return d.getDate() != 1;
      }], ["%B", function (d) {
        return d.getMonth();
      }], ["%Y", d3_true]]);
      var d3_time_scaleMilliseconds = {
        range: function range(start, stop, step) {
          return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
        },
        floor: d3_identity,
        ceil: d3_identity
      };
      d3_time_scaleLocalMethods.year = d3_time.year;

      d3_time.scale = function () {
        return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
      };

      var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {
        return [m[0].utc, m[1]];
      });
      var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[".%L", function (d) {
        return d.getUTCMilliseconds();
      }], [":%S", function (d) {
        return d.getUTCSeconds();
      }], ["%I:%M", function (d) {
        return d.getUTCMinutes();
      }], ["%I %p", function (d) {
        return d.getUTCHours();
      }], ["%a %d", function (d) {
        return d.getUTCDay() && d.getUTCDate() != 1;
      }], ["%b %d", function (d) {
        return d.getUTCDate() != 1;
      }], ["%B", function (d) {
        return d.getUTCMonth();
      }], ["%Y", d3_true]]);
      d3_time_scaleUtcMethods.year = d3_time.year.utc;

      d3_time.scale.utc = function () {
        return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
      };

      d3.text = d3_xhrType(function (request) {
        return request.responseText;
      });

      d3.json = function (url, callback) {
        return d3_xhr(url, "application/json", d3_json, callback);
      };

      function d3_json(request) {
        return JSON.parse(request.responseText);
      }

      d3.html = function (url, callback) {
        return d3_xhr(url, "text/html", d3_html, callback);
      };

      function d3_html(request) {
        var range = d3_document.createRange();
        range.selectNode(d3_document.body);
        return range.createContextualFragment(request.responseText);
      }

      d3.xml = d3_xhrType(function (request) {
        return request.responseXML;
      });
      if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = d3, __WEBPACK_AMD_DEFINE_RESULT__ = typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
    }();
    /***/
  },

  /***/
  "./node_modules/calendar-utils/calendar-utils.js":
  /*!*******************************************************!*\
    !*** ./node_modules/calendar-utils/calendar-utils.js ***!
    \*******************************************************/

  /*! exports provided: DAYS_OF_WEEK, SECONDS_IN_DAY, getEventsInPeriod, getWeekViewHeader, getDifferenceInDaysWithExclusions, getWeekView, getMonthView, EventValidationErrorMessage, validateEvents */

  /***/
  function node_modulesCalendarUtilsCalendarUtilsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DAYS_OF_WEEK", function () {
      return DAYS_OF_WEEK;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SECONDS_IN_DAY", function () {
      return SECONDS_IN_DAY;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getEventsInPeriod", function () {
      return getEventsInPeriod;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getWeekViewHeader", function () {
      return getWeekViewHeader;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getDifferenceInDaysWithExclusions", function () {
      return getDifferenceInDaysWithExclusions;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getWeekView", function () {
      return getWeekView;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getMonthView", function () {
      return getMonthView;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EventValidationErrorMessage", function () {
      return EventValidationErrorMessage;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "validateEvents", function () {
      return validateEvents;
    });

    var __assign = undefined && undefined.__assign || function () {
      __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];

          for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
        }

        return t;
      };

      return __assign.apply(this, arguments);
    };

    var __spreadArrays = undefined && undefined.__spreadArrays || function () {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
        s += arguments[i].length;
      }

      for (var r = Array(s), k = 0, i = 0; i < il; i++) {
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
          r[k] = a[j];
        }
      }

      return r;
    };

    var DAYS_OF_WEEK;

    (function (DAYS_OF_WEEK) {
      DAYS_OF_WEEK[DAYS_OF_WEEK["SUNDAY"] = 0] = "SUNDAY";
      DAYS_OF_WEEK[DAYS_OF_WEEK["MONDAY"] = 1] = "MONDAY";
      DAYS_OF_WEEK[DAYS_OF_WEEK["TUESDAY"] = 2] = "TUESDAY";
      DAYS_OF_WEEK[DAYS_OF_WEEK["WEDNESDAY"] = 3] = "WEDNESDAY";
      DAYS_OF_WEEK[DAYS_OF_WEEK["THURSDAY"] = 4] = "THURSDAY";
      DAYS_OF_WEEK[DAYS_OF_WEEK["FRIDAY"] = 5] = "FRIDAY";
      DAYS_OF_WEEK[DAYS_OF_WEEK["SATURDAY"] = 6] = "SATURDAY";
    })(DAYS_OF_WEEK || (DAYS_OF_WEEK = {}));

    var DEFAULT_WEEKEND_DAYS = [DAYS_OF_WEEK.SUNDAY, DAYS_OF_WEEK.SATURDAY];
    var DAYS_IN_WEEK = 7;
    var HOURS_IN_DAY = 24;
    var MINUTES_IN_HOUR = 60;
    var SECONDS_IN_DAY = 60 * 60 * 24;

    function getExcludedSeconds(dateAdapter, _a) {
      var startDate = _a.startDate,
          seconds = _a.seconds,
          excluded = _a.excluded,
          precision = _a.precision;

      if (excluded.length < 1) {
        return 0;
      }

      var addSeconds = dateAdapter.addSeconds,
          getDay = dateAdapter.getDay,
          addDays = dateAdapter.addDays;
      var endDate = addSeconds(startDate, seconds - 1);
      var dayStart = getDay(startDate);
      var dayEnd = getDay(endDate);
      var result = 0; // Calculated in seconds

      var current = startDate;

      var _loop_1 = function _loop_1() {
        var day = getDay(current);

        if (excluded.some(function (excludedDay) {
          return excludedDay === day;
        })) {
          result += calculateExcludedSeconds(dateAdapter, {
            dayStart: dayStart,
            dayEnd: dayEnd,
            day: day,
            precision: precision,
            startDate: startDate,
            endDate: endDate
          });
        }

        current = addDays(current, 1);
      };

      while (current < endDate) {
        _loop_1();
      }

      return result;
    }

    function calculateExcludedSeconds(dateAdapter, _a) {
      var precision = _a.precision,
          day = _a.day,
          dayStart = _a.dayStart,
          dayEnd = _a.dayEnd,
          startDate = _a.startDate,
          endDate = _a.endDate;
      var differenceInSeconds = dateAdapter.differenceInSeconds,
          endOfDay = dateAdapter.endOfDay,
          startOfDay = dateAdapter.startOfDay;

      if (precision === 'minutes') {
        if (day === dayStart) {
          return differenceInSeconds(endOfDay(startDate), startDate) + 1;
        } else if (day === dayEnd) {
          return differenceInSeconds(endDate, startOfDay(endDate)) + 1;
        }
      }

      return SECONDS_IN_DAY;
    }

    function getWeekViewEventSpan(dateAdapter, _a) {
      var event = _a.event,
          offset = _a.offset,
          startOfWeekDate = _a.startOfWeekDate,
          excluded = _a.excluded,
          precision = _a.precision,
          totalDaysInView = _a.totalDaysInView;
      var max = dateAdapter.max,
          differenceInSeconds = dateAdapter.differenceInSeconds,
          addDays = dateAdapter.addDays,
          endOfDay = dateAdapter.endOfDay,
          differenceInDays = dateAdapter.differenceInDays;
      var span = SECONDS_IN_DAY;
      var begin = max([event.start, startOfWeekDate]);

      if (event.end) {
        switch (precision) {
          case 'minutes':
            span = differenceInSeconds(event.end, begin);
            break;

          default:
            span = differenceInDays(addDays(endOfDay(event.end), 1), begin) * SECONDS_IN_DAY;
            break;
        }
      }

      var offsetSeconds = offset * SECONDS_IN_DAY;
      var totalLength = offsetSeconds + span; // the best way to detect if an event is outside the week-view
      // is to check if the total span beginning (from startOfWeekDay or event start) exceeds the total days in the view

      var secondsInView = totalDaysInView * SECONDS_IN_DAY;

      if (totalLength > secondsInView) {
        span = secondsInView - offsetSeconds;
      }

      span -= getExcludedSeconds(dateAdapter, {
        startDate: begin,
        seconds: span,
        excluded: excluded,
        precision: precision
      });
      return span / SECONDS_IN_DAY;
    }

    function getWeekViewEventOffset(dateAdapter, _a) {
      var event = _a.event,
          startOfWeekDate = _a.startOfWeek,
          excluded = _a.excluded,
          precision = _a.precision;
      var differenceInDays = dateAdapter.differenceInDays,
          startOfDay = dateAdapter.startOfDay,
          differenceInSeconds = dateAdapter.differenceInSeconds;

      if (event.start < startOfWeekDate) {
        return 0;
      }

      var offset = 0;

      switch (precision) {
        case 'days':
          offset = differenceInDays(startOfDay(event.start), startOfWeekDate) * SECONDS_IN_DAY;
          break;

        case 'minutes':
          offset = differenceInSeconds(event.start, startOfWeekDate);
          break;
      }

      offset -= getExcludedSeconds(dateAdapter, {
        startDate: startOfWeekDate,
        seconds: offset,
        excluded: excluded,
        precision: precision
      });
      return Math.abs(offset / SECONDS_IN_DAY);
    }

    function isEventIsPeriod(dateAdapter, _a) {
      var event = _a.event,
          periodStart = _a.periodStart,
          periodEnd = _a.periodEnd;
      var isSameSecond = dateAdapter.isSameSecond;
      var eventStart = event.start;
      var eventEnd = event.end || event.start;

      if (eventStart > periodStart && eventStart < periodEnd) {
        return true;
      }

      if (eventEnd > periodStart && eventEnd < periodEnd) {
        return true;
      }

      if (eventStart < periodStart && eventEnd > periodEnd) {
        return true;
      }

      if (isSameSecond(eventStart, periodStart) || isSameSecond(eventStart, periodEnd)) {
        return true;
      }

      if (isSameSecond(eventEnd, periodStart) || isSameSecond(eventEnd, periodEnd)) {
        return true;
      }

      return false;
    }

    function getEventsInPeriod(dateAdapter, _a) {
      var events = _a.events,
          periodStart = _a.periodStart,
          periodEnd = _a.periodEnd;
      return events.filter(function (event) {
        return isEventIsPeriod(dateAdapter, {
          event: event,
          periodStart: periodStart,
          periodEnd: periodEnd
        });
      });
    }

    function getWeekDay(dateAdapter, _a) {
      var date = _a.date,
          _b = _a.weekendDays,
          weekendDays = _b === void 0 ? DEFAULT_WEEKEND_DAYS : _b;
      var startOfDay = dateAdapter.startOfDay,
          isSameDay = dateAdapter.isSameDay,
          getDay = dateAdapter.getDay;
      var today = startOfDay(new Date());
      var day = getDay(date);
      return {
        date: date,
        day: day,
        isPast: date < today,
        isToday: isSameDay(date, today),
        isFuture: date > today,
        isWeekend: weekendDays.indexOf(day) > -1
      };
    }

    function getWeekViewHeader(dateAdapter, _a) {
      var viewDate = _a.viewDate,
          weekStartsOn = _a.weekStartsOn,
          _b = _a.excluded,
          excluded = _b === void 0 ? [] : _b,
          weekendDays = _a.weekendDays,
          _c = _a.viewStart,
          viewStart = _c === void 0 ? dateAdapter.startOfWeek(viewDate, {
        weekStartsOn: weekStartsOn
      }) : _c,
          _d = _a.viewEnd,
          viewEnd = _d === void 0 ? dateAdapter.addDays(viewStart, DAYS_IN_WEEK) : _d;
      var addDays = dateAdapter.addDays,
          getDay = dateAdapter.getDay;
      var days = [];
      var date = viewStart;

      while (date < viewEnd) {
        if (!excluded.some(function (e) {
          return getDay(date) === e;
        })) {
          days.push(getWeekDay(dateAdapter, {
            date: date,
            weekendDays: weekendDays
          }));
        }

        date = addDays(date, 1);
      }

      return days;
    }

    function getDifferenceInDaysWithExclusions(dateAdapter, _a) {
      var date1 = _a.date1,
          date2 = _a.date2,
          excluded = _a.excluded;
      var date = date1;
      var diff = 0;

      while (date < date2) {
        if (excluded.indexOf(dateAdapter.getDay(date)) === -1) {
          diff++;
        }

        date = dateAdapter.addDays(date, 1);
      }

      return diff;
    }

    function getAllDayWeekEvents(dateAdapter, _a) {
      var events = _a.events,
          excluded = _a.excluded,
          precision = _a.precision,
          absolutePositionedEvents = _a.absolutePositionedEvents,
          viewStart = _a.viewStart,
          viewEnd = _a.viewEnd,
          eventsInPeriod = _a.eventsInPeriod;
      var differenceInSeconds = dateAdapter.differenceInSeconds,
          differenceInDays = dateAdapter.differenceInDays;
      var maxRange = getDifferenceInDaysWithExclusions(dateAdapter, {
        date1: viewStart,
        date2: viewEnd,
        excluded: excluded
      });
      var totalDaysInView = differenceInDays(viewEnd, viewStart) + 1;
      var eventsMapped = eventsInPeriod.filter(function (event) {
        return event.allDay;
      }).map(function (event) {
        var offset = getWeekViewEventOffset(dateAdapter, {
          event: event,
          startOfWeek: viewStart,
          excluded: excluded,
          precision: precision
        });
        var span = getWeekViewEventSpan(dateAdapter, {
          event: event,
          offset: offset,
          startOfWeekDate: viewStart,
          excluded: excluded,
          precision: precision,
          totalDaysInView: totalDaysInView
        });
        return {
          event: event,
          offset: offset,
          span: span
        };
      }).filter(function (e) {
        return e.offset < maxRange;
      }).filter(function (e) {
        return e.span > 0;
      }).map(function (entry) {
        return {
          event: entry.event,
          offset: entry.offset,
          span: entry.span,
          startsBeforeWeek: entry.event.start < viewStart,
          endsAfterWeek: (entry.event.end || entry.event.start) > viewEnd
        };
      }).sort(function (itemA, itemB) {
        var startSecondsDiff = differenceInSeconds(itemA.event.start, itemB.event.start);

        if (startSecondsDiff === 0) {
          return differenceInSeconds(itemB.event.end || itemB.event.start, itemA.event.end || itemA.event.start);
        }

        return startSecondsDiff;
      });
      var allDayEventRows = [];
      var allocatedEvents = [];
      eventsMapped.forEach(function (event, index) {
        if (allocatedEvents.indexOf(event) === -1) {
          allocatedEvents.push(event);
          var rowSpan_1 = event.span + event.offset;
          var otherRowEvents = eventsMapped.slice(index + 1).filter(function (nextEvent) {
            if (nextEvent.offset >= rowSpan_1 && rowSpan_1 + nextEvent.span <= totalDaysInView && allocatedEvents.indexOf(nextEvent) === -1) {
              var nextEventOffset = nextEvent.offset - rowSpan_1;

              if (!absolutePositionedEvents) {
                nextEvent.offset = nextEventOffset;
              }

              rowSpan_1 += nextEvent.span + nextEventOffset;
              allocatedEvents.push(nextEvent);
              return true;
            }
          });

          var weekEvents = __spreadArrays([event], otherRowEvents);

          var id = weekEvents.filter(function (weekEvent) {
            return weekEvent.event.id;
          }).map(function (weekEvent) {
            return weekEvent.event.id;
          }).join('-');
          allDayEventRows.push(__assign({
            row: weekEvents
          }, id ? {
            id: id
          } : {}));
        }
      });
      return allDayEventRows;
    }

    function getWeekViewHourGrid(dateAdapter, _a) {
      var events = _a.events,
          viewDate = _a.viewDate,
          hourSegments = _a.hourSegments,
          hourDuration = _a.hourDuration,
          dayStart = _a.dayStart,
          dayEnd = _a.dayEnd,
          weekStartsOn = _a.weekStartsOn,
          excluded = _a.excluded,
          weekendDays = _a.weekendDays,
          segmentHeight = _a.segmentHeight,
          viewStart = _a.viewStart,
          viewEnd = _a.viewEnd,
          minimumEventHeight = _a.minimumEventHeight;
      var dayViewHourGrid = getDayViewHourGrid(dateAdapter, {
        viewDate: viewDate,
        hourSegments: hourSegments,
        hourDuration: hourDuration,
        dayStart: dayStart,
        dayEnd: dayEnd
      });
      var weekDays = getWeekViewHeader(dateAdapter, {
        viewDate: viewDate,
        weekStartsOn: weekStartsOn,
        excluded: excluded,
        weekendDays: weekendDays,
        viewStart: viewStart,
        viewEnd: viewEnd
      });
      var setHours = dateAdapter.setHours,
          setMinutes = dateAdapter.setMinutes,
          getHours = dateAdapter.getHours,
          getMinutes = dateAdapter.getMinutes;
      return weekDays.map(function (day) {
        var dayView = getDayView(dateAdapter, {
          events: events,
          viewDate: day.date,
          hourSegments: hourSegments,
          dayStart: dayStart,
          dayEnd: dayEnd,
          segmentHeight: segmentHeight,
          eventWidth: 1,
          hourDuration: hourDuration,
          minimumEventHeight: minimumEventHeight
        });
        var hours = dayViewHourGrid.map(function (hour) {
          var segments = hour.segments.map(function (segment) {
            var date = setMinutes(setHours(day.date, getHours(segment.date)), getMinutes(segment.date));
            return __assign(__assign({}, segment), {
              date: date
            });
          });
          return __assign(__assign({}, hour), {
            segments: segments
          });
        });

        function getColumnCount(allEvents, prevOverlappingEvents) {
          var columnCount = Math.max.apply(Math, prevOverlappingEvents.map(function (iEvent) {
            return iEvent.left + 1;
          }));
          var nextOverlappingEvents = allEvents.filter(function (iEvent) {
            return iEvent.left >= columnCount;
          }).filter(function (iEvent) {
            return getOverLappingWeekViewEvents(prevOverlappingEvents, iEvent.top, iEvent.top + iEvent.height).length > 0;
          });

          if (nextOverlappingEvents.length > 0) {
            return getColumnCount(allEvents, nextOverlappingEvents);
          } else {
            return columnCount;
          }
        }

        var mappedEvents = dayView.events.map(function (event) {
          var columnCount = getColumnCount(dayView.events, getOverLappingWeekViewEvents(dayView.events, event.top, event.top + event.height));
          var width = 100 / columnCount;
          return __assign(__assign({}, event), {
            left: event.left * width,
            width: width
          });
        });
        return {
          hours: hours,
          date: day.date,
          events: mappedEvents.map(function (event) {
            var overLappingEvents = getOverLappingWeekViewEvents(mappedEvents.filter(function (otherEvent) {
              return otherEvent.left > event.left;
            }), event.top, event.top + event.height);

            if (overLappingEvents.length > 0) {
              return __assign(__assign({}, event), {
                width: Math.min.apply(Math, overLappingEvents.map(function (otherEvent) {
                  return otherEvent.left;
                })) - event.left
              });
            }

            return event;
          })
        };
      });
    }

    function getWeekView(dateAdapter, _a) {
      var _b = _a.events,
          events = _b === void 0 ? [] : _b,
          viewDate = _a.viewDate,
          weekStartsOn = _a.weekStartsOn,
          _c = _a.excluded,
          excluded = _c === void 0 ? [] : _c,
          _d = _a.precision,
          precision = _d === void 0 ? 'days' : _d,
          _e = _a.absolutePositionedEvents,
          absolutePositionedEvents = _e === void 0 ? false : _e,
          hourSegments = _a.hourSegments,
          hourDuration = _a.hourDuration,
          dayStart = _a.dayStart,
          dayEnd = _a.dayEnd,
          weekendDays = _a.weekendDays,
          segmentHeight = _a.segmentHeight,
          minimumEventHeight = _a.minimumEventHeight,
          _f = _a.viewStart,
          viewStart = _f === void 0 ? dateAdapter.startOfWeek(viewDate, {
        weekStartsOn: weekStartsOn
      }) : _f,
          _g = _a.viewEnd,
          viewEnd = _g === void 0 ? dateAdapter.endOfWeek(viewDate, {
        weekStartsOn: weekStartsOn
      }) : _g;

      if (!events) {
        events = [];
      }

      var startOfDay = dateAdapter.startOfDay,
          endOfDay = dateAdapter.endOfDay;
      viewStart = startOfDay(viewStart);
      viewEnd = endOfDay(viewEnd);
      var eventsInPeriod = getEventsInPeriod(dateAdapter, {
        events: events,
        periodStart: viewStart,
        periodEnd: viewEnd
      });
      var header = getWeekViewHeader(dateAdapter, {
        viewDate: viewDate,
        weekStartsOn: weekStartsOn,
        excluded: excluded,
        weekendDays: weekendDays,
        viewStart: viewStart,
        viewEnd: viewEnd
      });
      return {
        allDayEventRows: getAllDayWeekEvents(dateAdapter, {
          events: events,
          excluded: excluded,
          precision: precision,
          absolutePositionedEvents: absolutePositionedEvents,
          viewStart: viewStart,
          viewEnd: viewEnd,
          eventsInPeriod: eventsInPeriod
        }),
        period: {
          events: eventsInPeriod,
          start: header[0].date,
          end: endOfDay(header[header.length - 1].date)
        },
        hourColumns: getWeekViewHourGrid(dateAdapter, {
          events: events,
          viewDate: viewDate,
          hourSegments: hourSegments,
          hourDuration: hourDuration,
          dayStart: dayStart,
          dayEnd: dayEnd,
          weekStartsOn: weekStartsOn,
          excluded: excluded,
          weekendDays: weekendDays,
          segmentHeight: segmentHeight,
          viewStart: viewStart,
          viewEnd: viewEnd,
          minimumEventHeight: minimumEventHeight
        })
      };
    }

    function getMonthView(dateAdapter, _a) {
      var _b = _a.events,
          events = _b === void 0 ? [] : _b,
          viewDate = _a.viewDate,
          weekStartsOn = _a.weekStartsOn,
          _c = _a.excluded,
          excluded = _c === void 0 ? [] : _c,
          _d = _a.viewStart,
          viewStart = _d === void 0 ? dateAdapter.startOfMonth(viewDate) : _d,
          _e = _a.viewEnd,
          viewEnd = _e === void 0 ? dateAdapter.endOfMonth(viewDate) : _e,
          weekendDays = _a.weekendDays;

      if (!events) {
        events = [];
      }

      var startOfWeek = dateAdapter.startOfWeek,
          endOfWeek = dateAdapter.endOfWeek,
          differenceInDays = dateAdapter.differenceInDays,
          startOfDay = dateAdapter.startOfDay,
          addHours = dateAdapter.addHours,
          endOfDay = dateAdapter.endOfDay,
          isSameMonth = dateAdapter.isSameMonth,
          getDay = dateAdapter.getDay,
          getMonth = dateAdapter.getMonth;
      var start = startOfWeek(viewStart, {
        weekStartsOn: weekStartsOn
      });
      var end = endOfWeek(viewEnd, {
        weekStartsOn: weekStartsOn
      });
      var eventsInMonth = getEventsInPeriod(dateAdapter, {
        events: events,
        periodStart: start,
        periodEnd: end
      });
      var initialViewDays = [];
      var previousDate;

      var _loop_2 = function _loop_2(i) {
        // hacky fix for https://github.com/mattlewis92/angular-calendar/issues/173
        var date;

        if (previousDate) {
          date = startOfDay(addHours(previousDate, HOURS_IN_DAY));

          if (previousDate.getTime() === date.getTime()) {
            // DST change, so need to add 25 hours

            /* istanbul ignore next */
            date = startOfDay(addHours(previousDate, HOURS_IN_DAY + 1));
          }

          previousDate = date;
        } else {
          date = previousDate = start;
        }

        if (!excluded.some(function (e) {
          return getDay(date) === e;
        })) {
          var day = getWeekDay(dateAdapter, {
            date: date,
            weekendDays: weekendDays
          });
          var eventsInPeriod = getEventsInPeriod(dateAdapter, {
            events: eventsInMonth,
            periodStart: startOfDay(date),
            periodEnd: endOfDay(date)
          });
          day.inMonth = isSameMonth(date, viewDate);
          day.events = eventsInPeriod;
          day.badgeTotal = eventsInPeriod.length;
          initialViewDays.push(day);
        }
      };

      for (var i = 0; i < differenceInDays(end, start) + 1; i++) {
        _loop_2(i);
      }

      var days = [];
      var totalDaysVisibleInWeek = DAYS_IN_WEEK - excluded.length;

      if (totalDaysVisibleInWeek < DAYS_IN_WEEK) {
        for (var i = 0; i < initialViewDays.length; i += totalDaysVisibleInWeek) {
          var row = initialViewDays.slice(i, i + totalDaysVisibleInWeek);
          var isRowInMonth = row.some(function (day) {
            return viewStart <= day.date && day.date < viewEnd;
          });

          if (isRowInMonth) {
            days = __spreadArrays(days, row);
          }
        }
      } else {
        days = initialViewDays;
      }

      var rows = Math.floor(days.length / totalDaysVisibleInWeek);
      var rowOffsets = [];

      for (var i = 0; i < rows; i++) {
        rowOffsets.push(i * totalDaysVisibleInWeek);
      }

      return {
        rowOffsets: rowOffsets,
        totalDaysVisibleInWeek: totalDaysVisibleInWeek,
        days: days,
        period: {
          start: days[0].date,
          end: endOfDay(days[days.length - 1].date),
          events: eventsInMonth
        }
      };
    }

    function getOverLappingWeekViewEvents(events, top, bottom) {
      return events.filter(function (previousEvent) {
        var previousEventTop = previousEvent.top;
        var previousEventBottom = previousEvent.top + previousEvent.height;

        if (top < previousEventBottom && previousEventBottom < bottom) {
          return true;
        } else if (top < previousEventTop && previousEventTop < bottom) {
          return true;
        } else if (previousEventTop <= top && bottom <= previousEventBottom) {
          return true;
        }

        return false;
      });
    }

    function getDayView(dateAdapter, _a) {
      var events = _a.events,
          viewDate = _a.viewDate,
          hourSegments = _a.hourSegments,
          dayStart = _a.dayStart,
          dayEnd = _a.dayEnd,
          eventWidth = _a.eventWidth,
          segmentHeight = _a.segmentHeight,
          hourDuration = _a.hourDuration,
          minimumEventHeight = _a.minimumEventHeight;
      var setMinutes = dateAdapter.setMinutes,
          setHours = dateAdapter.setHours,
          startOfDay = dateAdapter.startOfDay,
          startOfMinute = dateAdapter.startOfMinute,
          endOfDay = dateAdapter.endOfDay,
          differenceInMinutes = dateAdapter.differenceInMinutes;
      var startOfView = setMinutes(setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)), sanitiseMinutes(dayStart.minute));
      var endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)), sanitiseMinutes(dayEnd.minute));
      endOfView.setSeconds(59, 999);
      var previousDayEvents = [];
      var eventsInPeriod = getEventsInPeriod(dateAdapter, {
        events: events.filter(function (event) {
          return !event.allDay;
        }),
        periodStart: startOfView,
        periodEnd: endOfView
      });
      var dayViewEvents = eventsInPeriod.sort(function (eventA, eventB) {
        return eventA.start.valueOf() - eventB.start.valueOf();
      }).map(function (event) {
        var eventStart = event.start;
        var eventEnd = event.end || eventStart;
        var startsBeforeDay = eventStart < startOfView;
        var endsAfterDay = eventEnd > endOfView;
        var hourHeightModifier = hourSegments * segmentHeight / (hourDuration || MINUTES_IN_HOUR);
        var top = 0;

        if (eventStart > startOfView) {
          // adjust the difference in minutes if the user's offset is different between the start of the day and the event (e.g. when going to or from DST)
          var eventOffset = eventStart.getTimezoneOffset();
          var startOffset = startOfView.getTimezoneOffset();
          var diff = startOffset - eventOffset;
          top += differenceInMinutes(eventStart, startOfView) + diff;
        }

        top *= hourHeightModifier;
        var startDate = startsBeforeDay ? startOfView : eventStart;
        var endDate = endsAfterDay ? endOfView : eventEnd;
        var height = differenceInMinutes(endDate, startDate);

        if (!event.end) {
          height = segmentHeight;
        } else {
          height *= hourHeightModifier;
        }

        if (minimumEventHeight && height < minimumEventHeight) {
          height = minimumEventHeight;
        }

        var bottom = top + height;
        var overlappingPreviousEvents = getOverLappingWeekViewEvents(previousDayEvents, top, bottom);
        var left = 0;

        while (overlappingPreviousEvents.some(function (previousEvent) {
          return previousEvent.left === left;
        })) {
          left += eventWidth;
        }

        var dayEvent = {
          event: event,
          height: height,
          width: eventWidth,
          top: top,
          left: left,
          startsBeforeDay: startsBeforeDay,
          endsAfterDay: endsAfterDay
        };
        previousDayEvents.push(dayEvent);
        return dayEvent;
      });
      var width = Math.max.apply(Math, dayViewEvents.map(function (event) {
        return event.left + event.width;
      }));
      var allDayEvents = getEventsInPeriod(dateAdapter, {
        events: events.filter(function (event) {
          return event.allDay;
        }),
        periodStart: startOfDay(startOfView),
        periodEnd: endOfDay(endOfView)
      });
      return {
        events: dayViewEvents,
        width: width,
        allDayEvents: allDayEvents,
        period: {
          events: eventsInPeriod,
          start: startOfView,
          end: endOfView
        }
      };
    }

    function sanitiseHours(hours) {
      return Math.max(Math.min(23, hours), 0);
    }

    function sanitiseMinutes(minutes) {
      return Math.max(Math.min(59, minutes), 0);
    }

    function getDayViewHourGrid(dateAdapter, _a) {
      var viewDate = _a.viewDate,
          hourSegments = _a.hourSegments,
          hourDuration = _a.hourDuration,
          dayStart = _a.dayStart,
          dayEnd = _a.dayEnd;
      var setMinutes = dateAdapter.setMinutes,
          setHours = dateAdapter.setHours,
          startOfDay = dateAdapter.startOfDay,
          startOfMinute = dateAdapter.startOfMinute,
          endOfDay = dateAdapter.endOfDay,
          addMinutes = dateAdapter.addMinutes,
          addHours = dateAdapter.addHours,
          addDays = dateAdapter.addDays;
      var hours = [];
      var startOfView = setMinutes(setHours(startOfDay(viewDate), sanitiseHours(dayStart.hour)), sanitiseMinutes(dayStart.minute));
      var endOfView = setMinutes(setHours(startOfMinute(endOfDay(viewDate)), sanitiseHours(dayEnd.hour)), sanitiseMinutes(dayEnd.minute));
      var segmentDuration = (hourDuration || MINUTES_IN_HOUR) / hourSegments;
      var startOfViewDay = startOfDay(viewDate);
      var endOfViewDay = endOfDay(viewDate);

      var dateAdjustment = function dateAdjustment(d) {
        return d;
      }; // this means that we change from or to DST on this day and that's going to cause problems so we bump the date


      if (startOfViewDay.getTimezoneOffset() !== endOfViewDay.getTimezoneOffset()) {
        startOfViewDay = addDays(startOfViewDay, 1);
        startOfView = addDays(startOfView, 1);
        endOfView = addDays(endOfView, 1);

        dateAdjustment = function dateAdjustment(d) {
          return addDays(d, -1);
        };
      }

      var dayDuration = hourDuration ? HOURS_IN_DAY * 60 / hourDuration : MINUTES_IN_HOUR;

      for (var i = 0; i < dayDuration; i++) {
        var segments = [];

        for (var j = 0; j < hourSegments; j++) {
          var date = addMinutes(addMinutes(startOfView, i * (hourDuration || MINUTES_IN_HOUR)), j * segmentDuration);

          if (date >= startOfView && date < endOfView) {
            segments.push({
              date: dateAdjustment(date),
              displayDate: date,
              isStart: j === 0
            });
          }
        }

        if (segments.length > 0) {
          hours.push({
            segments: segments
          });
        }
      }

      return hours;
    }

    var EventValidationErrorMessage;

    (function (EventValidationErrorMessage) {
      EventValidationErrorMessage["NotArray"] = "Events must be an array";
      EventValidationErrorMessage["StartPropertyMissing"] = "Event is missing the `start` property";
      EventValidationErrorMessage["StartPropertyNotDate"] = "Event `start` property should be a javascript date object. Do `new Date(event.start)` to fix it.";
      EventValidationErrorMessage["EndPropertyNotDate"] = "Event `end` property should be a javascript date object. Do `new Date(event.end)` to fix it.";
      EventValidationErrorMessage["EndsBeforeStart"] = "Event `start` property occurs after the `end`";
    })(EventValidationErrorMessage || (EventValidationErrorMessage = {}));

    function validateEvents(events, log) {
      var isValid = true;

      function isError(msg, event) {
        log(msg, event);
        isValid = false;
      }

      if (!Array.isArray(events)) {
        log(EventValidationErrorMessage.NotArray, events);
        return false;
      }

      events.forEach(function (event) {
        if (!event.start) {
          isError(EventValidationErrorMessage.StartPropertyMissing, event);
        } else if (!(event.start instanceof Date)) {
          isError(EventValidationErrorMessage.StartPropertyNotDate, event);
        }

        if (event.end) {
          if (!(event.end instanceof Date)) {
            isError(EventValidationErrorMessage.EndPropertyNotDate, event);
          }

          if (event.start > event.end) {
            isError(EventValidationErrorMessage.EndsBeforeStart, event);
          }
        }
      });
      return isValid;
    } //# sourceMappingURL=calendar-utils.js.map

    /***/

  },

  /***/
  "./node_modules/calendar-utils/date-adapters/date-fns/index.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/calendar-utils/date-adapters/date-fns/index.js ***!
    \*********************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesCalendarUtilsDateAdaptersDateFnsIndexJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var date_fns_1 = __webpack_require__(
    /*! date-fns */
    "./node_modules/date-fns/esm/index.js");

    function adapterFactory() {
      return {
        addDays: date_fns_1.addDays,
        addHours: date_fns_1.addHours,
        addMinutes: date_fns_1.addMinutes,
        addSeconds: date_fns_1.addSeconds,
        differenceInDays: date_fns_1.differenceInDays,
        differenceInMinutes: date_fns_1.differenceInMinutes,
        differenceInSeconds: date_fns_1.differenceInSeconds,
        endOfDay: date_fns_1.endOfDay,
        endOfMonth: date_fns_1.endOfMonth,
        endOfWeek: date_fns_1.endOfWeek,
        getDay: date_fns_1.getDay,
        getMonth: date_fns_1.getMonth,
        isSameDay: date_fns_1.isSameDay,
        isSameMonth: date_fns_1.isSameMonth,
        isSameSecond: date_fns_1.isSameSecond,
        max: date_fns_1.max,
        setHours: date_fns_1.setHours,
        setMinutes: date_fns_1.setMinutes,
        startOfDay: date_fns_1.startOfDay,
        startOfMinute: date_fns_1.startOfMinute,
        startOfMonth: date_fns_1.startOfMonth,
        startOfWeek: date_fns_1.startOfWeek,
        getHours: date_fns_1.getHours,
        getMinutes: date_fns_1.getMinutes
      };
    }

    exports.adapterFactory = adapterFactory; //# sourceMappingURL=index.js.map

    /***/
  },

  /***/
  "./node_modules/create-point-cb/dist/bundle.js":
  /*!*****************************************************!*\
    !*** ./node_modules/create-point-cb/dist/bundle.js ***!
    \*****************************************************/

  /*! no static exports found */

  /***/
  function node_modulesCreatePointCbDistBundleJs(module, exports, __webpack_require__) {
    "use strict";

    var typeFunc = __webpack_require__(
    /*! type-func */
    "./node_modules/type-func/dist/bundle.js");

    function createPointCB(object, options) {
      // A persistent object (as opposed to returned object) is used to save memory
      // This is good to prevent layout thrashing, or for games, and such
      // NOTE
      // This uses IE fixes which should be OK to remove some day. :)
      // Some speed will be gained by removal of these.
      // pointCB should be saved in a variable on return
      // This allows the usage of element.removeEventListener
      options = options || {};
      var allowUpdate = typeFunc["boolean"](options.allowUpdate, true);
      /*if(typeof options.allowUpdate === 'function'){
          allowUpdate = options.allowUpdate;
      }else{
          allowUpdate = function(){return true;};
      }*/

      return function pointCB(event) {
        event = event || window.event; // IE-ism

        object.target = event.target || event.srcElement || event.originalTarget;
        object.element = this;
        object.type = event.type;

        if (!allowUpdate(event)) {
          return;
        } // Support touch
        // http://www.creativebloq.com/javascript/make-your-site-work-touch-devices-51411644


        if (event.targetTouches) {
          object.x = event.targetTouches[0].clientX;
          object.y = event.targetTouches[0].clientY;
          object.pageX = event.targetTouches[0].pageX;
          object.pageY = event.targetTouches[0].pageY;
          object.screenX = event.targetTouches[0].screenX;
          object.screenY = event.targetTouches[0].screenY;
        } else {
          // If pageX/Y aren't available and clientX/Y are,
          // calculate pageX/Y - logic taken from jQuery.
          // (This is to support old IE)
          // NOTE Hopefully this can be removed soon.
          if (event.pageX === null && event.clientX !== null) {
            var eventDoc = event.target && event.target.ownerDocument || document;
            var doc = eventDoc.documentElement;
            var body = eventDoc.body;
            object.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
            object.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
          } else {
            object.pageX = event.pageX;
            object.pageY = event.pageY;
          } // pageX, and pageY change with page scroll
          // so we're not going to use those for x, and y.
          // NOTE Most browsers also alias clientX/Y with x/y
          // so that's something to consider down the road.


          object.x = event.clientX;
          object.y = event.clientY;
          object.screenX = event.screenX;
          object.screenY = event.screenY;
        }

        object.clientX = object.x;
        object.clientY = object.y;
      }; //NOTE Remember accessibility, Aria roles, and labels.
    }
    /*
    git remote add origin https://github.com/hollowdoor/create_point_cb.git
    git push -u origin master
    */


    module.exports = createPointCB; //# sourceMappingURL=bundle.js.map

    /***/
  },

  /***/
  "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js ***!
    \*****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libAddLeadingZerosIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addLeadingZeros;
    });

    function addLeadingZeros(number, targetLength) {
      var sign = number < 0 ? '-' : '';
      var output = Math.abs(number).toString();

      while (output.length < targetLength) {
        output = '0' + output;
      }

      return sign + output;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/assign/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/assign/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libAssignIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return assign;
    });

    function assign(target, dirtyObject) {
      if (target == null) {
        throw new TypeError('assign requires that input parameter not be null or undefined');
      }

      dirtyObject = dirtyObject || {};

      for (var property in dirtyObject) {
        if (dirtyObject.hasOwnProperty(property)) {
          target[property] = dirtyObject[property];
        }
      }

      return target;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/cloneObject/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/cloneObject/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libCloneObjectIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return cloneObject;
    });
    /* harmony import */


    var _assign_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../assign/index.js */
    "./node_modules/date-fns/esm/_lib/assign/index.js");

    function cloneObject(dirtyObject) {
      return Object(_assign_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, dirtyObject);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/format/formatters/index.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/format/formatters/index.js ***!
    \*******************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libFormatFormattersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../lightFormatters/index.js */
    "./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js");
    /* harmony import */


    var _lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../../_lib/getUTCDayOfYear/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js");
    /* harmony import */


    var _lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../_lib/getUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js");
    /* harmony import */


    var _lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../_lib/getUTCISOWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js");
    /* harmony import */


    var _lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../_lib/getUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCWeek/index.js");
    /* harmony import */


    var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../_lib/getUTCWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js");
    /* harmony import */


    var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../addLeadingZeros/index.js */
    "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");

    var dayPeriodEnum = {
      am: 'am',
      pm: 'pm',
      midnight: 'midnight',
      noon: 'noon',
      morning: 'morning',
      afternoon: 'afternoon',
      evening: 'evening',
      night: 'night'
      /*
       * |     | Unit                           |     | Unit                           |
       * |-----|--------------------------------|-----|--------------------------------|
       * |  a  | AM, PM                         |  A* | Milliseconds in day            |
       * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
       * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
       * |  d  | Day of month                   |  D  | Day of year                    |
       * |  e  | Local day of week              |  E  | Day of week                    |
       * |  f  |                                |  F* | Day of week in month           |
       * |  g* | Modified Julian day            |  G  | Era                            |
       * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
       * |  i! | ISO day of week                |  I! | ISO week of year               |
       * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
       * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
       * |  l* | (deprecated)                   |  L  | Stand-alone month              |
       * |  m  | Minute                         |  M  | Month                          |
       * |  n  |                                |  N  |                                |
       * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
       * |  p! | Long localized time            |  P! | Long localized date            |
       * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
       * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
       * |  s  | Second                         |  S  | Fraction of second             |
       * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
       * |  u  | Extended year                  |  U* | Cyclic year                    |
       * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
       * |  w  | Local week of year             |  W* | Week of month                  |
       * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
       * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
       * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
       *
       * Letters marked by * are not implemented but reserved by Unicode standard.
       *
       * Letters marked by ! are non-standard, but implemented by date-fns:
       * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
       * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
       *   i.e. 7 for Sunday, 1 for Monday, etc.
       * - `I` is ISO week of year, as opposed to `w` which is local week of year.
       * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
       *   `R` is supposed to be used in conjunction with `I` and `i`
       *   for universal ISO week-numbering date, whereas
       *   `Y` is supposed to be used in conjunction with `w` and `e`
       *   for week-numbering date specific to the locale.
       * - `P` is long localized date format
       * - `p` is long localized time format
       */

    };
    var formatters = {
      // Era
      G: function G(date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;

        switch (token) {
          // AD, BC
          case 'G':
          case 'GG':
          case 'GGG':
            return localize.era(era, {
              width: 'abbreviated'
            });
          // A, B

          case 'GGGGG':
            return localize.era(era, {
              width: 'narrow'
            });
          // Anno Domini, Before Christ

          case 'GGGG':
          default:
            return localize.era(era, {
              width: 'wide'
            });
        }
      },
      // Year
      y: function y(date, token, localize) {
        // Ordinal number
        if (token === 'yo') {
          var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize.ordinalNumber(year, {
            unit: 'year'
          });
        }

        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].y(date, token);
      },
      // Local week-numbering year
      Y: function Y(date, token, localize, options) {
        var signedWeekYear = Object(_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

        if (token === 'YY') {
          var twoDigitYear = weekYear % 100;
          return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(twoDigitYear, 2);
        } // Ordinal number


        if (token === 'Yo') {
          return localize.ordinalNumber(weekYear, {
            unit: 'year'
          });
        } // Padding


        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(weekYear, token.length);
      },
      // ISO week-numbering year
      R: function R(date, token) {
        var isoWeekYear = Object(_lib_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date); // Padding

        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoWeekYear, token.length);
      },
      // Extended year. This is a single number designating the year of this calendar system.
      // The main difference between `y` and `u` localizers are B.C. years:
      // | Year | `y` | `u` |
      // |------|-----|-----|
      // | AC 1 |   1 |   1 |
      // | BC 1 |   1 |   0 |
      // | BC 2 |   2 |  -1 |
      // Also `yy` always returns the last two digits of a year,
      // while `uu` pads single digit years to 2 characters and returns other years unchanged.
      u: function u(date, token) {
        var year = date.getUTCFullYear();
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(year, token.length);
      },
      // Quarter
      Q: function Q(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

        switch (token) {
          // 1, 2, 3, 4
          case 'Q':
            return String(quarter);
          // 01, 02, 03, 04

          case 'QQ':
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(quarter, 2);
          // 1st, 2nd, 3rd, 4th

          case 'Qo':
            return localize.ordinalNumber(quarter, {
              unit: 'quarter'
            });
          // Q1, Q2, Q3, Q4

          case 'QQQ':
            return localize.quarter(quarter, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // 1, 2, 3, 4 (narrow quarter; could be not numerical)

          case 'QQQQQ':
            return localize.quarter(quarter, {
              width: 'narrow',
              context: 'formatting'
            });
          // 1st quarter, 2nd quarter, ...

          case 'QQQQ':
          default:
            return localize.quarter(quarter, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Stand-alone quarter
      q: function q(date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

        switch (token) {
          // 1, 2, 3, 4
          case 'q':
            return String(quarter);
          // 01, 02, 03, 04

          case 'qq':
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(quarter, 2);
          // 1st, 2nd, 3rd, 4th

          case 'qo':
            return localize.ordinalNumber(quarter, {
              unit: 'quarter'
            });
          // Q1, Q2, Q3, Q4

          case 'qqq':
            return localize.quarter(quarter, {
              width: 'abbreviated',
              context: 'standalone'
            });
          // 1, 2, 3, 4 (narrow quarter; could be not numerical)

          case 'qqqqq':
            return localize.quarter(quarter, {
              width: 'narrow',
              context: 'standalone'
            });
          // 1st quarter, 2nd quarter, ...

          case 'qqqq':
          default:
            return localize.quarter(quarter, {
              width: 'wide',
              context: 'standalone'
            });
        }
      },
      // Month
      M: function M(date, token, localize) {
        var month = date.getUTCMonth();

        switch (token) {
          case 'M':
          case 'MM':
            return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].M(date, token);
          // 1st, 2nd, ..., 12th

          case 'Mo':
            return localize.ordinalNumber(month + 1, {
              unit: 'month'
            });
          // Jan, Feb, ..., Dec

          case 'MMM':
            return localize.month(month, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // J, F, ..., D

          case 'MMMMM':
            return localize.month(month, {
              width: 'narrow',
              context: 'formatting'
            });
          // January, February, ..., December

          case 'MMMM':
          default:
            return localize.month(month, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Stand-alone month
      L: function L(date, token, localize) {
        var month = date.getUTCMonth();

        switch (token) {
          // 1, 2, ..., 12
          case 'L':
            return String(month + 1);
          // 01, 02, ..., 12

          case 'LL':
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(month + 1, 2);
          // 1st, 2nd, ..., 12th

          case 'Lo':
            return localize.ordinalNumber(month + 1, {
              unit: 'month'
            });
          // Jan, Feb, ..., Dec

          case 'LLL':
            return localize.month(month, {
              width: 'abbreviated',
              context: 'standalone'
            });
          // J, F, ..., D

          case 'LLLLL':
            return localize.month(month, {
              width: 'narrow',
              context: 'standalone'
            });
          // January, February, ..., December

          case 'LLLL':
          default:
            return localize.month(month, {
              width: 'wide',
              context: 'standalone'
            });
        }
      },
      // Local week of year
      w: function w(date, token, localize, options) {
        var week = Object(_lib_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, options);

        if (token === 'wo') {
          return localize.ordinalNumber(week, {
            unit: 'week'
          });
        }

        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(week, token.length);
      },
      // ISO week of year
      I: function I(date, token, localize) {
        var isoWeek = Object(_lib_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date);

        if (token === 'Io') {
          return localize.ordinalNumber(isoWeek, {
            unit: 'week'
          });
        }

        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoWeek, token.length);
      },
      // Day of the month
      d: function d(date, token, localize) {
        if (token === 'do') {
          return localize.ordinalNumber(date.getUTCDate(), {
            unit: 'date'
          });
        }

        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].d(date, token);
      },
      // Day of year
      D: function D(date, token, localize) {
        var dayOfYear = Object(_lib_getUTCDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date);

        if (token === 'Do') {
          return localize.ordinalNumber(dayOfYear, {
            unit: 'dayOfYear'
          });
        }

        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dayOfYear, token.length);
      },
      // Day of week
      E: function E(date, token, localize) {
        var dayOfWeek = date.getUTCDay();

        switch (token) {
          // Tue
          case 'E':
          case 'EE':
          case 'EEE':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // T

          case 'EEEEE':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'formatting'
            });
          // Tu

          case 'EEEEEE':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'formatting'
            });
          // Tuesday

          case 'EEEE':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Local day of week
      e: function e(date, token, localize, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

        switch (token) {
          // Numerical value (Nth day of week with current locale or weekStartsOn)
          case 'e':
            return String(localDayOfWeek);
          // Padded numerical value

          case 'ee':
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(localDayOfWeek, 2);
          // 1st, 2nd, ..., 7th

          case 'eo':
            return localize.ordinalNumber(localDayOfWeek, {
              unit: 'day'
            });

          case 'eee':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // T

          case 'eeeee':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'formatting'
            });
          // Tu

          case 'eeeeee':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'formatting'
            });
          // Tuesday

          case 'eeee':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Stand-alone local day of week
      c: function c(date, token, localize, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

        switch (token) {
          // Numerical value (same as in `e`)
          case 'c':
            return String(localDayOfWeek);
          // Padded numerical value

          case 'cc':
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(localDayOfWeek, token.length);
          // 1st, 2nd, ..., 7th

          case 'co':
            return localize.ordinalNumber(localDayOfWeek, {
              unit: 'day'
            });

          case 'ccc':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'standalone'
            });
          // T

          case 'ccccc':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'standalone'
            });
          // Tu

          case 'cccccc':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'standalone'
            });
          // Tuesday

          case 'cccc':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'standalone'
            });
        }
      },
      // ISO day of week
      i: function i(date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

        switch (token) {
          // 2
          case 'i':
            return String(isoDayOfWeek);
          // 02

          case 'ii':
            return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(isoDayOfWeek, token.length);
          // 2nd

          case 'io':
            return localize.ordinalNumber(isoDayOfWeek, {
              unit: 'day'
            });
          // Tue

          case 'iii':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // T

          case 'iiiii':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'formatting'
            });
          // Tu

          case 'iiiiii':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'formatting'
            });
          // Tuesday

          case 'iiii':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // AM or PM
      a: function a(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

        switch (token) {
          case 'a':
          case 'aa':
          case 'aaa':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            });

          case 'aaaaa':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'narrow',
              context: 'formatting'
            });

          case 'aaaa':
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // AM, PM, midnight, noon
      b: function b(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;

        if (hours === 12) {
          dayPeriodEnumValue = dayPeriodEnum.noon;
        } else if (hours === 0) {
          dayPeriodEnumValue = dayPeriodEnum.midnight;
        } else {
          dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
        }

        switch (token) {
          case 'b':
          case 'bb':
          case 'bbb':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            });

          case 'bbbbb':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'narrow',
              context: 'formatting'
            });

          case 'bbbb':
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // in the morning, in the afternoon, in the evening, at night
      B: function B(date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;

        if (hours >= 17) {
          dayPeriodEnumValue = dayPeriodEnum.evening;
        } else if (hours >= 12) {
          dayPeriodEnumValue = dayPeriodEnum.afternoon;
        } else if (hours >= 4) {
          dayPeriodEnumValue = dayPeriodEnum.morning;
        } else {
          dayPeriodEnumValue = dayPeriodEnum.night;
        }

        switch (token) {
          case 'B':
          case 'BB':
          case 'BBB':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            });

          case 'BBBBB':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'narrow',
              context: 'formatting'
            });

          case 'BBBB':
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Hour [1-12]
      h: function h(date, token, localize) {
        if (token === 'ho') {
          var hours = date.getUTCHours() % 12;
          if (hours === 0) hours = 12;
          return localize.ordinalNumber(hours, {
            unit: 'hour'
          });
        }

        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].h(date, token);
      },
      // Hour [0-23]
      H: function H(date, token, localize) {
        if (token === 'Ho') {
          return localize.ordinalNumber(date.getUTCHours(), {
            unit: 'hour'
          });
        }

        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].H(date, token);
      },
      // Hour [0-11]
      K: function K(date, token, localize) {
        var hours = date.getUTCHours() % 12;

        if (token === 'Ko') {
          return localize.ordinalNumber(hours, {
            unit: 'hour'
          });
        }

        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(hours, token.length);
      },
      // Hour [1-24]
      k: function k(date, token, localize) {
        var hours = date.getUTCHours();
        if (hours === 0) hours = 24;

        if (token === 'ko') {
          return localize.ordinalNumber(hours, {
            unit: 'hour'
          });
        }

        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(hours, token.length);
      },
      // Minute
      m: function m(date, token, localize) {
        if (token === 'mo') {
          return localize.ordinalNumber(date.getUTCMinutes(), {
            unit: 'minute'
          });
        }

        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].m(date, token);
      },
      // Second
      s: function s(date, token, localize) {
        if (token === 'so') {
          return localize.ordinalNumber(date.getUTCSeconds(), {
            unit: 'second'
          });
        }

        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].s(date, token);
      },
      // Fraction of second
      S: function S(date, token) {
        return _lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].S(date, token);
      },
      // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
      X: function X(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        if (timezoneOffset === 0) {
          return 'Z';
        }

        switch (token) {
          // Hours and optional minutes
          case 'X':
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          // Hours, minutes and optional seconds without `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `XX`

          case 'XXXX':
          case 'XX':
            // Hours and minutes without `:` delimiter
            return formatTimezone(timezoneOffset);
          // Hours, minutes and optional seconds with `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `XXX`

          case 'XXXXX':
          case 'XXX': // Hours and minutes with `:` delimiter

          default:
            return formatTimezone(timezoneOffset, ':');
        }
      },
      // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
      x: function x(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        switch (token) {
          // Hours and optional minutes
          case 'x':
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          // Hours, minutes and optional seconds without `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `xx`

          case 'xxxx':
          case 'xx':
            // Hours and minutes without `:` delimiter
            return formatTimezone(timezoneOffset);
          // Hours, minutes and optional seconds with `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `xxx`

          case 'xxxxx':
          case 'xxx': // Hours and minutes with `:` delimiter

          default:
            return formatTimezone(timezoneOffset, ':');
        }
      },
      // Timezone (GMT)
      O: function O(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        switch (token) {
          // Short
          case 'O':
          case 'OO':
          case 'OOO':
            return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
          // Long

          case 'OOOO':
          default:
            return 'GMT' + formatTimezone(timezoneOffset, ':');
        }
      },
      // Timezone (specific non-location)
      z: function z(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        switch (token) {
          // Short
          case 'z':
          case 'zz':
          case 'zzz':
            return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
          // Long

          case 'zzzz':
          default:
            return 'GMT' + formatTimezone(timezoneOffset, ':');
        }
      },
      // Seconds timestamp
      t: function t(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1000);
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(timestamp, token.length);
      },
      // Milliseconds timestamp
      T: function T(date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = originalDate.getTime();
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(timestamp, token.length);
      }
    };

    function formatTimezoneShort(offset, dirtyDelimiter) {
      var sign = offset > 0 ? '-' : '+';
      var absOffset = Math.abs(offset);
      var hours = Math.floor(absOffset / 60);
      var minutes = absOffset % 60;

      if (minutes === 0) {
        return sign + String(hours);
      }

      var delimiter = dirtyDelimiter || '';
      return sign + String(hours) + delimiter + Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(minutes, 2);
    }

    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
      if (offset % 60 === 0) {
        var sign = offset > 0 ? '-' : '+';
        return sign + Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Math.abs(offset) / 60, 2);
      }

      return formatTimezone(offset, dirtyDelimiter);
    }

    function formatTimezone(offset, dirtyDelimiter) {
      var delimiter = dirtyDelimiter || '';
      var sign = offset > 0 ? '-' : '+';
      var absOffset = Math.abs(offset);
      var hours = Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Math.floor(absOffset / 60), 2);
      var minutes = Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(absOffset % 60, 2);
      return sign + hours + delimiter + minutes;
    }
    /* harmony default export */


    __webpack_exports__["default"] = formatters;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js":
  /*!************************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js ***!
    \************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libFormatLightFormattersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../addLeadingZeros/index.js */
    "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");
    /*
     * |     | Unit                           |     | Unit                           |
     * |-----|--------------------------------|-----|--------------------------------|
     * |  a  | AM, PM                         |  A* |                                |
     * |  d  | Day of month                   |  D  |                                |
     * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
     * |  m  | Minute                         |  M  | Month                          |
     * |  s  | Second                         |  S  | Fraction of second             |
     * |  y  | Year (abs)                     |  Y  |                                |
     *
     * Letters marked by * are not implemented but reserved by Unicode standard.
     */


    var formatters = {
      // Year
      y: function y(date, token) {
        // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
        // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
        // |----------|-------|----|-------|-------|-------|
        // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
        // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
        // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
        // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
        // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
        var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(token === 'yy' ? year % 100 : year, token.length);
      },
      // Month
      M: function M(date, token) {
        var month = date.getUTCMonth();
        return token === 'M' ? String(month + 1) : Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(month + 1, 2);
      },
      // Day of the month
      d: function d(date, token) {
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCDate(), token.length);
      },
      // AM or PM
      a: function a(date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

        switch (token) {
          case 'a':
          case 'aa':
          case 'aaa':
            return dayPeriodEnumValue.toUpperCase();

          case 'aaaaa':
            return dayPeriodEnumValue[0];

          case 'aaaa':
          default:
            return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
        }
      },
      // Hour [1-12]
      h: function h(date, token) {
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours() % 12 || 12, token.length);
      },
      // Hour [0-23]
      H: function H(date, token) {
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCHours(), token.length);
      },
      // Minute
      m: function m(date, token) {
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCMinutes(), token.length);
      },
      // Second
      s: function s(date, token) {
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date.getUTCSeconds(), token.length);
      },
      // Fraction of second
      S: function S(date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return Object(_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(fractionalSeconds, token.length);
      }
    };
    /* harmony default export */

    __webpack_exports__["default"] = formatters;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/_lib/format/longFormatters/index.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/format/longFormatters/index.js ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libFormatLongFormattersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);

    function dateLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case 'P':
          return formatLong.date({
            width: 'short'
          });

        case 'PP':
          return formatLong.date({
            width: 'medium'
          });

        case 'PPP':
          return formatLong.date({
            width: 'long'
          });

        case 'PPPP':
        default:
          return formatLong.date({
            width: 'full'
          });
      }
    }

    function timeLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case 'p':
          return formatLong.time({
            width: 'short'
          });

        case 'pp':
          return formatLong.time({
            width: 'medium'
          });

        case 'ppp':
          return formatLong.time({
            width: 'long'
          });

        case 'pppp':
        default:
          return formatLong.time({
            width: 'full'
          });
      }
    }

    function dateTimeLongFormatter(pattern, formatLong) {
      var matchResult = pattern.match(/(P+)(p+)?/);
      var datePattern = matchResult[1];
      var timePattern = matchResult[2];

      if (!timePattern) {
        return dateLongFormatter(pattern, formatLong);
      }

      var dateTimeFormat;

      switch (datePattern) {
        case 'P':
          dateTimeFormat = formatLong.dateTime({
            width: 'short'
          });
          break;

        case 'PP':
          dateTimeFormat = formatLong.dateTime({
            width: 'medium'
          });
          break;

        case 'PPP':
          dateTimeFormat = formatLong.dateTime({
            width: 'long'
          });
          break;

        case 'PPPP':
        default:
          dateTimeFormat = formatLong.dateTime({
            width: 'full'
          });
          break;
      }

      return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
    }

    var longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    };
    /* harmony default export */

    __webpack_exports__["default"] = longFormatters;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js":
  /*!*********************************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js ***!
    \*********************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libGetTimezoneOffsetInMillisecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getTimezoneOffsetInMilliseconds;
    });

    var MILLISECONDS_IN_MINUTE = 60000;

    function getDateMillisecondsPart(date) {
      return date.getTime() % MILLISECONDS_IN_MINUTE;
    }
    /**
     * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
     * They usually appear for dates that denote time before the timezones were introduced
     * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
     * and GMT+01:00:00 after that date)
     *
     * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
     * which would lead to incorrect calculations.
     *
     * This function returns the timezone offset in milliseconds that takes seconds in account.
     */


    function getTimezoneOffsetInMilliseconds(dirtyDate) {
      var date = new Date(dirtyDate.getTime());
      var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());
      date.setSeconds(0, 0);
      var hasNegativeUTCOffset = baseTimezoneOffset > 0;
      var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);
      return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js ***!
    \*****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libGetUTCDayOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getUTCDayOfYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCDayOfYear(dirtyDate) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var timestamp = date.getTime();
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
      var startOfYearTimestamp = date.getTime();
      var difference = timestamp - startOfYearTimestamp;
      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libGetUTCISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getUTCISOWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");
    /* harmony import */


    var _startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfUTCISOWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCISOWeek(dirtyDate) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var diff = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() - Object(_startOfUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js ***!
    \*******************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libGetUTCISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getUTCISOWeekYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function getUTCISOWeekYear(dirtyDate) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getUTCFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfThisYear);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/getUTCWeek/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/getUTCWeek/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libGetUTCWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getUTCWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");
    /* harmony import */


    var _startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfUTCWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCWeek(dirtyDate, options) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var diff = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options).getTime() - Object(_startOfUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js":
  /*!****************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libGetUTCWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getUTCWeekYear;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function getUTCWeekYear(dirtyDate, dirtyOptions) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyOptions);
      var year = date.getUTCFullYear();
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeekOfNextYear, dirtyOptions);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeekOfThisYear, dirtyOptions);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/protectedTokens/index.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/protectedTokens/index.js ***!
    \*****************************************************************/

  /*! exports provided: isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError */

  /***/
  function node_modulesDateFnsEsm_libProtectedTokensIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isProtectedDayOfYearToken", function () {
      return isProtectedDayOfYearToken;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isProtectedWeekYearToken", function () {
      return isProtectedWeekYearToken;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "throwProtectedError", function () {
      return throwProtectedError;
    });

    var protectedDayOfYearTokens = ['D', 'DD'];
    var protectedWeekYearTokens = ['YY', 'YYYY'];

    function isProtectedDayOfYearToken(token) {
      return protectedDayOfYearTokens.indexOf(token) !== -1;
    }

    function isProtectedWeekYearToken(token) {
      return protectedWeekYearTokens.indexOf(token) !== -1;
    }

    function throwProtectedError(token) {
      if (token === 'YYYY') {
        throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');
      } else if (token === 'YY') {
        throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');
      } else if (token === 'D') {
        throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');
      } else if (token === 'DD') {
        throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libRequiredArgsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return requiredArgs;
    });

    function requiredArgs(required, args) {
      if (args.length < required) {
        throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/setUTCDay/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/setUTCDay/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libSetUTCDayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setUTCDay;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var day = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);
      var currentDay = date.getUTCDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/setUTCISODay/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/setUTCISODay/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libSetUTCISODayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setUTCISODay;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function setUTCISODay(dirtyDate, dirtyDay) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var day = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);

      if (day % 7 === 0) {
        day = day - 7;
      }

      var weekStartsOn = 1;
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var currentDay = date.getUTCDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libSetUTCISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setUTCISOWeek;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../getUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var isoWeek = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeek);
      var diff = Object(_getUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date) - isoWeek;
      date.setUTCDate(date.getUTCDate() - diff * 7);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/setUTCWeek/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/setUTCWeek/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libSetUTCWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setUTCWeek;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../getUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCWeek/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function setUTCWeek(dirtyDate, dirtyWeek, options) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var week = Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyWeek);
      var diff = Object(_getUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, options) - week;
      date.setUTCDate(date.getUTCDate() - diff * 7);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js ***!
    \*******************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libStartOfUTCISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfUTCISOWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function startOfUTCISOWeek(dirtyDate) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var weekStartsOn = 1;
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libStartOfUTCISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfUTCISOWeekYear;
    });
    /* harmony import */


    var _getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getUTCISOWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js");
    /* harmony import */


    var _startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function startOfUTCISOWeekYear(dirtyDate) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var year = Object(_getUTCISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setUTCFullYear(year, 0, 4);
      fourthOfJanuary.setUTCHours(0, 0, 0, 0);
      var date = Object(_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js":
  /*!****************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libStartOfUTCWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfUTCWeek;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function startOfUTCWeek(dirtyDate, dirtyOptions) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js":
  /*!********************************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js ***!
    \********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libStartOfUTCWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfUTCWeekYear;
    });
    /* harmony import */


    var _toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../getUTCWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js");
    /* harmony import */


    var _startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");
    /* harmony import */


    var _requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376


    function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
      Object(_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.firstWeekContainsDate);
      var year = Object(_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setUTCHours(0, 0, 0, 0);
      var date = Object(_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(firstWeek, dirtyOptions);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/_lib/toInteger/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/_lib/toInteger/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsm_libToIntegerIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return toInteger;
    });

    function toInteger(dirtyNumber) {
      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
        return NaN;
      }

      var number = Number(dirtyNumber);

      if (isNaN(number)) {
        return number;
      }

      return number < 0 ? Math.ceil(number) : Math.floor(number);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/add/index.js":
  /*!************************************************!*\
    !*** ./node_modules/date-fns/esm/add/index.js ***!
    \************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return add;
    });
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMonths/index.js */
    "./node_modules/date-fns/esm/addMonths/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /**
     * @name add
     * @category Common Helpers
     * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
     *
     * @description
     * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     *
     * | Key            | Description                        |
     * |----------------|------------------------------------|
     * | years          | Amount of years to be added        |
     * | months         | Amount of months to be added       |
     * | weeks          | Amount of weeks to be added       |
     * | days           | Amount of days to be added         |
     * | hours          | Amount of hours to be added        |
     * | minutes        | Amount of minutes to be added      |
     * | seconds        | Amount of seconds to be added      |
     *
     * All values default to 0
     *
     * @returns {Date} the new date with the seconds added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add the following duration to 1 September 2014, 10:19:50
     * var result = add(new Date(2014, 8, 1, 10, 19, 50), {
     *   years: 2,
     *   months: 9,
     *   weeks: 1,
     *   days: 7,
     *   hours: 5,
     *   minutes: 9,
     *   seconds: 30,
     * })
     * //=> Thu Jun 15 2017 15:29:20
     */


    function add(dirtyDate, duration) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      if (!duration || typeof duration !== 'object') return new Date(NaN);
      var years = 'years' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.years) : 0;
      var months = 'months' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.months) : 0;
      var weeks = 'weeks' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.weeks) : 0;
      var days = 'days' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.days) : 0;
      var hours = 'hours' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.hours) : 0;
      var minutes = 'minutes' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.minutes) : 0;
      var seconds = 'seconds' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.seconds) : 0; // Add years and months

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
      var dateWithMonths = months || years ? Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, months + years * 12) : date; // Add weeks and days

      var dateWithDays = days || weeks ? Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateWithMonths, days + weeks * 7) : dateWithMonths; // Add days, hours, minutes and seconds

      var minutesToAdd = minutes + hours * 60;
      var secondsToAdd = seconds + minutesToAdd * 60;
      var msToAdd = secondsToAdd * 1000;
      var finalDate = new Date(dateWithDays.getTime() + msToAdd);
      return finalDate;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addBusinessDays/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/addBusinessDays/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddBusinessDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addBusinessDays;
    });
    /* harmony import */


    var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isWeekend/index.js */
    "./node_modules/date-fns/esm/isWeekend/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addBusinessDays
     * @category Day Helpers
     * @summary Add the specified number of business days (mon - fri) to the given date.
     *
     * @description
     * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the business days added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 10 business days to 1 September 2014:
     * var result = addBusinessDays(new Date(2014, 8, 1), 10)
     * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)
     */


    function addBusinessDays(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyAmount);
      if (isNaN(amount)) return new Date(NaN);
      var hours = date.getHours();
      var sign = amount < 0 ? -1 : 1;
      var fullWeeks = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(amount / 5);
      date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week

      var restDays = Math.abs(amount % 5); // Loops over remaining days

      while (restDays > 0) {
        date.setDate(date.getDate() + sign);
        if (!Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date)) restDays -= 1;
      } // Restore hours to avoid DST lag


      date.setHours(hours);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addDays/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/addDays/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addDays;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addDays
     * @category Day Helpers
     * @summary Add the specified number of days to the given date.
     *
     * @description
     * Add the specified number of days to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the days added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 10 days to 1 September 2014:
     * var result = addDays(new Date(2014, 8, 1), 10)
     * //=> Thu Sep 11 2014 00:00:00
     */


    function addDays(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);

      if (isNaN(amount)) {
        return new Date(NaN);
      }

      if (!amount) {
        // If 0 days, no-op to avoid changing times in the hour before end of DST
        return date;
      }

      date.setDate(date.getDate() + amount);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addHours/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/addHours/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddHoursIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addHours;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMilliseconds/index.js */
    "./node_modules/date-fns/esm/addMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_HOUR = 3600000;
    /**
     * @name addHours
     * @category Hour Helpers
     * @summary Add the specified number of hours to the given date.
     *
     * @description
     * Add the specified number of hours to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the hours added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 2 hours to 10 July 2014 23:00:00:
     * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)
     * //=> Fri Jul 11 2014 01:00:00
     */

    function addHours(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * MILLISECONDS_IN_HOUR);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addISOWeekYears/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/addISOWeekYears/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddISOWeekYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addISOWeekYears;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../getISOWeekYear/index.js */
    "./node_modules/date-fns/esm/getISOWeekYear/index.js");
    /* harmony import */


    var _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../setISOWeekYear/index.js */
    "./node_modules/date-fns/esm/setISOWeekYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addISOWeekYears
     * @category ISO Week-Numbering Year Helpers
     * @summary Add the specified number of ISO week-numbering years to the given date.
     *
     * @description
     * Add the specified number of ISO week-numbering years to the given date.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `addISOYears` to `addISOWeekYears`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the ISO week-numbering years added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 5 ISO week-numbering years to 2 July 2010:
     * var result = addISOWeekYears(new Date(2010, 6, 2), 5)
     * //=> Fri Jun 26 2015 00:00:00
     */


    function addISOWeekYears(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate, Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate) + amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addMilliseconds/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/addMilliseconds/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddMillisecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addMilliseconds;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addMilliseconds
     * @category Millisecond Helpers
     * @summary Add the specified number of milliseconds to the given date.
     *
     * @description
     * Add the specified number of milliseconds to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the milliseconds added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
     * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
     * //=> Thu Jul 10 2014 12:45:30.750
     */


    function addMilliseconds(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var timestamp = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate).getTime();
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return new Date(timestamp + amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addMinutes/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/addMinutes/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddMinutesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addMinutes;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMilliseconds/index.js */
    "./node_modules/date-fns/esm/addMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_MINUTE = 60000;
    /**
     * @name addMinutes
     * @category Minute Helpers
     * @summary Add the specified number of minutes to the given date.
     *
     * @description
     * Add the specified number of minutes to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the minutes added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 30 minutes to 10 July 2014 12:00:00:
     * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
     * //=> Thu Jul 10 2014 12:30:00
     */

    function addMinutes(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addMonths/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/addMonths/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddMonthsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addMonths;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addMonths
     * @category Month Helpers
     * @summary Add the specified number of months to the given date.
     *
     * @description
     * Add the specified number of months to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the months added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 5 months to 1 September 2014:
     * var result = addMonths(new Date(2014, 8, 1), 5)
     * //=> Sun Feb 01 2015 00:00:00
     */


    function addMonths(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);

      if (isNaN(amount)) {
        return new Date(NaN);
      }

      if (!amount) {
        // If 0 months, no-op to avoid changing times in the hour before end of DST
        return date;
      }

      var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
      // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and
      // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
      // want except that dates will wrap around the end of a month, meaning that
      // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
      // we'll default to the end of the desired month by adding 1 to the desired
      // month and using a date of 0 to back up one day to the end of the desired
      // month.

      var endOfDesiredMonth = new Date(date.getTime());
      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
      var daysInMonth = endOfDesiredMonth.getDate();

      if (dayOfMonth >= daysInMonth) {
        // If we're already at the end of the month, then this is the correct date
        // and we're done.
        return endOfDesiredMonth;
      } else {
        // Otherwise, we now know that setting the original day-of-month value won't
        // cause an overflow, so set the desired day-of-month. Note that we can't
        // just set the date of `endOfDesiredMonth` because that object may have had
        // its time changed in the unusual case where where a DST transition was on
        // the last day of the month and its local time was in the hour skipped or
        // repeated next to a DST transition.  So we use `date` instead which is
        // guaranteed to still have the original time.
        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
        return date;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addQuarters/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/addQuarters/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddQuartersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addQuarters;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMonths/index.js */
    "./node_modules/date-fns/esm/addMonths/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addQuarters
     * @category Quarter Helpers
     * @summary Add the specified number of year quarters to the given date.
     *
     * @description
     * Add the specified number of year quarters to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the quarters added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 1 quarter to 1 September 2014:
     * var result = addQuarters(new Date(2014, 8, 1), 1)
     * //=> Mon Dec 01 2014 00:00:00
     */


    function addQuarters(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      var months = amount * 3;
      return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, months);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addSeconds/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/addSeconds/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddSecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addSeconds;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMilliseconds/index.js */
    "./node_modules/date-fns/esm/addMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addSeconds
     * @category Second Helpers
     * @summary Add the specified number of seconds to the given date.
     *
     * @description
     * Add the specified number of seconds to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the seconds added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 30 seconds to 10 July 2014 12:45:00:
     * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
     * //=> Thu Jul 10 2014 12:45:30
     */


    function addSeconds(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * 1000);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addWeeks/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/addWeeks/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddWeeksIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addWeeks;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addWeeks
     * @category Week Helpers
     * @summary Add the specified number of weeks to the given date.
     *
     * @description
     * Add the specified number of week to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the weeks added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 4 weeks to 1 September 2014:
     * var result = addWeeks(new Date(2014, 8, 1), 4)
     * //=> Mon Sep 29 2014 00:00:00
     */


    function addWeeks(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      var days = amount * 7;
      return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, days);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/addYears/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/addYears/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAddYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return addYears;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMonths/index.js */
    "./node_modules/date-fns/esm/addMonths/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name addYears
     * @category Year Helpers
     * @summary Add the specified number of years to the given date.
     *
     * @description
     * Add the specified number of years to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the years added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 5 years to 1 September 2014:
     * var result = addYears(new Date(2014, 8, 1), 5)
     * //=> Sun Sep 01 2019 00:00:00
     */


    function addYears(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, amount * 12);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/areIntervalsOverlapping/index.js":
  /*!********************************************************************!*\
    !*** ./node_modules/date-fns/esm/areIntervalsOverlapping/index.js ***!
    \********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmAreIntervalsOverlappingIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return areIntervalsOverlapping;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name areIntervalsOverlapping
     * @category Interval Helpers
     * @summary Is the given time interval overlapping with another time interval?
     *
     * @description
     * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.
     *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
     *
     *   ```
     *   2.1.3
     *   time interval
     *   part of the time axis limited by two instants
     *   ```
     *
     *   Also, this function now accepts an object with `start` and `end` properties
     *   instead of two arguments as an interval.
     *   This function now throws `RangeError` if the start of the interval is after its end
     *   or if any date in the interval is `Invalid Date`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   areRangesOverlapping(
     *     new Date(2014, 0, 10), new Date(2014, 0, 20),
     *     new Date(2014, 0, 17), new Date(2014, 0, 21)
     *   )
     *
     *   // v2.0.0 onward
     *
     *   areIntervalsOverlapping(
     *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
     *   )
     *   ```
     *
     * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/types/Interval}
     * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/types/Interval}
     * @param {Object} [options] - the object with options
     * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not
     * @returns {Boolean} whether the time intervals are overlapping
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // For overlapping time intervals:
     * areIntervalsOverlapping(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
     * )
     * //=> true
     *
     * @example
     * // For non-overlapping time intervals:
     * areIntervalsOverlapping(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
     * )
     * //=> false
     *
     * @example
     * // For adjacent time intervals:
     * areIntervalsOverlapping(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }
     * )
     * //=> false
     *
     * @example
     * // Using the inclusive option:
     * areIntervalsOverlapping(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }
     * )
     * //=> false
     * areIntervalsOverlapping(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },
     *   { inclusive: true }
     * )
     * //=> true
     */


    function areIntervalsOverlapping(dirtyIntervalLeft, dirtyIntervalRight) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {};
      var intervalRight = dirtyIntervalRight || {};
      var leftStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.start).getTime();
      var leftEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.end).getTime();
      var rightStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.start).getTime();
      var rightEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
        throw new RangeError('Invalid interval');
      }

      if (options.inclusive) {
        return leftStartTime <= rightEndTime && rightStartTime <= leftEndTime;
      }

      return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/closestIndexTo/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/closestIndexTo/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmClosestIndexToIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return closestIndexTo;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name closestIndexTo
     * @category Common Helpers
     * @summary Return an index of the closest date from the array comparing to the given date.
     *
     * @description
     * Return an index of the closest date from the array comparing to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - Now, `closestIndexTo` doesn't throw an exception
     *   when the second argument is not an array, and returns Invalid Date instead.
     *
     * @param {Date|Number} dateToCompare - the date to compare with
     * @param {Date[]|Number[]} datesArray - the array to search
     * @returns {Number} an index of the date closest to the given date
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Which date is closer to 6 September 2015?
     * var dateToCompare = new Date(2015, 8, 6)
     * var datesArray = [
     *   new Date(2015, 0, 1),
     *   new Date(2016, 0, 1),
     *   new Date(2017, 0, 1)
     * ]
     * var result = closestIndexTo(dateToCompare, datesArray)
     * //=> 1
     */


    function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);

      if (isNaN(dateToCompare)) {
        return NaN;
      }

      var timeToCompare = dateToCompare.getTime();
      var datesArray; // `dirtyDatesArray` is undefined or null

      if (dirtyDatesArray == null) {
        datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
      } else if (typeof dirtyDatesArray.forEach === 'function') {
        datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
      } else {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      }

      var result;
      var minDistance;
      datesArray.forEach(function (dirtyDate, index) {
        var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (isNaN(currentDate)) {
          result = NaN;
          minDistance = NaN;
          return;
        }

        var distance = Math.abs(timeToCompare - currentDate.getTime());

        if (result == null || distance < minDistance) {
          result = index;
          minDistance = distance;
        }
      });
      return result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/closestTo/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/closestTo/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmClosestToIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return closestTo;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name closestTo
     * @category Common Helpers
     * @summary Return a date from the array closest to the given date.
     *
     * @description
     * Return a date from the array closest to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - Now, `closestTo` doesn't throw an exception
     *   when the second argument is not an array, and returns Invalid Date instead.
     *
     * @param {Date|Number} dateToCompare - the date to compare with
     * @param {Date[]|Number[]} datesArray - the array to search
     * @returns {Date} the date from the array closest to the given date
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?
     * var dateToCompare = new Date(2015, 8, 6)
     * var result = closestTo(dateToCompare, [
     *   new Date(2000, 0, 1),
     *   new Date(2030, 0, 1)
     * ])
     * //=> Tue Jan 01 2030 00:00:00
     */


    function closestTo(dirtyDateToCompare, dirtyDatesArray) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);

      if (isNaN(dateToCompare)) {
        return new Date(NaN);
      }

      var timeToCompare = dateToCompare.getTime();
      var datesArray; // `dirtyDatesArray` is undefined or null

      if (dirtyDatesArray == null) {
        datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
      } else if (typeof dirtyDatesArray.forEach === 'function') {
        datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
      } else {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      }

      var result;
      var minDistance;
      datesArray.forEach(function (dirtyDate) {
        var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (isNaN(currentDate)) {
          result = new Date(NaN);
          minDistance = NaN;
          return;
        }

        var distance = Math.abs(timeToCompare - currentDate.getTime());

        if (result == null || distance < minDistance) {
          result = currentDate;
          minDistance = distance;
        }
      });
      return result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/compareAsc/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/compareAsc/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmCompareAscIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return compareAsc;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name compareAsc
     * @category Common Helpers
     * @summary Compare the two dates and return -1, 0 or 1.
     *
     * @description
     * Compare the two dates and return 1 if the first date is after the second,
     * -1 if the first date is before the second or 0 if dates are equal.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to compare
     * @param {Date|Number} dateRight - the second date to compare
     * @returns {Number} the result of the comparison
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Compare 11 February 1987 and 10 July 1989:
     * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
     * //=> -1
     *
     * @example
     * // Sort the array of dates:
     * var result = [
     *   new Date(1995, 6, 2),
     *   new Date(1987, 1, 11),
     *   new Date(1989, 6, 10)
     * ].sort(compareAsc)
     * //=> [
     * //   Wed Feb 11 1987 00:00:00,
     * //   Mon Jul 10 1989 00:00:00,
     * //   Sun Jul 02 1995 00:00:00
     * // ]
     */


    function compareAsc(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var diff = dateLeft.getTime() - dateRight.getTime();

      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1; // Return 0 if diff is 0; return NaN if diff is NaN
      } else {
        return diff;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/compareDesc/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/compareDesc/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmCompareDescIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return compareDesc;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name compareDesc
     * @category Common Helpers
     * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.
     *
     * @description
     * Compare the two dates and return -1 if the first date is after the second,
     * 1 if the first date is before the second or 0 if dates are equal.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to compare
     * @param {Date|Number} dateRight - the second date to compare
     * @returns {Number} the result of the comparison
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:
     * var result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))
     * //=> 1
     *
     * @example
     * // Sort the array of dates in reverse chronological order:
     * var result = [
     *   new Date(1995, 6, 2),
     *   new Date(1987, 1, 11),
     *   new Date(1989, 6, 10)
     * ].sort(compareDesc)
     * //=> [
     * //   Sun Jul 02 1995 00:00:00,
     * //   Mon Jul 10 1989 00:00:00,
     * //   Wed Feb 11 1987 00:00:00
     * // ]
     */


    function compareDesc(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var diff = dateLeft.getTime() - dateRight.getTime();

      if (diff > 0) {
        return -1;
      } else if (diff < 0) {
        return 1; // Return 0 if diff is 0; return NaN if diff is NaN
      } else {
        return diff;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/constants/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/constants/index.js ***!
    \******************************************************/

  /*! exports provided: maxTime, minTime */

  /***/
  function node_modulesDateFnsEsmConstantsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "maxTime", function () {
      return maxTime;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "minTime", function () {
      return minTime;
    });
    /**
     *  Maximum allowed time.
     *  @constant
     *  @type {number}
     *  @default
     */


    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;
    /**
     *  Minimum allowed time.
     *  @constant
     *  @type {number}
     *  @default
     */

    var minTime = -maxTime;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/differenceInBusinessDays/index.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInBusinessDays/index.js ***!
    \*********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInBusinessDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInBusinessDays;
    });
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isWeekend/index.js */
    "./node_modules/date-fns/esm/isWeekend/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../isSameDay/index.js */
    "./node_modules/date-fns/esm/isSameDay/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInBusinessDays
     * @category Day Helpers
     * @summary Get the number of business days between the given dates.
     *
     * @description
     * Get the number of business day periods between the given dates.
     * Business days being days that arent in the weekend.
     * Like `differenceInCalendarDays`, the function removes the times from
     * the dates before calculating the difference.
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of business days
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many business days are between
     * // 10 January 2014 and 20 July 2014?
     * var result = differenceInBusinessDays(
     *   new Date(2014, 6, 20),
     *   new Date(2014, 0, 10)
     * )
     * //=> 136
     */


    function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDateRight);
      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft) || !Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight)) return new Date(NaN);
      var calendarDifference = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateLeft, dateRight);
      var sign = calendarDifference < 0 ? -1 : 1;
      var weeks = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(calendarDifference / 7);
      var result = weeks * 5;
      dateRight = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week

      while (!Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(dateLeft, dateRight)) {
        // sign is used to account for both negative and positive differences
        result += Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateRight) ? 0 : sign;
        dateRight = Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dateRight, sign);
      }

      return result === 0 ? 0 : result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarDays/index.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarDays/index.js ***!
    \*********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarDays;
    });
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfDay/index.js */
    "./node_modules/date-fns/esm/startOfDay/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_DAY = 86400000;
    /**
     * @name differenceInCalendarDays
     * @category Day Helpers
     * @summary Get the number of calendar days between the given dates.
     *
     * @description
     * Get the number of calendar days between the given dates. This means that the times are removed
     * from the dates and then the difference in days is calculated.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar days
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar days are between
     * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
     * var result = differenceInCalendarDays(
     *   new Date(2012, 6, 2, 0, 0),
     *   new Date(2011, 6, 2, 23, 0)
     * )
     * //=> 366
     * // How many calendar days are between
     * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
     * var result = differenceInCalendarDays(
     *   new Date(2011, 6, 3, 0, 1),
     *   new Date(2011, 6, 2, 23, 59)
     * )
     * //=> 1
     */

    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var startOfDayLeft = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
      var startOfDayRight = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
      var timestampLeft = startOfDayLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfDayLeft);
      var timestampRight = startOfDayRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfDayRight); // Round the number of days to the nearest integer
      // because the number of milliseconds in a day is not constant
      // (e.g. it's different in the day of the daylight saving time clock shift)

      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarISOWeekYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarISOWeekYears;
    });
    /* harmony import */


    var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getISOWeekYear/index.js */
    "./node_modules/date-fns/esm/getISOWeekYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInCalendarISOWeekYears
     * @category ISO Week-Numbering Year Helpers
     * @summary Get the number of calendar ISO week-numbering years between the given dates.
     *
     * @description
     * Get the number of calendar ISO week-numbering years between the given dates.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar ISO week-numbering years
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?
     * var result = differenceInCalendarISOWeekYears(
     *   new Date(2012, 0, 1),
     *   new Date(2010, 0, 1)
     * )
     * //=> 2
     */


    function differenceInCalendarISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      return Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft) - Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js ***!
    \*************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarISOWeeksIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarISOWeeks;
    });
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000;
    /**
     * @name differenceInCalendarISOWeeks
     * @category ISO Week Helpers
     * @summary Get the number of calendar ISO weeks between the given dates.
     *
     * @description
     * Get the number of calendar ISO weeks between the given dates.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar ISO weeks
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?
     * var result = differenceInCalendarISOWeeks(
     *   new Date(2014, 6, 21),
     *   new Date(2014, 6, 6)
     * )
     * //=> 3
     */

    function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var startOfISOWeekLeft = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
      var startOfISOWeekRight = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
      var timestampLeft = startOfISOWeekLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfISOWeekLeft);
      var timestampRight = startOfISOWeekRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(startOfISOWeekRight); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarMonths/index.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarMonths/index.js ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarMonthsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarMonths;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInCalendarMonths
     * @category Month Helpers
     * @summary Get the number of calendar months between the given dates.
     *
     * @description
     * Get the number of calendar months between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar months
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar months are between 31 January 2014 and 1 September 2014?
     * var result = differenceInCalendarMonths(
     *   new Date(2014, 8, 1),
     *   new Date(2014, 0, 31)
     * )
     * //=> 8
     */


    function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
      var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
      return yearDiff * 12 + monthDiff;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarQuarters/index.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarQuarters/index.js ***!
    \*************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarQuartersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarQuarters;
    });
    /* harmony import */


    var _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getQuarter/index.js */
    "./node_modules/date-fns/esm/getQuarter/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInCalendarQuarters
     * @category Quarter Helpers
     * @summary Get the number of calendar quarters between the given dates.
     *
     * @description
     * Get the number of calendar quarters between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar quarters
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar quarters are between 31 December 2013 and 2 July 2014?
     * var result = differenceInCalendarQuarters(
     *   new Date(2014, 6, 2),
     *   new Date(2013, 11, 31)
     * )
     * //=> 3
     */


    function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDateRight);
      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
      var quarterDiff = Object(_getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft) - Object(_getQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight);
      return yearDiff * 4 + quarterDiff;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarWeeks/index.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarWeeks/index.js ***!
    \**********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarWeeksIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarWeeks;
    });
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000;
    /**
     * @name differenceInCalendarWeeks
     * @category Week Helpers
     * @summary Get the number of calendar weeks between the given dates.
     *
     * @description
     * Get the number of calendar weeks between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Number} the number of calendar weeks
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // How many calendar weeks are between 5 July 2014 and 20 July 2014?
     * var result = differenceInCalendarWeeks(
     *   new Date(2014, 6, 20),
     *   new Date(2014, 6, 5)
     * )
     * //=> 3
     *
     * @example
     * // If the week starts on Monday,
     * // how many calendar weeks are between 5 July 2014 and 20 July 2014?
     * var result = differenceInCalendarWeeks(
     *   new Date(2014, 6, 20),
     *   new Date(2014, 6, 5),
     *   { weekStartsOn: 1 }
     * )
     * //=> 2
     */

    function differenceInCalendarWeeks(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var startOfWeekLeft = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyOptions);
      var startOfWeekRight = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight, dirtyOptions);
      var timestampLeft = startOfWeekLeft.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startOfWeekLeft);
      var timestampRight = startOfWeekRight.getTime() - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startOfWeekRight); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInCalendarYears/index.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInCalendarYears/index.js ***!
    \**********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInCalendarYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInCalendarYears;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInCalendarYears
     * @category Year Helpers
     * @summary Get the number of calendar years between the given dates.
     *
     * @description
     * Get the number of calendar years between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar years
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar years are between 31 December 2013 and 11 February 2015?
     * var result = differenceInCalendarYears(
     *   new Date(2015, 1, 11),
     *   new Date(2013, 11, 31)
     * )
     * //=> 2
     */


    function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeft.getFullYear() - dateRight.getFullYear();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInDays/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInDays/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInDays;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // Like `compareAsc` but uses local time not UTC, which is needed
    // for accurate equality comparisons of UTC timestamps that end up
    // having the same representation in local time, e.g. one hour before
    // DST ends vs. the instant that DST ends.


    function compareLocalAsc(dateLeft, dateRight) {
      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();

      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1; // Return 0 if diff is 0; return NaN if diff is NaN
      } else {
        return diff;
      }
    }
    /**
     * @name differenceInDays
     * @category Day Helpers
     * @summary Get the number of full days between the given dates.
     *
     * @description
     * Get the number of full day periods between two dates. Fractional days are
     * truncated towards zero.
     *
     * One "full day" is the distance between a local time in one day to the same
     * local time on the next or previous day. A full day can sometimes be less than
     * or more than 24 hours if a daylight savings change happens between two dates.
     *
     * To ignore DST and only measure exact 24-hour periods, use this instead:
     * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.
     *
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full days according to the local timezone
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full days are between
     * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
     * var result = differenceInDays(
     *   new Date(2012, 6, 2, 0, 0),
     *   new Date(2011, 6, 2, 23, 0)
     * )
     * //=> 365
     * // How many full days are between
     * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
     * var result = differenceInDays(
     *   new Date(2011, 6, 3, 0, 1),
     *   new Date(2011, 6, 2, 23, 59)
     * )
     * //=> 0
     * // How many full days are between
     * // 1 March 2020 0:00 and 1 June 2020 0:00 ?
     * // Note: because local time is used, the
     * // result will always be 92 days, even in
     * // time zones where DST starts and the
     * // period has only 92*24-1 hours.
     * var result = differenceInDays(
     *   new Date(2020, 5, 1),
     *   new Date(2020, 2, 1)
     * )
    //=> 92
     */


    function differenceInDays(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var sign = compareLocalAsc(dateLeft, dateRight);
      var difference = Math.abs(Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
      dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
      // If so, result must be decreased by 1 in absolute value

      var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;
      var result = sign * (difference - isLastDayNotFull); // Prevent negative zero

      return result === 0 ? 0 : result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInHours/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInHours/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInHoursIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInHours;
    });
    /* harmony import */


    var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInMilliseconds/index.js */
    "./node_modules/date-fns/esm/differenceInMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_HOUR = 3600000;
    /**
     * @name differenceInHours
     * @category Hour Helpers
     * @summary Get the number of hours between the given dates.
     *
     * @description
     * Get the number of hours between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of hours
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?
     * var result = differenceInHours(
     *   new Date(2014, 6, 2, 19, 0),
     *   new Date(2014, 6, 2, 6, 50)
     * )
     * //=> 12
     */

    function differenceInHours(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInISOWeekYears/index.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInISOWeekYears/index.js ***!
    \*********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInISOWeekYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInISOWeekYears;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../differenceInCalendarISOWeekYears/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js");
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony import */


    var _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../subISOWeekYears/index.js */
    "./node_modules/date-fns/esm/subISOWeekYears/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInISOWeekYears
     * @category ISO Week-Numbering Year Helpers
     * @summary Get the number of full ISO week-numbering years between the given dates.
     *
     * @description
     * Get the number of full ISO week-numbering years between the given dates.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full ISO week-numbering years
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?
     * var result = differenceInISOWeekYears(
     *   new Date(2012, 0, 1),
     *   new Date(2010, 0, 1)
     * )
     * //=> 1
     */


    function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
      var difference = Math.abs(Object(_differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
      dateLeft = Object(_subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1
      // if last calendar ISO year is not full
      // If so, result must be decreased by 1 in absolute value

      var isLastISOWeekYearNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
      var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero

      return result === 0 ? 0 : result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInMilliseconds/index.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInMilliseconds/index.js ***!
    \*********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInMillisecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInMilliseconds;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInMilliseconds
     * @category Millisecond Helpers
     * @summary Get the number of milliseconds between the given dates.
     *
     * @description
     * Get the number of milliseconds between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of milliseconds
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many milliseconds are between
     * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
     * var result = differenceInMilliseconds(
     *   new Date(2014, 6, 2, 12, 30, 21, 700),
     *   new Date(2014, 6, 2, 12, 30, 20, 600)
     * )
     * //=> 1100
     */


    function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeft.getTime() - dateRight.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInMinutes/index.js":
  /*!****************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInMinutes/index.js ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInMinutesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInMinutes;
    });
    /* harmony import */


    var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInMilliseconds/index.js */
    "./node_modules/date-fns/esm/differenceInMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_MINUTE = 60000;
    /**
     * @name differenceInMinutes
     * @category Minute Helpers
     * @summary Get the number of minutes between the given dates.
     *
     * @description
     * Get the signed number of full (rounded towards 0) minutes between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of minutes
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?
     * var result = differenceInMinutes(
     *   new Date(2014, 6, 2, 12, 20, 0),
     *   new Date(2014, 6, 2, 12, 7, 59)
     * )
     * //=> 12
     *
     * @example
     * // How many minutes are from 10:01:59 to 10:00:00
     * var result = differenceInMinutes(
     *   new Date(2000, 0, 1, 10, 0, 0),
     *   new Date(2000, 0, 1, 10, 1, 59)
     * )
     * //=> -1
     */

    function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInMonths/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInMonths/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInMonthsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInMonths;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../differenceInCalendarMonths/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarMonths/index.js");
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInMonths
     * @category Month Helpers
     * @summary Get the number of full months between the given dates.
     *
     * @description
     * Get the number of full months between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full months
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full months are between 31 January 2014 and 1 September 2014?
     * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
     * //=> 7
     */


    function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
      var difference = Math.abs(Object(_differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
      dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
      // If so, result must be decreased by 1 in absolute value

      var isLastMonthNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
      var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero

      return result === 0 ? 0 : result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInQuarters/index.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInQuarters/index.js ***!
    \*****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInQuartersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInQuarters;
    });
    /* harmony import */


    var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInMonths/index.js */
    "./node_modules/date-fns/esm/differenceInMonths/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInQuarters
     * @category Quarter Helpers
     * @summary Get the number of full quarters between the given dates.
     *
     * @description
     * Get the number of full quarters between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full quarters
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full quarters are between 31 December 2013 and 2 July 2014?
     * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))
     * //=> 2
     */


    function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var diff = Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 3;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInSeconds/index.js":
  /*!****************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInSeconds/index.js ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInSecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInSeconds;
    });
    /* harmony import */


    var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInMilliseconds/index.js */
    "./node_modules/date-fns/esm/differenceInMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInSeconds
     * @category Second Helpers
     * @summary Get the number of seconds between the given dates.
     *
     * @description
     * Get the number of seconds between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of seconds
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many seconds are between
     * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
     * var result = differenceInSeconds(
     *   new Date(2014, 6, 2, 12, 30, 20, 0),
     *   new Date(2014, 6, 2, 12, 30, 7, 999)
     * )
     * //=> 12
     */


    function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var diff = Object(_differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 1000;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInWeeks/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInWeeks/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInWeeksIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInWeeks;
    });
    /* harmony import */


    var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInDays/index.js */
    "./node_modules/date-fns/esm/differenceInDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInWeeks
     * @category Week Helpers
     * @summary Get the number of full weeks between the given dates.
     *
     * @description
     * Get the number of full weeks between two dates. Fractional weeks are
     * truncated towards zero.
     *
     * One "full week" is the distance between a local time in one day to the same
     * local time 7 days earlier or later. A full week can sometimes be less than
     * or more than 7*24 hours if a daylight savings change happens between two dates.
     *
     * To ignore DST and only measure exact 7*24-hour periods, use this instead:
     * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.
     *
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full weeks
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full weeks are between 5 July 2014 and 20 July 2014?
     * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))
     * //=> 2
     *
     * // How many full weeks are between
     * // 1 March 2020 0:00 and 6 June 2020 0:00 ?
     * // Note: because local time is used, the
     * // result will always be 8 weeks (54 days),
     * // even if DST starts and the period has
     * // only 54*24-1 hours.
     * var result = differenceInWeeks(
     *   new Date(2020, 5, 1),
     *   new Date(2020, 2, 6)
     * )
     * //=> 8
     */


    function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var diff = Object(_differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight) / 7;
      return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/differenceInYears/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/differenceInYears/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmDifferenceInYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return differenceInYears;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../differenceInCalendarYears/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarYears/index.js");
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name differenceInYears
     * @category Year Helpers
     * @summary Get the number of full years between the given dates.
     *
     * @description
     * Get the number of full years between the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full years
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full years are between 31 December 2013 and 11 February 2015?
     * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))
     * //=> 1
     */


    function differenceInYears(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight);
      var difference = Math.abs(Object(_differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing
      // with leap days

      dateLeft.setFullYear('1584');
      dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
      // If so, result must be decreased by 1 in absolute value

      var isLastYearNotFull = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateLeft, dateRight) === -sign;
      var result = sign * (difference - isLastYearNotFull); // Prevent negative zero

      return result === 0 ? 0 : result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachDayOfInterval/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachDayOfInterval/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachDayOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachDayOfInterval;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachDayOfInterval
     * @category Interval Helpers
     * @summary Return the array of dates within the specified time interval.
     *
     * @description
     * Return the array of dates within the specified time interval.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `eachDay` to `eachDayOfInterval`.
     *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
     *
     *   ```
     *   2.1.3
     *   time interval
     *   part of the time axis limited by two instants
     *   ```
     *
     *   Also, this function now accepts an object with `start` and `end` properties
     *   instead of two arguments as an interval.
     *   This function now throws `RangeError` if the start of the interval is after its end
     *   or if any date in the interval is `Invalid Date`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))
     *
     *   // v2.0.0 onward
     *
     *   eachDayOfInterval(
     *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }
     *   )
     *   ```
     *
     * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
     * @param {Object} [options] - an object with options.
     * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
     * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.step` must be a number greater than 1
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each day between 6 October 2014 and 10 October 2014:
     * var result = eachDayOfInterval({
     *   start: new Date(2014, 9, 6),
     *   end: new Date(2014, 9, 10)
     * })
     * //=> [
     * //   Mon Oct 06 2014 00:00:00,
     * //   Tue Oct 07 2014 00:00:00,
     * //   Wed Oct 08 2014 00:00:00,
     * //   Thu Oct 09 2014 00:00:00,
     * //   Fri Oct 10 2014 00:00:00
     * // ]
     */


    function eachDayOfInterval(dirtyInterval, options) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
      var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      var step = options && 'step' in options ? Number(options.step) : 1;
      if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');

      while (currentDate.getTime() <= endTime) {
        dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
        currentDate.setDate(currentDate.getDate() + step);
        currentDate.setHours(0, 0, 0, 0);
      }

      return dates;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachHourOfInterval/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachHourOfInterval/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachHourOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachHourOfInterval;
    });
    /* harmony import */


    var _addHours_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../addHours/index.js */
    "./node_modules/date-fns/esm/addHours/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachHourOfInterval
     * @category Interval Helpers
     * @summary Return the array of hours within the specified time interval.
     *
     * @description
     * Return the array of hours within the specified time interval.
     *
     * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
     * @param {Object} [options] - an object with options.
     * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
     * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.step` must be a number greater than 1
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each hour between 6 October 2014, 12:00 and 10 October 2014, 15:00
     * var result = eachHourOfInterval({
     *   start: new Date(2014, 9, 6, 12),
     *   end: new Date(2014, 9, 6, 15)
     * })
     * //=> [
     * //   Mon Oct 06 2014 12:00:00,
     * //   Mon Oct 06 2014 13:00:00,
     * //   Mon Oct 06 2014 14:00:00,
     * //   Mon Oct 06 2014 15:00:00
     * // ]
     */


    function eachHourOfInterval(dirtyInterval, options) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.start);
      var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(interval.end);
      var startTime = startDate.getTime();
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startTime <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var dates = [];
      var currentDate = startDate;
      currentDate.setMinutes(0, 0, 0);
      var step = options && 'step' in options ? Number(options.step) : 1;
      if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');

      while (currentDate.getTime() <= endTime) {
        dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(currentDate));
        currentDate = Object(_addHours_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate, step);
      }

      return dates;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachMonthOfInterval/index.js":
  /*!****************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachMonthOfInterval/index.js ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachMonthOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachMonthOfInterval;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachMonthOfInterval
     * @category Interval Helpers
     * @summary Return the array of months within the specified time interval.
     *
     * @description
     * Return the array of months within the specified time interval.
     *
     * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
     * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each month between 6 February 2014 and 10 August 2014:
     * var result = eachMonthOfInterval({
     *   start: new Date(2014, 1, 6),
     *   end: new Date(2014, 7, 10)
     * })
     * //=> [
     * //   Sat Feb 01 2014 00:00:00,
     * //   Sat Mar 01 2014 00:00:00,
     * //   Tue Apr 01 2014 00:00:00,
     * //   Thu May 01 2014 00:00:00,
     * //   Sun Jun 01 2014 00:00:00,
     * //   Tue Jul 01 2014 00:00:00,
     * //   Fri Aug 01 2014 00:00:00
     * // ]
     */


    function eachMonthOfInterval(dirtyInterval) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
      var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setDate(1);

      while (currentDate.getTime() <= endTime) {
        dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
        currentDate.setMonth(currentDate.getMonth() + 1);
      }

      return dates;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachQuarterOfInterval/index.js":
  /*!******************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachQuarterOfInterval/index.js ***!
    \******************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachQuarterOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachQuarterOfInterval;
    });
    /* harmony import */


    var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../addQuarters/index.js */
    "./node_modules/date-fns/esm/addQuarters/index.js");
    /* harmony import */


    var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfQuarter/index.js */
    "./node_modules/date-fns/esm/startOfQuarter/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachQuarterOfInterval
     * @category Interval Helpers
     * @summary Return the array of quarters within the specified time interval.
     *
     * @description
     * Return the array of quarters within the specified time interval.
     *
     * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
     * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each quarter within interval 6 February 2014 - 10 August 2014:
     * var result = eachQuarterOfInterval({
     *   start: new Date(2014, 1, 6),
     *   end: new Date(2014, 7, 10)
     * })
     * //=> [
     * //   Wed Jan 01 2014 00:00:00,
     * //   Tue Apr 01 2014 00:00:00,
     * //   Tue Jul 01 2014 00:00:00,
     * // ]
     */


    function eachQuarterOfInterval(dirtyInterval) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.start);
      var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var startDateQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startDate);
      var endDateQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(endDate);
      endTime = endDateQuarter.getTime();
      var quarters = [];
      var currentQuarter = startDateQuarter;

      while (currentQuarter.getTime() <= endTime) {
        quarters.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentQuarter));
        currentQuarter = Object(_addQuarters_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentQuarter, 1);
      }

      return quarters;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachWeekOfInterval/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachWeekOfInterval/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachWeekOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachWeekOfInterval;
    });
    /* harmony import */


    var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../addWeeks/index.js */
    "./node_modules/date-fns/esm/addWeeks/index.js");
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachWeekOfInterval
     * @category Interval Helpers
     * @summary Return the array of weeks within the specified time interval.
     *
     * @description
     * Return the array of weeks within the specified time interval.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each week within interval 6 October 2014 - 23 November 2014:
     * var result = eachWeekOfInterval({
     *   start: new Date(2014, 9, 6),
     *   end: new Date(2014, 10, 23)
     * })
     * //=> [
     * //   Sun Oct 05 2014 00:00:00,
     * //   Sun Oct 12 2014 00:00:00,
     * //   Sun Oct 19 2014 00:00:00,
     * //   Sun Oct 26 2014 00:00:00,
     * //   Sun Nov 02 2014 00:00:00,
     * //   Sun Nov 09 2014 00:00:00,
     * //   Sun Nov 16 2014 00:00:00,
     * //   Sun Nov 23 2014 00:00:00
     * // ]
     */


    function eachWeekOfInterval(dirtyInterval, options) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.start);
      var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var startDateWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(startDate, options);
      var endDateWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet

      startDateWeek.setHours(15);
      endDateWeek.setHours(15);
      endTime = endDateWeek.getTime();
      var weeks = [];
      var currentWeek = startDateWeek;

      while (currentWeek.getTime() <= endTime) {
        currentWeek.setHours(0);
        weeks.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(currentWeek));
        currentWeek = Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentWeek, 1);
        currentWeek.setHours(15);
      }

      return weeks;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachWeekendOfInterval/index.js":
  /*!******************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachWeekendOfInterval/index.js ***!
    \******************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachWeekendOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachWeekendOfInterval;
    });
    /* harmony import */


    var _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../eachDayOfInterval/index.js */
    "./node_modules/date-fns/esm/eachDayOfInterval/index.js");
    /* harmony import */


    var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isSunday/index.js */
    "./node_modules/date-fns/esm/isSunday/index.js");
    /* harmony import */


    var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../isWeekend/index.js */
    "./node_modules/date-fns/esm/isWeekend/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachWeekendOfInterval
     * @category Interval Helpers
     * @summary List all the Saturdays and Sundays in the given date interval.
     *
     * @description
     * Get all the Saturdays and Sundays in the given date interval.
     *
     * @param {Interval} interval - the given interval. See [Interval]{@link docs/types/Interval}
     * @returns {Date[]} an array containing all the Saturdays and Sundays
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Lists all Saturdays and Sundays in the given date interval
     * var result = eachWeekendOfInterval({
     *   start: new Date(2018, 8, 17),
     *   end: new Date(2018, 8, 30)
     * })
     * //=> [
     * //   Sat Sep 22 2018 00:00:00,
     * //   Sun Sep 23 2018 00:00:00,
     * //   Sat Sep 29 2018 00:00:00,
     * //   Sun Sep 30 2018 00:00:00
     * // ]
     */


    function eachWeekendOfInterval(interval) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var dateInterval = Object(_eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval);
      var weekends = [];
      var index = 0;

      while (index < dateInterval.length) {
        var date = dateInterval[index++];

        if (Object(_isWeekend_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date)) {
          weekends.push(date);
          if (Object(_isSunday_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date)) index = index + 5;
        }
      }

      return weekends;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachWeekendOfMonth/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachWeekendOfMonth/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachWeekendOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachWeekendOfMonth;
    });
    /* harmony import */


    var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../eachWeekendOfInterval/index.js */
    "./node_modules/date-fns/esm/eachWeekendOfInterval/index.js");
    /* harmony import */


    var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfMonth/index.js */
    "./node_modules/date-fns/esm/startOfMonth/index.js");
    /* harmony import */


    var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../endOfMonth/index.js */
    "./node_modules/date-fns/esm/endOfMonth/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachWeekendOfMonth
     * @category Month Helpers
     * @summary List all the Saturdays and Sundays in the given month.
     *
     * @description
     * Get all the Saturdays and Sundays in the given month.
     *
     * @param {Date|Number} date - the given month
     * @returns {Date[]} an array containing all the Saturdays and Sundays
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The passed date is invalid
     *
     * @example
     * // Lists all Saturdays and Sundays in the given month
     * var result = eachWeekendOfMonth(new Date(2022, 1, 1))
     * //=> [
     * //   Sat Feb 05 2022 00:00:00,
     * //   Sun Feb 06 2022 00:00:00,
     * //   Sat Feb 12 2022 00:00:00,
     * //   Sun Feb 13 2022 00:00:00,
     * //   Sat Feb 19 2022 00:00:00,
     * //   Sun Feb 20 2022 00:00:00,
     * //   Sat Feb 26 2022 00:00:00,
     * //   Sun Feb 27 2022 00:00:00
     * // ]
     */


    function eachWeekendOfMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var startDate = Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
      var endDate = Object(_endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
      return Object(_eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        start: startDate,
        end: endDate
      });
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachWeekendOfYear/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachWeekendOfYear/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachWeekendOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachWeekendOfYear;
    });
    /* harmony import */


    var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../eachWeekendOfInterval/index.js */
    "./node_modules/date-fns/esm/eachWeekendOfInterval/index.js");
    /* harmony import */


    var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfYear/index.js */
    "./node_modules/date-fns/esm/startOfYear/index.js");
    /* harmony import */


    var _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../endOfYear/index.js */
    "./node_modules/date-fns/esm/endOfYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachWeekendOfYear
     * @category Year Helpers
     * @summary List all the Saturdays and Sundays in the year.
     *
     * @description
     * Get all the Saturdays and Sundays in the year.
     *
     * @param {Date|Number} date - the given year
     * @returns {Date[]} an array containing all the Saturdays and Sundays
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The passed date is invalid
     *
     * @example
     * // Lists all Saturdays and Sundays in the year
     * var result = eachWeekendOfYear(new Date(2020, 1, 1))
     * //=> [
     * //   Sat Jan 03 2020 00:00:00,
     * //   Sun Jan 04 2020 00:00:00,
     * //   ...
     * //   Sun Dec 27 2020 00:00:00
     * // ]
     * ]
     */


    function eachWeekendOfYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var startDate = Object(_startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      if (isNaN(startDate)) throw new RangeError('The passed date is invalid');
      var endDate = Object(_endOfYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
      return Object(_eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        start: startDate,
        end: endDate
      });
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/eachYearOfInterval/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/eachYearOfInterval/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEachYearOfIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return eachYearOfInterval;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name eachYearOfInterval
     * @category Interval Helpers
     * @summary Return the array of yearly timestamps within the specified time interval.
     *
     * @description
     * Return the array of yearly timestamps within the specified time interval.
     *
     * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}
     * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each year between 6 February 2014 and 10 August 2017:
     * var result = eachYearOfInterval({
     *   start: new Date(2014, 1, 6),
     *   end: new Date(2017, 7, 10)
     * })
     * //=> [
     * //   Wed Jan 01 2014 00:00:00,
     * //   Thu Jan 01 2015 00:00:00,
     * //   Fri Jan 01 2016 00:00:00,
     * //   Sun Jan 01 2017 00:00:00
     * // ]
     */


    function eachYearOfInterval(dirtyInterval) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start);
      var endDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setMonth(0, 1);

      while (currentDate.getTime() <= endTime) {
        dates.push(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(currentDate));
        currentDate.setFullYear(currentDate.getFullYear() + 1);
      }

      return dates;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfDay/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfDay/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfDayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfDay;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfDay
     * @category Day Helpers
     * @summary Return the end of a day for the given date.
     *
     * @description
     * Return the end of a day for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a day
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a day for 2 September 2014 11:55:00:
     * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 02 2014 23:59:59.999
     */


    function endOfDay(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfDecade/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfDecade/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfDecadeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfDecade;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfDecade
     * @category Decade Helpers
     * @summary Return the end of a decade for the given date.
     *
     * @description
     * Return the end of a decade for the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a decade
     * @param {Object} [options] - an object with options.
     * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
     *
     * @example
     * // The end of a decade for 12 May 1984 00:00:00:
     * var result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))
     * //=> Dec 31 1989 23:59:59.999
     */


    function endOfDecade(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      var decade = 9 + Math.floor(year / 10) * 10;
      date.setFullYear(decade, 11, 31);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfHour/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfHour/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfHourIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfHour;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfHour
     * @category Hour Helpers
     * @summary Return the end of an hour for the given date.
     *
     * @description
     * Return the end of an hour for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of an hour
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of an hour for 2 September 2014 11:55:00:
     * var result = endOfHour(new Date(2014, 8, 2, 11, 55))
     * //=> Tue Sep 02 2014 11:59:59.999
     */


    function endOfHour(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setMinutes(59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfISOWeek/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfISOWeek/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfISOWeek;
    });
    /* harmony import */


    var _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../endOfWeek/index.js */
    "./node_modules/date-fns/esm/endOfWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfISOWeek
     * @category ISO Week Helpers
     * @summary Return the end of an ISO week for the given date.
     *
     * @description
     * Return the end of an ISO week for the given date.
     * The result will be in the local timezone.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of an ISO week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of an ISO week for 2 September 2014 11:55:00:
     * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sun Sep 07 2014 23:59:59.999
     */


    function endOfISOWeek(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
        weekStartsOn: 1
      });
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfISOWeekYear/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfISOWeekYear/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfISOWeekYear;
    });
    /* harmony import */


    var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getISOWeekYear/index.js */
    "./node_modules/date-fns/esm/getISOWeekYear/index.js");
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfISOWeekYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Return the end of an ISO week-numbering year for the given date.
     *
     * @description
     * Return the end of an ISO week-numbering year,
     * which always starts 3 days before the year's first Thursday.
     * The result will be in the local timezone.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of an ISO week-numbering year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of an ISO week-numbering year for 2 July 2005:
     * var result = endOfISOWeekYear(new Date(2005, 6, 2))
     * //=> Sun Jan 01 2006 23:59:59.999
     */


    function endOfISOWeekYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
      date.setMilliseconds(date.getMilliseconds() - 1);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfMinute/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfMinute/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfMinuteIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfMinute;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfMinute
     * @category Minute Helpers
     * @summary Return the end of a minute for the given date.
     *
     * @description
     * Return the end of a minute for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a minute
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a minute for 1 December 2014 22:15:45.400:
     * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
     * //=> Mon Dec 01 2014 22:15:59.999
     */


    function endOfMinute(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setSeconds(59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfMonth/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfMonth/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfMonth
     * @category Month Helpers
     * @summary Return the end of a month for the given date.
     *
     * @description
     * Return the end of a month for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a month for 2 September 2014 11:55:00:
     * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 30 2014 23:59:59.999
     */


    function endOfMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfQuarter/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfQuarter/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfQuarter;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfQuarter
     * @category Quarter Helpers
     * @summary Return the end of a year quarter for the given date.
     *
     * @description
     * Return the end of a year quarter for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a quarter
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a quarter for 2 September 2014 11:55:00:
     * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 30 2014 23:59:59.999
     */


    function endOfQuarter(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3 + 3;
      date.setMonth(month, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfSecond/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfSecond/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfSecondIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfSecond;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfSecond
     * @category Second Helpers
     * @summary Return the end of a second for the given date.
     *
     * @description
     * Return the end of a second for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a second
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a second for 1 December 2014 22:15:45.400:
     * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
     * //=> Mon Dec 01 2014 22:15:45.999
     */


    function endOfSecond(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setMilliseconds(999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfToday/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfToday/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfTodayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfToday;
    });
    /* harmony import */


    var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../endOfDay/index.js */
    "./node_modules/date-fns/esm/endOfDay/index.js");
    /**
     * @name endOfToday
     * @category Day Helpers
     * @summary Return the end of today.
     * @pure false
     *
     * @description
     * Return the end of today.
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @returns {Date} the end of today
     *
     * @example
     * // If today is 6 October 2014:
     * var result = endOfToday()
     * //=> Mon Oct 6 2014 23:59:59.999
     */


    function endOfToday() {
      return Object(_endOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now());
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfTomorrow/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfTomorrow/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfTomorrowIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfTomorrow;
    });
    /**
     * @name endOfTomorrow
     * @category Day Helpers
     * @summary Return the end of tomorrow.
     * @pure false
     *
     * @description
     * Return the end of tomorrow.
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `new Date()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @returns {Date} the end of tomorrow
     *
     * @example
     * // If today is 6 October 2014:
     * var result = endOfTomorrow()
     * //=> Tue Oct 7 2014 23:59:59.999
     */


    function endOfTomorrow() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day + 1);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfWeek/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfWeek/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfWeek
     * @category Week Helpers
     * @summary Return the end of a week for the given date.
     *
     * @description
     * Return the end of a week for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date} the end of a week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // The end of a week for 2 September 2014 11:55:00:
     * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sat Sep 06 2014 23:59:59.999
     *
     * @example
     * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
     * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
     * //=> Sun Sep 07 2014 23:59:59.999
     */


    function endOfWeek(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setDate(date.getDate() + diff);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfYear/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfYear/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name endOfYear
     * @category Year Helpers
     * @summary Return the end of a year for the given date.
     *
     * @description
     * Return the end of a year for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a year for 2 September 2014 11:55:00:
     * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
     * //=> Wed Dec 31 2014 23:59:59.999
     */


    function endOfYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      date.setFullYear(year + 1, 0, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/endOfYesterday/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/endOfYesterday/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmEndOfYesterdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return endOfYesterday;
    });
    /**
     * @name endOfYesterday
     * @category Day Helpers
     * @summary Return the end of yesterday.
     * @pure false
     *
     * @description
     * Return the end of yesterday.
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `new Date()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @returns {Date} the end of yesterday
     *
     * @example
     * // If today is 6 October 2014:
     * var result = endOfYesterday()
     * //=> Sun Oct 5 2014 23:59:59.999
     */


    function endOfYesterday() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day - 1);
      date.setHours(23, 59, 59, 999);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/format/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/date-fns/esm/format/index.js ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return format;
    });
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../locale/en-US/index.js */
    "./node_modules/date-fns/esm/locale/en-US/index.js");
    /* harmony import */


    var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../subMilliseconds/index.js */
    "./node_modules/date-fns/esm/subMilliseconds/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/format/formatters/index.js */
    "./node_modules/date-fns/esm/_lib/format/formatters/index.js");
    /* harmony import */


    var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../_lib/format/longFormatters/index.js */
    "./node_modules/date-fns/esm/_lib/format/longFormatters/index.js");
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../_lib/protectedTokens/index.js */
    "./node_modules/date-fns/esm/_lib/protectedTokens/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This RegExp consists of three parts separated by `|`:
    // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
    //   (one of the certain letters followed by `o`)
    // - (\w)\1* matches any sequences of the same letter
    // - '' matches two quote characters in a row
    // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
    //   except a single quote symbol, which ends the sequence.
    //   Two quote characters do not end the sequence.
    //   If there is no matching single quote
    //   then the sequence will continue until the end of the string.
    // - . matches any single character unmatched by previous parts of the RegExps


    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
    // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    /**
     * @name format
     * @category Common Helpers
     * @summary Format the date.
     *
     * @description
     * Return the formatted date string in the given format. The result may vary by locale.
     *
     * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
     * > See: https://git.io/fxCyr
     *
     * The characters wrapped between two single quotes characters (') are escaped.
     * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
     * (see the last example)
     *
     * Format of the string is based on Unicode Technical Standard #35:
     * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
     * with a few additions (see note 7 below the table).
     *
     * Accepted patterns:
     * | Unit                            | Pattern | Result examples                   | Notes |
     * |---------------------------------|---------|-----------------------------------|-------|
     * | Era                             | G..GGG  | AD, BC                            |       |
     * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
     * |                                 | GGGGG   | A, B                              |       |
     * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
     * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
     * |                                 | yy      | 44, 01, 00, 17                    | 5     |
     * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
     * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
     * |                                 | yyyyy   | ...                               | 3,5   |
     * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
     * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
     * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
     * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
     * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
     * |                                 | YYYYY   | ...                               | 3,5   |
     * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
     * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
     * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
     * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
     * |                                 | RRRRR   | ...                               | 3,5,7 |
     * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
     * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
     * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
     * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
     * |                                 | uuuuu   | ...                               | 3,5   |
     * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
     * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
     * |                                 | QQ      | 01, 02, 03, 04                    |       |
     * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
     * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
     * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
     * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
     * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
     * |                                 | qq      | 01, 02, 03, 04                    |       |
     * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
     * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
     * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
     * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
     * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
     * |                                 | MM      | 01, 02, ..., 12                   |       |
     * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
     * |                                 | MMMM    | January, February, ..., December  | 2     |
     * |                                 | MMMMM   | J, F, ..., D                      |       |
     * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
     * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
     * |                                 | LL      | 01, 02, ..., 12                   |       |
     * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
     * |                                 | LLLL    | January, February, ..., December  | 2     |
     * |                                 | LLLLL   | J, F, ..., D                      |       |
     * | Local week of year              | w       | 1, 2, ..., 53                     |       |
     * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
     * |                                 | ww      | 01, 02, ..., 53                   |       |
     * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
     * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
     * |                                 | II      | 01, 02, ..., 53                   | 7     |
     * | Day of month                    | d       | 1, 2, ..., 31                     |       |
     * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
     * |                                 | dd      | 01, 02, ..., 31                   |       |
     * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
     * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
     * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
     * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
     * |                                 | DDDD    | ...                               | 3     |
     * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
     * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
     * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
     * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
     * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
     * |                                 | ii      | 01, 02, ..., 07                   | 7     |
     * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
     * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
     * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
     * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
     * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
     * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
     * |                                 | ee      | 02, 03, ..., 01                   |       |
     * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
     * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
     * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
     * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
     * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
     * |                                 | cc      | 02, 03, ..., 01                   |       |
     * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
     * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
     * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
     * | AM, PM                          | a..aaa  | AM, PM                            |       |
     * |                                 | aaaa    | a.m., p.m.                        | 2     |
     * |                                 | aaaaa   | a, p                              |       |
     * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
     * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
     * |                                 | bbbbb   | a, p, n, mi                       |       |
     * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
     * |                                 | BBBB    | at night, in the morning, ...     | 2     |
     * |                                 | BBBBB   | at night, in the morning, ...     |       |
     * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
     * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
     * |                                 | hh      | 01, 02, ..., 11, 12               |       |
     * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
     * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
     * |                                 | HH      | 00, 01, 02, ..., 23               |       |
     * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
     * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
     * |                                 | KK      | 01, 02, ..., 11, 00               |       |
     * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
     * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
     * |                                 | kk      | 24, 01, 02, ..., 23               |       |
     * | Minute                          | m       | 0, 1, ..., 59                     |       |
     * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
     * |                                 | mm      | 00, 01, ..., 59                   |       |
     * | Second                          | s       | 0, 1, ..., 59                     |       |
     * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
     * |                                 | ss      | 00, 01, ..., 59                   |       |
     * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
     * |                                 | SS      | 00, 01, ..., 99                   |       |
     * |                                 | SSS     | 000, 0001, ..., 999               |       |
     * |                                 | SSSS    | ...                               | 3     |
     * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
     * |                                 | XX      | -0800, +0530, Z                   |       |
     * |                                 | XXX     | -08:00, +05:30, Z                 |       |
     * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
     * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
     * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
     * |                                 | xx      | -0800, +0530, +0000               |       |
     * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
     * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
     * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
     * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
     * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
     * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
     * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
     * | Seconds timestamp               | t       | 512969520                         | 7     |
     * |                                 | tt      | ...                               | 3,7   |
     * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
     * |                                 | TT      | ...                               | 3,7   |
     * | Long localized date             | P       | 05/29/1453                        | 7     |
     * |                                 | PP      | May 29, 1453                      | 7     |
     * |                                 | PPP     | May 29th, 1453                    | 7     |
     * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
     * | Long localized time             | p       | 12:00 AM                          | 7     |
     * |                                 | pp      | 12:00:00 AM                       | 7     |
     * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
     * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
     * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
     * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
     * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
     * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
     * Notes:
     * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
     *    are the same as "stand-alone" units, but are different in some languages.
     *    "Formatting" units are declined according to the rules of the language
     *    in the context of a date. "Stand-alone" units are always nominative singular:
     *
     *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
     *
     *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
     *
     * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
     *    the single quote characters (see below).
     *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
     *    the output will be the same as default pattern for this unit, usually
     *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
     *    are marked with "2" in the last column of the table.
     *
     *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
     *
     * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
     *    The output will be padded with zeros to match the length of the pattern.
     *
     *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
     *
     * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
     *    These tokens represent the shortest form of the quarter.
     *
     * 5. The main difference between `y` and `u` patterns are B.C. years:
     *
     *    | Year | `y` | `u` |
     *    |------|-----|-----|
     *    | AC 1 |   1 |   1 |
     *    | BC 1 |   1 |   0 |
     *    | BC 2 |   2 |  -1 |
     *
     *    Also `yy` always returns the last two digits of a year,
     *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
     *
     *    | Year | `yy` | `uu` |
     *    |------|------|------|
     *    | 1    |   01 |   01 |
     *    | 14   |   14 |   14 |
     *    | 376  |   76 |  376 |
     *    | 1453 |   53 | 1453 |
     *
     *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
     *    except local week-numbering years are dependent on `options.weekStartsOn`
     *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
     *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
     *
     * 6. Specific non-location timezones are currently unavailable in `date-fns`,
     *    so right now these tokens fall back to GMT timezones.
     *
     * 7. These patterns are not in the Unicode Technical Standard #35:
     *    - `i`: ISO day of week
     *    - `I`: ISO week of year
     *    - `R`: ISO week-numbering year
     *    - `t`: seconds timestamp
     *    - `T`: milliseconds timestamp
     *    - `o`: ordinal number modifier
     *    - `P`: long localized date
     *    - `p`: long localized time
     *
     * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
     *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
     *
     * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
     *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The second argument is now required for the sake of explicitness.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   format(new Date(2016, 0, 1))
     *
     *   // v2.0.0 onward
     *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
     *   ```
     *
     * - New format string API for `format` function
     *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
     *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
     *
     * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
     *
     * @param {Date|Number} date - the original date
     * @param {String} format - the string of tokens
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
     * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
     *   see: https://git.io/fxCyr
     * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
     *   see: https://git.io/fxCyr
     * @returns {String} the formatted date string
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.locale` must contain `localize` property
     * @throws {RangeError} `options.locale` must contain `formatLong` property
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
     * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
     * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
     * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
     * @throws {RangeError} format string contains an unescaped latin alphabet character
     *
     * @example
     * // Represent 11 February 2014 in middle-endian format:
     * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
     * //=> '02/11/2014'
     *
     * @example
     * // Represent 2 July 2014 in Esperanto:
     * import { eoLocale } from 'date-fns/locale/eo'
     * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
     *   locale: eoLocale
     * })
     * //=> '2-a de julio 2014'
     *
     * @example
     * // Escape string by single quote characters:
     * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
     * //=> "3 o'clock"
     */

    function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(2, arguments);
      var formatStr = String(dirtyFormatStr);
      var options = dirtyOptions || {};
      var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_1__["default"];
      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      if (!locale.localize) {
        throw new RangeError('locale must contain localize property');
      }

      if (!locale.formatLong) {
        throw new RangeError('locale must contain formatLong property');
      }

      var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyDate);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(originalDate)) {
        throw new RangeError('Invalid time value');
      } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
      // This ensures that when UTC functions will be implemented, locales will be compatible with them.
      // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


      var timezoneOffset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(originalDate);
      var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate, timezoneOffset);
      var formatterOptions = {
        firstWeekContainsDate: firstWeekContainsDate,
        weekStartsOn: weekStartsOn,
        locale: locale,
        _originalDate: originalDate
      };
      var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
        var firstCharacter = substring[0];

        if (firstCharacter === 'p' || firstCharacter === 'P') {
          var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_5__["default"][firstCharacter];
          return longFormatter(substring, locale.formatLong, formatterOptions);
        }

        return substring;
      }).join('').match(formattingTokensRegExp).map(function (substring) {
        // Replace two single quote characters with one single quote character
        if (substring === "''") {
          return "'";
        }

        var firstCharacter = substring[0];

        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }

        var formatter = _lib_format_formatters_index_js__WEBPACK_IMPORTED_MODULE_4__["default"][firstCharacter];

        if (formatter) {
          if (!options.useAdditionalWeekYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["isProtectedWeekYearToken"])(substring)) {
            Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["throwProtectedError"])(substring);
          }

          if (!options.useAdditionalDayOfYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["isProtectedDayOfYearToken"])(substring)) {
            Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_7__["throwProtectedError"])(substring);
          }

          return formatter(utcDate, substring, locale.localize, formatterOptions);
        }

        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        }

        return substring;
      }).join('');
      return result;
    }

    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatDistance/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/formatDistance/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatDistanceIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatDistance;
    });
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony import */


    var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../differenceInMonths/index.js */
    "./node_modules/date-fns/esm/differenceInMonths/index.js");
    /* harmony import */


    var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../differenceInSeconds/index.js */
    "./node_modules/date-fns/esm/differenceInSeconds/index.js");
    /* harmony import */


    var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../locale/en-US/index.js */
    "./node_modules/date-fns/esm/locale/en-US/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../_lib/cloneObject/index.js */
    "./node_modules/date-fns/esm/_lib/cloneObject/index.js");
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MINUTES_IN_DAY = 1440;
    var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
    var MINUTES_IN_MONTH = 43200;
    var MINUTES_IN_TWO_MONTHS = 86400;
    /**
     * @name formatDistance
     * @category Common Helpers
     * @summary Return the distance between the given dates in words.
     *
     * @description
     * Return the distance between the given dates in words.
     *
     * | Distance between dates                                            | Result              |
     * |-------------------------------------------------------------------|---------------------|
     * | 0 ... 30 secs                                                     | less than a minute  |
     * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
     * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
     * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
     * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
     * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
     * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
     * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
     * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
     * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
     * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
     * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
     * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
     * | N yrs ... N yrs 3 months                                          | about N years       |
     * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
     * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
     *
     * With `options.includeSeconds == true`:
     * | Distance between dates | Result               |
     * |------------------------|----------------------|
     * | 0 secs ... 5 secs      | less than 5 seconds  |
     * | 5 secs ... 10 secs     | less than 10 seconds |
     * | 10 secs ... 20 secs    | less than 20 seconds |
     * | 20 secs ... 40 secs    | half a minute        |
     * | 40 secs ... 60 secs    | less than a minute   |
     * | 60 secs ... 90 secs    | 1 minute             |
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `distanceInWords ` to `formatDistance`
     *   to make its name consistent with `format` and `formatRelative`.
     *
     * - The order of arguments is swapped to make the function
     *   consistent with `differenceIn...` functions.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   distanceInWords(
     *     new Date(1986, 3, 4, 10, 32, 0),
     *     new Date(1986, 3, 4, 11, 32, 0),
     *     { addSuffix: true }
     *   ) //=> 'in about 1 hour'
     *
     *   // v2.0.0 onward
     *
     *   formatDistance(
     *     new Date(1986, 3, 4, 11, 32, 0),
     *     new Date(1986, 3, 4, 10, 32, 0),
     *     { addSuffix: true }
     *   ) //=> 'in about 1 hour'
     *   ```
     *
     * @param {Date|Number} date - the date
     * @param {Date|Number} baseDate - the date to compare with
     * @param {Object} [options] - an object with options.
     * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
     * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @returns {String} the distance in words
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `baseDate` must not be Invalid Date
     * @throws {RangeError} `options.locale` must contain `formatDistance` property
     *
     * @example
     * // What is the distance between 2 July 2014 and 1 January 2015?
     * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
     * //=> '6 months'
     *
     * @example
     * // What is the distance between 1 January 2015 00:00:15
     * // and 1 January 2015 00:00:00, including seconds?
     * var result = formatDistance(
     *   new Date(2015, 0, 1, 0, 0, 15),
     *   new Date(2015, 0, 1, 0, 0, 0),
     *   { includeSeconds: true }
     * )
     * //=> 'less than 20 seconds'
     *
     * @example
     * // What is the distance from 1 January 2016
     * // to 1 January 2015, with a suffix?
     * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
     *   addSuffix: true
     * })
     * //=> 'about 1 year ago'
     *
     * @example
     * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
     * import { eoLocale } from 'date-fns/locale/eo'
     * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
     *   locale: eoLocale
     * })
     * //=> 'pli ol 1 jaro'
     */

    function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(2, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_3__["default"];

      if (!locale.formatDistance) {
        throw new RangeError('locale must contain formatDistance property');
      }

      var comparison = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, dirtyBaseDate);

      if (isNaN(comparison)) {
        throw new RangeError('Invalid time value');
      }

      var localizeOptions = Object(_lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(options);
      localizeOptions.addSuffix = Boolean(options.addSuffix);
      localizeOptions.comparison = comparison;
      var dateLeft;
      var dateRight;

      if (comparison > 0) {
        dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
        dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
      } else {
        dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
        dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
      }

      var seconds = Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateRight, dateLeft);
      var offsetInSeconds = (Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dateRight) - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(dateLeft)) / 1000;
      var minutes = Math.round((seconds - offsetInSeconds) / 60);
      var months; // 0 up to 2 mins

      if (minutes < 2) {
        if (options.includeSeconds) {
          if (seconds < 5) {
            return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);
          } else if (seconds < 10) {
            return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);
          } else if (seconds < 20) {
            return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);
          } else if (seconds < 40) {
            return locale.formatDistance('halfAMinute', null, localizeOptions);
          } else if (seconds < 60) {
            return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
          } else {
            return locale.formatDistance('xMinutes', 1, localizeOptions);
          }
        } else {
          if (minutes === 0) {
            return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);
          } else {
            return locale.formatDistance('xMinutes', minutes, localizeOptions);
          }
        } // 2 mins up to 0.75 hrs

      } else if (minutes < 45) {
        return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
      } else if (minutes < 90) {
        return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs
      } else if (minutes < MINUTES_IN_DAY) {
        var hours = Math.round(minutes / 60);
        return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days
      } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
        return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days
      } else if (minutes < MINUTES_IN_MONTH) {
        var days = Math.round(minutes / MINUTES_IN_DAY);
        return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months
      } else if (minutes < MINUTES_IN_TWO_MONTHS) {
        months = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance('aboutXMonths', months, localizeOptions);
      }

      months = Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateRight, dateLeft); // 2 months up to 12 months

      if (months < 12) {
        var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date
      } else {
        var monthsSinceStartOfYear = months % 12;
        var years = Math.floor(months / 12); // N years up to 1 years 3 months

        if (monthsSinceStartOfYear < 3) {
          return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months
        } else if (monthsSinceStartOfYear < 9) {
          return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months
        } else {
          return locale.formatDistance('almostXYears', years + 1, localizeOptions);
        }
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatDistanceStrict/index.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/date-fns/esm/formatDistanceStrict/index.js ***!
    \*****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatDistanceStrictIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatDistanceStrict;
    });
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../differenceInSeconds/index.js */
    "./node_modules/date-fns/esm/differenceInSeconds/index.js");
    /* harmony import */


    var _lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/cloneObject/index.js */
    "./node_modules/date-fns/esm/_lib/cloneObject/index.js");
    /* harmony import */


    var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../locale/en-US/index.js */
    "./node_modules/date-fns/esm/locale/en-US/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MINUTES_IN_DAY = 1440;
    var MINUTES_IN_MONTH = 43200;
    var MINUTES_IN_YEAR = 525600;
    /**
     * @name formatDistanceStrict
     * @category Common Helpers
     * @summary Return the distance between the given dates in words.
     *
     * @description
     * Return the distance between the given dates in words, using strict units.
     * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
     * 'less than' and the like.
     *
     * | Distance between dates | Result              |
     * |------------------------|---------------------|
     * | 0 ... 59 secs          | [0..59] seconds     |
     * | 1 ... 59 mins          | [1..59] minutes     |
     * | 1 ... 23 hrs           | [1..23] hours       |
     * | 1 ... 29 days          | [1..29] days        |
     * | 1 ... 11 months        | [1..11] months      |
     * | 1 ... N years          | [1..N]  years       |
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`
     *   to make its name consistent with `format` and `formatRelative`.
     *
     * - The order of arguments is swapped to make the function
     *   consistent with `differenceIn...` functions.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   distanceInWordsStrict(
     *     new Date(2015, 0, 2),
     *     new Date(2014, 6, 2)
     *   ) //=> '6 months'
     *
     *   // v2.0.0 onward
     *
     *   formatDistanceStrict(
     *     new Date(2014, 6, 2),
     *     new Date(2015, 0, 2)
     *   ) //=> '6 months'
     *   ```
     *
     * - `partialMethod` option is renamed to `roundingMethod`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   distanceInWordsStrict(
     *     new Date(1986, 3, 4, 10, 32, 0),
     *     new Date(1986, 3, 4, 10, 33, 1),
     *     { partialMethod: 'ceil' }
     *   ) //=> '2 minutes'
     *
     *   // v2.0.0 onward
     *
     *   formatDistanceStrict(
     *     new Date(1986, 3, 4, 10, 33, 1),
     *     new Date(1986, 3, 4, 10, 32, 0),
     *     { roundingMethod: 'ceil' }
     *   ) //=> '2 minutes'
     *   ```
     *
     * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.
     *
     * - `unit` option now accepts one of the strings:
     *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   distanceInWordsStrict(
     *     new Date(1986, 3, 4, 10, 32, 0),
     *     new Date(1986, 3, 4, 10, 33, 1),
     *     { unit: 'm' }
     *   )
     *
     *   // v2.0.0 onward
     *
     *   formatDistanceStrict(
     *     new Date(1986, 3, 4, 10, 33, 1),
     *     new Date(1986, 3, 4, 10, 32, 0),
     *     { unit: 'minute' }
     *   )
     *   ```
     *
     * @param {Date|Number} date - the date
     * @param {Date|Number} baseDate - the date to compare with
     * @param {Object} [options] - an object with options.
     * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
     * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
     * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @returns {String} the distance in words
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `baseDate` must not be Invalid Date
     * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'
     * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'
     * @throws {RangeError} `options.locale` must contain `formatDistance` property
     *
     * @example
     * // What is the distance between 2 July 2014 and 1 January 2015?
     * var result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))
     * //=> '6 months'
     *
     * @example
     * // What is the distance between 1 January 2015 00:00:15
     * // and 1 January 2015 00:00:00?
     * var result = formatDistanceStrict(
     *   new Date(2015, 0, 1, 0, 0, 15),
     *   new Date(2015, 0, 1, 0, 0, 0)
     * )
     * //=> '15 seconds'
     *
     * @example
     * // What is the distance from 1 January 2016
     * // to 1 January 2015, with a suffix?
     * var result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {
     *   addSuffix: true
     * })
     * //=> '1 year ago'
     *
     * @example
     * // What is the distance from 1 January 2016
     * // to 1 January 2015, in minutes?
     * var result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {
     *   unit: 'minute'
     * })
     * //=> '525600 minutes'
     *
     * @example
     * // What is the distance from 1 January 2015
     * // to 28 January 2015, in months, rounded up?
     * var result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {
     *   unit: 'month',
     *   roundingMethod: 'ceil'
     * })
     * //=> '1 month'
     *
     * @example
     * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
     * import { eoLocale } from 'date-fns/locale/eo'
     * var result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {
     *   locale: eoLocale
     * })
     * //=> '1 jaro'
     */

    function formatDistanceStrict(dirtyDate, dirtyBaseDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(2, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_5__["default"];

      if (!locale.formatDistance) {
        throw new RangeError('locale must contain localize.formatDistance property');
      }

      var comparison = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, dirtyBaseDate);

      if (isNaN(comparison)) {
        throw new RangeError('Invalid time value');
      }

      var localizeOptions = Object(_lib_cloneObject_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
      localizeOptions.addSuffix = Boolean(options.addSuffix);
      localizeOptions.comparison = comparison;
      var dateLeft;
      var dateRight;

      if (comparison > 0) {
        dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBaseDate);
        dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
      } else {
        dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
        dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyBaseDate);
      }

      var roundingMethod = options.roundingMethod == null ? 'round' : String(options.roundingMethod);
      var roundingMethodFn;

      if (roundingMethod === 'floor') {
        roundingMethodFn = Math.floor;
      } else if (roundingMethod === 'ceil') {
        roundingMethodFn = Math.ceil;
      } else if (roundingMethod === 'round') {
        roundingMethodFn = Math.round;
      } else {
        throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
      }

      var seconds = Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dateRight, dateLeft);
      var offsetInSeconds = (Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateRight) - Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft)) / 1000;
      var minutes = roundingMethodFn((seconds - offsetInSeconds) / 60);
      var unit;

      if (options.unit == null) {
        if (minutes < 1) {
          unit = 'second';
        } else if (minutes < 60) {
          unit = 'minute';
        } else if (minutes < MINUTES_IN_DAY) {
          unit = 'hour';
        } else if (minutes < MINUTES_IN_MONTH) {
          unit = 'day';
        } else if (minutes < MINUTES_IN_YEAR) {
          unit = 'month';
        } else {
          unit = 'year';
        }
      } else {
        unit = String(options.unit);
      } // 0 up to 60 seconds


      if (unit === 'second') {
        return locale.formatDistance('xSeconds', seconds, localizeOptions); // 1 up to 60 mins
      } else if (unit === 'minute') {
        return locale.formatDistance('xMinutes', minutes, localizeOptions); // 1 up to 24 hours
      } else if (unit === 'hour') {
        var hours = roundingMethodFn(minutes / 60);
        return locale.formatDistance('xHours', hours, localizeOptions); // 1 up to 30 days
      } else if (unit === 'day') {
        var days = roundingMethodFn(minutes / MINUTES_IN_DAY);
        return locale.formatDistance('xDays', days, localizeOptions); // 1 up to 12 months
      } else if (unit === 'month') {
        var months = roundingMethodFn(minutes / MINUTES_IN_MONTH);
        return locale.formatDistance('xMonths', months, localizeOptions); // 1 year up to max Date
      } else if (unit === 'year') {
        var years = roundingMethodFn(minutes / MINUTES_IN_YEAR);
        return locale.formatDistance('xYears', years, localizeOptions);
      }

      throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatDistanceToNow/index.js":
  /*!****************************************************************!*\
    !*** ./node_modules/date-fns/esm/formatDistanceToNow/index.js ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatDistanceToNowIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatDistanceToNow;
    });
    /* harmony import */


    var _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../formatDistance/index.js */
    "./node_modules/date-fns/esm/formatDistance/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name formatDistanceToNow
     * @category Common Helpers
     * @summary Return the distance between the given date and now in words.
     * @pure false
     *
     * @description
     * Return the distance between the given date and now in words.
     *
     * | Distance to now                                                   | Result              |
     * |-------------------------------------------------------------------|---------------------|
     * | 0 ... 30 secs                                                     | less than a minute  |
     * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
     * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
     * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
     * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
     * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
     * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
     * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
     * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
     * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
     * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
     * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
     * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
     * | N yrs ... N yrs 3 months                                          | about N years       |
     * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
     * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
     *
     * With `options.includeSeconds == true`:
     * | Distance to now     | Result               |
     * |---------------------|----------------------|
     * | 0 secs ... 5 secs   | less than 5 seconds  |
     * | 5 secs ... 10 secs  | less than 10 seconds |
     * | 10 secs ... 20 secs | less than 20 seconds |
     * | 20 secs ... 40 secs | half a minute        |
     * | 40 secs ... 60 secs | less than a minute   |
     * | 60 secs ... 90 secs | 1 minute             |
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`
     *   to make its name consistent with `format` and `formatRelative`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })
     *   //=> 'in 6 months'
     *
     *   // v2.0.0 onward
     *
     *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })
     *   //=> 'in 6 months'
     *   ```
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - the object with options
     * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
     * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @returns {String} the distance in words
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.locale` must contain `formatDistance` property
     *
     * @example
     * // If today is 1 January 2015, what is the distance to 2 July 2014?
     * var result = formatDistanceToNow(
     *   new Date(2014, 6, 2)
     * )
     * //=> '6 months'
     *
     * @example
     * // If now is 1 January 2015 00:00:00,
     * // what is the distance to 1 January 2015 00:00:15, including seconds?
     * var result = formatDistanceToNow(
     *   new Date(2015, 0, 1, 0, 0, 15),
     *   {includeSeconds: true}
     * )
     * //=> 'less than 20 seconds'
     *
     * @example
     * // If today is 1 January 2015,
     * // what is the distance to 1 January 2016, with a suffix?
     * var result = formatDistanceToNow(
     *   new Date(2016, 0, 1),
     *   {addSuffix: true}
     * )
     * //=> 'in about 1 year'
     *
     * @example
     * // If today is 1 January 2015,
     * // what is the distance to 1 August 2016 in Esperanto?
     * var eoLocale = require('date-fns/locale/eo')
     * var result = formatDistanceToNow(
     *   new Date(2016, 7, 1),
     *   {locale: eoLocale}
     * )
     * //=> 'pli ol 1 jaro'
     */


    function formatDistanceToNow(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), dirtyOptions);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatDistanceToNowStrict/index.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/date-fns/esm/formatDistanceToNowStrict/index.js ***!
    \**********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatDistanceToNowStrictIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatDistanceToNowStrict;
    });
    /* harmony import */


    var _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../formatDistanceStrict/index.js */
    "./node_modules/date-fns/esm/formatDistanceStrict/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name formatDistanceToNowStrict
     * @category Common Helpers
     * @summary Return the distance between the given date and now in words.
     * @pure false
     *
     * @description
     * Return the distance between the given dates in words, using strict units.
     * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
     * 'less than' and the like.
     *
     * | Distance between dates | Result              |
     * |------------------------|---------------------|
     * | 0 ... 59 secs          | [0..59] seconds     |
     * | 1 ... 59 mins          | [1..59] minutes     |
     * | 1 ... 23 hrs           | [1..23] hours       |
     * | 1 ... 29 days          | [1..29] days        |
     * | 1 ... 11 months        | [1..11] months      |
     * | 1 ... N years          | [1..N]  years       |
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
     * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
     * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @returns {String} the distance in words
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.locale` must contain `formatDistance` property
     *
     * @example
     * // If today is 1 January 2015, what is the distance to 2 July 2014?
     * var result = formatDistanceToNowStrict(
     *   new Date(2014, 6, 2)
     * )
     * //=> '6 months'
     *
     * @example
     * // If now is 1 January 2015 00:00:00,
     * // what is the distance to 1 January 2015 00:00:15, including seconds?
     * var result = formatDistanceToNowStrict(
     *   new Date(2015, 0, 1, 0, 0, 15)
     * )
     * //=> '20 seconds'
     *
     * @example
     * // If today is 1 January 2015,
     * // what is the distance to 1 January 2016, with a suffix?
     * var result = formatDistanceToNowStrict(
     *   new Date(2016, 0, 1),
     *   {addSuffix: true}
     * )
     * //=> 'in 1 year'
     *
     * @example
     * // If today is 28 January 2015,
     * // what is the distance to 1 January 2015, in months, rounded up??
     * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {
     *   unit: 'month',
     *   roundingMethod: 'ceil'
     * })
     * //=> '1 month'
     *
     * @example
     * // If today is 1 January 2015,
     * // what is the distance to 1 August 2016 in Esperanto?
     * var eoLocale = require('date-fns/locale/eo')
     * var result = formatDistanceToNowStrict(
     *   new Date(2016, 7, 1),
     *   {locale: eoLocale}
     * )
     * //=> '1 jaro'
     */


    function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), dirtyOptions);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatDuration/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/formatDuration/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatDurationIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatDuration;
    });
    /* harmony import */


    var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../locale/en-US/index.js */
    "./node_modules/date-fns/esm/locale/en-US/index.js");

    var defaultFormat = ['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds'];
    /**
     * @name formatDuration
     * @category Common Helpers
     * @summary Formats a duration in human-readable format
     *
     * @description
     * Return human-readable duration string i.e. "9 months 2 days"
     *
     * @param {Duration} duration - the duration to format
     * @param {Object} [options] - an object with options.
    
     * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format
     * @param {boolean} [options.zero=false] - should be zeros be included in the output?
     * @param {string} [options.delimiter=' '] - delimiter string
     * @returns {string} the formatted date string
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Format full duration
     * formatDuration({
     *   years: 2,
     *   months: 9,
     *   weeks: 1,
     *   days: 7,
     *   hours: 5,
     *   minutes: 9,
     *   seconds: 30
     * })
     * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds
     *
     * @example
     * // Format partial duration
     * formatDuration({ months: 9, days: 2 })
     * //=> '9 months 2 days'
     *
     * @example
     * // Customize the format
     * formatDuration(
     *   {
     *     years: 2,
     *     months: 9,
     *     weeks: 1,
     *     days: 7,
     *     hours: 5,
     *     minutes: 9,
     *     seconds: 30
     *   },
     *   { format: ['months', 'weeks'] }
     * ) === '9 months 1 week'
     *
     * @example
     * // Customize the zeros presence
     * formatDuration({ years: 0, months: 9 })
     * //=> '9 months'
     * formatDuration({ years: 0, months: 9 }, null, { zero: true })
     * //=> '0 years 9 months'
     *
     * @example
     * // Customize the delimiter
     * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })
     * //=> '2 years, 9 months, 3 weeks'
     */

    function formatDuration(duration) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }

      var format = options.format || defaultFormat;
      var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];
      var zero = options.zero || false;
      var delimiter = options.delimiter || ' ';
      var result = format.reduce(function (acc, unit) {
        var token = "x".concat(unit.replace(/(^.)/, function (m) {
          return m.toUpperCase();
        }));
        var addChunk = typeof duration[unit] === 'number' && (zero || duration[unit]);
        return addChunk ? acc.concat(locale.formatDistance(token, duration[unit])) : acc;
      }, []).join(delimiter);
      return result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatISO/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/formatISO/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatISOIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatISO;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/addLeadingZeros/index.js */
    "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");
    /**
     * @name formatISO
     * @category Common Helpers
     * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).
     *
     * @description
     * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
     * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.
     * @returns {String} the formatted date string
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.format` must be 'extended' or 'basic'
     * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
     *
     * @example
     * // Represent 18 September 2019 in ISO 8601 format (UTC):
     * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))
     * //=> '2019-09-18T19:00:52Z'
     *
     * @example
     * // Represent 18 September 2019 in ISO 8601, short format (UTC):
     * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
     * //=> '20190918T190052'
     *
     * @example
     * // Represent 18 September 2019 in ISO 8601 format, date only:
     * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
     * //=> '2019-09-18'
     *
     * @example
     * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):
     * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
     * //=> '19:00:52Z'
     */


    function formatISO(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }

      var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
        throw new RangeError('Invalid time value');
      }

      var options = dirtyOptions || {};
      var format = options.format == null ? 'extended' : String(options.format);
      var representation = options.representation == null ? 'complete' : String(options.representation);

      if (format !== 'extended' && format !== 'basic') {
        throw new RangeError("format must be 'extended' or 'basic'");
      }

      if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      }

      var result = '';
      var tzOffset = '';
      var dateDelimiter = format === 'extended' ? '-' : '';
      var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'

      if (representation !== 'time') {
        var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
        var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
        var year = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      } // Representation is either 'time' or 'complete'


      if (representation !== 'date') {
        // Add the timezone.
        var offset = originalDate.getTimezoneOffset();

        if (offset !== 0) {
          var absoluteOffset = Math.abs(offset);
          var hourOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Math.floor(absoluteOffset / 60), 2);
          var minuteOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

          var sign = offset < 0 ? '+' : '-';
          tzOffset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
        } else {
          tzOffset = 'Z';
        }

        var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
        var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
        var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'

        var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.

        var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.

        result = "".concat(result).concat(separator).concat(time).concat(tzOffset);
      }

      return result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatISO9075/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/formatISO9075/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatISO9075IndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatISO9075;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/addLeadingZeros/index.js */
    "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");
    /**
     * @name formatISO9075
     * @category Common Helpers
     * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).
     *
     * @description
     * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
     * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.
     * @returns {String} the formatted date string
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.format` must be 'extended' or 'basic'
     * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
     *
     * @example
     * // Represent 18 September 2019 in ISO 9075 format:
     * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))
     * //=> '2019-09-18 19:00:52'
     *
     * @example
     * // Represent 18 September 2019 in ISO 9075, short format:
     * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
     * //=> '20190918 190052'
     *
     * @example
     * // Represent 18 September 2019 in ISO 9075 format, date only:
     * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
     * //=> '2019-09-18'
     *
     * @example
     * // Represent 18 September 2019 in ISO 9075 format, time only:
     * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
     * //=> '19:00:52'
     */


    function formatISO9075(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 argument required, but only ".concat(arguments.length, " present"));
      }

      var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
        throw new RangeError('Invalid time value');
      }

      var options = dirtyOptions || {};
      var format = options.format == null ? 'extended' : String(options.format);
      var representation = options.representation == null ? 'complete' : String(options.representation);

      if (format !== 'extended' && format !== 'basic') {
        throw new RangeError("format must be 'extended' or 'basic'");
      }

      if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {
        throw new RangeError("representation must be 'date', 'time', or 'complete'");
      }

      var result = '';
      var dateDelimiter = format === 'extended' ? '-' : '';
      var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'

      if (representation !== 'time') {
        var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
        var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
        var year = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

        result = "".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);
      } // Representation is either 'time' or 'complete'


      if (representation !== 'date') {
        var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
        var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
        var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space

        var separator = result === '' ? '' : ' '; // HHmmss or HH:mm:ss.

        result = "".concat(result).concat(separator).concat(hour).concat(timeDelimiter).concat(minute).concat(timeDelimiter).concat(second);
      }

      return result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatISODuration/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/formatISODuration/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatISODurationIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatISODuration;
    });
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name formatISODuration
     * @category Common Helpers
     * @summary Format a duration object according as ISO 8601 duration string
     *
     * @description
     * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)
     *
     * @param {Duration} duration - the duration to format
     *
     * @returns {String} The ISO 8601 duration string
     * @throws {TypeError} Requires 1 argument
     * @throws {Error} Argument must be an object
     *
     * @example
     * // Format the given duration as ISO 8601 string
     * formatISODuration({
     *   years: 39,
     *   months: 2,
     *   days: 20,
     *   hours: 7,
     *   minutes: 5,
     *   seconds: 0
     * })
     * //=> 'P39Y2M20DT0H0M0S'
     */


    function formatISODuration(duration) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
      if (typeof duration !== 'object') throw new Error('Duration must be an object');
      var _duration$years = duration.years,
          years = _duration$years === void 0 ? 0 : _duration$years,
          _duration$months = duration.months,
          months = _duration$months === void 0 ? 0 : _duration$months,
          _duration$days = duration.days,
          days = _duration$days === void 0 ? 0 : _duration$days,
          _duration$hours = duration.hours,
          hours = _duration$hours === void 0 ? 0 : _duration$hours,
          _duration$minutes = duration.minutes,
          minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,
          _duration$seconds = duration.seconds,
          seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
      return "P".concat(years, "Y").concat(months, "M").concat(days, "DT").concat(hours, "H").concat(minutes, "M").concat(seconds, "S");
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatRFC3339/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/formatRFC3339/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatRFC3339IndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatRFC3339;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/addLeadingZeros/index.js */
    "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /**
     * @name formatRFC3339
     * @category Common Helpers
     * @summary Format the date according to the ISO 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).
     *
     * @description
     * Return the formatted date string in ISO 3339 format. Options may be passed to control the parts and notations of the date.
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds
     * @returns {String} the formatted date string
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.fractionDigits` must be between 0 and 3
     *
     * @example
     * // Represent 18 September 2019 in ISO 3339 format:
     * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))
     * //=> '2019-09-18T19:00:52Z'
     *
     * @example
     * // Represent 18 September 2019 in ISO 3339 format, 2 digits of second fraction:
     * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })
     * //=> '2019-09-18T19:00:52.23Z'
     *
     * @example
     * // Represent 18 September 2019 in ISO 3339 format, 3 digits of second fraction
     * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })
     * //=> '2019-09-18T19:00:52.234Z'
     */


    function formatRFC3339(dirtyDate, dirtyOptions) {
      if (arguments.length < 1) {
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      }

      var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
        throw new RangeError('Invalid time value');
      }

      var options = dirtyOptions || {};
      var fractionDigits = options.fractionDigits == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN

      if (!(fractionDigits >= 0 && fractionDigits <= 3)) {
        throw new RangeError('fractionDigits must be between 0 and 3 inclusively');
      }

      var day = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getDate(), 2);
      var month = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMonth() + 1, 2);
      var year = originalDate.getFullYear();
      var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getHours(), 2);
      var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getMinutes(), 2);
      var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getSeconds(), 2);
      var fractionalSecond = '';

      if (fractionDigits > 0) {
        var milliseconds = originalDate.getMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, fractionDigits - 3));
        fractionalSecond = '.' + Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fractionalSeconds, fractionDigits);
      }

      var offset = '';
      var tzOffset = originalDate.getTimezoneOffset();

      if (tzOffset !== 0) {
        var absoluteOffset = Math.abs(tzOffset);
        var hourOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset / 60, 2);
        var minuteOffset = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

        var sign = tzOffset < 0 ? '+' : '-';
        offset = "".concat(sign).concat(hourOffset, ":").concat(minuteOffset);
      } else {
        offset = 'Z';
      }

      return "".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(fractionalSecond).concat(offset);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatRFC7231/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/formatRFC7231/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatRFC7231IndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatRFC7231;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/addLeadingZeros/index.js */
    "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js");

    var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    /**
     * @name formatRFC7231
     * @category Common Helpers
     * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
     *
     * @description
     * Return the formatted date string in RFC 7231 format.
     * The result will always be in UTC timezone.
     *
     * @param {Date|Number} date - the original date
     * @returns {String} the formatted date string
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `date` must not be Invalid Date
     *
     * @example
     * // Represent 18 September 2019 in RFC 7231 format:
     * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))
     * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'
     */

    function formatRFC7231(dirtyDate) {
      if (arguments.length < 1) {
        throw new TypeError("1 arguments required, but only ".concat(arguments.length, " present"));
      }

      var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(originalDate)) {
        throw new RangeError('Invalid time value');
      }

      var dayName = days[originalDate.getUTCDay()];
      var dayOfMonth = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCDate(), 2);
      var monthName = months[originalDate.getUTCMonth()];
      var year = originalDate.getUTCFullYear();
      var hour = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCHours(), 2);
      var minute = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCMinutes(), 2);
      var second = Object(_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate.getUTCSeconds(), 2); // Result variables.

      return "".concat(dayName, ", ").concat(dayOfMonth, " ").concat(monthName, " ").concat(year, " ").concat(hour, ":").concat(minute, ":").concat(second, " GMT");
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/formatRelative/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/formatRelative/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFormatRelativeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatRelative;
    });
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony import */


    var _format_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../format/index.js */
    "./node_modules/date-fns/esm/format/index.js");
    /* harmony import */


    var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../locale/en-US/index.js */
    "./node_modules/date-fns/esm/locale/en-US/index.js");
    /* harmony import */


    var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../subMilliseconds/index.js */
    "./node_modules/date-fns/esm/subMilliseconds/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name formatRelative
     * @category Common Helpers
     * @summary Represent the date in words relative to the given base date.
     *
     * @description
     * Represent the date in words relative to the given base date.
     *
     * | Distance to the base date | Result                    |
     * |---------------------------|---------------------------|
     * | Previous 6 days           | last Sunday at 04:30 AM   |
     * | Last day                  | yesterday at 04:30 AM     |
     * | Same day                  | today at 04:30 AM         |
     * | Next day                  | tomorrow at 04:30 AM      |
     * | Next 6 days               | Sunday at 04:30 AM        |
     * | Other                     | 12/31/2017                |
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to format
     * @param {Date|Number} baseDate - the date to compare with
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {String} the date in words
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `baseDate` must not be Invalid Date
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.locale` must contain `localize` property
     * @throws {RangeError} `options.locale` must contain `formatLong` property
     * @throws {RangeError} `options.locale` must contain `formatRelative` property
     */


    function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyDate);
      var baseDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(dirtyBaseDate);
      var options = dirtyOptions || {};
      var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_2__["default"];

      if (!locale.localize) {
        throw new RangeError('locale must contain localize property');
      }

      if (!locale.formatLong) {
        throw new RangeError('locale must contain formatLong property');
      }

      if (!locale.formatRelative) {
        throw new RangeError('locale must contain formatRelative property');
      }

      var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, baseDate);

      if (isNaN(diff)) {
        throw new RangeError('Invalid time value');
      }

      var token;

      if (diff < -6) {
        token = 'other';
      } else if (diff < -1) {
        token = 'lastWeek';
      } else if (diff < 0) {
        token = 'yesterday';
      } else if (diff < 1) {
        token = 'today';
      } else if (diff < 2) {
        token = 'tomorrow';
      } else if (diff < 7) {
        token = 'nextWeek';
      } else {
        token = 'other';
      }

      var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date));
      var utcBaseDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(baseDate, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(baseDate));
      var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, options);
      return Object(_format_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, formatStr, options);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/fromUnixTime/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/fromUnixTime/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmFromUnixTimeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return fromUnixTime;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name fromUnixTime
     * @category Timestamp Helpers
     * @summary Create a date from a Unix timestamp.
     *
     * @description
     * Create a date from a Unix timestamp.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Number} unixTime - the given Unix timestamp
     * @returns {Date} the date
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Create the date 29 February 2012 11:45:05:
     * var result = fromUnixTime(1330515905)
     * //=> Wed Feb 29 2012 11:45:05
     */


    function fromUnixTime(dirtyUnixTime) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var unixTime = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyUnixTime);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(unixTime * 1000);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getDate/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/getDate/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetDateIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getDate;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getDate
     * @category Day Helpers
     * @summary Get the day of the month of the given date.
     *
     * @description
     * Get the day of the month of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the day of month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which day of the month is 29 February 2012?
     * var result = getDate(new Date(2012, 1, 29))
     * //=> 29
     */


    function getDate(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var dayOfMonth = date.getDate();
      return dayOfMonth;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getDay/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/date-fns/esm/getDay/index.js ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetDayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getDay;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getDay
     * @category Weekday Helpers
     * @summary Get the day of the week of the given date.
     *
     * @description
     * Get the day of the week of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {0|1|2|3|4|5|6} the day of week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which day of the week is 29 February 2012?
     * var result = getDay(new Date(2012, 1, 29))
     * //=> 3
     */


    function getDay(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getDay();
      return day;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getDayOfYear/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/getDayOfYear/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetDayOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getDayOfYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfYear/index.js */
    "./node_modules/date-fns/esm/startOfYear/index.js");
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getDayOfYear
     * @category Day Helpers
     * @summary Get the day of the year of the given date.
     *
     * @description
     * Get the day of the year of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the day of year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which day of the year is 2 July 2014?
     * var result = getDayOfYear(new Date(2014, 6, 2))
     * //=> 183
     */


    function getDayOfYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, Object(_startOfYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date));
      var dayOfYear = diff + 1;
      return dayOfYear;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getDaysInMonth/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/getDaysInMonth/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetDaysInMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getDaysInMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getDaysInMonth
     * @category Month Helpers
     * @summary Get the number of days in a month of the given date.
     *
     * @description
     * Get the number of days in a month of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the number of days in a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // How many days are in February 2000?
     * var result = getDaysInMonth(new Date(2000, 1))
     * //=> 29
     */


    function getDaysInMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      var monthIndex = date.getMonth();
      var lastDayOfMonth = new Date(0);
      lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
      lastDayOfMonth.setHours(0, 0, 0, 0);
      return lastDayOfMonth.getDate();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getDaysInYear/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/getDaysInYear/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetDaysInYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getDaysInYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isLeapYear/index.js */
    "./node_modules/date-fns/esm/isLeapYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getDaysInYear
     * @category Year Helpers
     * @summary Get the number of days in a year of the given date.
     *
     * @description
     * Get the number of days in a year of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the number of days in a year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // How many days are in 2012?
     * var result = getDaysInYear(new Date(2012, 0, 1))
     * //=> 366
     */


    function getDaysInYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

      if (isNaN(date)) {
        return NaN;
      }

      return Object(_isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date) ? 366 : 365;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getDecade/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/getDecade/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetDecadeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getDecade;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getDecade
     * @category Decade Helpers
     * @summary Get the decade of the given date.
     *
     * @description
     * Get the decade of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the year of decade
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which decade belongs 27 November 1942?
     * var result = getDecade(new Date(1942, 10, 27))
     * //=> 1940
     */


    function getDecade(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      var decade = Math.floor(year / 10) * 10;
      return decade;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getHours/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/getHours/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetHoursIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getHours;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getHours
     * @category Hour Helpers
     * @summary Get the hours of the given date.
     *
     * @description
     * Get the hours of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the hours
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Get the hours of 29 February 2012 11:45:00:
     * var result = getHours(new Date(2012, 1, 29, 11, 45))
     * //=> 11
     */


    function getHours(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var hours = date.getHours();
      return hours;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getISODay/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/getISODay/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetISODayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getISODay;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getISODay
     * @category Weekday Helpers
     * @summary Get the day of the ISO week of the given date.
     *
     * @description
     * Get the day of the ISO week of the given date,
     * which is 7 for Sunday, 1 for Monday etc.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the day of ISO week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which day of the ISO week is 26 February 2012?
     * var result = getISODay(new Date(2012, 1, 26))
     * //=> 7
     */


    function getISODay(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getDay();

      if (day === 0) {
        day = 7;
      }

      return day;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getISOWeek/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/getISOWeek/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getISOWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony import */


    var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfISOWeekYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000;
    /**
     * @name getISOWeek
     * @category ISO Week Helpers
     * @summary Get the ISO week of the given date.
     *
     * @description
     * Get the ISO week of the given date.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the ISO week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which week of the ISO-week numbering year is 2 January 2005?
     * var result = getISOWeek(new Date(2005, 0, 2))
     * //=> 53
     */

    function getISOWeek(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var diff = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() - Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getISOWeekYear/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/getISOWeekYear/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getISOWeekYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getISOWeekYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Get the ISO week-numbering year of the given date.
     *
     * @description
     * Get the ISO week-numbering year of the given date,
     * which always starts 3 days before the year's first Thursday.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `getISOYear` to `getISOWeekYear`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the ISO week-numbering year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which ISO-week numbering year is 2 January 2005?
     * var result = getISOWeekYear(new Date(2005, 0, 2))
     * //=> 2004
     */


    function getISOWeekYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuaryOfThisYear);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getISOWeeksInYear/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/getISOWeeksInYear/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetISOWeeksInYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getISOWeeksInYear;
    });
    /* harmony import */


    var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfISOWeekYear/index.js");
    /* harmony import */


    var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addWeeks/index.js */
    "./node_modules/date-fns/esm/addWeeks/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000;
    /**
     * @name getISOWeeksInYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Get the number of weeks in an ISO week-numbering year of the given date.
     *
     * @description
     * Get the number of weeks in an ISO week-numbering year of the given date.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the number of ISO weeks in a year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // How many weeks are in ISO week-numbering year 2015?
     * var result = getISOWeeksInYear(new Date(2015, 1, 11))
     * //=> 53
     */

    function getISOWeeksInYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var thisYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var nextYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(thisYear, 60));
      var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getMilliseconds/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/getMilliseconds/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetMillisecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getMilliseconds;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getMilliseconds
     * @category Millisecond Helpers
     * @summary Get the milliseconds of the given date.
     *
     * @description
     * Get the milliseconds of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the milliseconds
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Get the milliseconds of 29 February 2012 11:45:05.123:
     * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))
     * //=> 123
     */


    function getMilliseconds(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var milliseconds = date.getMilliseconds();
      return milliseconds;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getMinutes/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/getMinutes/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetMinutesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getMinutes;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getMinutes
     * @category Minute Helpers
     * @summary Get the minutes of the given date.
     *
     * @description
     * Get the minutes of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the minutes
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Get the minutes of 29 February 2012 11:45:05:
     * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
     * //=> 45
     */


    function getMinutes(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var minutes = date.getMinutes();
      return minutes;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getMonth/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/getMonth/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getMonth
     * @category Month Helpers
     * @summary Get the month of the given date.
     *
     * @description
     * Get the month of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which month is 29 February 2012?
     * var result = getMonth(new Date(2012, 1, 29))
     * //=> 1
     */


    function getMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var month = date.getMonth();
      return month;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js":
  /*!**************************************************************************!*\
    !*** ./node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js ***!
    \**************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetOverlappingDaysInIntervalsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getOverlappingDaysInIntervals;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;
    /**
     * @name getOverlappingDaysInIntervals
     * @category Interval Helpers
     * @summary Get the number of days that overlap in two time intervals
     *
     * @description
     * Get the number of days that overlap in two time intervals
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.
     *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
     *
     *   ```
     *   2.1.3
     *   time interval
     *   part of the time axis limited by two instants
     *   ```
     *
     *   Also, this function now accepts an object with `start` and `end` properties
     *   instead of two arguments as an interval.
     *   This function now throws `RangeError` if the start of the interval is after its end
     *   or if any date in the interval is `Invalid Date`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   getOverlappingDaysInRanges(
     *     new Date(2014, 0, 10), new Date(2014, 0, 20),
     *     new Date(2014, 0, 17), new Date(2014, 0, 21)
     *   )
     *
     *   // v2.0.0 onward
     *
     *   getOverlappingDaysInIntervals(
     *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
     *   )
     *   ```
     *
     * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}
     * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}
     * @returns {Number} the number of days that overlap in two time intervals
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // For overlapping time intervals adds 1 for each started overlapping day:
     * getOverlappingDaysInIntervals(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
     * )
     * //=> 3
     *
     * @example
     * // For non-overlapping time intervals returns 0:
     * getOverlappingDaysInIntervals(
     *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
     *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
     * )
     * //=> 0
     */

    function getOverlappingDaysInIntervals(dirtyIntervalLeft, dirtyIntervalRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var intervalLeft = dirtyIntervalLeft || {};
      var intervalRight = dirtyIntervalRight || {};
      var leftStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.start).getTime();
      var leftEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalLeft.end).getTime();
      var rightStartTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.start).getTime();
      var rightEndTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)) {
        throw new RangeError('Invalid interval');
      }

      var isOverlapping = leftStartTime < rightEndTime && rightStartTime < leftEndTime;

      if (!isOverlapping) {
        return 0;
      }

      var overlapStartDate = rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
      var overlapEndDate = rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
      var differenceInMs = overlapEndDate - overlapStartDate;
      return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getQuarter/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/getQuarter/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getQuarter;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getQuarter
     * @category Quarter Helpers
     * @summary Get the year quarter of the given date.
     *
     * @description
     * Get the year quarter of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the quarter
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which quarter is 2 July 2014?
     * var result = getQuarter(new Date(2014, 6, 2))
     * //=> 3
     */


    function getQuarter(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var quarter = Math.floor(date.getMonth() / 3) + 1;
      return quarter;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getSeconds/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/getSeconds/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetSecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getSeconds;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getSeconds
     * @category Second Helpers
     * @summary Get the seconds of the given date.
     *
     * @description
     * Get the seconds of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the seconds
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Get the seconds of 29 February 2012 11:45:05.123:
     * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
     * //=> 5
     */


    function getSeconds(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var seconds = date.getSeconds();
      return seconds;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getTime/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/getTime/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetTimeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getTime;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getTime
     * @category Timestamp Helpers
     * @summary Get the milliseconds timestamp of the given date.
     *
     * @description
     * Get the milliseconds timestamp of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the timestamp
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Get the timestamp of 29 February 2012 11:45:05.123:
     * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
     * //=> 1330515905123
     */


    function getTime(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var timestamp = date.getTime();
      return timestamp;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getUnixTime/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/getUnixTime/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetUnixTimeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getUnixTime;
    });
    /* harmony import */


    var _getTime_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getTime/index.js */
    "./node_modules/date-fns/esm/getTime/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getUnixTime
     * @category Timestamp Helpers
     * @summary Get the seconds timestamp of the given date.
     *
     * @description
     * Get the seconds timestamp of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the timestamp
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Get the timestamp of 29 February 2012 11:45:05 CET:
     * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))
     * //=> 1330512305
     */


    function getUnixTime(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Math.floor(Object(_getTime_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate) / 1000);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getWeek/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/getWeek/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getWeek;
    });
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfWeekYear/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_WEEK = 604800000;
    /**
     * @name getWeek
     * @category Week Helpers
     * @summary Get the local week index of the given date.
     *
     * @description
     * Get the local week index of the given date.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Number} the week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // Which week of the local week numbering year is 2 January 2005 with default options?
     * var result = getISOWeek(new Date(2005, 0, 2))
     * //=> 2
     *
     * // Which week of the local week numbering year is 2 January 2005,
     * // if Monday is the first day of the week,
     * // and the first week of the year always contains 4 January?
     * var result = getISOWeek(new Date(2005, 0, 2), {
     *   weekStartsOn: 1,
     *   firstWeekContainsDate: 4
     * })
     * //=> 53
     */

    function getWeek(dirtyDate, options) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
      var diff = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, options).getTime() - Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, options).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getWeekOfMonth/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/getWeekOfMonth/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetWeekOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getWeekOfMonth;
    });
    /* harmony import */


    var _getDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getDate/index.js */
    "./node_modules/date-fns/esm/getDate/index.js");
    /* harmony import */


    var _getDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../getDay/index.js */
    "./node_modules/date-fns/esm/getDay/index.js");
    /* harmony import */


    var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfMonth/index.js */
    "./node_modules/date-fns/esm/startOfMonth/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getWeekOfMonth
     * @category Week Helpers
     * @summary Get the week of the month of the given date.
     *
     * @description
     * Get the week of the month of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Number} the week of month
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // Which week of the month is 9 November 2017?
     * var result = getWeekOfMonth(new Date(2017, 10, 9))
     * //=> 2
     */


    function getWeekOfMonth(date, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var currentDayOfMonth = Object(_getDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date);

      if (isNaN(currentDayOfMonth)) {
        return currentDayOfMonth;
      }

      var startWeekDay = Object(_getDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date));
      var lastDayOfFirstWeek = 0;

      if (startWeekDay >= weekStartsOn) {
        lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
      } else {
        lastDayOfFirstWeek = weekStartsOn - startWeekDay;
      }

      var weekNumber = 1;

      if (currentDayOfMonth > lastDayOfFirstWeek) {
        var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;
        weekNumber = weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
      }

      return weekNumber;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getWeekYear/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/getWeekYear/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getWeekYear;
    });
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getWeekYear
     * @category Week-Numbering Year Helpers
     * @summary Get the local week-numbering year of the given date.
     *
     * @description
     * Get the local week-numbering year of the given date.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Number} the local week-numbering year
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // Which week numbering year is 26 December 2004 with the default settings?
     * var result = getWeekYear(new Date(2004, 11, 26))
     * //=> 2005
     *
     * @example
     * // Which week numbering year is 26 December 2004 if week starts on Saturday?
     * var result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
     * //=> 2004
     *
     * @example
     * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
     * var result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
     * //=> 2004
     */


    function getWeekYear(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var year = date.getFullYear();
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(firstWeekOfNextYear, dirtyOptions);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(firstWeekOfThisYear, dirtyOptions);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getWeeksInMonth/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/getWeeksInMonth/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetWeeksInMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getWeeksInMonth;
    });
    /* harmony import */


    var _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInCalendarWeeks/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarWeeks/index.js");
    /* harmony import */


    var _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../lastDayOfMonth/index.js */
    "./node_modules/date-fns/esm/lastDayOfMonth/index.js");
    /* harmony import */


    var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfMonth/index.js */
    "./node_modules/date-fns/esm/startOfMonth/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getWeeksInMonth
     * @category Week Helpers
     * @summary Get the number of calendar weeks a month spans.
     *
     * @description
     * Get the number of calendar weeks the month in the given date spans.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Number} the number of calendar weeks
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // How many calendar weeks does February 2015 span?
     * var result = getWeeksInMonth(new Date(2015, 1, 8))
     * //=> 4
     *
     * @example
     * // If the week starts on Monday,
     * // how many calendar weeks does July 2017 span?
     * var result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })
     * //=> 6
     */


    function getWeeksInMonth(date, options) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      return Object(_differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date), Object(_startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date), options) + 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/getYear/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/getYear/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmGetYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return getYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name getYear
     * @category Year Helpers
     * @summary Get the year of the given date.
     *
     * @description
     * Get the year of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which year is 2 July 2014?
     * var result = getYear(new Date(2014, 6, 2))
     * //=> 2014
     */


    function getYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      return year;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/index.js":
  /*!********************************************!*\
    !*** ./node_modules/date-fns/esm/index.js ***!
    \********************************************/

  /*! exports provided: add, addBusinessDays, addDays, addHours, addISOWeekYears, addMilliseconds, addMinutes, addMonths, addQuarters, addSeconds, addWeeks, addYears, areIntervalsOverlapping, closestIndexTo, closestTo, compareAsc, compareDesc, differenceInBusinessDays, differenceInCalendarDays, differenceInCalendarISOWeekYears, differenceInCalendarISOWeeks, differenceInCalendarMonths, differenceInCalendarQuarters, differenceInCalendarWeeks, differenceInCalendarYears, differenceInDays, differenceInHours, differenceInISOWeekYears, differenceInMilliseconds, differenceInMinutes, differenceInMonths, differenceInQuarters, differenceInSeconds, differenceInWeeks, differenceInYears, eachDayOfInterval, eachHourOfInterval, eachMonthOfInterval, eachQuarterOfInterval, eachWeekOfInterval, eachWeekendOfInterval, eachWeekendOfMonth, eachWeekendOfYear, eachYearOfInterval, endOfDay, endOfDecade, endOfHour, endOfISOWeek, endOfISOWeekYear, endOfMinute, endOfMonth, endOfQuarter, endOfSecond, endOfToday, endOfTomorrow, endOfWeek, endOfYear, endOfYesterday, format, formatDistance, formatDistanceStrict, formatDistanceToNow, formatDistanceToNowStrict, formatDuration, formatISO, formatISO9075, formatISODuration, formatRFC3339, formatRFC7231, formatRelative, fromUnixTime, getDate, getDay, getDayOfYear, getDaysInMonth, getDaysInYear, getDecade, getHours, getISODay, getISOWeek, getISOWeekYear, getISOWeeksInYear, getMilliseconds, getMinutes, getMonth, getOverlappingDaysInIntervals, getQuarter, getSeconds, getTime, getUnixTime, getWeek, getWeekOfMonth, getWeekYear, getWeeksInMonth, getYear, intervalToDuration, isAfter, isBefore, isDate, isEqual, isExists, isFirstDayOfMonth, isFriday, isFuture, isLastDayOfMonth, isLeapYear, isMonday, isPast, isSameDay, isSameHour, isSameISOWeek, isSameISOWeekYear, isSameMinute, isSameMonth, isSameQuarter, isSameSecond, isSameWeek, isSameYear, isSaturday, isSunday, isThisHour, isThisISOWeek, isThisMinute, isThisMonth, isThisQuarter, isThisSecond, isThisWeek, isThisYear, isThursday, isToday, isTomorrow, isTuesday, isValid, isWednesday, isWeekend, isWithinInterval, isYesterday, lastDayOfDecade, lastDayOfISOWeek, lastDayOfISOWeekYear, lastDayOfMonth, lastDayOfQuarter, lastDayOfWeek, lastDayOfYear, lightFormat, max, min, parse, parseISO, parseJSON, roundToNearestMinutes, set, setDate, setDay, setDayOfYear, setHours, setISODay, setISOWeek, setISOWeekYear, setMilliseconds, setMinutes, setMonth, setQuarter, setSeconds, setWeek, setWeekYear, setYear, startOfDay, startOfDecade, startOfHour, startOfISOWeek, startOfISOWeekYear, startOfMinute, startOfMonth, startOfQuarter, startOfSecond, startOfToday, startOfTomorrow, startOfWeek, startOfWeekYear, startOfYear, startOfYesterday, sub, subBusinessDays, subDays, subHours, subISOWeekYears, subMilliseconds, subMinutes, subMonths, subQuarters, subSeconds, subWeeks, subYears, toDate, maxTime, minTime */

  /***/
  function node_modulesDateFnsEsmIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _add_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./add/index.js */
    "./node_modules/date-fns/esm/add/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "add", function () {
      return _add_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    });
    /* harmony import */


    var _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./addBusinessDays/index.js */
    "./node_modules/date-fns/esm/addBusinessDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addBusinessDays", function () {
      return _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"];
    });
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addDays", function () {
      return _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"];
    });
    /* harmony import */


    var _addHours_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./addHours/index.js */
    "./node_modules/date-fns/esm/addHours/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addHours", function () {
      return _addHours_index_js__WEBPACK_IMPORTED_MODULE_3__["default"];
    });
    /* harmony import */


    var _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./addISOWeekYears/index.js */
    "./node_modules/date-fns/esm/addISOWeekYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addISOWeekYears", function () {
      return _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_4__["default"];
    });
    /* harmony import */


    var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./addMilliseconds/index.js */
    "./node_modules/date-fns/esm/addMilliseconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addMilliseconds", function () {
      return _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"];
    });
    /* harmony import */


    var _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./addMinutes/index.js */
    "./node_modules/date-fns/esm/addMinutes/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addMinutes", function () {
      return _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_6__["default"];
    });
    /* harmony import */


    var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./addMonths/index.js */
    "./node_modules/date-fns/esm/addMonths/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addMonths", function () {
      return _addMonths_index_js__WEBPACK_IMPORTED_MODULE_7__["default"];
    });
    /* harmony import */


    var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./addQuarters/index.js */
    "./node_modules/date-fns/esm/addQuarters/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addQuarters", function () {
      return _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_8__["default"];
    });
    /* harmony import */


    var _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./addSeconds/index.js */
    "./node_modules/date-fns/esm/addSeconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addSeconds", function () {
      return _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_9__["default"];
    });
    /* harmony import */


    var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./addWeeks/index.js */
    "./node_modules/date-fns/esm/addWeeks/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addWeeks", function () {
      return _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_10__["default"];
    });
    /* harmony import */


    var _addYears_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./addYears/index.js */
    "./node_modules/date-fns/esm/addYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "addYears", function () {
      return _addYears_index_js__WEBPACK_IMPORTED_MODULE_11__["default"];
    });
    /* harmony import */


    var _areIntervalsOverlapping_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./areIntervalsOverlapping/index.js */
    "./node_modules/date-fns/esm/areIntervalsOverlapping/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "areIntervalsOverlapping", function () {
      return _areIntervalsOverlapping_index_js__WEBPACK_IMPORTED_MODULE_12__["default"];
    });
    /* harmony import */


    var _closestIndexTo_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./closestIndexTo/index.js */
    "./node_modules/date-fns/esm/closestIndexTo/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "closestIndexTo", function () {
      return _closestIndexTo_index_js__WEBPACK_IMPORTED_MODULE_13__["default"];
    });
    /* harmony import */


    var _closestTo_index_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./closestTo/index.js */
    "./node_modules/date-fns/esm/closestTo/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "closestTo", function () {
      return _closestTo_index_js__WEBPACK_IMPORTED_MODULE_14__["default"];
    });
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "compareAsc", function () {
      return _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_15__["default"];
    });
    /* harmony import */


    var _compareDesc_index_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./compareDesc/index.js */
    "./node_modules/date-fns/esm/compareDesc/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "compareDesc", function () {
      return _compareDesc_index_js__WEBPACK_IMPORTED_MODULE_16__["default"];
    });
    /* harmony import */


    var _differenceInBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./differenceInBusinessDays/index.js */
    "./node_modules/date-fns/esm/differenceInBusinessDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInBusinessDays", function () {
      return _differenceInBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_17__["default"];
    });
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarDays", function () {
      return _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_18__["default"];
    });
    /* harmony import */


    var _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./differenceInCalendarISOWeekYears/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarISOWeekYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarISOWeekYears", function () {
      return _differenceInCalendarISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_19__["default"];
    });
    /* harmony import */


    var _differenceInCalendarISOWeeks_index_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./differenceInCalendarISOWeeks/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarISOWeeks/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarISOWeeks", function () {
      return _differenceInCalendarISOWeeks_index_js__WEBPACK_IMPORTED_MODULE_20__["default"];
    });
    /* harmony import */


    var _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./differenceInCalendarMonths/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarMonths/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarMonths", function () {
      return _differenceInCalendarMonths_index_js__WEBPACK_IMPORTED_MODULE_21__["default"];
    });
    /* harmony import */


    var _differenceInCalendarQuarters_index_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./differenceInCalendarQuarters/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarQuarters/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarQuarters", function () {
      return _differenceInCalendarQuarters_index_js__WEBPACK_IMPORTED_MODULE_22__["default"];
    });
    /* harmony import */


    var _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./differenceInCalendarWeeks/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarWeeks/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarWeeks", function () {
      return _differenceInCalendarWeeks_index_js__WEBPACK_IMPORTED_MODULE_23__["default"];
    });
    /* harmony import */


    var _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./differenceInCalendarYears/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInCalendarYears", function () {
      return _differenceInCalendarYears_index_js__WEBPACK_IMPORTED_MODULE_24__["default"];
    });
    /* harmony import */


    var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./differenceInDays/index.js */
    "./node_modules/date-fns/esm/differenceInDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInDays", function () {
      return _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_25__["default"];
    });
    /* harmony import */


    var _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./differenceInHours/index.js */
    "./node_modules/date-fns/esm/differenceInHours/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInHours", function () {
      return _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_26__["default"];
    });
    /* harmony import */


    var _differenceInISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./differenceInISOWeekYears/index.js */
    "./node_modules/date-fns/esm/differenceInISOWeekYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInISOWeekYears", function () {
      return _differenceInISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_27__["default"];
    });
    /* harmony import */


    var _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./differenceInMilliseconds/index.js */
    "./node_modules/date-fns/esm/differenceInMilliseconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInMilliseconds", function () {
      return _differenceInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_28__["default"];
    });
    /* harmony import */


    var _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./differenceInMinutes/index.js */
    "./node_modules/date-fns/esm/differenceInMinutes/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInMinutes", function () {
      return _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_29__["default"];
    });
    /* harmony import */


    var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./differenceInMonths/index.js */
    "./node_modules/date-fns/esm/differenceInMonths/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInMonths", function () {
      return _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_30__["default"];
    });
    /* harmony import */


    var _differenceInQuarters_index_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./differenceInQuarters/index.js */
    "./node_modules/date-fns/esm/differenceInQuarters/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInQuarters", function () {
      return _differenceInQuarters_index_js__WEBPACK_IMPORTED_MODULE_31__["default"];
    });
    /* harmony import */


    var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./differenceInSeconds/index.js */
    "./node_modules/date-fns/esm/differenceInSeconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInSeconds", function () {
      return _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_32__["default"];
    });
    /* harmony import */


    var _differenceInWeeks_index_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ./differenceInWeeks/index.js */
    "./node_modules/date-fns/esm/differenceInWeeks/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInWeeks", function () {
      return _differenceInWeeks_index_js__WEBPACK_IMPORTED_MODULE_33__["default"];
    });
    /* harmony import */


    var _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ./differenceInYears/index.js */
    "./node_modules/date-fns/esm/differenceInYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "differenceInYears", function () {
      return _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_34__["default"];
    });
    /* harmony import */


    var _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ./eachDayOfInterval/index.js */
    "./node_modules/date-fns/esm/eachDayOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachDayOfInterval", function () {
      return _eachDayOfInterval_index_js__WEBPACK_IMPORTED_MODULE_35__["default"];
    });
    /* harmony import */


    var _eachHourOfInterval_index_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ./eachHourOfInterval/index.js */
    "./node_modules/date-fns/esm/eachHourOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachHourOfInterval", function () {
      return _eachHourOfInterval_index_js__WEBPACK_IMPORTED_MODULE_36__["default"];
    });
    /* harmony import */


    var _eachMonthOfInterval_index_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! ./eachMonthOfInterval/index.js */
    "./node_modules/date-fns/esm/eachMonthOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachMonthOfInterval", function () {
      return _eachMonthOfInterval_index_js__WEBPACK_IMPORTED_MODULE_37__["default"];
    });
    /* harmony import */


    var _eachQuarterOfInterval_index_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! ./eachQuarterOfInterval/index.js */
    "./node_modules/date-fns/esm/eachQuarterOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachQuarterOfInterval", function () {
      return _eachQuarterOfInterval_index_js__WEBPACK_IMPORTED_MODULE_38__["default"];
    });
    /* harmony import */


    var _eachWeekOfInterval_index_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! ./eachWeekOfInterval/index.js */
    "./node_modules/date-fns/esm/eachWeekOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachWeekOfInterval", function () {
      return _eachWeekOfInterval_index_js__WEBPACK_IMPORTED_MODULE_39__["default"];
    });
    /* harmony import */


    var _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! ./eachWeekendOfInterval/index.js */
    "./node_modules/date-fns/esm/eachWeekendOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachWeekendOfInterval", function () {
      return _eachWeekendOfInterval_index_js__WEBPACK_IMPORTED_MODULE_40__["default"];
    });
    /* harmony import */


    var _eachWeekendOfMonth_index_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! ./eachWeekendOfMonth/index.js */
    "./node_modules/date-fns/esm/eachWeekendOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachWeekendOfMonth", function () {
      return _eachWeekendOfMonth_index_js__WEBPACK_IMPORTED_MODULE_41__["default"];
    });
    /* harmony import */


    var _eachWeekendOfYear_index_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! ./eachWeekendOfYear/index.js */
    "./node_modules/date-fns/esm/eachWeekendOfYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachWeekendOfYear", function () {
      return _eachWeekendOfYear_index_js__WEBPACK_IMPORTED_MODULE_42__["default"];
    });
    /* harmony import */


    var _eachYearOfInterval_index_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ./eachYearOfInterval/index.js */
    "./node_modules/date-fns/esm/eachYearOfInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "eachYearOfInterval", function () {
      return _eachYearOfInterval_index_js__WEBPACK_IMPORTED_MODULE_43__["default"];
    });
    /* harmony import */


    var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ./endOfDay/index.js */
    "./node_modules/date-fns/esm/endOfDay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfDay", function () {
      return _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_44__["default"];
    });
    /* harmony import */


    var _endOfDecade_index_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
    /*! ./endOfDecade/index.js */
    "./node_modules/date-fns/esm/endOfDecade/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfDecade", function () {
      return _endOfDecade_index_js__WEBPACK_IMPORTED_MODULE_45__["default"];
    });
    /* harmony import */


    var _endOfHour_index_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
    /*! ./endOfHour/index.js */
    "./node_modules/date-fns/esm/endOfHour/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfHour", function () {
      return _endOfHour_index_js__WEBPACK_IMPORTED_MODULE_46__["default"];
    });
    /* harmony import */


    var _endOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
    /*! ./endOfISOWeek/index.js */
    "./node_modules/date-fns/esm/endOfISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfISOWeek", function () {
      return _endOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_47__["default"];
    });
    /* harmony import */


    var _endOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
    /*! ./endOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/endOfISOWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfISOWeekYear", function () {
      return _endOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_48__["default"];
    });
    /* harmony import */


    var _endOfMinute_index_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
    /*! ./endOfMinute/index.js */
    "./node_modules/date-fns/esm/endOfMinute/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfMinute", function () {
      return _endOfMinute_index_js__WEBPACK_IMPORTED_MODULE_49__["default"];
    });
    /* harmony import */


    var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
    /*! ./endOfMonth/index.js */
    "./node_modules/date-fns/esm/endOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfMonth", function () {
      return _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_50__["default"];
    });
    /* harmony import */


    var _endOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
    /*! ./endOfQuarter/index.js */
    "./node_modules/date-fns/esm/endOfQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfQuarter", function () {
      return _endOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_51__["default"];
    });
    /* harmony import */


    var _endOfSecond_index_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
    /*! ./endOfSecond/index.js */
    "./node_modules/date-fns/esm/endOfSecond/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfSecond", function () {
      return _endOfSecond_index_js__WEBPACK_IMPORTED_MODULE_52__["default"];
    });
    /* harmony import */


    var _endOfToday_index_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
    /*! ./endOfToday/index.js */
    "./node_modules/date-fns/esm/endOfToday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfToday", function () {
      return _endOfToday_index_js__WEBPACK_IMPORTED_MODULE_53__["default"];
    });
    /* harmony import */


    var _endOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
    /*! ./endOfTomorrow/index.js */
    "./node_modules/date-fns/esm/endOfTomorrow/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfTomorrow", function () {
      return _endOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_54__["default"];
    });
    /* harmony import */


    var _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
    /*! ./endOfWeek/index.js */
    "./node_modules/date-fns/esm/endOfWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfWeek", function () {
      return _endOfWeek_index_js__WEBPACK_IMPORTED_MODULE_55__["default"];
    });
    /* harmony import */


    var _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
    /*! ./endOfYear/index.js */
    "./node_modules/date-fns/esm/endOfYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfYear", function () {
      return _endOfYear_index_js__WEBPACK_IMPORTED_MODULE_56__["default"];
    });
    /* harmony import */


    var _endOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
    /*! ./endOfYesterday/index.js */
    "./node_modules/date-fns/esm/endOfYesterday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "endOfYesterday", function () {
      return _endOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_57__["default"];
    });
    /* harmony import */


    var _format_index_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
    /*! ./format/index.js */
    "./node_modules/date-fns/esm/format/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "format", function () {
      return _format_index_js__WEBPACK_IMPORTED_MODULE_58__["default"];
    });
    /* harmony import */


    var _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
    /*! ./formatDistance/index.js */
    "./node_modules/date-fns/esm/formatDistance/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatDistance", function () {
      return _formatDistance_index_js__WEBPACK_IMPORTED_MODULE_59__["default"];
    });
    /* harmony import */


    var _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
    /*! ./formatDistanceStrict/index.js */
    "./node_modules/date-fns/esm/formatDistanceStrict/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatDistanceStrict", function () {
      return _formatDistanceStrict_index_js__WEBPACK_IMPORTED_MODULE_60__["default"];
    });
    /* harmony import */


    var _formatDistanceToNow_index_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
    /*! ./formatDistanceToNow/index.js */
    "./node_modules/date-fns/esm/formatDistanceToNow/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatDistanceToNow", function () {
      return _formatDistanceToNow_index_js__WEBPACK_IMPORTED_MODULE_61__["default"];
    });
    /* harmony import */


    var _formatDistanceToNowStrict_index_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
    /*! ./formatDistanceToNowStrict/index.js */
    "./node_modules/date-fns/esm/formatDistanceToNowStrict/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatDistanceToNowStrict", function () {
      return _formatDistanceToNowStrict_index_js__WEBPACK_IMPORTED_MODULE_62__["default"];
    });
    /* harmony import */


    var _formatDuration_index_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
    /*! ./formatDuration/index.js */
    "./node_modules/date-fns/esm/formatDuration/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatDuration", function () {
      return _formatDuration_index_js__WEBPACK_IMPORTED_MODULE_63__["default"];
    });
    /* harmony import */


    var _formatISO_index_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
    /*! ./formatISO/index.js */
    "./node_modules/date-fns/esm/formatISO/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatISO", function () {
      return _formatISO_index_js__WEBPACK_IMPORTED_MODULE_64__["default"];
    });
    /* harmony import */


    var _formatISO9075_index_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
    /*! ./formatISO9075/index.js */
    "./node_modules/date-fns/esm/formatISO9075/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatISO9075", function () {
      return _formatISO9075_index_js__WEBPACK_IMPORTED_MODULE_65__["default"];
    });
    /* harmony import */


    var _formatISODuration_index_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
    /*! ./formatISODuration/index.js */
    "./node_modules/date-fns/esm/formatISODuration/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatISODuration", function () {
      return _formatISODuration_index_js__WEBPACK_IMPORTED_MODULE_66__["default"];
    });
    /* harmony import */


    var _formatRFC3339_index_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
    /*! ./formatRFC3339/index.js */
    "./node_modules/date-fns/esm/formatRFC3339/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatRFC3339", function () {
      return _formatRFC3339_index_js__WEBPACK_IMPORTED_MODULE_67__["default"];
    });
    /* harmony import */


    var _formatRFC7231_index_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
    /*! ./formatRFC7231/index.js */
    "./node_modules/date-fns/esm/formatRFC7231/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatRFC7231", function () {
      return _formatRFC7231_index_js__WEBPACK_IMPORTED_MODULE_68__["default"];
    });
    /* harmony import */


    var _formatRelative_index_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
    /*! ./formatRelative/index.js */
    "./node_modules/date-fns/esm/formatRelative/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "formatRelative", function () {
      return _formatRelative_index_js__WEBPACK_IMPORTED_MODULE_69__["default"];
    });
    /* harmony import */


    var _fromUnixTime_index_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
    /*! ./fromUnixTime/index.js */
    "./node_modules/date-fns/esm/fromUnixTime/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "fromUnixTime", function () {
      return _fromUnixTime_index_js__WEBPACK_IMPORTED_MODULE_70__["default"];
    });
    /* harmony import */


    var _getDate_index_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
    /*! ./getDate/index.js */
    "./node_modules/date-fns/esm/getDate/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDate", function () {
      return _getDate_index_js__WEBPACK_IMPORTED_MODULE_71__["default"];
    });
    /* harmony import */


    var _getDay_index_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
    /*! ./getDay/index.js */
    "./node_modules/date-fns/esm/getDay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDay", function () {
      return _getDay_index_js__WEBPACK_IMPORTED_MODULE_72__["default"];
    });
    /* harmony import */


    var _getDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
    /*! ./getDayOfYear/index.js */
    "./node_modules/date-fns/esm/getDayOfYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDayOfYear", function () {
      return _getDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_73__["default"];
    });
    /* harmony import */


    var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
    /*! ./getDaysInMonth/index.js */
    "./node_modules/date-fns/esm/getDaysInMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDaysInMonth", function () {
      return _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_74__["default"];
    });
    /* harmony import */


    var _getDaysInYear_index_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
    /*! ./getDaysInYear/index.js */
    "./node_modules/date-fns/esm/getDaysInYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDaysInYear", function () {
      return _getDaysInYear_index_js__WEBPACK_IMPORTED_MODULE_75__["default"];
    });
    /* harmony import */


    var _getDecade_index_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
    /*! ./getDecade/index.js */
    "./node_modules/date-fns/esm/getDecade/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getDecade", function () {
      return _getDecade_index_js__WEBPACK_IMPORTED_MODULE_76__["default"];
    });
    /* harmony import */


    var _getHours_index_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
    /*! ./getHours/index.js */
    "./node_modules/date-fns/esm/getHours/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getHours", function () {
      return _getHours_index_js__WEBPACK_IMPORTED_MODULE_77__["default"];
    });
    /* harmony import */


    var _getISODay_index_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
    /*! ./getISODay/index.js */
    "./node_modules/date-fns/esm/getISODay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getISODay", function () {
      return _getISODay_index_js__WEBPACK_IMPORTED_MODULE_78__["default"];
    });
    /* harmony import */


    var _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
    /*! ./getISOWeek/index.js */
    "./node_modules/date-fns/esm/getISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getISOWeek", function () {
      return _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_79__["default"];
    });
    /* harmony import */


    var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
    /*! ./getISOWeekYear/index.js */
    "./node_modules/date-fns/esm/getISOWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getISOWeekYear", function () {
      return _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_80__["default"];
    });
    /* harmony import */


    var _getISOWeeksInYear_index_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
    /*! ./getISOWeeksInYear/index.js */
    "./node_modules/date-fns/esm/getISOWeeksInYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getISOWeeksInYear", function () {
      return _getISOWeeksInYear_index_js__WEBPACK_IMPORTED_MODULE_81__["default"];
    });
    /* harmony import */


    var _getMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
    /*! ./getMilliseconds/index.js */
    "./node_modules/date-fns/esm/getMilliseconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getMilliseconds", function () {
      return _getMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_82__["default"];
    });
    /* harmony import */


    var _getMinutes_index_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
    /*! ./getMinutes/index.js */
    "./node_modules/date-fns/esm/getMinutes/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getMinutes", function () {
      return _getMinutes_index_js__WEBPACK_IMPORTED_MODULE_83__["default"];
    });
    /* harmony import */


    var _getMonth_index_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
    /*! ./getMonth/index.js */
    "./node_modules/date-fns/esm/getMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getMonth", function () {
      return _getMonth_index_js__WEBPACK_IMPORTED_MODULE_84__["default"];
    });
    /* harmony import */


    var _getOverlappingDaysInIntervals_index_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
    /*! ./getOverlappingDaysInIntervals/index.js */
    "./node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getOverlappingDaysInIntervals", function () {
      return _getOverlappingDaysInIntervals_index_js__WEBPACK_IMPORTED_MODULE_85__["default"];
    });
    /* harmony import */


    var _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
    /*! ./getQuarter/index.js */
    "./node_modules/date-fns/esm/getQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getQuarter", function () {
      return _getQuarter_index_js__WEBPACK_IMPORTED_MODULE_86__["default"];
    });
    /* harmony import */


    var _getSeconds_index_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
    /*! ./getSeconds/index.js */
    "./node_modules/date-fns/esm/getSeconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getSeconds", function () {
      return _getSeconds_index_js__WEBPACK_IMPORTED_MODULE_87__["default"];
    });
    /* harmony import */


    var _getTime_index_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
    /*! ./getTime/index.js */
    "./node_modules/date-fns/esm/getTime/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getTime", function () {
      return _getTime_index_js__WEBPACK_IMPORTED_MODULE_88__["default"];
    });
    /* harmony import */


    var _getUnixTime_index_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
    /*! ./getUnixTime/index.js */
    "./node_modules/date-fns/esm/getUnixTime/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getUnixTime", function () {
      return _getUnixTime_index_js__WEBPACK_IMPORTED_MODULE_89__["default"];
    });
    /* harmony import */


    var _getWeek_index_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
    /*! ./getWeek/index.js */
    "./node_modules/date-fns/esm/getWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getWeek", function () {
      return _getWeek_index_js__WEBPACK_IMPORTED_MODULE_90__["default"];
    });
    /* harmony import */


    var _getWeekOfMonth_index_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
    /*! ./getWeekOfMonth/index.js */
    "./node_modules/date-fns/esm/getWeekOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getWeekOfMonth", function () {
      return _getWeekOfMonth_index_js__WEBPACK_IMPORTED_MODULE_91__["default"];
    });
    /* harmony import */


    var _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
    /*! ./getWeekYear/index.js */
    "./node_modules/date-fns/esm/getWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getWeekYear", function () {
      return _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_92__["default"];
    });
    /* harmony import */


    var _getWeeksInMonth_index_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
    /*! ./getWeeksInMonth/index.js */
    "./node_modules/date-fns/esm/getWeeksInMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getWeeksInMonth", function () {
      return _getWeeksInMonth_index_js__WEBPACK_IMPORTED_MODULE_93__["default"];
    });
    /* harmony import */


    var _getYear_index_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
    /*! ./getYear/index.js */
    "./node_modules/date-fns/esm/getYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getYear", function () {
      return _getYear_index_js__WEBPACK_IMPORTED_MODULE_94__["default"];
    });
    /* harmony import */


    var _intervalToDuration_index_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
    /*! ./intervalToDuration/index.js */
    "./node_modules/date-fns/esm/intervalToDuration/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "intervalToDuration", function () {
      return _intervalToDuration_index_js__WEBPACK_IMPORTED_MODULE_95__["default"];
    });
    /* harmony import */


    var _isAfter_index_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
    /*! ./isAfter/index.js */
    "./node_modules/date-fns/esm/isAfter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isAfter", function () {
      return _isAfter_index_js__WEBPACK_IMPORTED_MODULE_96__["default"];
    });
    /* harmony import */


    var _isBefore_index_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(
    /*! ./isBefore/index.js */
    "./node_modules/date-fns/esm/isBefore/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isBefore", function () {
      return _isBefore_index_js__WEBPACK_IMPORTED_MODULE_97__["default"];
    });
    /* harmony import */


    var _isDate_index_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(
    /*! ./isDate/index.js */
    "./node_modules/date-fns/esm/isDate/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isDate", function () {
      return _isDate_index_js__WEBPACK_IMPORTED_MODULE_98__["default"];
    });
    /* harmony import */


    var _isEqual_index_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(
    /*! ./isEqual/index.js */
    "./node_modules/date-fns/esm/isEqual/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isEqual", function () {
      return _isEqual_index_js__WEBPACK_IMPORTED_MODULE_99__["default"];
    });
    /* harmony import */


    var _isExists_index_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(
    /*! ./isExists/index.js */
    "./node_modules/date-fns/esm/isExists/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isExists", function () {
      return _isExists_index_js__WEBPACK_IMPORTED_MODULE_100__["default"];
    });
    /* harmony import */


    var _isFirstDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(
    /*! ./isFirstDayOfMonth/index.js */
    "./node_modules/date-fns/esm/isFirstDayOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isFirstDayOfMonth", function () {
      return _isFirstDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_101__["default"];
    });
    /* harmony import */


    var _isFriday_index_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(
    /*! ./isFriday/index.js */
    "./node_modules/date-fns/esm/isFriday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isFriday", function () {
      return _isFriday_index_js__WEBPACK_IMPORTED_MODULE_102__["default"];
    });
    /* harmony import */


    var _isFuture_index_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(
    /*! ./isFuture/index.js */
    "./node_modules/date-fns/esm/isFuture/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isFuture", function () {
      return _isFuture_index_js__WEBPACK_IMPORTED_MODULE_103__["default"];
    });
    /* harmony import */


    var _isLastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(
    /*! ./isLastDayOfMonth/index.js */
    "./node_modules/date-fns/esm/isLastDayOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isLastDayOfMonth", function () {
      return _isLastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_104__["default"];
    });
    /* harmony import */


    var _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(
    /*! ./isLeapYear/index.js */
    "./node_modules/date-fns/esm/isLeapYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isLeapYear", function () {
      return _isLeapYear_index_js__WEBPACK_IMPORTED_MODULE_105__["default"];
    });
    /* harmony import */


    var _isMonday_index_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(
    /*! ./isMonday/index.js */
    "./node_modules/date-fns/esm/isMonday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isMonday", function () {
      return _isMonday_index_js__WEBPACK_IMPORTED_MODULE_106__["default"];
    });
    /* harmony import */


    var _isPast_index_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(
    /*! ./isPast/index.js */
    "./node_modules/date-fns/esm/isPast/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isPast", function () {
      return _isPast_index_js__WEBPACK_IMPORTED_MODULE_107__["default"];
    });
    /* harmony import */


    var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(
    /*! ./isSameDay/index.js */
    "./node_modules/date-fns/esm/isSameDay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameDay", function () {
      return _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_108__["default"];
    });
    /* harmony import */


    var _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(
    /*! ./isSameHour/index.js */
    "./node_modules/date-fns/esm/isSameHour/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameHour", function () {
      return _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_109__["default"];
    });
    /* harmony import */


    var _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(
    /*! ./isSameISOWeek/index.js */
    "./node_modules/date-fns/esm/isSameISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameISOWeek", function () {
      return _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_110__["default"];
    });
    /* harmony import */


    var _isSameISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(
    /*! ./isSameISOWeekYear/index.js */
    "./node_modules/date-fns/esm/isSameISOWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameISOWeekYear", function () {
      return _isSameISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_111__["default"];
    });
    /* harmony import */


    var _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(
    /*! ./isSameMinute/index.js */
    "./node_modules/date-fns/esm/isSameMinute/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameMinute", function () {
      return _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_112__["default"];
    });
    /* harmony import */


    var _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(
    /*! ./isSameMonth/index.js */
    "./node_modules/date-fns/esm/isSameMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameMonth", function () {
      return _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_113__["default"];
    });
    /* harmony import */


    var _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(
    /*! ./isSameQuarter/index.js */
    "./node_modules/date-fns/esm/isSameQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameQuarter", function () {
      return _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_114__["default"];
    });
    /* harmony import */


    var _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(
    /*! ./isSameSecond/index.js */
    "./node_modules/date-fns/esm/isSameSecond/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameSecond", function () {
      return _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_115__["default"];
    });
    /* harmony import */


    var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(
    /*! ./isSameWeek/index.js */
    "./node_modules/date-fns/esm/isSameWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameWeek", function () {
      return _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_116__["default"];
    });
    /* harmony import */


    var _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(
    /*! ./isSameYear/index.js */
    "./node_modules/date-fns/esm/isSameYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSameYear", function () {
      return _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_117__["default"];
    });
    /* harmony import */


    var _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(
    /*! ./isSaturday/index.js */
    "./node_modules/date-fns/esm/isSaturday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSaturday", function () {
      return _isSaturday_index_js__WEBPACK_IMPORTED_MODULE_118__["default"];
    });
    /* harmony import */


    var _isSunday_index_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(
    /*! ./isSunday/index.js */
    "./node_modules/date-fns/esm/isSunday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isSunday", function () {
      return _isSunday_index_js__WEBPACK_IMPORTED_MODULE_119__["default"];
    });
    /* harmony import */


    var _isThisHour_index_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(
    /*! ./isThisHour/index.js */
    "./node_modules/date-fns/esm/isThisHour/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisHour", function () {
      return _isThisHour_index_js__WEBPACK_IMPORTED_MODULE_120__["default"];
    });
    /* harmony import */


    var _isThisISOWeek_index_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(
    /*! ./isThisISOWeek/index.js */
    "./node_modules/date-fns/esm/isThisISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisISOWeek", function () {
      return _isThisISOWeek_index_js__WEBPACK_IMPORTED_MODULE_121__["default"];
    });
    /* harmony import */


    var _isThisMinute_index_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(
    /*! ./isThisMinute/index.js */
    "./node_modules/date-fns/esm/isThisMinute/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisMinute", function () {
      return _isThisMinute_index_js__WEBPACK_IMPORTED_MODULE_122__["default"];
    });
    /* harmony import */


    var _isThisMonth_index_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(
    /*! ./isThisMonth/index.js */
    "./node_modules/date-fns/esm/isThisMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisMonth", function () {
      return _isThisMonth_index_js__WEBPACK_IMPORTED_MODULE_123__["default"];
    });
    /* harmony import */


    var _isThisQuarter_index_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(
    /*! ./isThisQuarter/index.js */
    "./node_modules/date-fns/esm/isThisQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisQuarter", function () {
      return _isThisQuarter_index_js__WEBPACK_IMPORTED_MODULE_124__["default"];
    });
    /* harmony import */


    var _isThisSecond_index_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(
    /*! ./isThisSecond/index.js */
    "./node_modules/date-fns/esm/isThisSecond/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisSecond", function () {
      return _isThisSecond_index_js__WEBPACK_IMPORTED_MODULE_125__["default"];
    });
    /* harmony import */


    var _isThisWeek_index_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(
    /*! ./isThisWeek/index.js */
    "./node_modules/date-fns/esm/isThisWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisWeek", function () {
      return _isThisWeek_index_js__WEBPACK_IMPORTED_MODULE_126__["default"];
    });
    /* harmony import */


    var _isThisYear_index_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(
    /*! ./isThisYear/index.js */
    "./node_modules/date-fns/esm/isThisYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThisYear", function () {
      return _isThisYear_index_js__WEBPACK_IMPORTED_MODULE_127__["default"];
    });
    /* harmony import */


    var _isThursday_index_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(
    /*! ./isThursday/index.js */
    "./node_modules/date-fns/esm/isThursday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isThursday", function () {
      return _isThursday_index_js__WEBPACK_IMPORTED_MODULE_128__["default"];
    });
    /* harmony import */


    var _isToday_index_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(
    /*! ./isToday/index.js */
    "./node_modules/date-fns/esm/isToday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isToday", function () {
      return _isToday_index_js__WEBPACK_IMPORTED_MODULE_129__["default"];
    });
    /* harmony import */


    var _isTomorrow_index_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(
    /*! ./isTomorrow/index.js */
    "./node_modules/date-fns/esm/isTomorrow/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isTomorrow", function () {
      return _isTomorrow_index_js__WEBPACK_IMPORTED_MODULE_130__["default"];
    });
    /* harmony import */


    var _isTuesday_index_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(
    /*! ./isTuesday/index.js */
    "./node_modules/date-fns/esm/isTuesday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isTuesday", function () {
      return _isTuesday_index_js__WEBPACK_IMPORTED_MODULE_131__["default"];
    });
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(
    /*! ./isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isValid", function () {
      return _isValid_index_js__WEBPACK_IMPORTED_MODULE_132__["default"];
    });
    /* harmony import */


    var _isWednesday_index_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(
    /*! ./isWednesday/index.js */
    "./node_modules/date-fns/esm/isWednesday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isWednesday", function () {
      return _isWednesday_index_js__WEBPACK_IMPORTED_MODULE_133__["default"];
    });
    /* harmony import */


    var _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(
    /*! ./isWeekend/index.js */
    "./node_modules/date-fns/esm/isWeekend/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isWeekend", function () {
      return _isWeekend_index_js__WEBPACK_IMPORTED_MODULE_134__["default"];
    });
    /* harmony import */


    var _isWithinInterval_index_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(
    /*! ./isWithinInterval/index.js */
    "./node_modules/date-fns/esm/isWithinInterval/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isWithinInterval", function () {
      return _isWithinInterval_index_js__WEBPACK_IMPORTED_MODULE_135__["default"];
    });
    /* harmony import */


    var _isYesterday_index_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(
    /*! ./isYesterday/index.js */
    "./node_modules/date-fns/esm/isYesterday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isYesterday", function () {
      return _isYesterday_index_js__WEBPACK_IMPORTED_MODULE_136__["default"];
    });
    /* harmony import */


    var _lastDayOfDecade_index_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(
    /*! ./lastDayOfDecade/index.js */
    "./node_modules/date-fns/esm/lastDayOfDecade/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfDecade", function () {
      return _lastDayOfDecade_index_js__WEBPACK_IMPORTED_MODULE_137__["default"];
    });
    /* harmony import */


    var _lastDayOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(
    /*! ./lastDayOfISOWeek/index.js */
    "./node_modules/date-fns/esm/lastDayOfISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfISOWeek", function () {
      return _lastDayOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_138__["default"];
    });
    /* harmony import */


    var _lastDayOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(
    /*! ./lastDayOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfISOWeekYear", function () {
      return _lastDayOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_139__["default"];
    });
    /* harmony import */


    var _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(
    /*! ./lastDayOfMonth/index.js */
    "./node_modules/date-fns/esm/lastDayOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfMonth", function () {
      return _lastDayOfMonth_index_js__WEBPACK_IMPORTED_MODULE_140__["default"];
    });
    /* harmony import */


    var _lastDayOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(
    /*! ./lastDayOfQuarter/index.js */
    "./node_modules/date-fns/esm/lastDayOfQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfQuarter", function () {
      return _lastDayOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_141__["default"];
    });
    /* harmony import */


    var _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(
    /*! ./lastDayOfWeek/index.js */
    "./node_modules/date-fns/esm/lastDayOfWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfWeek", function () {
      return _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_142__["default"];
    });
    /* harmony import */


    var _lastDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(
    /*! ./lastDayOfYear/index.js */
    "./node_modules/date-fns/esm/lastDayOfYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lastDayOfYear", function () {
      return _lastDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_143__["default"];
    });
    /* harmony import */


    var _lightFormat_index_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(
    /*! ./lightFormat/index.js */
    "./node_modules/date-fns/esm/lightFormat/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "lightFormat", function () {
      return _lightFormat_index_js__WEBPACK_IMPORTED_MODULE_144__["default"];
    });
    /* harmony import */


    var _max_index_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(
    /*! ./max/index.js */
    "./node_modules/date-fns/esm/max/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "max", function () {
      return _max_index_js__WEBPACK_IMPORTED_MODULE_145__["default"];
    });
    /* harmony import */


    var _min_index_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(
    /*! ./min/index.js */
    "./node_modules/date-fns/esm/min/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "min", function () {
      return _min_index_js__WEBPACK_IMPORTED_MODULE_146__["default"];
    });
    /* harmony import */


    var _parse_index_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(
    /*! ./parse/index.js */
    "./node_modules/date-fns/esm/parse/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "parse", function () {
      return _parse_index_js__WEBPACK_IMPORTED_MODULE_147__["default"];
    });
    /* harmony import */


    var _parseISO_index_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(
    /*! ./parseISO/index.js */
    "./node_modules/date-fns/esm/parseISO/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "parseISO", function () {
      return _parseISO_index_js__WEBPACK_IMPORTED_MODULE_148__["default"];
    });
    /* harmony import */


    var _parseJSON_index_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(
    /*! ./parseJSON/index.js */
    "./node_modules/date-fns/esm/parseJSON/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "parseJSON", function () {
      return _parseJSON_index_js__WEBPACK_IMPORTED_MODULE_149__["default"];
    });
    /* harmony import */


    var _roundToNearestMinutes_index_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(
    /*! ./roundToNearestMinutes/index.js */
    "./node_modules/date-fns/esm/roundToNearestMinutes/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "roundToNearestMinutes", function () {
      return _roundToNearestMinutes_index_js__WEBPACK_IMPORTED_MODULE_150__["default"];
    });
    /* harmony import */


    var _set_index_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(
    /*! ./set/index.js */
    "./node_modules/date-fns/esm/set/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "set", function () {
      return _set_index_js__WEBPACK_IMPORTED_MODULE_151__["default"];
    });
    /* harmony import */


    var _setDate_index_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(
    /*! ./setDate/index.js */
    "./node_modules/date-fns/esm/setDate/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setDate", function () {
      return _setDate_index_js__WEBPACK_IMPORTED_MODULE_152__["default"];
    });
    /* harmony import */


    var _setDay_index_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(
    /*! ./setDay/index.js */
    "./node_modules/date-fns/esm/setDay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setDay", function () {
      return _setDay_index_js__WEBPACK_IMPORTED_MODULE_153__["default"];
    });
    /* harmony import */


    var _setDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(
    /*! ./setDayOfYear/index.js */
    "./node_modules/date-fns/esm/setDayOfYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setDayOfYear", function () {
      return _setDayOfYear_index_js__WEBPACK_IMPORTED_MODULE_154__["default"];
    });
    /* harmony import */


    var _setHours_index_js__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(
    /*! ./setHours/index.js */
    "./node_modules/date-fns/esm/setHours/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setHours", function () {
      return _setHours_index_js__WEBPACK_IMPORTED_MODULE_155__["default"];
    });
    /* harmony import */


    var _setISODay_index_js__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(
    /*! ./setISODay/index.js */
    "./node_modules/date-fns/esm/setISODay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setISODay", function () {
      return _setISODay_index_js__WEBPACK_IMPORTED_MODULE_156__["default"];
    });
    /* harmony import */


    var _setISOWeek_index_js__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(
    /*! ./setISOWeek/index.js */
    "./node_modules/date-fns/esm/setISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setISOWeek", function () {
      return _setISOWeek_index_js__WEBPACK_IMPORTED_MODULE_157__["default"];
    });
    /* harmony import */


    var _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(
    /*! ./setISOWeekYear/index.js */
    "./node_modules/date-fns/esm/setISOWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setISOWeekYear", function () {
      return _setISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_158__["default"];
    });
    /* harmony import */


    var _setMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(
    /*! ./setMilliseconds/index.js */
    "./node_modules/date-fns/esm/setMilliseconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setMilliseconds", function () {
      return _setMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_159__["default"];
    });
    /* harmony import */


    var _setMinutes_index_js__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(
    /*! ./setMinutes/index.js */
    "./node_modules/date-fns/esm/setMinutes/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setMinutes", function () {
      return _setMinutes_index_js__WEBPACK_IMPORTED_MODULE_160__["default"];
    });
    /* harmony import */


    var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(
    /*! ./setMonth/index.js */
    "./node_modules/date-fns/esm/setMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setMonth", function () {
      return _setMonth_index_js__WEBPACK_IMPORTED_MODULE_161__["default"];
    });
    /* harmony import */


    var _setQuarter_index_js__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(
    /*! ./setQuarter/index.js */
    "./node_modules/date-fns/esm/setQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setQuarter", function () {
      return _setQuarter_index_js__WEBPACK_IMPORTED_MODULE_162__["default"];
    });
    /* harmony import */


    var _setSeconds_index_js__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(
    /*! ./setSeconds/index.js */
    "./node_modules/date-fns/esm/setSeconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setSeconds", function () {
      return _setSeconds_index_js__WEBPACK_IMPORTED_MODULE_163__["default"];
    });
    /* harmony import */


    var _setWeek_index_js__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(
    /*! ./setWeek/index.js */
    "./node_modules/date-fns/esm/setWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setWeek", function () {
      return _setWeek_index_js__WEBPACK_IMPORTED_MODULE_164__["default"];
    });
    /* harmony import */


    var _setWeekYear_index_js__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(
    /*! ./setWeekYear/index.js */
    "./node_modules/date-fns/esm/setWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setWeekYear", function () {
      return _setWeekYear_index_js__WEBPACK_IMPORTED_MODULE_165__["default"];
    });
    /* harmony import */


    var _setYear_index_js__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(
    /*! ./setYear/index.js */
    "./node_modules/date-fns/esm/setYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setYear", function () {
      return _setYear_index_js__WEBPACK_IMPORTED_MODULE_166__["default"];
    });
    /* harmony import */


    var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(
    /*! ./startOfDay/index.js */
    "./node_modules/date-fns/esm/startOfDay/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfDay", function () {
      return _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_167__["default"];
    });
    /* harmony import */


    var _startOfDecade_index_js__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(
    /*! ./startOfDecade/index.js */
    "./node_modules/date-fns/esm/startOfDecade/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfDecade", function () {
      return _startOfDecade_index_js__WEBPACK_IMPORTED_MODULE_168__["default"];
    });
    /* harmony import */


    var _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(
    /*! ./startOfHour/index.js */
    "./node_modules/date-fns/esm/startOfHour/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfHour", function () {
      return _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_169__["default"];
    });
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(
    /*! ./startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfISOWeek", function () {
      return _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_170__["default"];
    });
    /* harmony import */


    var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(
    /*! ./startOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfISOWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfISOWeekYear", function () {
      return _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_171__["default"];
    });
    /* harmony import */


    var _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(
    /*! ./startOfMinute/index.js */
    "./node_modules/date-fns/esm/startOfMinute/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfMinute", function () {
      return _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_172__["default"];
    });
    /* harmony import */


    var _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(
    /*! ./startOfMonth/index.js */
    "./node_modules/date-fns/esm/startOfMonth/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfMonth", function () {
      return _startOfMonth_index_js__WEBPACK_IMPORTED_MODULE_173__["default"];
    });
    /* harmony import */


    var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(
    /*! ./startOfQuarter/index.js */
    "./node_modules/date-fns/esm/startOfQuarter/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfQuarter", function () {
      return _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_174__["default"];
    });
    /* harmony import */


    var _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(
    /*! ./startOfSecond/index.js */
    "./node_modules/date-fns/esm/startOfSecond/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfSecond", function () {
      return _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_175__["default"];
    });
    /* harmony import */


    var _startOfToday_index_js__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(
    /*! ./startOfToday/index.js */
    "./node_modules/date-fns/esm/startOfToday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfToday", function () {
      return _startOfToday_index_js__WEBPACK_IMPORTED_MODULE_176__["default"];
    });
    /* harmony import */


    var _startOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(
    /*! ./startOfTomorrow/index.js */
    "./node_modules/date-fns/esm/startOfTomorrow/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfTomorrow", function () {
      return _startOfTomorrow_index_js__WEBPACK_IMPORTED_MODULE_177__["default"];
    });
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(
    /*! ./startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfWeek", function () {
      return _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_178__["default"];
    });
    /* harmony import */


    var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(
    /*! ./startOfWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfWeekYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfWeekYear", function () {
      return _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_179__["default"];
    });
    /* harmony import */


    var _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(
    /*! ./startOfYear/index.js */
    "./node_modules/date-fns/esm/startOfYear/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfYear", function () {
      return _startOfYear_index_js__WEBPACK_IMPORTED_MODULE_180__["default"];
    });
    /* harmony import */


    var _startOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(
    /*! ./startOfYesterday/index.js */
    "./node_modules/date-fns/esm/startOfYesterday/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "startOfYesterday", function () {
      return _startOfYesterday_index_js__WEBPACK_IMPORTED_MODULE_181__["default"];
    });
    /* harmony import */


    var _sub_index_js__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(
    /*! ./sub/index.js */
    "./node_modules/date-fns/esm/sub/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "sub", function () {
      return _sub_index_js__WEBPACK_IMPORTED_MODULE_182__["default"];
    });
    /* harmony import */


    var _subBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(
    /*! ./subBusinessDays/index.js */
    "./node_modules/date-fns/esm/subBusinessDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subBusinessDays", function () {
      return _subBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_183__["default"];
    });
    /* harmony import */


    var _subDays_index_js__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(
    /*! ./subDays/index.js */
    "./node_modules/date-fns/esm/subDays/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subDays", function () {
      return _subDays_index_js__WEBPACK_IMPORTED_MODULE_184__["default"];
    });
    /* harmony import */


    var _subHours_index_js__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(
    /*! ./subHours/index.js */
    "./node_modules/date-fns/esm/subHours/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subHours", function () {
      return _subHours_index_js__WEBPACK_IMPORTED_MODULE_185__["default"];
    });
    /* harmony import */


    var _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(
    /*! ./subISOWeekYears/index.js */
    "./node_modules/date-fns/esm/subISOWeekYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subISOWeekYears", function () {
      return _subISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_186__["default"];
    });
    /* harmony import */


    var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(
    /*! ./subMilliseconds/index.js */
    "./node_modules/date-fns/esm/subMilliseconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subMilliseconds", function () {
      return _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_187__["default"];
    });
    /* harmony import */


    var _subMinutes_index_js__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(
    /*! ./subMinutes/index.js */
    "./node_modules/date-fns/esm/subMinutes/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subMinutes", function () {
      return _subMinutes_index_js__WEBPACK_IMPORTED_MODULE_188__["default"];
    });
    /* harmony import */


    var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(
    /*! ./subMonths/index.js */
    "./node_modules/date-fns/esm/subMonths/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subMonths", function () {
      return _subMonths_index_js__WEBPACK_IMPORTED_MODULE_189__["default"];
    });
    /* harmony import */


    var _subQuarters_index_js__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(
    /*! ./subQuarters/index.js */
    "./node_modules/date-fns/esm/subQuarters/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subQuarters", function () {
      return _subQuarters_index_js__WEBPACK_IMPORTED_MODULE_190__["default"];
    });
    /* harmony import */


    var _subSeconds_index_js__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(
    /*! ./subSeconds/index.js */
    "./node_modules/date-fns/esm/subSeconds/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subSeconds", function () {
      return _subSeconds_index_js__WEBPACK_IMPORTED_MODULE_191__["default"];
    });
    /* harmony import */


    var _subWeeks_index_js__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(
    /*! ./subWeeks/index.js */
    "./node_modules/date-fns/esm/subWeeks/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subWeeks", function () {
      return _subWeeks_index_js__WEBPACK_IMPORTED_MODULE_192__["default"];
    });
    /* harmony import */


    var _subYears_index_js__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(
    /*! ./subYears/index.js */
    "./node_modules/date-fns/esm/subYears/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "subYears", function () {
      return _subYears_index_js__WEBPACK_IMPORTED_MODULE_193__["default"];
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(
    /*! ./toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "toDate", function () {
      return _toDate_index_js__WEBPACK_IMPORTED_MODULE_194__["default"];
    });
    /* harmony import */


    var _constants_index_js__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(
    /*! ./constants/index.js */
    "./node_modules/date-fns/esm/constants/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "maxTime", function () {
      return _constants_index_js__WEBPACK_IMPORTED_MODULE_195__["maxTime"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "minTime", function () {
      return _constants_index_js__WEBPACK_IMPORTED_MODULE_195__["minTime"];
    }); // This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.

    /***/

  },

  /***/
  "./node_modules/date-fns/esm/intervalToDuration/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/intervalToDuration/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIntervalToDurationIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return intervalToDuration;
    });
    /* harmony import */


    var _compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../compareAsc/index.js */
    "./node_modules/date-fns/esm/compareAsc/index.js");
    /* harmony import */


    var _differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../differenceInYears/index.js */
    "./node_modules/date-fns/esm/differenceInYears/index.js");
    /* harmony import */


    var _differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../differenceInMonths/index.js */
    "./node_modules/date-fns/esm/differenceInMonths/index.js");
    /* harmony import */


    var _differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../differenceInDays/index.js */
    "./node_modules/date-fns/esm/differenceInDays/index.js");
    /* harmony import */


    var _differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../differenceInHours/index.js */
    "./node_modules/date-fns/esm/differenceInHours/index.js");
    /* harmony import */


    var _differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../differenceInMinutes/index.js */
    "./node_modules/date-fns/esm/differenceInMinutes/index.js");
    /* harmony import */


    var _differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../differenceInSeconds/index.js */
    "./node_modules/date-fns/esm/differenceInSeconds/index.js");
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _sub_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../sub/index.js */
    "./node_modules/date-fns/esm/sub/index.js");
    /**
     * @name intervalToDuration
     * @category Common Helpers
     * @summary Convert interval to duration
     *
     * @description
     * Convert a interval object to a duration object.
     *
     * @param {Interval} interval - the interval to convert to duration
     *
     * @returns {Duration} The duration Object
     * @throws {TypeError} Requires 2 arguments
     * @throws {RangeError} `start` must not be Invalid Date
     * @throws {RangeError} `end` must not be Invalid Date
     *
     * @example
     * // Get the duration between January 15, 1929 and April 4, 1968.
     * intervalToDuration({
     *   start: new Date(1929, 0, 15, 12, 0, 0),
     *   end: new Date(1968, 3, 4, 19, 5, 0)
     * })
     * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }
     */


    function intervalToDuration(_ref) {
      var start = _ref.start,
          end = _ref.end;
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_8__["default"])(1, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(start);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(end);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(dateLeft)) {
        throw new RangeError('Start Date is invalid');
      }

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(dateRight)) {
        throw new RangeError('End Date is invalid');
      }

      var duration = {
        years: 0,
        months: 0,
        days: 0,
        hours: 0,
        minutes: 0,
        seconds: 0
      };
      var sign = Object(_compareAsc_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateLeft, dateRight);
      duration.years = Math.abs(Object(_differenceInYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dateLeft, dateRight));
      var remainingMonths = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(dateLeft, {
        years: sign * duration.years
      });
      duration.months = Math.abs(Object(_differenceInMonths_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(remainingMonths, dateRight));
      var remainingDays = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingMonths, {
        months: sign * duration.months
      });
      duration.days = Math.abs(Object(_differenceInDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(remainingDays, dateRight));
      var remainingHours = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingDays, {
        days: sign * duration.days
      });
      duration.hours = Math.abs(Object(_differenceInHours_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(remainingHours, dateRight));
      var remainingMinutes = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingHours, {
        hours: sign * duration.hours
      });
      duration.minutes = Math.abs(Object(_differenceInMinutes_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(remainingMinutes, dateRight));
      var remainingSeconds = Object(_sub_index_js__WEBPACK_IMPORTED_MODULE_10__["default"])(remainingMinutes, {
        minutes: sign * duration.minutes
      });
      duration.seconds = Math.abs(Object(_differenceInSeconds_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(remainingSeconds, dateRight));
      return duration;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isAfter/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/isAfter/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsAfterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isAfter;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isAfter
     * @category Common Helpers
     * @summary Is the first date after the second one?
     *
     * @description
     * Is the first date after the second one?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date that should be after the other one to return true
     * @param {Date|Number} dateToCompare - the date to compare with
     * @returns {Boolean} the first date is after the second date
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Is 10 July 1989 after 11 February 1987?
     * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
     * //=> true
     */


    function isAfter(dirtyDate, dirtyDateToCompare) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);
      return date.getTime() > dateToCompare.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isBefore/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/isBefore/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsBeforeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isBefore;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isBefore
     * @category Common Helpers
     * @summary Is the first date before the second one?
     *
     * @description
     * Is the first date before the second one?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date that should be before the other one to return true
     * @param {Date|Number} dateToCompare - the date to compare with
     * @returns {Boolean} the first date is before the second date
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Is 10 July 1989 before 11 February 1987?
     * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
     * //=> false
     */


    function isBefore(dirtyDate, dirtyDateToCompare) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var dateToCompare = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateToCompare);
      return date.getTime() < dateToCompare.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isDate/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/date-fns/esm/isDate/index.js ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsDateIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isDate;
    });
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isDate
     * @category Common Helpers
     * @summary Is the given value a date?
     *
     * @description
     * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {*} value - the value to check
     * @returns {boolean} true if the given value is a date
     * @throws {TypeError} 1 arguments required
     *
     * @example
     * // For a valid date:
     * var result = isDate(new Date())
     * //=> true
     *
     * @example
     * // For an invalid date:
     * var result = isDate(new Date(NaN))
     * //=> true
     *
     * @example
     * // For some value:
     * var result = isDate('2014-02-31')
     * //=> false
     *
     * @example
     * // For an object:
     * var result = isDate({})
     * //=> false
     */


    function isDate(value) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
      return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isEqual/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/isEqual/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsEqualIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isEqual;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isEqual
     * @category Common Helpers
     * @summary Are the given dates equal?
     *
     * @description
     * Are the given dates equal?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to compare
     * @param {Date|Number} dateRight - the second date to compare
     * @returns {Boolean} the dates are equal
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
     * var result = isEqual(
     *   new Date(2014, 6, 2, 6, 30, 45, 0),
     *   new Date(2014, 6, 2, 6, 30, 45, 500)
     * )
     * //=> false
     */


    function isEqual(dirtyLeftDate, dirtyRightDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyLeftDate);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyRightDate);
      return dateLeft.getTime() === dateRight.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isExists/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/isExists/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsExistsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isExists;
    });
    /**
     * @name isExists
     * @category Common Helpers
     * @summary Is the given date exists?
     *
     * @description
     * Checks if the given arguments convert to an existing date.
     *
     * @param {Number} year of the date to check
     * @param {Number} month of the date to check
     * @param {Number} day of the date to check
     * @returns {Boolean} the date exists
     * @throws {TypeError} 3 arguments required
     *
     * @example
     * // For the valid date:
     * var result = isExists(2018, 0, 31)
     * //=> true
     *
     * @example
     * // For the invalid date:
     * var result = isExists(2018, 1, 31)
     * //=> false
     */


    function isExists(year, month, day) {
      if (arguments.length < 3) {
        throw new TypeError('3 argument required, but only ' + arguments.length + ' present');
      }

      var date = new Date(year, month, day);
      return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isFirstDayOfMonth/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/isFirstDayOfMonth/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsFirstDayOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isFirstDayOfMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isFirstDayOfMonth
     * @category Month Helpers
     * @summary Is the given date the first day of a month?
     *
     * @description
     * Is the given date the first day of a month?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is the first day of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 1 September 2014 the first day of a month?
     * var result = isFirstDayOfMonth(new Date(2014, 8, 1))
     * //=> true
     */


    function isFirstDayOfMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDate() === 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isFriday/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/isFriday/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsFridayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isFriday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isFriday
     * @category Weekday Helpers
     * @summary Is the given date Friday?
     *
     * @description
     * Is the given date Friday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Friday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 26 September 2014 Friday?
     * var result = isFriday(new Date(2014, 8, 26))
     * //=> true
     */


    function isFriday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 5;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isFuture/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/isFuture/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsFutureIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isFuture;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isFuture
     * @category Common Helpers
     * @summary Is the given date in the future?
     * @pure false
     *
     * @description
     * Is the given date in the future?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in the future
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 6 October 2014, is 31 December 2014 in the future?
     * var result = isFuture(new Date(2014, 11, 31))
     * //=> true
     */


    function isFuture(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime() > Date.now();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isLastDayOfMonth/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/isLastDayOfMonth/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsLastDayOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isLastDayOfMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _endOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../endOfDay/index.js */
    "./node_modules/date-fns/esm/endOfDay/index.js");
    /* harmony import */


    var _endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../endOfMonth/index.js */
    "./node_modules/date-fns/esm/endOfMonth/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isLastDayOfMonth
     * @category Month Helpers
     * @summary Is the given date the last day of a month?
     *
     * @description
     * Is the given date the last day of a month?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is the last day of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 28 February 2014 the last day of a month?
     * var result = isLastDayOfMonth(new Date(2014, 1, 28))
     * //=> true
     */


    function isLastDayOfMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      return Object(_endOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date).getTime() === Object(_endOfMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date).getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isLeapYear/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isLeapYear/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsLeapYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isLeapYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isLeapYear
     * @category Year Helpers
     * @summary Is the given date in the leap year?
     *
     * @description
     * Is the given date in the leap year?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in the leap year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 1 September 2012 in the leap year?
     * var result = isLeapYear(new Date(2012, 8, 1))
     * //=> true
     */


    function isLeapYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isMonday/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/isMonday/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsMondayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isMonday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isMonday
     * @category Weekday Helpers
     * @summary Is the given date Monday?
     *
     * @description
     * Is the given date Monday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Monday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 22 September 2014 Monday?
     * var result = isMonday(new Date(2014, 8, 22))
     * //=> true
     */


    function isMonday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 1;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isPast/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/date-fns/esm/isPast/index.js ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsPastIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isPast;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isPast
     * @category Common Helpers
     * @summary Is the given date in the past?
     * @pure false
     *
     * @description
     * Is the given date in the past?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in the past
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 6 October 2014, is 2 July 2014 in the past?
     * var result = isPast(new Date(2014, 6, 2))
     * //=> true
     */


    function isPast(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime() < Date.now();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameDay/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameDay/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameDayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameDay;
    });
    /* harmony import */


    var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfDay/index.js */
    "./node_modules/date-fns/esm/startOfDay/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameDay
     * @category Day Helpers
     * @summary Are the given dates in the same day?
     *
     * @description
     * Are the given dates in the same day?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same day
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
     * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
     * //=> true
     */


    function isSameDay(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfDay = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRightStartOfDay = Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameHour/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameHour/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameHourIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameHour;
    });
    /* harmony import */


    var _startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfHour/index.js */
    "./node_modules/date-fns/esm/startOfHour/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameHour
     * @category Hour Helpers
     * @summary Are the given dates in the same hour?
     *
     * @description
     * Are the given dates in the same hour?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same hour
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?
     * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))
     * //=> true
     */


    function isSameHour(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfHour = Object(_startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRightStartOfHour = Object(_startOfHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameISOWeek/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameISOWeek/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameISOWeek;
    });
    /* harmony import */


    var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameWeek/index.js */
    "./node_modules/date-fns/esm/isSameWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameISOWeek
     * @category ISO Week Helpers
     * @summary Are the given dates in the same ISO week?
     *
     * @description
     * Are the given dates in the same ISO week?
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same ISO week
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 1 September 2014 and 7 September 2014 in the same ISO week?
     * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))
     * //=> true
     */


    function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      return Object(_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyDateRight, {
        weekStartsOn: 1
      });
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameISOWeekYear/index.js":
  /*!**************************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameISOWeekYear/index.js ***!
    \**************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameISOWeekYear;
    });
    /* harmony import */


    var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfISOWeekYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameISOWeekYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Are the given dates in the same ISO week-numbering year?
     *
     * @description
     * Are the given dates in the same ISO week-numbering year?
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same ISO week-numbering year
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?
     * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))
     * //=> true
     */


    function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRightStartOfYear = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameMinute/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameMinute/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameMinuteIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameMinute;
    });
    /* harmony import */


    var _startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfMinute/index.js */
    "./node_modules/date-fns/esm/startOfMinute/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameMinute
     * @category Minute Helpers
     * @summary Are the given dates in the same minute?
     *
     * @description
     * Are the given dates in the same minute?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same minute
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15
     * // in the same minute?
     * var result = isSameMinute(
     *   new Date(2014, 8, 4, 6, 30),
     *   new Date(2014, 8, 4, 6, 30, 15)
     * )
     * //=> true
     */


    function isSameMinute(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfMinute = Object(_startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRightStartOfMinute = Object(_startOfMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameMonth/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameMonth/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameMonth
     * @category Month Helpers
     * @summary Are the given dates in the same month?
     *
     * @description
     * Are the given dates in the same month?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same month
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 2 September 2014 and 25 September 2014 in the same month?
     * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
     * //=> true
     */


    function isSameMonth(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameQuarter/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameQuarter/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameQuarter;
    });
    /* harmony import */


    var _startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfQuarter/index.js */
    "./node_modules/date-fns/esm/startOfQuarter/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameQuarter
     * @category Quarter Helpers
     * @summary Are the given dates in the same year quarter?
     *
     * @description
     * Are the given dates in the same year quarter?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same quarter
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 1 January 2014 and 8 March 2014 in the same quarter?
     * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
     * //=> true
     */


    function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRightStartOfQuarter = Object(_startOfQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameSecond/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameSecond/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameSecondIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameSecond;
    });
    /* harmony import */


    var _startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfSecond/index.js */
    "./node_modules/date-fns/esm/startOfSecond/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameSecond
     * @category Second Helpers
     * @summary Are the given dates in the same second?
     *
     * @description
     * Are the given dates in the same second?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same second
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500
     * // in the same second?
     * var result = isSameSecond(
     *   new Date(2014, 8, 4, 6, 30, 15),
     *   new Date(2014, 8, 4, 6, 30, 15, 500)
     * )
     * //=> true
     */


    function isSameSecond(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfSecond = Object(_startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRightStartOfSecond = Object(_startOfSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameWeek/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameWeek/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameWeek;
    });
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameWeek
     * @category Week Helpers
     * @summary Are the given dates in the same week?
     *
     * @description
     * Are the given dates in the same week?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Boolean} the dates are in the same week
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // Are 31 August 2014 and 4 September 2014 in the same week?
     * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))
     * //=> true
     *
     * @example
     * // If week starts with Monday,
     * // are 31 August 2014 and 4 September 2014 in the same week?
     * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {
     *   weekStartsOn: 1
     * })
     * //=> false
     */


    function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeftStartOfWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft, dirtyOptions);
      var dateRightStartOfWeek = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight, dirtyOptions);
      return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSameYear/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isSameYear/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSameYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSameYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSameYear
     * @category Year Helpers
     * @summary Are the given dates in the same year?
     *
     * @description
     * Are the given dates in the same year?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to check
     * @param {Date|Number} dateRight - the second date to check
     * @returns {Boolean} the dates are in the same year
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 2 September 2014 and 25 September 2014 in the same year?
     * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
     * //=> true
     */


    function isSameYear(dirtyDateLeft, dirtyDateRight) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var dateLeft = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateLeft);
      var dateRight = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDateRight);
      return dateLeft.getFullYear() === dateRight.getFullYear();
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSaturday/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isSaturday/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSaturdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSaturday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSaturday
     * @category Weekday Helpers
     * @summary Is the given date Saturday?
     *
     * @description
     * Is the given date Saturday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Saturday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 27 September 2014 Saturday?
     * var result = isSaturday(new Date(2014, 8, 27))
     * //=> true
     */


    function isSaturday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 6;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isSunday/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/isSunday/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsSundayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isSunday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isSunday
     * @category Weekday Helpers
     * @summary Is the given date Sunday?
     *
     * @description
     * Is the given date Sunday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Sunday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 21 September 2014 Sunday?
     * var result = isSunday(new Date(2014, 8, 21))
     * //=> true
     */


    function isSunday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 0;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisHour/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisHour/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisHourIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisHour;
    });
    /* harmony import */


    var _isSameHour_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameHour/index.js */
    "./node_modules/date-fns/esm/isSameHour/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisHour
     * @category Hour Helpers
     * @summary Is the given date in the same hour as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same hour as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this hour
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If now is 25 September 2014 18:30:15.500,
     * // is 25 September 2014 18:00:00 in this hour?
     * var result = isThisHour(new Date(2014, 8, 25, 18))
     * //=> true
     */


    function isThisHour(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameHour_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisISOWeek/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisISOWeek/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisISOWeek;
    });
    /* harmony import */


    var _isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameISOWeek/index.js */
    "./node_modules/date-fns/esm/isSameISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisISOWeek
     * @category ISO Week Helpers
     * @summary Is the given date in the same ISO week as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same ISO week as the current date?
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this ISO week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 25 September 2014, is 22 September 2014 in this ISO week?
     * var result = isThisISOWeek(new Date(2014, 8, 22))
     * //=> true
     */


    function isThisISOWeek(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameISOWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisMinute/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisMinute/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisMinuteIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisMinute;
    });
    /* harmony import */


    var _isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameMinute/index.js */
    "./node_modules/date-fns/esm/isSameMinute/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisMinute
     * @category Minute Helpers
     * @summary Is the given date in the same minute as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same minute as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this minute
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If now is 25 September 2014 18:30:15.500,
     * // is 25 September 2014 18:30:00 in this minute?
     * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))
     * //=> true
     */


    function isThisMinute(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameMinute_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisMonth/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisMonth/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisMonth;
    });
    /* harmony import */


    var _isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameMonth/index.js */
    "./node_modules/date-fns/esm/isSameMonth/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisMonth
     * @category Month Helpers
     * @summary Is the given date in the same month as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same month as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 25 September 2014, is 15 September 2014 in this month?
     * var result = isThisMonth(new Date(2014, 8, 15))
     * //=> true
     */


    function isThisMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameMonth_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisQuarter/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisQuarter/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisQuarter;
    });
    /* harmony import */


    var _isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameQuarter/index.js */
    "./node_modules/date-fns/esm/isSameQuarter/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisQuarter
     * @category Quarter Helpers
     * @summary Is the given date in the same quarter as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same quarter as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this quarter
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 25 September 2014, is 2 July 2014 in this quarter?
     * var result = isThisQuarter(new Date(2014, 6, 2))
     * //=> true
     */


    function isThisQuarter(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameQuarter_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisSecond/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisSecond/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisSecondIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisSecond;
    });
    /* harmony import */


    var _isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameSecond/index.js */
    "./node_modules/date-fns/esm/isSameSecond/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisSecond
     * @category Second Helpers
     * @summary Is the given date in the same second as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same second as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this second
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If now is 25 September 2014 18:30:15.500,
     * // is 25 September 2014 18:30:15.000 in this second?
     * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))
     * //=> true
     */


    function isThisSecond(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameSecond_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), dirtyDate);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisWeek/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisWeek/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisWeek;
    });
    /* harmony import */


    var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameWeek/index.js */
    "./node_modules/date-fns/esm/isSameWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisWeek
     * @category Week Helpers
     * @summary Is the given date in the same week as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same week as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @param {Object} [options] - the object with options
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Boolean} the date is in this week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // If today is 25 September 2014, is 21 September 2014 in this week?
     * var result = isThisWeek(new Date(2014, 8, 21))
     * //=> true
     *
     * @example
     * // If today is 25 September 2014 and week starts with Monday
     * // is 21 September 2014 in this week?
     * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })
     * //=> false
     */


    function isThisWeek(dirtyDate, options) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now(), options);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThisYear/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isThisYear/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThisYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThisYear;
    });
    /* harmony import */


    var _isSameYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameYear/index.js */
    "./node_modules/date-fns/esm/isSameYear/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThisYear
     * @category Year Helpers
     * @summary Is the given date in the same year as the current date?
     * @pure false
     *
     * @description
     * Is the given date in the same year as the current date?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is in this year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 25 September 2014, is 2 July 2014 in this year?
     * var result = isThisYear(new Date(2014, 6, 2))
     * //=> true
     */


    function isThisYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isThursday/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isThursday/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsThursdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isThursday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isThursday
     * @category Weekday Helpers
     * @summary Is the given date Thursday?
     *
     * @description
     * Is the given date Thursday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Thursday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 25 September 2014 Thursday?
     * var result = isThursday(new Date(2014, 8, 25))
     * //=> true
     */


    function isThursday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 4;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isToday/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/isToday/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsTodayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isToday;
    });
    /* harmony import */


    var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameDay/index.js */
    "./node_modules/date-fns/esm/isSameDay/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isToday
     * @category Day Helpers
     * @summary Is the given date today?
     * @pure false
     *
     * @description
     * Is the given date today?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is today
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 6 October 2014, is 6 October 14:00:00 today?
     * var result = isToday(new Date(2014, 9, 6, 14, 0))
     * //=> true
     */


    function isToday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Date.now());
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isTomorrow/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/isTomorrow/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsTomorrowIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isTomorrow;
    });
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../isSameDay/index.js */
    "./node_modules/date-fns/esm/isSameDay/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isTomorrow
     * @category Day Helpers
     * @summary Is the given date tomorrow?
     * @pure false
     *
     * @description
     * Is the given date tomorrow?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is tomorrow
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?
     * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))
     * //=> true
     */


    function isTomorrow(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now(), 1));
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isTuesday/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/isTuesday/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsTuesdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isTuesday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isTuesday
     * @category Weekday Helpers
     * @summary Is the given date Tuesday?
     *
     * @description
     * Is the given date Tuesday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Tuesday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 23 September 2014 Tuesday?
     * var result = isTuesday(new Date(2014, 8, 23))
     * //=> true
     */


    function isTuesday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 2;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isValid/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/isValid/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsValidIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isValid;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isValid
     * @category Common Helpers
     * @summary Is the given date valid?
     *
     * @description
     * Returns false if argument is Invalid Date and true otherwise.
     * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
     * Invalid Date is a Date, whose time value is NaN.
     *
     * Time value of Date: http://es5.github.io/#x15.9.1.1
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - Now `isValid` doesn't throw an exception
     *   if the first argument is not an instance of Date.
     *   Instead, argument is converted beforehand using `toDate`.
     *
     *   Examples:
     *
     *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
     *   |---------------------------|---------------|---------------|
     *   | `new Date()`              | `true`        | `true`        |
     *   | `new Date('2016-01-01')`  | `true`        | `true`        |
     *   | `new Date('')`            | `false`       | `false`       |
     *   | `new Date(1488370835081)` | `true`        | `true`        |
     *   | `new Date(NaN)`           | `false`       | `false`       |
     *   | `'2016-01-01'`            | `TypeError`   | `false`       |
     *   | `''`                      | `TypeError`   | `false`       |
     *   | `1488370835081`           | `TypeError`   | `true`        |
     *   | `NaN`                     | `TypeError`   | `false`       |
     *
     *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
     *   that try to coerce arguments to the expected type
     *   (which is also the case with other *date-fns* functions).
     *
     * @param {*} date - the date to check
     * @returns {Boolean} the date is valid
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // For the valid date:
     * var result = isValid(new Date(2014, 1, 31))
     * //=> true
     *
     * @example
     * // For the value, convertable into a date:
     * var result = isValid(1393804800000)
     * //=> true
     *
     * @example
     * // For the invalid date:
     * var result = isValid(new Date(''))
     * //=> false
     */


    function isValid(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      return !isNaN(date);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isWednesday/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/isWednesday/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsWednesdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isWednesday;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isWednesday
     * @category Weekday Helpers
     * @summary Is the given date Wednesday?
     *
     * @description
     * Is the given date Wednesday?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is Wednesday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Is 24 September 2014 Wednesday?
     * var result = isWednesday(new Date(2014, 8, 24))
     * //=> true
     */


    function isWednesday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getDay() === 3;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isWeekend/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/isWeekend/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsWeekendIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isWeekend;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isWeekend
     * @category Weekday Helpers
     * @summary Does the given date fall on a weekend?
     *
     * @description
     * Does the given date fall on a weekend?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date falls on a weekend
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Does 5 October 2014 fall on a weekend?
     * var result = isWeekend(new Date(2014, 9, 5))
     * //=> true
     */


    function isWeekend(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getDay();
      return day === 0 || day === 6;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isWithinInterval/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/isWithinInterval/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsWithinIntervalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isWithinInterval;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isWithinInterval
     * @category Interval Helpers
     * @summary Is the given date within the interval?
     *
     * @description
     * Is the given date within the interval? (Including start and end.)
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `isWithinRange` to `isWithinInterval`.
     *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
     *
     *   ```
     *   2.1.3
     *   time interval
     *   part of the time axis limited by two instants
     *   ```
     *
     *   Also, this function now accepts an object with `start` and `end` properties
     *   instead of two arguments as an interval.
     *   This function now throws `RangeError` if the start of the interval is after its end
     *   or if any date in the interval is `Invalid Date`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   isWithinRange(
     *     new Date(2014, 0, 3),
     *     new Date(2014, 0, 1), new Date(2014, 0, 7)
     *   )
     *
     *   // v2.0.0 onward
     *
     *   isWithinInterval(
     *     new Date(2014, 0, 3),
     *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }
     *   )
     *   ```
     *
     * @param {Date|Number} date - the date to check
     * @param {Interval} interval - the interval to check
     * @returns {Boolean} the date is within the interval
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // For the date within the interval:
     * isWithinInterval(new Date(2014, 0, 3), {
     *   start: new Date(2014, 0, 1),
     *   end: new Date(2014, 0, 7)
     * })
     * //=> true
     *
     * @example
     * // For the date outside of the interval:
     * isWithinInterval(new Date(2014, 0, 10), {
     *   start: new Date(2014, 0, 1),
     *   end: new Date(2014, 0, 7)
     * })
     * //=> false
     *
     * @example
     * // For date equal to interval start:
     * isWithinInterval(date, { start, end: date }) // => true
     *
     * @example
     * // For date equal to interval end:
     * isWithinInterval(date, { start: date, end }) // => true
     */


    function isWithinInterval(dirtyDate, dirtyInterval) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2, arguments);
      var interval = dirtyInterval || {};
      var time = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate).getTime();
      var startTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.start).getTime();
      var endTime = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startTime <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      return time >= startTime && time <= endTime;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/isYesterday/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/isYesterday/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmIsYesterdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return isYesterday;
    });
    /* harmony import */


    var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../isSameDay/index.js */
    "./node_modules/date-fns/esm/isSameDay/index.js");
    /* harmony import */


    var _subDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../subDays/index.js */
    "./node_modules/date-fns/esm/subDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name isYesterday
     * @category Day Helpers
     * @summary Is the given date yesterday?
     * @pure false
     *
     * @description
     * Is the given date yesterday?
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to check
     * @returns {Boolean} the date is yesterday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?
     * var result = isYesterday(new Date(2014, 9, 5, 14, 0))
     * //=> true
     */


    function isYesterday(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      return Object(_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Date.now(), 1));
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfDecade/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfDecade/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfDecadeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfDecade;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfDecade
     * @category Decade Helpers
     * @summary Return the last day of a decade for the given date.
     *
     * @description
     * Return the last day of a decade for the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the last day of a decade
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The last day of a decade for 21 December 2012 21:12:00:
     * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))
     * //=> Wed Dec 31 2019 00:00:00
     */


    function lastDayOfDecade(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      var decade = 9 + Math.floor(year / 10) * 10;
      date.setFullYear(decade + 1, 0, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfISOWeek/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfISOWeek/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfISOWeek;
    });
    /* harmony import */


    var _lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../lastDayOfWeek/index.js */
    "./node_modules/date-fns/esm/lastDayOfWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfISOWeek
     * @category ISO Week Helpers
     * @summary Return the last day of an ISO week for the given date.
     *
     * @description
     * Return the last day of an ISO week for the given date.
     * The result will be in the local timezone.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the last day of an ISO week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The last day of an ISO week for 2 September 2014 11:55:00:
     * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sun Sep 07 2014 00:00:00
     */


    function lastDayOfISOWeek(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_lastDayOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
        weekStartsOn: 1
      });
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js ***!
    \*****************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfISOWeekYear;
    });
    /* harmony import */


    var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getISOWeekYear/index.js */
    "./node_modules/date-fns/esm/getISOWeekYear/index.js");
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfISOWeekYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Return the last day of an ISO week-numbering year for the given date.
     *
     * @description
     * Return the last day of an ISO week-numbering year,
     * which always starts 3 days before the year's first Thursday.
     * The result will be in the local timezone.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of an ISO week-numbering year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The last day of an ISO week-numbering year for 2 July 2005:
     * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))
     * //=> Sun Jan 01 2006 00:00:00
     */


    function lastDayOfISOWeekYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year + 1, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
      date.setDate(date.getDate() - 1);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfMonth/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfMonth/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfMonth
     * @category Month Helpers
     * @summary Return the last day of a month for the given date.
     *
     * @description
     * Return the last day of a month for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the last day of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The last day of a month for 2 September 2014 11:55:00:
     * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 30 2014 00:00:00
     */


    function lastDayOfMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfQuarter/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfQuarter/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfQuarter;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfQuarter
     * @category Quarter Helpers
     * @summary Return the last day of a year quarter for the given date.
     *
     * @description
     * Return the last day of a year quarter for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
     * @returns {Date} the last day of a quarter
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
     *
     * @example
     * // The last day of a quarter for 2 September 2014 11:55:00:
     * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 30 2014 00:00:00
     */


    function lastDayOfQuarter(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3 + 3;
      date.setMonth(month, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfWeek/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfWeek/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfWeek
     * @category Week Helpers
     * @summary Return the last day of a week for the given date.
     *
     * @description
     * Return the last day of a week for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date} the last day of a week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // The last day of a week for 2 September 2014 11:55:00:
     * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sat Sep 06 2014 00:00:00
     *
     * @example
     * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:
     * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
     * //=> Sun Sep 07 2014 00:00:00
     */


    function lastDayOfWeek(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setHours(0, 0, 0, 0);
      date.setDate(date.getDate() + diff);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lastDayOfYear/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/lastDayOfYear/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLastDayOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lastDayOfYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name lastDayOfYear
     * @category Year Helpers
     * @summary Return the last day of a year for the given date.
     *
     * @description
     * Return the last day of a year for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the last day of a year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The last day of a year for 2 September 2014 11:55:00:
     * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))
     * //=> Wed Dec 31 2014 00:00:00
     */


    function lastDayOfYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      date.setFullYear(year + 1, 0, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/lightFormat/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/lightFormat/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLightFormatIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return lightFormat;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_format_lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/format/lightFormatters/index.js */
    "./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js");
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _isValid_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../isValid/index.js */
    "./node_modules/date-fns/esm/isValid/index.js");
    /* harmony import */


    var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../subMilliseconds/index.js */
    "./node_modules/date-fns/esm/subMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js"); // This RegExp consists of three parts separated by `|`:
    // - (\w)\1* matches any sequences of the same letter
    // - '' matches two quote characters in a row
    // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
    //   except a single quote symbol, which ends the sequence.
    //   Two quote characters do not end the sequence.
    //   If there is no matching single quote
    //   then the sequence will continue until the end of the string.
    // - . matches any single character unmatched by previous parts of the RegExps


    var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    /**
     * @name lightFormat
     * @category Common Helpers
     * @summary Format the date.
     *
     * @description
     * Return the formatted date string in the given format. Unlike `format`,
     * `lightFormat` doesn't use locales and outputs date using the most popular tokens.
     *
     * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.
     * > See: https://git.io/fxCyr
     *
     * The characters wrapped between two single quotes characters (') are escaped.
     * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
     *
     * Format of the string is based on Unicode Technical Standard #35:
     * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
     *
     * Accepted patterns:
     * | Unit                            | Pattern | Result examples                   |
     * |---------------------------------|---------|-----------------------------------|
     * | AM, PM                          | a..aaa  | AM, PM                            |
     * |                                 | aaaa    | a.m., p.m.                        |
     * |                                 | aaaaa   | a, p                              |
     * | Calendar year                   | y       | 44, 1, 1900, 2017                 |
     * |                                 | yy      | 44, 01, 00, 17                    |
     * |                                 | yyy     | 044, 001, 000, 017                |
     * |                                 | yyyy    | 0044, 0001, 1900, 2017            |
     * | Month (formatting)              | M       | 1, 2, ..., 12                     |
     * |                                 | MM      | 01, 02, ..., 12                   |
     * | Day of month                    | d       | 1, 2, ..., 31                     |
     * |                                 | dd      | 01, 02, ..., 31                   |
     * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |
     * |                                 | hh      | 01, 02, ..., 11, 12               |
     * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |
     * |                                 | HH      | 00, 01, 02, ..., 23               |
     * | Minute                          | m       | 0, 1, ..., 59                     |
     * |                                 | mm      | 00, 01, ..., 59                   |
     * | Second                          | s       | 0, 1, ..., 59                     |
     * |                                 | ss      | 00, 01, ..., 59                   |
     * | Fraction of second              | S       | 0, 1, ..., 9                      |
     * |                                 | SS      | 00, 01, ..., 99                   |
     * |                                 | SSS     | 000, 0001, ..., 999               |
     * |                                 | SSSS    | ...                               |
     *
     * @param {Date|Number} date - the original date
     * @param {String} format - the string of tokens
     * @returns {String} the formatted date string
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} format string contains an unescaped latin alphabet character
     *
     * @example
     * var result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')
     * //=> '1987-02-11'
     */

    function lightFormat(dirtyDate, dirtyFormatStr) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(2, arguments);
      var formatStr = String(dirtyFormatStr);
      var originalDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

      if (!Object(_isValid_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(originalDate)) {
        throw new RangeError('Invalid time value');
      } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
      // This ensures that when UTC functions will be implemented, locales will be compatible with them.
      // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


      var timezoneOffset = Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(originalDate);
      var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(originalDate, timezoneOffset);
      var result = formatStr.match(formattingTokensRegExp).map(function (substring) {
        // Replace two single quote characters with one single quote character
        if (substring === "''") {
          return "'";
        }

        var firstCharacter = substring[0];

        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }

        var formatter = _lib_format_lightFormatters_index_js__WEBPACK_IMPORTED_MODULE_1__["default"][firstCharacter];

        if (formatter) {
          return formatter(utcDate, substring, null, {});
        }

        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        }

        return substring;
      }).join('');
      return result;
    }

    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js":
  /*!**************************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js ***!
    \**************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocale_libBuildFormatLongFnIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return buildFormatLongFn;
    });

    function buildFormatLongFn(args) {
      return function (dirtyOptions) {
        var options = dirtyOptions || {};
        var width = options.width ? String(options.width) : args.defaultWidth;
        var format = args.formats[width] || args.formats[args.defaultWidth];
        return format;
      };
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js":
  /*!************************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js ***!
    \************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocale_libBuildLocalizeFnIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return buildLocalizeFn;
    });

    function buildLocalizeFn(args) {
      return function (dirtyIndex, dirtyOptions) {
        var options = dirtyOptions || {};
        var context = options.context ? String(options.context) : 'standalone';
        var valuesArray;

        if (context === 'formatting' && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
          var width = options.width ? String(options.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth;

          var _width = options.width ? String(options.width) : args.defaultWidth;

          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }

        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
        return valuesArray[index];
      };
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js ***!
    \*********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocale_libBuildMatchFnIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return buildMatchFn;
    });

    function buildMatchFn(args) {
      return function (dirtyString, dirtyOptions) {
        var string = String(dirtyString);
        var options = dirtyOptions || {};
        var width = options.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);

        if (!matchResult) {
          return null;
        }

        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var value;

        if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
          value = findIndex(parsePatterns, function (pattern) {
            return pattern.test(matchedString);
          });
        } else {
          value = findKey(parsePatterns, function (pattern) {
            return pattern.test(matchedString);
          });
        }

        value = args.valueCallback ? args.valueCallback(value) : value;
        value = options.valueCallback ? options.valueCallback(value) : value;
        return {
          value: value,
          rest: string.slice(matchedString.length)
        };
      };
    }

    function findKey(object, predicate) {
      for (var key in object) {
        if (object.hasOwnProperty(key) && predicate(object[key])) {
          return key;
        }
      }
    }

    function findIndex(array, predicate) {
      for (var key = 0; key < array.length; key++) {
        if (predicate(array[key])) {
          return key;
        }
      }
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js":
  /*!****************************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js ***!
    \****************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocale_libBuildMatchPatternFnIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return buildMatchPatternFn;
    });

    function buildMatchPatternFn(args) {
      return function (dirtyString, dirtyOptions) {
        var string = String(dirtyString);
        var options = dirtyOptions || {};
        var matchResult = string.match(args.matchPattern);

        if (!matchResult) {
          return null;
        }

        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);

        if (!parseResult) {
          return null;
        }

        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value = options.valueCallback ? options.valueCallback(value) : value;
        return {
          value: value,
          rest: string.slice(matchedString.length)
        };
      };
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocaleEnUS_libFormatDistanceIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatDistance;
    });

    var formatDistanceLocale = {
      lessThanXSeconds: {
        one: 'less than a second',
        other: 'less than {{count}} seconds'
      },
      xSeconds: {
        one: '1 second',
        other: '{{count}} seconds'
      },
      halfAMinute: 'half a minute',
      lessThanXMinutes: {
        one: 'less than a minute',
        other: 'less than {{count}} minutes'
      },
      xMinutes: {
        one: '1 minute',
        other: '{{count}} minutes'
      },
      aboutXHours: {
        one: 'about 1 hour',
        other: 'about {{count}} hours'
      },
      xHours: {
        one: '1 hour',
        other: '{{count}} hours'
      },
      xDays: {
        one: '1 day',
        other: '{{count}} days'
      },
      aboutXWeeks: {
        one: 'about 1 week',
        other: 'about {{count}} weeks'
      },
      xWeeks: {
        one: '1 week',
        other: '{{count}} weeks'
      },
      aboutXMonths: {
        one: 'about 1 month',
        other: 'about {{count}} months'
      },
      xMonths: {
        one: '1 month',
        other: '{{count}} months'
      },
      aboutXYears: {
        one: 'about 1 year',
        other: 'about {{count}} years'
      },
      xYears: {
        one: '1 year',
        other: '{{count}} years'
      },
      overXYears: {
        one: 'over 1 year',
        other: 'over {{count}} years'
      },
      almostXYears: {
        one: 'almost 1 year',
        other: 'almost {{count}} years'
      }
    };

    function formatDistance(token, count, options) {
      options = options || {};
      var result;

      if (typeof formatDistanceLocale[token] === 'string') {
        result = formatDistanceLocale[token];
      } else if (count === 1) {
        result = formatDistanceLocale[token].one;
      } else {
        result = formatDistanceLocale[token].other.replace('{{count}}', count);
      }

      if (options.addSuffix) {
        if (options.comparison > 0) {
          return 'in ' + result;
        } else {
          return result + ' ago';
        }
      }

      return result;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js ***!
    \*************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocaleEnUS_libFormatLongIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../../_lib/buildFormatLongFn/index.js */
    "./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js");

    var dateFormats = {
      full: 'EEEE, MMMM do, y',
      "long": 'MMMM do, y',
      medium: 'MMM d, y',
      "short": 'MM/dd/yyyy'
    };
    var timeFormats = {
      full: 'h:mm:ss a zzzz',
      "long": 'h:mm:ss a z',
      medium: 'h:mm:ss a',
      "short": 'h:mm a'
    };
    var dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      "long": "{{date}} 'at' {{time}}",
      medium: '{{date}}, {{time}}',
      "short": '{{date}}, {{time}}'
    };
    var formatLong = {
      date: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        formats: dateFormats,
        defaultWidth: 'full'
      }),
      time: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        formats: timeFormats,
        defaultWidth: 'full'
      }),
      dateTime: Object(_lib_buildFormatLongFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        formats: dateTimeFormats,
        defaultWidth: 'full'
      })
    };
    /* harmony default export */

    __webpack_exports__["default"] = formatLong;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js ***!
    \*****************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocaleEnUS_libFormatRelativeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return formatRelative;
    });

    var formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: 'P'
    };

    function formatRelative(token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocaleEnUS_libLocalizeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../../_lib/buildLocalizeFn/index.js */
    "./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js");

    var eraValues = {
      narrow: ['B', 'A'],
      abbreviated: ['BC', 'AD'],
      wide: ['Before Christ', 'Anno Domini']
    };
    var quarterValues = {
      narrow: ['1', '2', '3', '4'],
      abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
      wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
      // If you are making a new locale based on this one, check if the same is true for the language you're working on.
      // Generally, formatted dates should look like they are in the middle of a sentence,
      // e.g. in Spanish language the weekdays and months should be in the lowercase.

    };
    var monthValues = {
      narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
      abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
      wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
    };
    var dayValues = {
      narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
      "short": ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
      abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
    };
    var dayPeriodValues = {
      narrow: {
        am: 'a',
        pm: 'p',
        midnight: 'mi',
        noon: 'n',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      },
      abbreviated: {
        am: 'AM',
        pm: 'PM',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      },
      wide: {
        am: 'a.m.',
        pm: 'p.m.',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      }
    };
    var formattingDayPeriodValues = {
      narrow: {
        am: 'a',
        pm: 'p',
        midnight: 'mi',
        noon: 'n',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
      },
      abbreviated: {
        am: 'AM',
        pm: 'PM',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
      },
      wide: {
        am: 'a.m.',
        pm: 'p.m.',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
      }
    };

    function ordinalNumber(dirtyNumber, _dirtyOptions) {
      var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
      // if they are different for different grammatical genders,
      // use `options.unit`:
      //
      //   var options = dirtyOptions || {}
      //   var unit = String(options.unit)
      //
      // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
      // 'day', 'hour', 'minute', 'second'

      var rem100 = number % 100;

      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number + 'st';

          case 2:
            return number + 'nd';

          case 3:
            return number + 'rd';
        }
      }

      return number + 'th';
    }

    var localize = {
      ordinalNumber: ordinalNumber,
      era: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        values: eraValues,
        defaultWidth: 'wide'
      }),
      quarter: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        values: quarterValues,
        defaultWidth: 'wide',
        argumentCallback: function argumentCallback(quarter) {
          return Number(quarter) - 1;
        }
      }),
      month: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        values: monthValues,
        defaultWidth: 'wide'
      }),
      day: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        values: dayValues,
        defaultWidth: 'wide'
      }),
      dayPeriod: Object(_lib_buildLocalizeFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        values: dayPeriodValues,
        defaultWidth: 'wide',
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: 'wide'
      })
    };
    /* harmony default export */

    __webpack_exports__["default"] = localize;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js":
  /*!********************************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js ***!
    \********************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocaleEnUS_libMatchIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../../_lib/buildMatchPatternFn/index.js */
    "./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js");
    /* harmony import */


    var _lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../../_lib/buildMatchFn/index.js */
    "./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js");

    var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
    var parseOrdinalNumberPattern = /\d+/i;
    var matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    var parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    };
    var matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    var parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    var matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    var parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    var matchDayPatterns = {
      narrow: /^[smtwf]/i,
      "short": /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    var parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    var matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    var parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    var match = {
      ordinalNumber: Object(_lib_buildMatchPatternFn_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function valueCallback(value) {
          return parseInt(value, 10);
        }
      }),
      era: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseEraPatterns,
        defaultParseWidth: 'any'
      }),
      quarter: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: 'any',
        valueCallback: function valueCallback(index) {
          return index + 1;
        }
      }),
      month: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: 'any'
      }),
      day: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseDayPatterns,
        defaultParseWidth: 'any'
      }),
      dayPeriod: Object(_lib_buildMatchFn_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: 'any',
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: 'any'
      })
    };
    /* harmony default export */

    __webpack_exports__["default"] = match;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/locale/en-US/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/locale/en-US/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmLocaleEnUSIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./_lib/formatDistance/index.js */
    "./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js");
    /* harmony import */


    var _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./_lib/formatLong/index.js */
    "./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js");
    /* harmony import */


    var _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./_lib/formatRelative/index.js */
    "./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js");
    /* harmony import */


    var _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./_lib/localize/index.js */
    "./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js");
    /* harmony import */


    var _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./_lib/match/index.js */
    "./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js");
    /**
     * @type {Locale}
     * @category Locales
     * @summary English locale (United States).
     * @language English
     * @iso-639-2 eng
     * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
     * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
     */


    var locale = {
      code: 'en-US',
      formatDistance: _lib_formatDistance_index_js__WEBPACK_IMPORTED_MODULE_0__["default"],
      formatLong: _lib_formatLong_index_js__WEBPACK_IMPORTED_MODULE_1__["default"],
      formatRelative: _lib_formatRelative_index_js__WEBPACK_IMPORTED_MODULE_2__["default"],
      localize: _lib_localize_index_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      match: _lib_match_index_js__WEBPACK_IMPORTED_MODULE_4__["default"],
      options: {
        weekStartsOn: 0
        /* Sunday */
        ,
        firstWeekContainsDate: 1
      }
    };
    /* harmony default export */

    __webpack_exports__["default"] = locale;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/max/index.js":
  /*!************************************************!*\
    !*** ./node_modules/date-fns/esm/max/index.js ***!
    \************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmMaxIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return max;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name max
     * @category Common Helpers
     * @summary Return the latest of the given dates.
     *
     * @description
     * Return the latest of the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - `max` function now accepts an array of dates rather than spread arguments.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   var date1 = new Date(1989, 6, 10)
     *   var date2 = new Date(1987, 1, 11)
     *   var maxDate = max(date1, date2)
     *
     *   // v2.0.0 onward:
     *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
     *   var maxDate = max(dates)
     *   ```
     *
     * @param {Date[]|Number[]} datesArray - the dates to compare
     * @returns {Date} the latest of the dates
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which of these dates is the latest?
     * var result = max([
     *   new Date(1989, 6, 10),
     *   new Date(1987, 1, 11),
     *   new Date(1995, 6, 2),
     *   new Date(1990, 0, 1)
     * ])
     * //=> Sun Jul 02 1995 00:00:00
     */


    function max(dirtyDatesArray) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
        datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
      } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        // `dirtyDatesArray` is non-iterable, return Invalid Date
        return new Date(NaN);
      }

      var result;
      datesArray.forEach(function (dirtyDate) {
        var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (result === undefined || result < currentDate || isNaN(currentDate)) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/min/index.js":
  /*!************************************************!*\
    !*** ./node_modules/date-fns/esm/min/index.js ***!
    \************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmMinIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return min;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name min
     * @category Common Helpers
     * @summary Return the earliest of the given dates.
     *
     * @description
     * Return the earliest of the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - `min` function now accepts an array of dates rather than spread arguments.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   var date1 = new Date(1989, 6, 10)
     *   var date2 = new Date(1987, 1, 11)
     *   var minDate = min(date1, date2)
     *
     *   // v2.0.0 onward:
     *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
     *   var minDate = min(dates)
     *   ```
     *
     * @param {Date[]|Number[]} datesArray - the dates to compare
     * @returns {Date} the earliest of the dates
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which of these dates is the earliest?
     * var result = min([
     *   new Date(1989, 6, 10),
     *   new Date(1987, 1, 11),
     *   new Date(1995, 6, 2),
     *   new Date(1990, 0, 1)
     * ])
     * //=> Wed Feb 11 1987 00:00:00
     */


    function min(dirtyDatesArray) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
        datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
      } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        // `dirtyDatesArray` is non-iterable, return Invalid Date
        return new Date(NaN);
      }

      var result;
      datesArray.forEach(function (dirtyDate) {
        var currentDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);

        if (result === undefined || result > currentDate || isNaN(currentDate)) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/parse/_lib/parsers/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/parse/_lib/parsers/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmParse_libParsersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../../_lib/getUTCWeekYear/index.js */
    "./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js");
    /* harmony import */


    var _lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../../_lib/setUTCDay/index.js */
    "./node_modules/date-fns/esm/_lib/setUTCDay/index.js");
    /* harmony import */


    var _lib_setUTCISODay_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../../_lib/setUTCISODay/index.js */
    "./node_modules/date-fns/esm/_lib/setUTCISODay/index.js");
    /* harmony import */


    var _lib_setUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../../_lib/setUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js");
    /* harmony import */


    var _lib_setUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../../_lib/setUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/setUTCWeek/index.js");
    /* harmony import */


    var _lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../../_lib/startOfUTCISOWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js");
    /* harmony import */


    var _lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../../_lib/startOfUTCWeek/index.js */
    "./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js");

    var MILLISECONDS_IN_HOUR = 3600000;
    var MILLISECONDS_IN_MINUTE = 60000;
    var MILLISECONDS_IN_SECOND = 1000;
    var numericPatterns = {
      month: /^(1[0-2]|0?\d)/,
      // 0 to 12
      date: /^(3[0-1]|[0-2]?\d)/,
      // 0 to 31
      dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
      // 0 to 366
      week: /^(5[0-3]|[0-4]?\d)/,
      // 0 to 53
      hour23h: /^(2[0-3]|[0-1]?\d)/,
      // 0 to 23
      hour24h: /^(2[0-4]|[0-1]?\d)/,
      // 0 to 24
      hour11h: /^(1[0-1]|0?\d)/,
      // 0 to 11
      hour12h: /^(1[0-2]|0?\d)/,
      // 0 to 12
      minute: /^[0-5]?\d/,
      // 0 to 59
      second: /^[0-5]?\d/,
      // 0 to 59
      singleDigit: /^\d/,
      // 0 to 9
      twoDigits: /^\d{1,2}/,
      // 0 to 99
      threeDigits: /^\d{1,3}/,
      // 0 to 999
      fourDigits: /^\d{1,4}/,
      // 0 to 9999
      anyDigitsSigned: /^-?\d+/,
      singleDigitSigned: /^-?\d/,
      // 0 to 9, -0 to -9
      twoDigitsSigned: /^-?\d{1,2}/,
      // 0 to 99, -0 to -99
      threeDigitsSigned: /^-?\d{1,3}/,
      // 0 to 999, -0 to -999
      fourDigitsSigned: /^-?\d{1,4}/ // 0 to 9999, -0 to -9999

    };
    var timezonePatterns = {
      basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
      basic: /^([+-])(\d{2})(\d{2})|Z/,
      basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
      extended: /^([+-])(\d{2}):(\d{2})|Z/,
      extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
    };

    function parseNumericPattern(pattern, string, valueCallback) {
      var matchResult = string.match(pattern);

      if (!matchResult) {
        return null;
      }

      var value = parseInt(matchResult[0], 10);
      return {
        value: valueCallback ? valueCallback(value) : value,
        rest: string.slice(matchResult[0].length)
      };
    }

    function parseTimezonePattern(pattern, string) {
      var matchResult = string.match(pattern);

      if (!matchResult) {
        return null;
      } // Input is 'Z'


      if (matchResult[0] === 'Z') {
        return {
          value: 0,
          rest: string.slice(1)
        };
      }

      var sign = matchResult[1] === '+' ? 1 : -1;
      var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
      var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
      var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
      return {
        value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),
        rest: string.slice(matchResult[0].length)
      };
    }

    function parseAnyDigitsSigned(string, valueCallback) {
      return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);
    }

    function parseNDigits(n, string, valueCallback) {
      switch (n) {
        case 1:
          return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);

        case 2:
          return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);

        case 3:
          return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);

        case 4:
          return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);

        default:
          return parseNumericPattern(new RegExp('^\\d{1,' + n + '}'), string, valueCallback);
      }
    }

    function parseNDigitsSigned(n, string, valueCallback) {
      switch (n) {
        case 1:
          return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);

        case 2:
          return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);

        case 3:
          return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);

        case 4:
          return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);

        default:
          return parseNumericPattern(new RegExp('^-?\\d{1,' + n + '}'), string, valueCallback);
      }
    }

    function dayPeriodEnumToHours(enumValue) {
      switch (enumValue) {
        case 'morning':
          return 4;

        case 'evening':
          return 17;

        case 'pm':
        case 'noon':
        case 'afternoon':
          return 12;

        case 'am':
        case 'midnight':
        case 'night':
        default:
          return 0;
      }
    }

    function normalizeTwoDigitYear(twoDigitYear, currentYear) {
      var isCommonEra = currentYear > 0; // Absolute number of the current year:
      // 1 -> 1 AC
      // 0 -> 1 BC
      // -1 -> 2 BC

      var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
      var result;

      if (absCurrentYear <= 50) {
        result = twoDigitYear || 100;
      } else {
        var rangeEnd = absCurrentYear + 50;
        var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
        var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
        result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
      }

      return isCommonEra ? result : 1 - result;
    }

    var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
    var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation

    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
    }
    /*
     * |     | Unit                           |     | Unit                           |
     * |-----|--------------------------------|-----|--------------------------------|
     * |  a  | AM, PM                         |  A* | Milliseconds in day            |
     * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
     * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
     * |  d  | Day of month                   |  D  | Day of year                    |
     * |  e  | Local day of week              |  E  | Day of week                    |
     * |  f  |                                |  F* | Day of week in month           |
     * |  g* | Modified Julian day            |  G  | Era                            |
     * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
     * |  i! | ISO day of week                |  I! | ISO week of year               |
     * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
     * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
     * |  l* | (deprecated)                   |  L  | Stand-alone month              |
     * |  m  | Minute                         |  M  | Month                          |
     * |  n  |                                |  N  |                                |
     * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
     * |  p  |                                |  P  |                                |
     * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
     * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
     * |  s  | Second                         |  S  | Fraction of second             |
     * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
     * |  u  | Extended year                  |  U* | Cyclic year                    |
     * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
     * |  w  | Local week of year             |  W* | Week of month                  |
     * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
     * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
     * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
     *
     * Letters marked by * are not implemented but reserved by Unicode standard.
     *
     * Letters marked by ! are non-standard, but implemented by date-fns:
     * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
     * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
     *   i.e. 7 for Sunday, 1 for Monday, etc.
     * - `I` is ISO week of year, as opposed to `w` which is local week of year.
     * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
     *   `R` is supposed to be used in conjunction with `I` and `i`
     *   for universal ISO week-numbering date, whereas
     *   `Y` is supposed to be used in conjunction with `w` and `e`
     *   for week-numbering date specific to the locale.
     */


    var parsers = {
      // Era
      G: {
        priority: 140,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            // AD, BC
            case 'G':
            case 'GG':
            case 'GGG':
              return match.era(string, {
                width: 'abbreviated'
              }) || match.era(string, {
                width: 'narrow'
              });
            // A, B

            case 'GGGGG':
              return match.era(string, {
                width: 'narrow'
              });
            // Anno Domini, Before Christ

            case 'GGGG':
            default:
              return match.era(string, {
                width: 'wide'
              }) || match.era(string, {
                width: 'abbreviated'
              }) || match.era(string, {
                width: 'narrow'
              });
          }
        },
        set: function set(date, flags, value, _options) {
          flags.era = value;
          date.setUTCFullYear(value, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['R', 'u', 't', 'T']
      },
      // Year
      y: {
        // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
        // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
        // |----------|-------|----|-------|-------|-------|
        // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
        // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
        // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
        // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
        // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
        priority: 130,
        parse: function parse(string, token, match, _options) {
          var valueCallback = function valueCallback(year) {
            return {
              year: year,
              isTwoDigitYear: token === 'yy'
            };
          };

          switch (token) {
            case 'y':
              return parseNDigits(4, string, valueCallback);

            case 'yo':
              return match.ordinalNumber(string, {
                unit: 'year',
                valueCallback: valueCallback
              });

            default:
              return parseNDigits(token.length, string, valueCallback);
          }
        },
        validate: function validate(_date, value, _options) {
          return value.isTwoDigitYear || value.year > 0;
        },
        set: function set(date, flags, value, _options) {
          var currentYear = date.getUTCFullYear();

          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
            date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
            date.setUTCHours(0, 0, 0, 0);
            return date;
          }

          var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
          date.setUTCFullYear(year, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']
      },
      // Local week-numbering year
      Y: {
        priority: 130,
        parse: function parse(string, token, match, _options) {
          var valueCallback = function valueCallback(year) {
            return {
              year: year,
              isTwoDigitYear: token === 'YY'
            };
          };

          switch (token) {
            case 'Y':
              return parseNDigits(4, string, valueCallback);

            case 'Yo':
              return match.ordinalNumber(string, {
                unit: 'year',
                valueCallback: valueCallback
              });

            default:
              return parseNDigits(token.length, string, valueCallback);
          }
        },
        validate: function validate(_date, value, _options) {
          return value.isTwoDigitYear || value.year > 0;
        },
        set: function set(date, flags, value, options) {
          var currentYear = Object(_lib_getUTCWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, options);

          if (value.isTwoDigitYear) {
            var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
            date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
            date.setUTCHours(0, 0, 0, 0);
            return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date, options);
          }

          var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;
          date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
          date.setUTCHours(0, 0, 0, 0);
          return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(date, options);
        },
        incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']
      },
      // ISO week-numbering year
      R: {
        priority: 130,
        parse: function parse(string, token, _match, _options) {
          if (token === 'R') {
            return parseNDigitsSigned(4, string);
          }

          return parseNDigitsSigned(token.length, string);
        },
        set: function set(_date, _flags, value, _options) {
          var firstWeekOfYear = new Date(0);
          firstWeekOfYear.setUTCFullYear(value, 0, 4);
          firstWeekOfYear.setUTCHours(0, 0, 0, 0);
          return Object(_lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(firstWeekOfYear);
        },
        incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']
      },
      // Extended year
      u: {
        priority: 130,
        parse: function parse(string, token, _match, _options) {
          if (token === 'u') {
            return parseNDigitsSigned(4, string);
          }

          return parseNDigitsSigned(token.length, string);
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCFullYear(value, 0, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']
      },
      // Quarter
      Q: {
        priority: 120,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            // 1, 2, 3, 4
            case 'Q':
            case 'QQ':
              // 01, 02, 03, 04
              return parseNDigits(token.length, string);
            // 1st, 2nd, 3rd, 4th

            case 'Qo':
              return match.ordinalNumber(string, {
                unit: 'quarter'
              });
            // Q1, Q2, Q3, Q4

            case 'QQQ':
              return match.quarter(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.quarter(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)

            case 'QQQQQ':
              return match.quarter(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // 1st quarter, 2nd quarter, ...

            case 'QQQQ':
            default:
              return match.quarter(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.quarter(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.quarter(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 4;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMonth((value - 1) * 3, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']
      },
      // Stand-alone quarter
      q: {
        priority: 120,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            // 1, 2, 3, 4
            case 'q':
            case 'qq':
              // 01, 02, 03, 04
              return parseNDigits(token.length, string);
            // 1st, 2nd, 3rd, 4th

            case 'qo':
              return match.ordinalNumber(string, {
                unit: 'quarter'
              });
            // Q1, Q2, Q3, Q4

            case 'qqq':
              return match.quarter(string, {
                width: 'abbreviated',
                context: 'standalone'
              }) || match.quarter(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // 1, 2, 3, 4 (narrow quarter; could be not numerical)

            case 'qqqqq':
              return match.quarter(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // 1st quarter, 2nd quarter, ...

            case 'qqqq':
            default:
              return match.quarter(string, {
                width: 'wide',
                context: 'standalone'
              }) || match.quarter(string, {
                width: 'abbreviated',
                context: 'standalone'
              }) || match.quarter(string, {
                width: 'narrow',
                context: 'standalone'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 4;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMonth((value - 1) * 3, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']
      },
      // Month
      M: {
        priority: 110,
        parse: function parse(string, token, match, _options) {
          var valueCallback = function valueCallback(value) {
            return value - 1;
          };

          switch (token) {
            // 1, 2, ..., 12
            case 'M':
              return parseNumericPattern(numericPatterns.month, string, valueCallback);
            // 01, 02, ..., 12

            case 'MM':
              return parseNDigits(2, string, valueCallback);
            // 1st, 2nd, ..., 12th

            case 'Mo':
              return match.ordinalNumber(string, {
                unit: 'month',
                valueCallback: valueCallback
              });
            // Jan, Feb, ..., Dec

            case 'MMM':
              return match.month(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.month(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // J, F, ..., D

            case 'MMMMM':
              return match.month(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // January, February, ..., December

            case 'MMMM':
            default:
              return match.month(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.month(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.month(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMonth(value, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
      },
      // Stand-alone month
      L: {
        priority: 110,
        parse: function parse(string, token, match, _options) {
          var valueCallback = function valueCallback(value) {
            return value - 1;
          };

          switch (token) {
            // 1, 2, ..., 12
            case 'L':
              return parseNumericPattern(numericPatterns.month, string, valueCallback);
            // 01, 02, ..., 12

            case 'LL':
              return parseNDigits(2, string, valueCallback);
            // 1st, 2nd, ..., 12th

            case 'Lo':
              return match.ordinalNumber(string, {
                unit: 'month',
                valueCallback: valueCallback
              });
            // Jan, Feb, ..., Dec

            case 'LLL':
              return match.month(string, {
                width: 'abbreviated',
                context: 'standalone'
              }) || match.month(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // J, F, ..., D

            case 'LLLLL':
              return match.month(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // January, February, ..., December

            case 'LLLL':
            default:
              return match.month(string, {
                width: 'wide',
                context: 'standalone'
              }) || match.month(string, {
                width: 'abbreviated',
                context: 'standalone'
              }) || match.month(string, {
                width: 'narrow',
                context: 'standalone'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMonth(value, 1);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
      },
      // Local week of year
      w: {
        priority: 100,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'w':
              return parseNumericPattern(numericPatterns.week, string);

            case 'wo':
              return match.ordinalNumber(string, {
                unit: 'week'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 53;
        },
        set: function set(date, _flags, value, options) {
          return Object(_lib_startOfUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_6__["default"])(Object(_lib_setUTCWeek_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(date, value, options), options);
        },
        incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']
      },
      // ISO week of year
      I: {
        priority: 100,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'I':
              return parseNumericPattern(numericPatterns.week, string);

            case 'Io':
              return match.ordinalNumber(string, {
                unit: 'week'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 53;
        },
        set: function set(date, _flags, value, options) {
          return Object(_lib_startOfUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(Object(_lib_setUTCISOWeek_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, value, options), options);
        },
        incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']
      },
      // Day of the month
      d: {
        priority: 90,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'd':
              return parseNumericPattern(numericPatterns.date, string);

            case 'do':
              return match.ordinalNumber(string, {
                unit: 'date'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(date, value, _options) {
          var year = date.getUTCFullYear();
          var isLeapYear = isLeapYearIndex(year);
          var month = date.getUTCMonth();

          if (isLeapYear) {
            return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
          } else {
            return value >= 1 && value <= DAYS_IN_MONTH[month];
          }
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCDate(value);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']
      },
      // Day of year
      D: {
        priority: 90,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'D':
            case 'DD':
              return parseNumericPattern(numericPatterns.dayOfYear, string);

            case 'Do':
              return match.ordinalNumber(string, {
                unit: 'date'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(date, value, _options) {
          var year = date.getUTCFullYear();
          var isLeapYear = isLeapYearIndex(year);

          if (isLeapYear) {
            return value >= 1 && value <= 366;
          } else {
            return value >= 1 && value <= 365;
          }
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMonth(0, value);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']
      },
      // Day of week
      E: {
        priority: 90,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            // Tue
            case 'E':
            case 'EE':
            case 'EEE':
              return match.day(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.day(string, {
                width: 'short',
                context: 'formatting'
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // T

            case 'EEEEE':
              return match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'EEEEEE':
              return match.day(string, {
                width: 'short',
                context: 'formatting'
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tuesday

            case 'EEEE':
            default:
              return match.day(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.day(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.day(string, {
                width: 'short',
                context: 'formatting'
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function set(date, _flags, value, options) {
          date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']
      },
      // Local day of week
      e: {
        priority: 90,
        parse: function parse(string, token, match, options) {
          var valueCallback = function valueCallback(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
          };

          switch (token) {
            // 3
            case 'e':
            case 'ee':
              // 03
              return parseNDigits(token.length, string, valueCallback);
            // 3rd

            case 'eo':
              return match.ordinalNumber(string, {
                unit: 'day',
                valueCallback: valueCallback
              });
            // Tue

            case 'eee':
              return match.day(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.day(string, {
                width: 'short',
                context: 'formatting'
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // T

            case 'eeeee':
              return match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tu

            case 'eeeeee':
              return match.day(string, {
                width: 'short',
                context: 'formatting'
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
            // Tuesday

            case 'eeee':
            default:
              return match.day(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.day(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.day(string, {
                width: 'short',
                context: 'formatting'
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function set(date, _flags, value, options) {
          date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']
      },
      // Stand-alone local day of week
      c: {
        priority: 90,
        parse: function parse(string, token, match, options) {
          var valueCallback = function valueCallback(value) {
            var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
            return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
          };

          switch (token) {
            // 3
            case 'c':
            case 'cc':
              // 03
              return parseNDigits(token.length, string, valueCallback);
            // 3rd

            case 'co':
              return match.ordinalNumber(string, {
                unit: 'day',
                valueCallback: valueCallback
              });
            // Tue

            case 'ccc':
              return match.day(string, {
                width: 'abbreviated',
                context: 'standalone'
              }) || match.day(string, {
                width: 'short',
                context: 'standalone'
              }) || match.day(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // T

            case 'ccccc':
              return match.day(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // Tu

            case 'cccccc':
              return match.day(string, {
                width: 'short',
                context: 'standalone'
              }) || match.day(string, {
                width: 'narrow',
                context: 'standalone'
              });
            // Tuesday

            case 'cccc':
            default:
              return match.day(string, {
                width: 'wide',
                context: 'standalone'
              }) || match.day(string, {
                width: 'abbreviated',
                context: 'standalone'
              }) || match.day(string, {
                width: 'short',
                context: 'standalone'
              }) || match.day(string, {
                width: 'narrow',
                context: 'standalone'
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 6;
        },
        set: function set(date, _flags, value, options) {
          date = Object(_lib_setUTCDay_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, value, options);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']
      },
      // ISO day of week
      i: {
        priority: 90,
        parse: function parse(string, token, match, _options) {
          var valueCallback = function valueCallback(value) {
            if (value === 0) {
              return 7;
            }

            return value;
          };

          switch (token) {
            // 2
            case 'i':
            case 'ii':
              // 02
              return parseNDigits(token.length, string);
            // 2nd

            case 'io':
              return match.ordinalNumber(string, {
                unit: 'day'
              });
            // Tue

            case 'iii':
              return match.day(string, {
                width: 'abbreviated',
                context: 'formatting',
                valueCallback: valueCallback
              }) || match.day(string, {
                width: 'short',
                context: 'formatting',
                valueCallback: valueCallback
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting',
                valueCallback: valueCallback
              });
            // T

            case 'iiiii':
              return match.day(string, {
                width: 'narrow',
                context: 'formatting',
                valueCallback: valueCallback
              });
            // Tu

            case 'iiiiii':
              return match.day(string, {
                width: 'short',
                context: 'formatting',
                valueCallback: valueCallback
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting',
                valueCallback: valueCallback
              });
            // Tuesday

            case 'iiii':
            default:
              return match.day(string, {
                width: 'wide',
                context: 'formatting',
                valueCallback: valueCallback
              }) || match.day(string, {
                width: 'abbreviated',
                context: 'formatting',
                valueCallback: valueCallback
              }) || match.day(string, {
                width: 'short',
                context: 'formatting',
                valueCallback: valueCallback
              }) || match.day(string, {
                width: 'narrow',
                context: 'formatting',
                valueCallback: valueCallback
              });
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 7;
        },
        set: function set(date, _flags, value, options) {
          date = Object(_lib_setUTCISODay_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, value, options);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']
      },
      // AM or PM
      a: {
        priority: 80,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'a':
            case 'aa':
            case 'aaa':
              return match.dayPeriod(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'aaaaa':
              return match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'aaaa':
            default:
              return match.dayPeriod(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']
      },
      // AM, PM, midnight
      b: {
        priority: 80,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'b':
            case 'bb':
            case 'bbb':
              return match.dayPeriod(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'bbbbb':
              return match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'bbbb':
            default:
              return match.dayPeriod(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']
      },
      // in the morning, in the afternoon, in the evening, at night
      B: {
        priority: 80,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'B':
            case 'BB':
            case 'BBB':
              return match.dayPeriod(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'BBBBB':
              return match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });

            case 'BBBB':
            default:
              return match.dayPeriod(string, {
                width: 'wide',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'abbreviated',
                context: 'formatting'
              }) || match.dayPeriod(string, {
                width: 'narrow',
                context: 'formatting'
              });
          }
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['a', 'b', 't', 'T']
      },
      // Hour [1-12]
      h: {
        priority: 70,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'h':
              return parseNumericPattern(numericPatterns.hour12h, string);

            case 'ho':
              return match.ordinalNumber(string, {
                unit: 'hour'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 12;
        },
        set: function set(date, _flags, value, _options) {
          var isPM = date.getUTCHours() >= 12;

          if (isPM && value < 12) {
            date.setUTCHours(value + 12, 0, 0, 0);
          } else if (!isPM && value === 12) {
            date.setUTCHours(0, 0, 0, 0);
          } else {
            date.setUTCHours(value, 0, 0, 0);
          }

          return date;
        },
        incompatibleTokens: ['H', 'K', 'k', 't', 'T']
      },
      // Hour [0-23]
      H: {
        priority: 70,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'H':
              return parseNumericPattern(numericPatterns.hour23h, string);

            case 'Ho':
              return match.ordinalNumber(string, {
                unit: 'hour'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 23;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCHours(value, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']
      },
      // Hour [0-11]
      K: {
        priority: 70,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'K':
              return parseNumericPattern(numericPatterns.hour11h, string);

            case 'Ko':
              return match.ordinalNumber(string, {
                unit: 'hour'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 11;
        },
        set: function set(date, _flags, value, _options) {
          var isPM = date.getUTCHours() >= 12;

          if (isPM && value < 12) {
            date.setUTCHours(value + 12, 0, 0, 0);
          } else {
            date.setUTCHours(value, 0, 0, 0);
          }

          return date;
        },
        incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']
      },
      // Hour [1-24]
      k: {
        priority: 70,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'k':
              return parseNumericPattern(numericPatterns.hour24h, string);

            case 'ko':
              return match.ordinalNumber(string, {
                unit: 'hour'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 1 && value <= 24;
        },
        set: function set(date, _flags, value, _options) {
          var hours = value <= 24 ? value % 24 : value;
          date.setUTCHours(hours, 0, 0, 0);
          return date;
        },
        incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']
      },
      // Minute
      m: {
        priority: 60,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 'm':
              return parseNumericPattern(numericPatterns.minute, string);

            case 'mo':
              return match.ordinalNumber(string, {
                unit: 'minute'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 59;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMinutes(value, 0, 0);
          return date;
        },
        incompatibleTokens: ['t', 'T']
      },
      // Second
      s: {
        priority: 50,
        parse: function parse(string, token, match, _options) {
          switch (token) {
            case 's':
              return parseNumericPattern(numericPatterns.second, string);

            case 'so':
              return match.ordinalNumber(string, {
                unit: 'second'
              });

            default:
              return parseNDigits(token.length, string);
          }
        },
        validate: function validate(_date, value, _options) {
          return value >= 0 && value <= 59;
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCSeconds(value, 0);
          return date;
        },
        incompatibleTokens: ['t', 'T']
      },
      // Fraction of second
      S: {
        priority: 30,
        parse: function parse(string, token, _match, _options) {
          var valueCallback = function valueCallback(value) {
            return Math.floor(value * Math.pow(10, -token.length + 3));
          };

          return parseNDigits(token.length, string, valueCallback);
        },
        set: function set(date, _flags, value, _options) {
          date.setUTCMilliseconds(value);
          return date;
        },
        incompatibleTokens: ['t', 'T']
      },
      // Timezone (ISO-8601. +00:00 is `'Z'`)
      X: {
        priority: 10,
        parse: function parse(string, token, _match, _options) {
          switch (token) {
            case 'X':
              return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

            case 'XX':
              return parseTimezonePattern(timezonePatterns.basic, string);

            case 'XXXX':
              return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

            case 'XXXXX':
              return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

            case 'XXX':
            default:
              return parseTimezonePattern(timezonePatterns.extended, string);
          }
        },
        set: function set(date, flags, value, _options) {
          if (flags.timestampIsSet) {
            return date;
          }

          return new Date(date.getTime() - value);
        },
        incompatibleTokens: ['t', 'T', 'x']
      },
      // Timezone (ISO-8601)
      x: {
        priority: 10,
        parse: function parse(string, token, _match, _options) {
          switch (token) {
            case 'x':
              return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);

            case 'xx':
              return parseTimezonePattern(timezonePatterns.basic, string);

            case 'xxxx':
              return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);

            case 'xxxxx':
              return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);

            case 'xxx':
            default:
              return parseTimezonePattern(timezonePatterns.extended, string);
          }
        },
        set: function set(date, flags, value, _options) {
          if (flags.timestampIsSet) {
            return date;
          }

          return new Date(date.getTime() - value);
        },
        incompatibleTokens: ['t', 'T', 'X']
      },
      // Seconds timestamp
      t: {
        priority: 40,
        parse: function parse(string, _token, _match, _options) {
          return parseAnyDigitsSigned(string);
        },
        set: function set(_date, _flags, value, _options) {
          return [new Date(value * 1000), {
            timestampIsSet: true
          }];
        },
        incompatibleTokens: '*'
      },
      // Milliseconds timestamp
      T: {
        priority: 20,
        parse: function parse(string, _token, _match, _options) {
          return parseAnyDigitsSigned(string);
        },
        set: function set(_date, _flags, value, _options) {
          return [new Date(value), {
            timestampIsSet: true
          }];
        },
        incompatibleTokens: '*'
      }
    };
    /* harmony default export */

    __webpack_exports__["default"] = parsers;
    /***/
  },

  /***/
  "./node_modules/date-fns/esm/parse/index.js":
  /*!**************************************************!*\
    !*** ./node_modules/date-fns/esm/parse/index.js ***!
    \**************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmParseIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return parse;
    });
    /* harmony import */


    var _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../locale/en-US/index.js */
    "./node_modules/date-fns/esm/locale/en-US/index.js");
    /* harmony import */


    var _subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../subMilliseconds/index.js */
    "./node_modules/date-fns/esm/subMilliseconds/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_assign_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/assign/index.js */
    "./node_modules/date-fns/esm/_lib/assign/index.js");
    /* harmony import */


    var _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/format/longFormatters/index.js */
    "./node_modules/date-fns/esm/_lib/format/longFormatters/index.js");
    /* harmony import */


    var _lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../_lib/getTimezoneOffsetInMilliseconds/index.js */
    "./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js");
    /* harmony import */


    var _lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../_lib/protectedTokens/index.js */
    "./node_modules/date-fns/esm/_lib/protectedTokens/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_parsers_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./_lib/parsers/index.js */
    "./node_modules/date-fns/esm/parse/_lib/parsers/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:
    // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
    //   (one of the certain letters followed by `o`)
    // - (\w)\1* matches any sequences of the same letter
    // - '' matches two quote characters in a row
    // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
    //   except a single quote symbol, which ends the sequence.
    //   Two quote characters do not end the sequence.
    //   If there is no matching single quote
    //   then the sequence will continue until the end of the string.
    // - . matches any single character unmatched by previous parts of the RegExps

    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
    // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var notWhitespaceRegExp = /\S/;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    /**
     * @name parse
     * @category Common Helpers
     * @summary Parse the date.
     *
     * @description
     * Return the date parsed from string using the given format string.
     *
     * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
     * > See: https://git.io/fxCyr
     *
     * The characters in the format string wrapped between two single quotes characters (') are escaped.
     * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
     *
     * Format of the format string is based on Unicode Technical Standard #35:
     * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
     * with a few additions (see note 5 below the table).
     *
     * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
     * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
     *
     * ```javascript
     * parse('23 AM', 'HH a', new Date())
     * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
     * ```
     *
     * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
     *
     * Accepted format string patterns:
     * | Unit                            |Prior| Pattern | Result examples                   | Notes |
     * |---------------------------------|-----|---------|-----------------------------------|-------|
     * | Era                             | 140 | G..GGG  | AD, BC                            |       |
     * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
     * |                                 |     | GGGGG   | A, B                              |       |
     * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
     * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
     * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
     * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
     * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
     * |                                 |     | yyyyy   | ...                               | 2,4   |
     * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
     * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
     * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
     * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
     * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
     * |                                 |     | YYYYY   | ...                               | 2,4   |
     * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
     * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
     * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
     * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
     * |                                 |     | RRRRR   | ...                               | 2,4,5 |
     * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
     * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
     * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
     * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
     * |                                 |     | uuuuu   | ...                               | 2,4   |
     * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
     * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
     * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
     * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
     * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
     * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
     * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
     * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
     * |                                 |     | qq      | 01, 02, 03, 04                    |       |
     * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
     * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
     * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
     * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
     * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
     * |                                 |     | MM      | 01, 02, ..., 12                   |       |
     * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
     * |                                 |     | MMMM    | January, February, ..., December  | 2     |
     * |                                 |     | MMMMM   | J, F, ..., D                      |       |
     * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
     * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
     * |                                 |     | LL      | 01, 02, ..., 12                   |       |
     * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
     * |                                 |     | LLLL    | January, February, ..., December  | 2     |
     * |                                 |     | LLLLL   | J, F, ..., D                      |       |
     * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
     * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
     * |                                 |     | ww      | 01, 02, ..., 53                   |       |
     * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
     * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
     * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
     * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
     * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
     * |                                 |     | dd      | 01, 02, ..., 31                   |       |
     * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
     * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
     * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
     * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
     * |                                 |     | DDDD    | ...                               | 2     |
     * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
     * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
     * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
     * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
     * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
     * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
     * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
     * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
     * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
     * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
     * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
     * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
     * |                                 |     | ee      | 02, 03, ..., 01                   |       |
     * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
     * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
     * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
     * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
     * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
     * |                                 |     | cc      | 02, 03, ..., 01                   |       |
     * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
     * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
     * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
     * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
     * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
     * |                                 |     | aaaaa   | a, p                              |       |
     * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
     * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
     * |                                 |     | bbbbb   | a, p, n, mi                       |       |
     * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
     * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
     * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
     * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
     * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
     * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
     * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
     * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
     * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
     * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
     * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
     * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
     * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
     * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
     * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
     * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
     * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
     * |                                 |     | mm      | 00, 01, ..., 59                   |       |
     * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
     * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
     * |                                 |     | ss      | 00, 01, ..., 59                   |       |
     * | Seconds timestamp               |  40 | t       | 512969520                         |       |
     * |                                 |     | tt      | ...                               | 2     |
     * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
     * |                                 |     | SS      | 00, 01, ..., 99                   |       |
     * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
     * |                                 |     | SSSS    | ...                               | 2     |
     * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
     * |                                 |     | TT      | ...                               | 2     |
     * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
     * |                                 |     | XX      | -0800, +0530, Z                   |       |
     * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
     * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
     * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
     * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
     * |                                 |     | xx      | -0800, +0530, +0000               |       |
     * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
     * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
     * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
     * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
     * |                                 |     | PP      | May 29, 1453                      |       |
     * |                                 |     | PPP     | May 29th, 1453                    |       |
     * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
     * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
     * |                                 |     | pp      | 12:00:00 AM                       |       |
     * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
     * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
     * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
     * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
     * Notes:
     * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
     *    are the same as "stand-alone" units, but are different in some languages.
     *    "Formatting" units are declined according to the rules of the language
     *    in the context of a date. "Stand-alone" units are always nominative singular.
     *    In `format` function, they will produce different result:
     *
     *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
     *
     *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
     *
     *    `parse` will try to match both formatting and stand-alone units interchangably.
     *
     * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
     *    the single quote characters (see below).
     *    If the sequence is longer than listed in table:
     *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
     *      as wide as the sequence
     *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
     *      These variations are marked with "2" in the last column of the table.
     *
     * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
     *    These tokens represent the shortest form of the quarter.
     *
     * 4. The main difference between `y` and `u` patterns are B.C. years:
     *
     *    | Year | `y` | `u` |
     *    |------|-----|-----|
     *    | AC 1 |   1 |   1 |
     *    | BC 1 |   1 |   0 |
     *    | BC 2 |   2 |  -1 |
     *
     *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
     *
     *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
     *
     *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
     *
     *    while `uu` will just assign the year as is:
     *
     *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
     *
     *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
     *
     *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
     *    except local week-numbering years are dependent on `options.weekStartsOn`
     *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
     *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
     *
     * 5. These patterns are not in the Unicode Technical Standard #35:
     *    - `i`: ISO day of week
     *    - `I`: ISO week of year
     *    - `R`: ISO week-numbering year
     *    - `o`: ordinal number modifier
     *    - `P`: long localized date
     *    - `p`: long localized time
     *
     * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
     *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
     *
     * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
     *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
     *
     * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
     *    on the given locale.
     *
     *    using `en-US` locale: `P` => `MM/dd/yyyy`
     *    using `en-US` locale: `p` => `hh:mm a`
     *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
     *    using `pt-BR` locale: `p` => `HH:mm`
     *
     * Values will be assigned to the date in the descending order of its unit's priority.
     * Units of an equal priority overwrite each other in the order of appearance.
     *
     * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
     * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
     *
     * `referenceDate` must be passed for correct work of the function.
     * If you're not sure which `referenceDate` to supply, create a new instance of Date:
     * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`
     * In this case parsing will be done in the context of the current date.
     * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
     * then `Invalid Date` will be returned.
     *
     * The result may vary by locale.
     *
     * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
     *
     * If parsing failed, `Invalid Date` will be returned.
     * Invalid Date is a Date, whose time value is NaN.
     * Time value of Date: http://es5.github.io/#x15.9.1.1
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - Old `parse` was renamed to `toDate`.
     *   Now `parse` is a new function which parses a string using a provided format.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   parse('2016-01-01')
     *
     *   // v2.0.0 onward
     *   toDate('2016-01-01')
     *   parse('2016-01-01', 'yyyy-MM-dd', new Date())
     *   ```
     *
     * @param {String} dateString - the string to parse
     * @param {String} formatString - the string of tokens
     * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
     *   see: https://git.io/fxCyr
     * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
     *   see: https://git.io/fxCyr
     * @returns {Date} the parsed date
     * @throws {TypeError} 3 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     * @throws {RangeError} `options.locale` must contain `match` property
     * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
     * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
     * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
     * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
     * @throws {RangeError} format string contains an unescaped latin alphabet character
     *
     * @example
     * // Parse 11 February 2014 from middle-endian format:
     * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())
     * //=> Tue Feb 11 2014 00:00:00
     *
     * @example
     * // Parse 28th of February in Esperanto locale in the context of 2010 year:
     * import eo from 'date-fns/locale/eo'
     * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
     *   locale: eo
     * })
     * //=> Sun Feb 28 2010 00:00:00
     */

    function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_9__["default"])(3, arguments);
      var dateString = String(dirtyDateString);
      var formatString = String(dirtyFormatString);
      var options = dirtyOptions || {};
      var locale = options.locale || _locale_en_US_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];

      if (!locale.match) {
        throw new RangeError('locale must contain match property');
      }

      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      if (formatString === '') {
        if (dateString === '') {
          return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyReferenceDate);
        } else {
          return new Date(NaN);
        }
      }

      var subFnOptions = {
        firstWeekContainsDate: firstWeekContainsDate,
        weekStartsOn: weekStartsOn,
        locale: locale // If timezone isn't specified, it will be set to the system timezone

      };
      var setters = [{
        priority: TIMEZONE_UNIT_PRIORITY,
        set: dateToSystemTimezone,
        index: 0
      }];
      var i;
      var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {
        var firstCharacter = substring[0];

        if (firstCharacter === 'p' || firstCharacter === 'P') {
          var longFormatter = _lib_format_longFormatters_index_js__WEBPACK_IMPORTED_MODULE_4__["default"][firstCharacter];
          return longFormatter(substring, locale.formatLong, subFnOptions);
        }

        return substring;
      }).join('').match(formattingTokensRegExp);
      var usedTokens = [];

      for (i = 0; i < tokens.length; i++) {
        var token = tokens[i];

        if (!options.useAdditionalWeekYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["isProtectedWeekYearToken"])(token)) {
          Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["throwProtectedError"])(token);
        }

        if (!options.useAdditionalDayOfYearTokens && Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["isProtectedDayOfYearToken"])(token)) {
          Object(_lib_protectedTokens_index_js__WEBPACK_IMPORTED_MODULE_6__["throwProtectedError"])(token);
        }

        var firstCharacter = token[0];
        var parser = _lib_parsers_index_js__WEBPACK_IMPORTED_MODULE_8__["default"][firstCharacter];

        if (parser) {
          var incompatibleTokens = parser.incompatibleTokens;

          if (Array.isArray(incompatibleTokens)) {
            var incompatibleToken = void 0;

            for (var _i = 0; _i < usedTokens.length; _i++) {
              var usedToken = usedTokens[_i].token;

              if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {
                incompatibleToken = usedTokens[_i];
                break;
              }
            }

            if (incompatibleToken) {
              throw new RangeError("The format string mustn't contain `".concat(incompatibleToken.fullToken, "` and `").concat(token, "` at the same time"));
            }
          } else if (parser.incompatibleTokens === '*' && usedTokens.length) {
            throw new RangeError("The format string mustn't contain `".concat(token, "` and any other token at the same time"));
          }

          usedTokens.push({
            token: firstCharacter,
            fullToken: token
          });
          var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);

          if (!parseResult) {
            return new Date(NaN);
          }

          setters.push({
            priority: parser.priority,
            set: parser.set,
            validate: parser.validate,
            value: parseResult.value,
            index: setters.length
          });
          dateString = parseResult.rest;
        } else {
          if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
            throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
          } // Replace two single quote characters with one single quote character


          if (token === "''") {
            token = "'";
          } else if (firstCharacter === "'") {
            token = cleanEscapedString(token);
          } // Cut token from string, or, if string doesn't match the token, return Invalid Date


          if (dateString.indexOf(token) === 0) {
            dateString = dateString.slice(token.length);
          } else {
            return new Date(NaN);
          }
        }
      } // Check if the remaining input contains something other than whitespace


      if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
        return new Date(NaN);
      }

      var uniquePrioritySetters = setters.map(function (setter) {
        return setter.priority;
      }).sort(function (a, b) {
        return b - a;
      }).filter(function (priority, index, array) {
        return array.indexOf(priority) === index;
      }).map(function (priority) {
        return setters.filter(function (setter) {
          return setter.priority === priority;
        }).reverse();
      }).map(function (setterArray) {
        return setterArray[0];
      });
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyReferenceDate);

      if (isNaN(date)) {
        return new Date(NaN);
      } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
      // This ensures that when UTC functions will be implemented, locales will be compatible with them.
      // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37


      var utcDate = Object(_subMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, Object(_lib_getTimezoneOffsetInMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_5__["default"])(date));
      var flags = {};

      for (i = 0; i < uniquePrioritySetters.length; i++) {
        var setter = uniquePrioritySetters[i];

        if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {
          return new Date(NaN);
        }

        var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)

        if (result[0]) {
          utcDate = result[0];
          Object(_lib_assign_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(flags, result[1]); // Result is date
        } else {
          utcDate = result;
        }
      }

      return utcDate;
    }

    function dateToSystemTimezone(date, flags) {
      if (flags.timestampIsSet) {
        return date;
      }

      var convertedDate = new Date(0);
      convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());
      convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());
      return convertedDate;
    }

    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/parseISO/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/parseISO/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmParseISOIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return parseISO;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");

    var MILLISECONDS_IN_HOUR = 3600000;
    var MILLISECONDS_IN_MINUTE = 60000;
    var DEFAULT_ADDITIONAL_DIGITS = 2;
    var patterns = {
      dateTimeDelimiter: /[T ]/,
      timeZoneDelimiter: /[Z ]/i,
      timezone: /([Z+-].*)$/
    };
    var dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
    var timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
    var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
    /**
     * @name parseISO
     * @category Common Helpers
     * @summary Parse ISO string
     *
     * @description
     * Parse the given string in ISO 8601 format and return an instance of Date.
     *
     * Function accepts complete ISO 8601 formats as well as partial implementations.
     * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
     *
     * If the argument isn't a string, the function cannot parse the string or
     * the values are invalid, it returns Invalid Date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The previous `parse` implementation was renamed to `parseISO`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   parse('2016-01-01')
     *
     *   // v2.0.0 onward
     *   parseISO('2016-01-01')
     *   ```
     *
     * - `parseISO` now validates separate date and time values in ISO-8601 strings
     *   and returns `Invalid Date` if the date is invalid.
     *
     *   ```javascript
     *   parseISO('2018-13-32')
     *   //=> Invalid Date
     *   ```
     *
     * - `parseISO` now doesn't fall back to `new Date` constructor
     *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.
     *
     * @param {String} argument - the value to convert
     * @param {Object} [options] - an object with options.
     * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
     * @returns {Date} the parsed date in the local time zone
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
     *
     * @example
     * // Convert string '2014-02-11T11:30:30' to date:
     * var result = parseISO('2014-02-11T11:30:30')
     * //=> Tue Feb 11 2014 11:30:30
     *
     * @example
     * // Convert string '+02014101' to date,
     * // if the additional number of digits in the extended year format is 1:
     * var result = parseISO('+02014101', { additionalDigits: 1 })
     * //=> Fri Apr 11 2014 00:00:00
     */

    function parseISO(argument, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(options.additionalDigits);

      if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {
        throw new RangeError('additionalDigits must be 0, 1 or 2');
      }

      if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {
        return new Date(NaN);
      }

      var dateStrings = splitDateString(argument);
      var date;

      if (dateStrings.date) {
        var parseYearResult = parseYear(dateStrings.date, additionalDigits);
        date = parseDate(parseYearResult.restDateString, parseYearResult.year);
      }

      if (isNaN(date) || !date) {
        return new Date(NaN);
      }

      var timestamp = date.getTime();
      var time = 0;
      var offset;

      if (dateStrings.time) {
        time = parseTime(dateStrings.time);

        if (isNaN(time) || time === null) {
          return new Date(NaN);
        }
      }

      if (dateStrings.timezone) {
        offset = parseTimezone(dateStrings.timezone);

        if (isNaN(offset)) {
          return new Date(NaN);
        }
      } else {
        var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone
        // but we need it to be parsed in our timezone
        // so we use utc values to build date in our timezone.
        // Year values from 0 to 99 map to the years 1900 to 1999
        // so set year explicitly with setFullYear.

        var result = new Date(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate(), dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());
        result.setFullYear(dirtyDate.getUTCFullYear());
        return result;
      }

      return new Date(timestamp + time + offset);
    }

    function splitDateString(dateString) {
      var dateStrings = {};
      var array = dateString.split(patterns.dateTimeDelimiter);
      var timeString;

      if (/:/.test(array[0])) {
        dateStrings.date = null;
        timeString = array[0];
      } else {
        dateStrings.date = array[0];
        timeString = array[1];

        if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
          dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];
          timeString = dateString.substr(dateStrings.date.length, dateString.length);
        }
      }

      if (timeString) {
        var token = patterns.timezone.exec(timeString);

        if (token) {
          dateStrings.time = timeString.replace(token[1], '');
          dateStrings.timezone = token[1];
        } else {
          dateStrings.time = timeString;
        }
      }

      return dateStrings;
    }

    function parseYear(dateString, additionalDigits) {
      var regex = new RegExp('^(?:(\\d{4}|[+-]\\d{' + (4 + additionalDigits) + '})|(\\d{2}|[+-]\\d{' + (2 + additionalDigits) + '})$)');
      var captures = dateString.match(regex); // Invalid ISO-formatted year

      if (!captures) return {
        year: null
      };
      var year = captures[1] && parseInt(captures[1]);
      var century = captures[2] && parseInt(captures[2]);
      return {
        year: century == null ? year : century * 100,
        restDateString: dateString.slice((captures[1] || captures[2]).length)
      };
    }

    function parseDate(dateString, year) {
      // Invalid ISO-formatted year
      if (year === null) return null;
      var captures = dateString.match(dateRegex); // Invalid ISO-formatted string

      if (!captures) return null;
      var isWeekDate = !!captures[4];
      var dayOfYear = parseDateUnit(captures[1]);
      var month = parseDateUnit(captures[2]) - 1;
      var day = parseDateUnit(captures[3]);
      var week = parseDateUnit(captures[4]);
      var dayOfWeek = parseDateUnit(captures[5]) - 1;

      if (isWeekDate) {
        if (!validateWeekDate(year, week, dayOfWeek)) {
          return new Date(NaN);
        }

        return dayOfISOWeekYear(year, week, dayOfWeek);
      } else {
        var date = new Date(0);

        if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {
          return new Date(NaN);
        }

        date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
        return date;
      }
    }

    function parseDateUnit(value) {
      return value ? parseInt(value) : 1;
    }

    function parseTime(timeString) {
      var captures = timeString.match(timeRegex);
      if (!captures) return null; // Invalid ISO-formatted time

      var hours = parseTimeUnit(captures[1]);
      var minutes = parseTimeUnit(captures[2]);
      var seconds = parseTimeUnit(captures[3]);

      if (!validateTime(hours, minutes, seconds)) {
        return NaN;
      }

      return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;
    }

    function parseTimeUnit(value) {
      return value && parseFloat(value.replace(',', '.')) || 0;
    }

    function parseTimezone(timezoneString) {
      if (timezoneString === 'Z') return 0;
      var captures = timezoneString.match(timezoneRegex);
      if (!captures) return 0;
      var sign = captures[1] === '+' ? -1 : 1;
      var hours = parseInt(captures[2]);
      var minutes = captures[3] && parseInt(captures[3]) || 0;

      if (!validateTimezone(hours, minutes)) {
        return NaN;
      }

      return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);
    }

    function dayOfISOWeekYear(isoWeekYear, week, day) {
      var date = new Date(0);
      date.setUTCFullYear(isoWeekYear, 0, 4);
      var fourthOfJanuaryDay = date.getUTCDay() || 7;
      var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
      date.setUTCDate(date.getUTCDate() + diff);
      return date;
    } // Validation functions
    // February is null to handle the leap year (using ||)


    var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

    function isLeapYearIndex(year) {
      return year % 400 === 0 || year % 4 === 0 && year % 100;
    }

    function validateDate(year, month, date) {
      return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
    }

    function validateDayOfYearDate(year, dayOfYear) {
      return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
    }

    function validateWeekDate(_year, week, day) {
      return week >= 1 && week <= 53 && day >= 0 && day <= 6;
    }

    function validateTime(hours, minutes, seconds) {
      if (hours === 24) {
        return minutes === 0 && seconds === 0;
      }

      return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
    }

    function validateTimezone(_hours, minutes) {
      return minutes >= 0 && minutes <= 59;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/parseJSON/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/parseJSON/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmParseJSONIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return parseJSON;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name parseJSON
     * @category Common Helpers
     * @summary Parse a JSON date string
     *
     * @description
     * Converts a complete ISO date string in UTC time, the typical format for transmitting
     * a date in JSON, to a JavaScript `Date` instance.
     *
     * This is a minimal implementation for converting dates retrieved from a JSON API to
     * a `Date` instance which can be used with other functions in the `date-fns` library.
     * The following formats are supported:
     *
     *     - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`
     *     - `2000-03-15T05:20:10Z`: Without milliseconds
     *     - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages
     *     - `2000-03-15T05:20:10+0000`: With a zero offset without a colon
     *     - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol
     *     - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds
     *     - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting
     *
     * For convenience and ease of use these other input types are also supported
     * via [toDate]{@link https://date-fns.org/docs/toDate}:
     *
     *     - A `Date` instance will be cloned
     *     - A `number` will be treated as a timestamp
     *
     * Any other input type or invalid date strings will return an `Invalid Date`.
     *
     * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert
     * @returns {Date} the parsed date in the local time zone
     * @throws {TypeError} 1 argument required
     */


    function parseJSON(argument) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);

      if (typeof argument === 'string') {
        var parts = argument.match(/(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|\+00:?00)?/);

        if (parts) {
          return new Date(Date.UTC(+parts[1], parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +((parts[7] || '0') + '00').substring(0, 3)));
        }

        return new Date(NaN);
      }

      return Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(argument);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/roundToNearestMinutes/index.js":
  /*!******************************************************************!*\
    !*** ./node_modules/date-fns/esm/roundToNearestMinutes/index.js ***!
    \******************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmRoundToNearestMinutesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return roundToNearestMinutes;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /**
     * @name roundToNearestMinutes
     * @category Minute Helpers
     * @summary Rounds the given date to the nearest minute
     *
     * @description
     * Rounds the given date to the nearest minute (or number of minutes).
     * Rounds up when the given date is exactly between the nearest round minutes.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to round
     * @param {Object} [options] - an object with options.
     * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.
     * @returns {Date} the new date rounded to the closest minute
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.nearestTo` must be between 1 and 30
     *
     * @example
     * // Round 10 July 2014 12:12:34 to nearest minute:
     * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))
     * //=> Thu Jul 10 2014 12:13:00
     *
     * @example
     * // Round 10 July 2014 12:07:30 to nearest quarter hour:
     * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })
     * // rounds up because given date is exactly between 12:00:00 and 12:15:00
     * //=> Thu Jul 10 2014 12:15:00
     */


    function roundToNearestMinutes(dirtyDate, options) {
      if (arguments.length < 1) {
        throw new TypeError('1 argument required, but only none provided present');
      }

      var nearestTo = options && 'nearestTo' in options ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.nearestTo) : 1;

      if (nearestTo < 1 || nearestTo > 30) {
        throw new RangeError('`options.nearestTo` must be between 1 and 30');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case

      var minutes = date.getMinutes() + seconds / 60;
      var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
      var remainderMinutes = minutes % nearestTo;
      var addedMinutes = Math.round(remainderMinutes / nearestTo) * nearestTo;
      return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), roundedMinutes + addedMinutes);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/set/index.js":
  /*!************************************************!*\
    !*** ./node_modules/date-fns/esm/set/index.js ***!
    \************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return set;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../setMonth/index.js */
    "./node_modules/date-fns/esm/setMonth/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name set
     * @category Common Helpers
     * @summary Set date values to a given date.
     *
     * @description
     * Set date values to a given date.
     *
     * Sets time values to date from object `values`.
     * A value is not set if it is undefined or null or doesn't exist in `values`.
     *
     * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
     * to use native `Date#setX` methods. If you use this function, you may not want to include the
     * other `setX` functions that date-fns provides if you are concerned about the bundle size.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Object} values - an object with options
     * @param {Number} [values.year] - the number of years to be set
     * @param {Number} [values.month] - the number of months to be set
     * @param {Number} [values.date] - the number of days to be set
     * @param {Number} [values.hours] - the number of hours to be set
     * @param {Number} [values.minutes] - the number of minutes to be set
     * @param {Number} [values.seconds] - the number of seconds to be set
     * @param {Number} [values.milliseconds] - the number of milliseconds to be set
     * @returns {Date} the new date with options set
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `values` must be an object
     *
     * @example
     * // Transform 1 September 2014 into 20 October 2015 in a single line:
     * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
     * //=> Tue Oct 20 2015 00:00:00
     *
     * @example
     * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
     * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
     * //=> Mon Sep 01 2014 12:23:45
     */


    function set(dirtyDate, values) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);

      if (typeof values !== 'object' || values === null) {
        throw new RangeError('values parameter must be an object');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

      if (isNaN(date)) {
        return new Date(NaN);
      }

      if (values.year != null) {
        date.setFullYear(values.year);
      }

      if (values.month != null) {
        date = Object(_setMonth_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, values.month);
      }

      if (values.date != null) {
        date.setDate(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.date));
      }

      if (values.hours != null) {
        date.setHours(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.hours));
      }

      if (values.minutes != null) {
        date.setMinutes(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.minutes));
      }

      if (values.seconds != null) {
        date.setSeconds(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.seconds));
      }

      if (values.milliseconds != null) {
        date.setMilliseconds(Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values.milliseconds));
      }

      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setDate/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/setDate/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetDateIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setDate;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setDate
     * @category Day Helpers
     * @summary Set the day of the month to the given date.
     *
     * @description
     * Set the day of the month to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} dayOfMonth - the day of the month of the new date
     * @returns {Date} the new date with the day of the month set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set the 30th day of the month to 1 September 2014:
     * var result = setDate(new Date(2014, 8, 1), 30)
     * //=> Tue Sep 30 2014 00:00:00
     */


    function setDate(dirtyDate, dirtyDayOfMonth) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var dayOfMonth = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDayOfMonth);
      date.setDate(dayOfMonth);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setDay/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/date-fns/esm/setDay/index.js ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetDayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setDay;
    });
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setDay
     * @category Weekday Helpers
     * @summary Set the day of the week to the given date.
     *
     * @description
     * Set the day of the week to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} day - the day of the week of the new date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date} the new date with the day of the week set
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // Set week day to Sunday, with the default weekStartsOn of Sunday:
     * var result = setDay(new Date(2014, 8, 1), 0)
     * //=> Sun Aug 31 2014 00:00:00
     *
     * @example
     * // Set week day to Sunday, with a weekStartsOn of Monday:
     * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })
     * //=> Sun Sep 07 2014 00:00:00
     */


    function setDay(dirtyDate, dirtyDay, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, options);
      var day = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDay);
      var currentDay = date.getDay();
      var remainder = day % 7;
      var dayIndex = (remainder + 7) % 7;
      var delta = 7 - weekStartsOn;
      var diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : (dayIndex + delta) % 7 - (currentDay + delta) % 7;
      return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, diff, options);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setDayOfYear/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/setDayOfYear/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetDayOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setDayOfYear;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setDayOfYear
     * @category Day Helpers
     * @summary Set the day of the year to the given date.
     *
     * @description
     * Set the day of the year to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} dayOfYear - the day of the year of the new date
     * @returns {Date} the new date with the day of the year set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set the 2nd day of the year to 2 July 2014:
     * var result = setDayOfYear(new Date(2014, 6, 2), 2)
     * //=> Thu Jan 02 2014 00:00:00
     */


    function setDayOfYear(dirtyDate, dirtyDayOfYear) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var dayOfYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDayOfYear);
      date.setMonth(0);
      date.setDate(dayOfYear);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setHours/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/setHours/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetHoursIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setHours;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setHours
     * @category Hour Helpers
     * @summary Set the hours to the given date.
     *
     * @description
     * Set the hours to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} hours - the hours of the new date
     * @returns {Date} the new date with the hours set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set 4 hours to 1 September 2014 11:30:00:
     * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)
     * //=> Mon Sep 01 2014 04:30:00
     */


    function setHours(dirtyDate, dirtyHours) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var hours = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyHours);
      date.setHours(hours);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setISODay/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/setISODay/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetISODayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setISODay;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _getISODay_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../getISODay/index.js */
    "./node_modules/date-fns/esm/getISODay/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setISODay
     * @category Weekday Helpers
     * @summary Set the day of the ISO week to the given date.
     *
     * @description
     * Set the day of the ISO week to the given date.
     * ISO week starts with Monday.
     * 7 is the index of Sunday, 1 is the index of Monday etc.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} day - the day of the ISO week of the new date
     * @returns {Date} the new date with the day of the ISO week set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set Sunday to 1 September 2014:
     * var result = setISODay(new Date(2014, 8, 1), 7)
     * //=> Sun Sep 07 2014 00:00:00
     */


    function setISODay(dirtyDate, dirtyDay) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var day = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDay);
      var currentDay = Object(_getISODay_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date);
      var diff = day - currentDay;
      return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, diff);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setISOWeek/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/setISOWeek/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setISOWeek;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../getISOWeek/index.js */
    "./node_modules/date-fns/esm/getISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setISOWeek
     * @category ISO Week Helpers
     * @summary Set the ISO week to the given date.
     *
     * @description
     * Set the ISO week to the given date, saving the weekday number.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} isoWeek - the ISO week of the new date
     * @returns {Date} the new date with the ISO week set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set the 53rd ISO week to 7 August 2004:
     * var result = setISOWeek(new Date(2004, 7, 7), 53)
     * //=> Sat Jan 01 2005 00:00:00
     */


    function setISOWeek(dirtyDate, dirtyISOWeek) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var isoWeek = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeek);
      var diff = Object(_getISOWeek_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date) - isoWeek;
      date.setDate(date.getDate() - diff * 7);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setISOWeekYear/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/setISOWeekYear/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setISOWeekYear;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../startOfISOWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfISOWeekYear/index.js");
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setISOWeekYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Set the ISO week-numbering year to the given date.
     *
     * @description
     * Set the ISO week-numbering year to the given date,
     * saving the week number and the weekday number.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `setISOYear` to `setISOWeekYear`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} isoWeekYear - the ISO week-numbering year of the new date
     * @returns {Date} the new date with the ISO week-numbering year set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set ISO week-numbering year 2007 to 29 December 2008:
     * var result = setISOWeekYear(new Date(2008, 11, 29), 2007)
     * //=> Mon Jan 01 2007 00:00:00
     */


    function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var isoWeekYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyISOWeekYear);
      var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(date, Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date));
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      date = Object(_startOfISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(fourthOfJanuary);
      date.setDate(date.getDate() + diff);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setMilliseconds/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/setMilliseconds/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetMillisecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setMilliseconds;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setMilliseconds
     * @category Millisecond Helpers
     * @summary Set the milliseconds to the given date.
     *
     * @description
     * Set the milliseconds to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} milliseconds - the milliseconds of the new date
     * @returns {Date} the new date with the milliseconds set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set 300 milliseconds to 1 September 2014 11:30:40.500:
     * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)
     * //=> Mon Sep 01 2014 11:30:40.300
     */


    function setMilliseconds(dirtyDate, dirtyMilliseconds) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var milliseconds = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMilliseconds);
      date.setMilliseconds(milliseconds);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setMinutes/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/setMinutes/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetMinutesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setMinutes;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setMinutes
     * @category Minute Helpers
     * @summary Set the minutes to the given date.
     *
     * @description
     * Set the minutes to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} minutes - the minutes of the new date
     * @returns {Date} the new date with the minutes set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set 45 minutes to 1 September 2014 11:30:40:
     * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
     * //=> Mon Sep 01 2014 11:45:40
     */


    function setMinutes(dirtyDate, dirtyMinutes) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var minutes = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMinutes);
      date.setMinutes(minutes);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setMonth/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/setMonth/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setMonth;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../getDaysInMonth/index.js */
    "./node_modules/date-fns/esm/getDaysInMonth/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setMonth
     * @category Month Helpers
     * @summary Set the month to the given date.
     *
     * @description
     * Set the month to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} month - the month of the new date
     * @returns {Date} the new date with the month set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set February to 1 September 2014:
     * var result = setMonth(new Date(2014, 8, 1), 1)
     * //=> Sat Feb 01 2014 00:00:00
     */


    function setMonth(dirtyDate, dirtyMonth) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var month = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyMonth);
      var year = date.getFullYear();
      var day = date.getDate();
      var dateWithDesiredMonth = new Date(0);
      dateWithDesiredMonth.setFullYear(year, month, 15);
      dateWithDesiredMonth.setHours(0, 0, 0, 0);
      var daysInMonth = Object(_getDaysInMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dateWithDesiredMonth); // Set the last day of the new month
      // if the original date was the last day of the longer month

      date.setMonth(month, Math.min(day, daysInMonth));
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setQuarter/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/setQuarter/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setQuarter;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _setMonth_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../setMonth/index.js */
    "./node_modules/date-fns/esm/setMonth/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setQuarter
     * @category Quarter Helpers
     * @summary Set the year quarter to the given date.
     *
     * @description
     * Set the year quarter to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} quarter - the quarter of the new date
     * @returns {Date} the new date with the quarter set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set the 2nd quarter to 2 July 2014:
     * var result = setQuarter(new Date(2014, 6, 2), 2)
     * //=> Wed Apr 02 2014 00:00:00
     */


    function setQuarter(dirtyDate, dirtyQuarter) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var quarter = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyQuarter);
      var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
      var diff = quarter - oldQuarter;
      return Object(_setMonth_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(date, date.getMonth() + diff * 3);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setSeconds/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/setSeconds/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetSecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setSeconds;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setSeconds
     * @category Second Helpers
     * @summary Set the seconds to the given date.
     *
     * @description
     * Set the seconds to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} seconds - the seconds of the new date
     * @returns {Date} the new date with the seconds set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set 45 seconds to 1 September 2014 11:30:40:
     * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
     * //=> Mon Sep 01 2014 11:30:45
     */


    function setSeconds(dirtyDate, dirtySeconds) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var seconds = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtySeconds);
      date.setSeconds(seconds);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setWeek/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/setWeek/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setWeek;
    });
    /* harmony import */


    var _getWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getWeek/index.js */
    "./node_modules/date-fns/esm/getWeek/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setWeek
     * @category Week Helpers
     * @summary Set the local week to the given date.
     *
     * @description
     * Set the local week to the given date, saving the weekday number.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} week - the week of the new date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Date} the new date with the local week set
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // Set the 1st week to 2 January 2005 with default options:
     * var result = setWeek(new Date(2005, 0, 2), 1)
     * //=> Sun Dec 26 2004 00:00:00
     *
     * @example
     * // Set the 1st week to 2 January 2005,
     * // if Monday is the first day of the week,
     * // and the first week of the year always contains 4 January:
     * var result = setWeek(new Date(2005, 0, 2), 1, {
     *   weekStartsOn: 1,
     *   firstWeekContainsDate: 4
     * })
     * //=> Sun Jan 4 2004 00:00:00
     */


    function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var week = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyWeek);
      var diff = Object(_getWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, dirtyOptions) - week;
      date.setDate(date.getDate() - diff * 7);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setWeekYear/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/setWeekYear/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setWeekYear;
    });
    /* harmony import */


    var _differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../differenceInCalendarDays/index.js */
    "./node_modules/date-fns/esm/differenceInCalendarDays/index.js");
    /* harmony import */


    var _startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfWeekYear/index.js */
    "./node_modules/date-fns/esm/startOfWeekYear/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setWeekYear
     * @category Week-Numbering Year Helpers
     * @summary Set the local week-numbering year to the given date.
     *
     * @description
     * Set the local week-numbering year to the given date,
     * saving the week number and the weekday number.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} weekYear - the local week-numbering year of the new date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Date} the new date with the local week-numbering year set
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // Set the local week-numbering year 2004 to 2 January 2010 with default options:
     * var result = setWeekYear(new Date(2010, 0, 2), 2004)
     * //=> Sat Jan 03 2004 00:00:00
     *
     * @example
     * // Set the local week-numbering year 2004 to 2 January 2010,
     * // if Monday is the first day of week
     * // and 4 January is always in the first week of the year:
     * var result = setWeekYear(new Date(2010, 0, 2), 2004, {
     *   weekStartsOn: 1,
     *   firstWeekContainsDate: 4
     * })
     * //=> Sat Jan 01 2005 00:00:00
     */


    function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(2, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(options.firstWeekContainsDate);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate);
      var weekYear = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(dirtyWeekYear);
      var diff = Object(_differenceInCalendarDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(date, Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(date, dirtyOptions));
      var firstWeek = new Date(0);
      firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      date = Object(_startOfWeekYear_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(firstWeek, dirtyOptions);
      date.setDate(date.getDate() + diff);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/setYear/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/setYear/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSetYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return setYear;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name setYear
     * @category Year Helpers
     * @summary Set the year to the given date.
     *
     * @description
     * Set the year to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} year - the year of the new date
     * @returns {Date} the new date with the year set
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Set year 2013 to 1 September 2014:
     * var result = setYear(new Date(2014, 8, 1), 2013)
     * //=> Sun Sep 01 2013 00:00:00
     */


    function setYear(dirtyDate, dirtyYear) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate);
      var year = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

      if (isNaN(date)) {
        return new Date(NaN);
      }

      date.setFullYear(year);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfDay/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfDay/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfDayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfDay;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfDay
     * @category Day Helpers
     * @summary Return the start of a day for the given date.
     *
     * @description
     * Return the start of a day for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a day
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a day for 2 September 2014 11:55:00:
     * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 02 2014 00:00:00
     */


    function startOfDay(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfDecade/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfDecade/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfDecadeIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfDecade;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfDecade
     * @category Decade Helpers
     * @summary Return the start of a decade for the given date.
     *
     * @description
     * Return the start of a decade for the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a decade
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a decade for 21 October 2015 00:00:00:
     * var result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))
     * //=> Jan 01 2010 00:00:00
     */


    function startOfDecade(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var year = date.getFullYear();
      var decade = Math.floor(year / 10) * 10;
      date.setFullYear(decade, 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfHour/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfHour/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfHourIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfHour;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfHour
     * @category Hour Helpers
     * @summary Return the start of an hour for the given date.
     *
     * @description
     * Return the start of an hour for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of an hour
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of an hour for 2 September 2014 11:55:00:
     * var result = startOfHour(new Date(2014, 8, 2, 11, 55))
     * //=> Tue Sep 02 2014 11:00:00
     */


    function startOfHour(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setMinutes(0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfISOWeek/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfISOWeek/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfISOWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfISOWeek;
    });
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfISOWeek
     * @category ISO Week Helpers
     * @summary Return the start of an ISO week for the given date.
     *
     * @description
     * Return the start of an ISO week for the given date.
     * The result will be in the local timezone.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of an ISO week
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of an ISO week for 2 September 2014 11:55:00:
     * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Mon Sep 01 2014 00:00:00
     */


    function startOfISOWeek(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      return Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, {
        weekStartsOn: 1
      });
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfISOWeekYear/index.js":
  /*!***************************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfISOWeekYear/index.js ***!
    \***************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfISOWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfISOWeekYear;
    });
    /* harmony import */


    var _getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getISOWeekYear/index.js */
    "./node_modules/date-fns/esm/getISOWeekYear/index.js");
    /* harmony import */


    var _startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfISOWeek/index.js */
    "./node_modules/date-fns/esm/startOfISOWeek/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfISOWeekYear
     * @category ISO Week-Numbering Year Helpers
     * @summary Return the start of an ISO week-numbering year for the given date.
     *
     * @description
     * Return the start of an ISO week-numbering year,
     * which always starts 3 days before the year's first Thursday.
     * The result will be in the local timezone.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of an ISO week-numbering year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of an ISO week-numbering year for 2 July 2005:
     * var result = startOfISOWeekYear(new Date(2005, 6, 2))
     * //=> Mon Jan 03 2005 00:00:00
     */


    function startOfISOWeekYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var year = Object(_getISOWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setFullYear(year, 0, 4);
      fourthOfJanuary.setHours(0, 0, 0, 0);
      var date = Object(_startOfISOWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(fourthOfJanuary);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfMinute/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfMinute/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfMinuteIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfMinute;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfMinute
     * @category Minute Helpers
     * @summary Return the start of a minute for the given date.
     *
     * @description
     * Return the start of a minute for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a minute
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a minute for 1 December 2014 22:15:45.400:
     * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
     * //=> Mon Dec 01 2014 22:15:00
     */


    function startOfMinute(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setSeconds(0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfMonth/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfMonth/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfMonthIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfMonth;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfMonth
     * @category Month Helpers
     * @summary Return the start of a month for the given date.
     *
     * @description
     * Return the start of a month for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a month for 2 September 2014 11:55:00:
     * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Mon Sep 01 2014 00:00:00
     */


    function startOfMonth(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfQuarter/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfQuarter/index.js ***!
    \***********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfQuarterIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfQuarter;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfQuarter
     * @category Quarter Helpers
     * @summary Return the start of a year quarter for the given date.
     *
     * @description
     * Return the start of a year quarter for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a quarter
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a quarter for 2 September 2014 11:55:00:
     * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Jul 01 2014 00:00:00
     */


    function startOfQuarter(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3;
      date.setMonth(month, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfSecond/index.js":
  /*!**********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfSecond/index.js ***!
    \**********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfSecondIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfSecond;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfSecond
     * @category Second Helpers
     * @summary Return the start of a second for the given date.
     *
     * @description
     * Return the start of a second for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a second
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a second for 1 December 2014 22:15:45.400:
     * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
     * //=> Mon Dec 01 2014 22:15:45.000
     */


    function startOfSecond(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      date.setMilliseconds(0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfToday/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfToday/index.js ***!
    \*********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfTodayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfToday;
    });
    /* harmony import */


    var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../startOfDay/index.js */
    "./node_modules/date-fns/esm/startOfDay/index.js");
    /**
     * @name startOfToday
     * @category Day Helpers
     * @summary Return the start of today.
     * @pure false
     *
     * @description
     * Return the start of today.
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `Date.now()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @returns {Date} the start of today
     *
     * @example
     * // If today is 6 October 2014:
     * var result = startOfToday()
     * //=> Mon Oct 6 2014 00:00:00
     */


    function startOfToday() {
      return Object(_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Date.now());
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfTomorrow/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfTomorrow/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfTomorrowIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfTomorrow;
    });
    /**
     * @name startOfTomorrow
     * @category Day Helpers
     * @summary Return the start of tomorrow.
     * @pure false
     *
     * @description
     * Return the start of tomorrow.
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `new Date()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @returns {Date} the start of tomorrow
     *
     * @example
     * // If today is 6 October 2014:
     * var result = startOfTomorrow()
     * //=> Tue Oct 7 2014 00:00:00
     */


    function startOfTomorrow() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day + 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfWeek/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfWeek/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfWeekIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfWeek;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfWeek
     * @category Week Helpers
     * @summary Return the start of a week for the given date.
     *
     * @description
     * Return the start of a week for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date} the start of a week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // The start of a week for 2 September 2014 11:55:00:
     * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sun Aug 31 2014 00:00:00
     *
     * @example
     * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
     * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
     * //=> Mon Sep 01 2014 00:00:00
     */


    function startOfWeek(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setDate(date.getDate() - diff);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfWeekYear/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfWeekYear/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfWeekYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfWeekYear;
    });
    /* harmony import */


    var _getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../getWeekYear/index.js */
    "./node_modules/date-fns/esm/getWeekYear/index.js");
    /* harmony import */


    var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../startOfWeek/index.js */
    "./node_modules/date-fns/esm/startOfWeek/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfWeekYear
     * @category Week-Numbering Year Helpers
     * @summary Return the start of a local week-numbering year for the given date.
     *
     * @description
     * Return the start of a local week-numbering year.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Date} the start of a week-numbering year
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // The start of an a week-numbering year for 2 July 2005 with default settings:
     * var result = startOfWeekYear(new Date(2005, 6, 2))
     * //=> Sun Dec 26 2004 00:00:00
     *
     * @example
     * // The start of a week-numbering year for 2 July 2005
     * // if Monday is the first day of week
     * // and 4 January is always in the first week of the year:
     * var result = startOfWeekYear(new Date(2005, 6, 2), {
     *   weekStartsOn: 1,
     *   firstWeekContainsDate: 4
     * })
     * //=> Mon Jan 03 2005 00:00:00
     */


    function startOfWeekYear(dirtyDate, dirtyOptions) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(options.firstWeekContainsDate);
      var year = Object(_getWeekYear_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      var date = Object(_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(firstWeek, dirtyOptions);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfYear/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfYear/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfYearIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfYear;
    });
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name startOfYear
     * @category Year Helpers
     * @summary Return the start of a year for the given date.
     *
     * @description
     * Return the start of a year for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a year for 2 September 2014 11:55:00:
     * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
     * //=> Wed Jan 01 2014 00:00:00
     */


    function startOfYear(dirtyDate) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(1, arguments);
      var cleanDate = Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyDate);
      var date = new Date(0);
      date.setFullYear(cleanDate.getFullYear(), 0, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/startOfYesterday/index.js":
  /*!*************************************************************!*\
    !*** ./node_modules/date-fns/esm/startOfYesterday/index.js ***!
    \*************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmStartOfYesterdayIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return startOfYesterday;
    });
    /**
     * @name startOfYesterday
     * @category Day Helpers
     * @summary Return the start of yesterday.
     * @pure false
     *
     * @description
     * Return the start of yesterday.
     *
     * > ⚠️ Please note that this function is not present in the FP submodule as
     * > it uses `new Date()` internally hence impure and can't be safely curried.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @returns {Date} the start of yesterday
     *
     * @example
     * // If today is 6 October 2014:
     * var result = startOfYesterday()
     * //=> Sun Oct 5 2014 00:00:00
     */


    function startOfYesterday() {
      var now = new Date();
      var year = now.getFullYear();
      var month = now.getMonth();
      var day = now.getDate();
      var date = new Date(0);
      date.setFullYear(year, month, day - 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/sub/index.js":
  /*!************************************************!*\
    !*** ./node_modules/date-fns/esm/sub/index.js ***!
    \************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return sub;
    });
    /* harmony import */


    var _subDays_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../subDays/index.js */
    "./node_modules/date-fns/esm/subDays/index.js");
    /* harmony import */


    var _subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../subMonths/index.js */
    "./node_modules/date-fns/esm/subMonths/index.js");
    /* harmony import */


    var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../toDate/index.js */
    "./node_modules/date-fns/esm/toDate/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /**
     * @name sub
     * @category Common Helpers
     * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
     *
     * @description
     * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted
     *
     * | Key     | Description                        |
     * |---------|------------------------------------|
     * | years   | Amount of years to be subtracted   |
     * | months  | Amount of months to be subtracted  |
     * | weeks   | Amount of weeks to be subtracted   |
     * | days    | Amount of days to be subtracted    |
     * | hours   | Amount of hours to be subtracted   |
     * | minutes | Amount of minutes to be subtracted |
     * | seconds | Amount of seconds to be subtracted |
     *
     * All values default to 0
     *
     * @returns {Date} the new date with the seconds subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract the following duration from 15 June 2017 15:29:20
     * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {
     *   years: 2,
     *   months: 9,
     *   weeks: 1,
     *   days: 7,
     *   hours: 5,
     *   minutes: 9,
     *   seconds: 30
     * })
     * //=> Mon Sep 1 2014 10:19:50
     */


    function sub(dirtyDate, duration) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(2, arguments);
      if (!duration || typeof duration !== 'object') return new Date(NaN);
      var years = 'years' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.years) : 0;
      var months = 'months' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.months) : 0;
      var weeks = 'weeks' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.weeks) : 0;
      var days = 'days' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.days) : 0;
      var hours = 'hours' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.hours) : 0;
      var minutes = 'minutes' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.minutes) : 0;
      var seconds = 'seconds' in duration ? Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(duration.seconds) : 0; // Subtract years and months

      var dateWithoutMonths = Object(_subMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(dirtyDate), months + years * 12); // Subtract weeks and days

      var dateWithoutDays = Object(_subDays_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds

      var minutestoSub = minutes + hours * 60;
      var secondstoSub = seconds + minutestoSub * 60;
      var mstoSub = secondstoSub * 1000;
      var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
      return finalDate;
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subBusinessDays/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/subBusinessDays/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubBusinessDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subBusinessDays;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addBusinessDays/index.js */
    "./node_modules/date-fns/esm/addBusinessDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subBusinessDays
     * @category Day Helpers
     * @summary Substract the specified number of business days (mon - fri) to the given date.
     *
     * @description
     * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the business days subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Substract 10 business days from 1 September 2014:
     * var result = subBusinessDays(new Date(2014, 8, 1), 10)
     * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)
     */


    function subBusinessDays(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addBusinessDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subDays/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/date-fns/esm/subDays/index.js ***!
    \****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubDaysIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subDays;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addDays_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addDays/index.js */
    "./node_modules/date-fns/esm/addDays/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subDays
     * @category Day Helpers
     * @summary Subtract the specified number of days from the given date.
     *
     * @description
     * Subtract the specified number of days from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the days subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 10 days from 1 September 2014:
     * var result = subDays(new Date(2014, 8, 1), 10)
     * //=> Fri Aug 22 2014 00:00:00
     */


    function subDays(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addDays_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subHours/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/subHours/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubHoursIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subHours;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addHours_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addHours/index.js */
    "./node_modules/date-fns/esm/addHours/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subHours
     * @category Hour Helpers
     * @summary Subtract the specified number of hours from the given date.
     *
     * @description
     * Subtract the specified number of hours from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the hours subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 2 hours from 11 July 2014 01:00:00:
     * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)
     * //=> Thu Jul 10 2014 23:00:00
     */


    function subHours(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addHours_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subISOWeekYears/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/subISOWeekYears/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubISOWeekYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subISOWeekYears;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addISOWeekYears/index.js */
    "./node_modules/date-fns/esm/addISOWeekYears/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subISOWeekYears
     * @category ISO Week-Numbering Year Helpers
     * @summary Subtract the specified number of ISO week-numbering years from the given date.
     *
     * @description
     * Subtract the specified number of ISO week-numbering years from the given date.
     *
     * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `subISOYears` to `subISOWeekYears`.
     *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
     *   This change makes the name consistent with
     *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the ISO week-numbering years subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 5 ISO week-numbering years from 1 September 2014:
     * var result = subISOWeekYears(new Date(2014, 8, 1), 5)
     * //=> Mon Aug 31 2009 00:00:00
     */


    function subISOWeekYears(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addISOWeekYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subMilliseconds/index.js":
  /*!************************************************************!*\
    !*** ./node_modules/date-fns/esm/subMilliseconds/index.js ***!
    \************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubMillisecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subMilliseconds;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMilliseconds/index.js */
    "./node_modules/date-fns/esm/addMilliseconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subMilliseconds
     * @category Millisecond Helpers
     * @summary Subtract the specified number of milliseconds from the given date.
     *
     * @description
     * Subtract the specified number of milliseconds from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the milliseconds subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
     * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
     * //=> Thu Jul 10 2014 12:45:29.250
     */


    function subMilliseconds(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMilliseconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subMinutes/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/subMinutes/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubMinutesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subMinutes;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMinutes_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMinutes/index.js */
    "./node_modules/date-fns/esm/addMinutes/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subMinutes
     * @category Minute Helpers
     * @summary Subtract the specified number of minutes from the given date.
     *
     * @description
     * Subtract the specified number of minutes from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the minutes subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 30 minutes from 10 July 2014 12:00:00:
     * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
     * //=> Thu Jul 10 2014 11:30:00
     */


    function subMinutes(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMinutes_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subMonths/index.js":
  /*!******************************************************!*\
    !*** ./node_modules/date-fns/esm/subMonths/index.js ***!
    \******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubMonthsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subMonths;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addMonths/index.js */
    "./node_modules/date-fns/esm/addMonths/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subMonths
     * @category Month Helpers
     * @summary Subtract the specified number of months from the given date.
     *
     * @description
     * Subtract the specified number of months from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the months subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 5 months from 1 February 2015:
     * var result = subMonths(new Date(2015, 1, 1), 5)
     * //=> Mon Sep 01 2014 00:00:00
     */


    function subMonths(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addMonths_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subQuarters/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/date-fns/esm/subQuarters/index.js ***!
    \********************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubQuartersIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subQuarters;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addQuarters_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addQuarters/index.js */
    "./node_modules/date-fns/esm/addQuarters/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subQuarters
     * @category Quarter Helpers
     * @summary Subtract the specified number of year quarters from the given date.
     *
     * @description
     * Subtract the specified number of year quarters from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the quarters subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 3 quarters from 1 September 2014:
     * var result = subQuarters(new Date(2014, 8, 1), 3)
     * //=> Sun Dec 01 2013 00:00:00
     */


    function subQuarters(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addQuarters_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subSeconds/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/date-fns/esm/subSeconds/index.js ***!
    \*******************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubSecondsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subSeconds;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addSeconds_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addSeconds/index.js */
    "./node_modules/date-fns/esm/addSeconds/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subSeconds
     * @category Second Helpers
     * @summary Subtract the specified number of seconds from the given date.
     *
     * @description
     * Subtract the specified number of seconds from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the seconds subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 30 seconds from 10 July 2014 12:45:00:
     * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
     * //=> Thu Jul 10 2014 12:44:30
     */


    function subSeconds(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addSeconds_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subWeeks/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/subWeeks/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubWeeksIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subWeeks;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addWeeks/index.js */
    "./node_modules/date-fns/esm/addWeeks/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subWeeks
     * @category Week Helpers
     * @summary Subtract the specified number of weeks from the given date.
     *
     * @description
     * Subtract the specified number of weeks from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the weeks subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 4 weeks from 1 September 2014:
     * var result = subWeeks(new Date(2014, 8, 1), 4)
     * //=> Mon Aug 04 2014 00:00:00
     */


    function subWeeks(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addWeeks_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/subYears/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/date-fns/esm/subYears/index.js ***!
    \*****************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmSubYearsIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return subYears;
    });
    /* harmony import */


    var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/toInteger/index.js */
    "./node_modules/date-fns/esm/_lib/toInteger/index.js");
    /* harmony import */


    var _addYears_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../addYears/index.js */
    "./node_modules/date-fns/esm/addYears/index.js");
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name subYears
     * @category Year Helpers
     * @summary Subtract the specified number of years from the given date.
     *
     * @description
     * Subtract the specified number of years from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the years subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 5 years from 1 September 2014:
     * var result = subYears(new Date(2014, 8, 1), 5)
     * //=> Tue Sep 01 2009 00:00:00
     */


    function subYears(dirtyDate, dirtyAmount) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(2, arguments);
      var amount = Object(_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(dirtyAmount);
      return Object(_addYears_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(dirtyDate, -amount);
    }
    /***/

  },

  /***/
  "./node_modules/date-fns/esm/toDate/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/date-fns/esm/toDate/index.js ***!
    \***************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesDateFnsEsmToDateIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "default", function () {
      return toDate;
    });
    /* harmony import */


    var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../_lib/requiredArgs/index.js */
    "./node_modules/date-fns/esm/_lib/requiredArgs/index.js");
    /**
     * @name toDate
     * @category Common Helpers
     * @summary Convert the given argument to an instance of Date.
     *
     * @description
     * Convert the given argument to an instance of Date.
     *
     * If the argument is an instance of Date, the function returns its clone.
     *
     * If the argument is a number, it is treated as a timestamp.
     *
     * If the argument is none of the above, the function returns Invalid Date.
     *
     * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
     *
     * @param {Date|Number} argument - the value to convert
     * @returns {Date} the parsed date in the local time zone
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Clone the date:
     * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
     * //=> Tue Feb 11 2014 11:30:30
     *
     * @example
     * // Convert the timestamp to date:
     * const result = toDate(1392098430000)
     * //=> Tue Feb 11 2014 11:30:30
     */


    function toDate(argument) {
      Object(_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
      var argStr = Object.prototype.toString.call(argument); // Clone the date

      if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
        // Prevent the date to lose the milliseconds when passed to new Date() in IE10
        return new Date(argument.getTime());
      } else if (typeof argument === 'number' || argStr === '[object Number]') {
        return new Date(argument);
      } else {
        if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
          // eslint-disable-next-line no-console
          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

          console.warn(new Error().stack);
        }

        return new Date(NaN);
      }
    }
    /***/

  },

  /***/
  "./node_modules/dom-mousemove-dispatcher/dist/bundle.js":
  /*!**************************************************************!*\
    !*** ./node_modules/dom-mousemove-dispatcher/dist/bundle.js ***!
    \**************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesDomMousemoveDispatcherDistBundleJs(module, exports, __webpack_require__) {
    "use strict";

    var objectCreate = void 0;

    if (typeof Object.create != 'function') {
      objectCreate = function (undefined) {
        var Temp = function Temp() {};

        return function (prototype, propertiesObject) {
          if (prototype !== Object(prototype) && prototype !== null) {
            throw TypeError('Argument must be an object, or null');
          }

          Temp.prototype = prototype || {};
          var result = new Temp();
          Temp.prototype = null;

          if (propertiesObject !== undefined) {
            Object.defineProperties(result, propertiesObject);
          } // to imitate the case of Object.create(null)


          if (prototype === null) {
            result.__proto__ = null;
          }

          return result;
        };
      }();
    } else {
      objectCreate = Object.create;
    }

    var objectCreate$1 = objectCreate;
    var mouseEventProps = ['altKey', 'button', 'buttons', 'clientX', 'clientY', 'ctrlKey', 'metaKey', 'movementX', 'movementY', 'offsetX', 'offsetY', 'pageX', 'pageY', 'region', 'relatedTarget', 'screenX', 'screenY', 'shiftKey', 'which', 'x', 'y'];

    function createDispatcher(element) {
      var defaultSettings = {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        ctrlKey: false,
        shiftKey: false,
        altKey: false,
        metaKey: false,
        button: 0,
        buttons: 1,
        relatedTarget: null,
        region: null
      };

      if (element !== undefined) {
        element.addEventListener('mousemove', onMove);
      }

      function onMove(e) {
        for (var i = 0; i < mouseEventProps.length; i++) {
          defaultSettings[mouseEventProps[i]] = e[mouseEventProps[i]];
        }
      }

      var dispatch = function () {
        if (MouseEvent) {
          return function m1(element, initMove, data) {
            var evt = new MouseEvent('mousemove', createMoveInit(defaultSettings, initMove)); //evt.dispatched = 'mousemove';

            setSpecial(evt, data);
            return element.dispatchEvent(evt);
          };
        } else if (typeof document.createEvent === 'function') {
          return function m2(element, initMove, data) {
            var settings = createMoveInit(defaultSettings, initMove);
            var evt = document.createEvent('MouseEvents');
            evt.initMouseEvent("mousemove", true, //can bubble
            true, //cancelable
            window, //view
            0, //detail
            settings.screenX, //0, //screenX
            settings.screenY, //0, //screenY
            settings.clientX, //80, //clientX
            settings.clientY, //20, //clientY
            settings.ctrlKey, //false, //ctrlKey
            settings.altKey, //false, //altKey
            settings.shiftKey, //false, //shiftKey
            settings.metaKey, //false, //metaKey
            settings.button, //0, //button
            settings.relatedTarget //null //relatedTarget
            ); //evt.dispatched = 'mousemove';

            setSpecial(evt, data);
            return element.dispatchEvent(evt);
          };
        } else if (typeof document.createEventObject === 'function') {
          return function m3(element, initMove, data) {
            var evt = document.createEventObject();
            var settings = createMoveInit(defaultSettings, initMove);

            for (var name in settings) {
              evt[name] = settings[name];
            } //evt.dispatched = 'mousemove';


            setSpecial(evt, data);
            return element.dispatchEvent(evt);
          };
        }
      }();

      function destroy() {
        if (element) element.removeEventListener('mousemove', onMove, false);
        defaultSettings = null;
      }

      return {
        destroy: destroy,
        dispatch: dispatch
      };
    }

    function createMoveInit(defaultSettings, initMove) {
      initMove = initMove || {};
      var settings = objectCreate$1(defaultSettings);

      for (var i = 0; i < mouseEventProps.length; i++) {
        if (initMove[mouseEventProps[i]] !== undefined) settings[mouseEventProps[i]] = initMove[mouseEventProps[i]];
      }

      return settings;
    }

    function setSpecial(e, data) {
      console.log('data ', data);
      e.data = data || {};
      e.dispatched = 'mousemove';
    }
    /*
    http://marcgrabanski.com/simulating-mouse-click-events-in-javascript/
    */


    module.exports = createDispatcher; //# sourceMappingURL=bundle.js.map

    /***/
  },

  /***/
  "./node_modules/dom-plane/dist/bundle.js":
  /*!***********************************************!*\
    !*** ./node_modules/dom-plane/dist/bundle.js ***!
    \***********************************************/

  /*! no static exports found */

  /***/
  function node_modulesDomPlaneDistBundleJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });

    function _interopDefault(ex) {
      return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
    }

    var createPointCb = _interopDefault(__webpack_require__(
    /*! create-point-cb */
    "./node_modules/create-point-cb/dist/bundle.js"));

    function createWindowRect() {
      var props = {
        top: {
          value: 0,
          enumerable: true
        },
        left: {
          value: 0,
          enumerable: true
        },
        right: {
          value: window.innerWidth,
          enumerable: true
        },
        bottom: {
          value: window.innerHeight,
          enumerable: true
        },
        width: {
          value: window.innerWidth,
          enumerable: true
        },
        height: {
          value: window.innerHeight,
          enumerable: true
        },
        x: {
          value: 0,
          enumerable: true
        },
        y: {
          value: 0,
          enumerable: true
        }
      };

      if (Object.create) {
        return Object.create({}, props);
      } else {
        var rect = {};
        Object.defineProperties(rect, props);
        return rect;
      }
    }

    function getClientRect(el) {
      if (el === window) {
        return createWindowRect();
      } else {
        try {
          var rect = el.getBoundingClientRect();

          if (rect.x === undefined) {
            rect.x = rect.left;
            rect.y = rect.top;
          }

          return rect;
        } catch (e) {
          throw new TypeError("Can't call getBoundingClientRect on " + el);
        }
      }
    }

    function pointInside(point, el) {
      var rect = getClientRect(el);
      return point.y > rect.top && point.y < rect.bottom && point.x > rect.left && point.x < rect.right;
    }

    exports.createPointCB = createPointCb;
    exports.getClientRect = getClientRect;
    exports.pointInside = pointInside; //# sourceMappingURL=bundle.js.map

    /***/
  },

  /***/
  "./node_modules/dom-set/dist/bundle.js":
  /*!*********************************************!*\
    !*** ./node_modules/dom-set/dist/bundle.js ***!
    \*********************************************/

  /*! no static exports found */

  /***/
  function node_modulesDomSetDistBundleJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });

    function _interopDefault(ex) {
      return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
    }

    var arrayFrom = _interopDefault(__webpack_require__(
    /*! array-from */
    "./node_modules/array-from/index.js"));

    var isArray = _interopDefault(__webpack_require__(
    /*! is-array */
    "./node_modules/is-array/index.js"));

    var isElement = _interopDefault(__webpack_require__(
    /*! iselement */
    "./node_modules/iselement/module/index.js"));

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
      return typeof obj;
    } : function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    /**
     * Returns `true` if provided input is Element.
     * @name isElement
     * @param {*} [input]
     * @returns {boolean}
     */


    var isElement$1 = function isElement$1(input) {
      return input != null && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.nodeType === 1 && _typeof(input.style) === 'object' && _typeof(input.ownerDocument) === 'object';
    };

    function select(selector) {
      if (typeof selector === 'string') {
        try {
          return document.querySelector(selector);
        } catch (e) {
          throw e;
        }
      } else if (isElement(selector)) {
        return selector;
      }
    }

    function selectAll(selector) {
      if (typeof selector === 'string') {
        return Array.prototype.slice.apply(document.querySelectorAll(selector));
      } else if (isArray(selector)) {
        return selector.map(select);
      } else if ('length' in selector) {
        return arrayFrom(selector).map(select);
      }
    }

    function indexOfElement(elements, element) {
      element = resolveElement(element, true);

      if (!isElement$1(element)) {
        return -1;
      }

      for (var i = 0; i < elements.length; i++) {
        if (elements[i] === element) {
          return i;
        }
      }

      return -1;
    }

    function hasElement(elements, element) {
      return -1 !== indexOfElement(elements, element);
    }

    function domListOf(arr) {
      if (!arr) {
        return [];
      }

      try {
        if (typeof arr === 'string') {
          return arrayFrom(document.querySelectorAll(arr));
        } else if (isArray(arr)) {
          return arr.map(resolveElement);
        } else {
          if (typeof arr.length === 'undefined') {
            return [resolveElement(arr)];
          }

          return arrayFrom(arr, resolveElement);
        }
      } catch (e) {
        throw new Error(e);
      }
    }

    function concatElementLists() {
      var lists = [],
          len = arguments.length;

      while (len--) {
        lists[len] = arguments[len];
      }

      return lists.reduce(function (last, list) {
        return list.length ? last : last.concat(domListOf(list));
      }, []);
    }

    function pushElements(elements, toAdd) {
      for (var i = 0; i < toAdd.length; i++) {
        if (!hasElement(elements, toAdd[i])) {
          elements.push(toAdd[i]);
        }
      }

      return toAdd;
    }

    function addElements(elements) {
      var toAdd = [],
          len = arguments.length - 1;

      while (len-- > 0) {
        toAdd[len] = arguments[len + 1];
      }

      toAdd = toAdd.map(resolveElement);
      return pushElements(elements, toAdd);
    }

    function removeElements(elements) {
      var toRemove = [],
          len = arguments.length - 1;

      while (len-- > 0) {
        toRemove[len] = arguments[len + 1];
      }

      return toRemove.map(resolveElement).reduce(function (last, e) {
        var index = indexOfElement(elements, e);

        if (index !== -1) {
          return last.concat(elements.splice(index, 1));
        }

        return last;
      }, []);
    }

    function resolveElement(element, noThrow) {
      if (typeof element === 'string') {
        try {
          return document.querySelector(element);
        } catch (e) {
          throw e;
        }
      }

      if (!isElement$1(element) && !noThrow) {
        throw new TypeError(element + " is not a DOM element.");
      }

      return element;
    }

    exports.indexOfElement = indexOfElement;
    exports.hasElement = hasElement;
    exports.domListOf = domListOf;
    exports.concatElementLists = concatElementLists;
    exports.addElements = addElements;
    exports.removeElements = removeElements;
    exports.resolveElement = resolveElement;
    exports.select = select;
    exports.selectAll = selectAll; //# sourceMappingURL=bundle.js.map

    /***/
  },

  /***/
  "./node_modules/is-array/index.js":
  /*!****************************************!*\
    !*** ./node_modules/is-array/index.js ***!
    \****************************************/

  /*! no static exports found */

  /***/
  function node_modulesIsArrayIndexJs(module, exports) {
    /**
     * isArray
     */
    var isArray = Array.isArray;
    /**
     * toString
     */

    var str = Object.prototype.toString;
    /**
     * Whether or not the given `val`
     * is an array.
     *
     * example:
     *
     *        isArray([]);
     *        // > true
     *        isArray(arguments);
     *        // > false
     *        isArray('');
     *        // > false
     *
     * @param {mixed} val
     * @return {bool}
     */

    module.exports = isArray || function (val) {
      return !!val && '[object Array]' == str.call(val);
    };
    /***/

  },

  /***/
  "./node_modules/iselement/module/index.js":
  /*!************************************************!*\
    !*** ./node_modules/iselement/module/index.js ***!
    \************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesIselementModuleIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);

    var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
      return typeof obj;
    } : function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
    };
    /**
     * Returns `true` if provided input is Element.
     * @name isElement
     * @param {*} [input]
     * @returns {boolean}
     */

    /* harmony default export */


    __webpack_exports__["default"] = function (input) {
      return input != null && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.nodeType === 1 && _typeof(input.style) === 'object' && _typeof(input.ownerDocument) === 'object';
    };
    /***/

  },

  /***/
  "./node_modules/positioning/dist/entry.js":
  /*!************************************************!*\
    !*** ./node_modules/positioning/dist/entry.js ***!
    \************************************************/

  /*! exports provided: positionElements */

  /***/
  function node_modulesPositioningDistEntryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _positioning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./positioning */
    "./node_modules/positioning/dist/positioning.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "positionElements", function () {
      return _positioning__WEBPACK_IMPORTED_MODULE_0__["positionElements"];
    }); //# sourceMappingURL=entry.js.map

    /***/

  },

  /***/
  "./node_modules/positioning/dist/positioning.js":
  /*!******************************************************!*\
    !*** ./node_modules/positioning/dist/positioning.js ***!
    \******************************************************/

  /*! exports provided: Positioning, positionElements */

  /***/
  function node_modulesPositioningDistPositioningJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Positioning", function () {
      return Positioning;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "positionElements", function () {
      return positionElements;
    }); // previous version:
    // https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js


    var Positioning =
    /** @class */
    function () {
      function Positioning() {}

      Positioning.prototype.getAllStyles = function (element) {
        return window.getComputedStyle(element);
      };

      Positioning.prototype.getStyle = function (element, prop) {
        return this.getAllStyles(element)[prop];
      };

      Positioning.prototype.isStaticPositioned = function (element) {
        return (this.getStyle(element, 'position') || 'static') === 'static';
      };

      Positioning.prototype.offsetParent = function (element) {
        var offsetParentEl = element.offsetParent || document.documentElement;

        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {
          offsetParentEl = offsetParentEl.offsetParent;
        }

        return offsetParentEl || document.documentElement;
      };

      Positioning.prototype.position = function (element, round) {
        if (round === void 0) {
          round = true;
        }

        var elPosition;
        var parentOffset = {
          width: 0,
          height: 0,
          top: 0,
          bottom: 0,
          left: 0,
          right: 0
        };

        if (this.getStyle(element, 'position') === 'fixed') {
          elPosition = element.getBoundingClientRect();
          elPosition = {
            top: elPosition.top,
            bottom: elPosition.bottom,
            left: elPosition.left,
            right: elPosition.right,
            height: elPosition.height,
            width: elPosition.width
          };
        } else {
          var offsetParentEl = this.offsetParent(element);
          elPosition = this.offset(element, false);

          if (offsetParentEl !== document.documentElement) {
            parentOffset = this.offset(offsetParentEl, false);
          }

          parentOffset.top += offsetParentEl.clientTop;
          parentOffset.left += offsetParentEl.clientLeft;
        }

        elPosition.top -= parentOffset.top;
        elPosition.bottom -= parentOffset.top;
        elPosition.left -= parentOffset.left;
        elPosition.right -= parentOffset.left;

        if (round) {
          elPosition.top = Math.round(elPosition.top);
          elPosition.bottom = Math.round(elPosition.bottom);
          elPosition.left = Math.round(elPosition.left);
          elPosition.right = Math.round(elPosition.right);
        }

        return elPosition;
      };

      Positioning.prototype.offset = function (element, round) {
        if (round === void 0) {
          round = true;
        }

        var elBcr = element.getBoundingClientRect();
        var viewportOffset = {
          top: window.pageYOffset - document.documentElement.clientTop,
          left: window.pageXOffset - document.documentElement.clientLeft
        };
        var elOffset = {
          height: elBcr.height || element.offsetHeight,
          width: elBcr.width || element.offsetWidth,
          top: elBcr.top + viewportOffset.top,
          bottom: elBcr.bottom + viewportOffset.top,
          left: elBcr.left + viewportOffset.left,
          right: elBcr.right + viewportOffset.left
        };

        if (round) {
          elOffset.height = Math.round(elOffset.height);
          elOffset.width = Math.round(elOffset.width);
          elOffset.top = Math.round(elOffset.top);
          elOffset.bottom = Math.round(elOffset.bottom);
          elOffset.left = Math.round(elOffset.left);
          elOffset.right = Math.round(elOffset.right);
        }

        return elOffset;
      };
      /*
        Return false if the element to position is outside the viewport
      */


      Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {
        var _a = placement.split('-'),
            _b = _a[0],
            placementPrimary = _b === void 0 ? 'top' : _b,
            _c = _a[1],
            placementSecondary = _c === void 0 ? 'center' : _c;

        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);
        var targetElStyles = this.getAllStyles(targetElement);
        var marginTop = parseFloat(targetElStyles.marginTop);
        var marginBottom = parseFloat(targetElStyles.marginBottom);
        var marginLeft = parseFloat(targetElStyles.marginLeft);
        var marginRight = parseFloat(targetElStyles.marginRight);
        var topPosition = 0;
        var leftPosition = 0;

        switch (placementPrimary) {
          case 'top':
            topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);
            break;

          case 'bottom':
            topPosition = hostElPosition.top + hostElPosition.height;
            break;

          case 'left':
            leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);
            break;

          case 'right':
            leftPosition = hostElPosition.left + hostElPosition.width;
            break;
        }

        switch (placementSecondary) {
          case 'top':
            topPosition = hostElPosition.top;
            break;

          case 'bottom':
            topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;
            break;

          case 'left':
            leftPosition = hostElPosition.left;
            break;

          case 'right':
            leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;
            break;

          case 'center':
            if (placementPrimary === 'top' || placementPrimary === 'bottom') {
              leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;
            } else {
              topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;
            }

            break;
        } /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix
        // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;


        targetElement.style.transform = "translate(" + Math.round(leftPosition) + "px, " + Math.round(topPosition) + "px)"; // Check if the targetElement is inside the viewport

        var targetElBCR = targetElement.getBoundingClientRect();
        var html = document.documentElement;
        var windowHeight = window.innerHeight || html.clientHeight;
        var windowWidth = window.innerWidth || html.clientWidth;
        return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;
      };

      return Positioning;
    }();

    var placementSeparator = /\s+/;
    var positionService = new Positioning();
    /*
     * Accept the placement array and applies the appropriate placement dependent on the viewport.
     * Returns the applied placement.
     * In case of auto placement, placements are selected in order
     *   'top', 'bottom', 'left', 'right',
     *   'top-left', 'top-right',
     *   'bottom-left', 'bottom-right',
     *   'left-top', 'left-bottom',
     *   'right-top', 'right-bottom'.
     * */

    function positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {
      var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);
      var allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];
      var classList = targetElement.classList;

      var addClassesToTarget = function addClassesToTarget(targetPlacement) {
        var _a = targetPlacement.split('-'),
            primary = _a[0],
            secondary = _a[1];

        var classes = [];

        if (baseClass) {
          classes.push(baseClass + "-" + primary);

          if (secondary) {
            classes.push(baseClass + "-" + primary + "-" + secondary);
          }

          classes.forEach(function (classname) {
            classList.add(classname);
          });
        }

        return classes;
      }; // Remove old placement classes to avoid issues


      if (baseClass) {
        allowedPlacements.forEach(function (placementToRemove) {
          classList.remove(baseClass + "-" + placementToRemove);
        });
      } // replace auto placement with other placements


      var hasAuto = placementVals.findIndex(function (val) {
        return val === 'auto';
      });

      if (hasAuto >= 0) {
        allowedPlacements.forEach(function (obj) {
          if (placementVals.find(function (val) {
            return val.search('^' + obj) !== -1;
          }) == null) {
            placementVals.splice(hasAuto++, 1, obj);
          }
        });
      } // coordinates where to position
      // Required for transform:


      var style = targetElement.style;
      style.position = 'absolute';
      style.top = '0';
      style.left = '0';
      style['will-change'] = 'transform';
      var testPlacement;
      var isInViewport = false;

      for (var _i = 0, placementVals_1 = placementVals; _i < placementVals_1.length; _i++) {
        testPlacement = placementVals_1[_i];
        var addedClasses = addClassesToTarget(testPlacement);

        if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {
          isInViewport = true;
          break;
        } // Remove the baseClasses for further calculation


        if (baseClass) {
          addedClasses.forEach(function (classname) {
            classList.remove(classname);
          });
        }
      }

      if (!isInViewport) {
        // If nothing match, the first placement is the default one
        testPlacement = placementVals[0];
        addClassesToTarget(testPlacement);
        positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);
      }

      return testPlacement;
    } //# sourceMappingURL=positioning.js.map

    /***/

  },

  /***/
  "./node_modules/type-func/dist/bundle.js":
  /*!***********************************************!*\
    !*** ./node_modules/type-func/dist/bundle.js ***!
    \***********************************************/

  /*! no static exports found */

  /***/
  function node_modulesTypeFuncDistBundleJs(module, exports, __webpack_require__) {
    "use strict";

    Object.defineProperty(exports, '__esModule', {
      value: true
    });

    function getDef(f, d) {
      if (typeof f === 'undefined') {
        return typeof d === 'undefined' ? f : d;
      }

      return f;
    }

    function _boolean(func, def) {
      func = getDef(func, def);

      if (typeof func === 'function') {
        return function f() {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return !!func.apply(this, args);
        };
      }

      return !!func ? function () {
        return true;
      } : function () {
        return false;
      };
    }

    function integer(func, def) {
      func = getDef(func, def);

      if (typeof func === 'function') {
        return function f() {
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }

          var n = parseInt(func.apply(this, args), 10);
          return n != n ? 0 : n;
        };
      }

      func = parseInt(func, 10);
      return func != func ? function () {
        return 0;
      } : function () {
        return func;
      };
    }

    function string(func, def) {
      func = getDef(func, def);

      if (typeof func === 'function') {
        return function f() {
          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }

          return '' + func.apply(this, args);
        };
      }

      func = '' + func;
      return function () {
        return func;
      };
    }

    exports["boolean"] = _boolean;
    exports.integer = integer;
    exports.string = string; //# sourceMappingURL=bundle.js.map

    /***/
  }
}]);
//# sourceMappingURL=default~apps-apps-module~dashboards-dashboard-module-es5.js.map