{"version":3,"sources":["./src/app/form/ngx-wizard/data/formData.model.ts","./src/app/form/ngx-wizard/data/formData.service.ts","./src/app/form/ngx-wizard/workflow/workflow.model.ts","./src/app/form/ngx-wizard/workflow/workflow.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["//Wizard form data class Starts\r\nexport class FormData {\r\n    first_name: string = '';\r\n    last_name : string = '';\r\n    email: string = '';\r\n    password : string ='';\r\n    company_name : string ='';\r\n    country_id :string = '';\r\n    work: string = '';\r\n    street: string = '';\r\n    city: string = '';\r\n    state: string = '';\r\n    zip: string = '';\r\n\r\n    clear() {\r\n        this.first_name = '';\r\n        this.last_name = '';\r\n        this.email = '';\r\n        this.company_name='';\r\n        this.password='';\r\n        this.country_id='';\r\n        this.work = '';\r\n        this.street = '';\r\n        this.city = '';\r\n        this.state = '';\r\n        this.zip = '';\r\n    }\r\n}\r\n//Wizard form data class Ends\r\n\r\n//Personal tab data class starts\r\nexport class Personal {\r\n    first_name: string = '';\r\n    last_name : string = '';\r\n    email: string = '';\r\n    password : string ='';\r\n    company_name : string ='';\r\n    country_id :string = '';\r\n}\r\n//Personal tab data class ends\r\n\r\n//Address tab data class starts\r\nexport class Address {\r\n    street: string = '';\r\n    city: string = '';\r\n    state: string = '';\r\n    zip: string = '';\r\n}\r\n//Address tab data class Ends","import { Injectable } from '@angular/core';\r\n\r\nimport { FormData, Personal, Address } from './formData.model';\r\nimport { WorkflowService } from '../workflow/workflow.service';\r\nimport { STEPS } from '../workflow/workflow.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class FormDataService {\r\n\r\n    private formData: FormData = new FormData();\r\n    private isPersonalFormValid: boolean = false;\r\n    private isWorkFormValid: boolean = false;\r\n    private isAddressFormValid: boolean = false;\r\n\r\n    constructor(private workflowService: WorkflowService) {\r\n    }\r\n    //Get Personal Tab Data\r\n    getPersonal(): Personal {\r\n        // Return the Personal data\r\n        var personal: Personal = {\r\n            first_name: this.formData.first_name,\r\n            last_name: this.formData.last_name,\r\n            email: this.formData.email,\r\n            company_name:this.formData.company_name,\r\n            password : this.formData.password,\r\n            country_id : this.formData.country_id\r\n        };\r\n        return personal;\r\n    }\r\n\r\n    //Set Personal Tab Data\r\n    setPersonal(data: Personal) {\r\n        // Update the Personal data only when the Personal Form had been validated successfully\r\n        this.isPersonalFormValid = true;\r\n        this.formData.first_name = data.first_name;\r\n        this.formData.last_name = data.last_name;\r\n        this.formData.email = data.email;\r\n\r\n        // Validate Personal Step in Workflow\r\n        this.workflowService.validateStep(STEPS.personal);\r\n    }\r\n\r\n    //Get Work Tab Data\r\n    getWork(): string {\r\n        // Return the work type\r\n        return this.formData.work;\r\n    }\r\n\r\n    //Set Work Tab Data\r\n    setWork(data: string) {\r\n        // Update the work type only when the Work Form had been validated successfully\r\n        this.isWorkFormValid = true;\r\n        this.formData.work = data;\r\n        // Validate Work Step in Workflow\r\n        this.workflowService.validateStep(STEPS.work);\r\n    }\r\n\r\n    //Get Address Tab Data\r\n    getAddress(): Address {\r\n        // Return the Address data\r\n        var address: Address = {\r\n            street: this.formData.street,\r\n            city: this.formData.city,\r\n            state: this.formData.state,\r\n            zip: this.formData.zip\r\n        };\r\n        return address;\r\n    }\r\n    \r\n    //Set Address Tab Data\r\n    setAddress(data: Address) {\r\n        // Update the Address data only when the Address Form had been validated successfully\r\n        this.isAddressFormValid = true;\r\n        this.formData.street = data.street;\r\n        this.formData.city = data.city;\r\n        this.formData.state = data.state;\r\n        this.formData.zip = data.zip;\r\n        // Validate Address Step in Workflow\r\n        this.workflowService.validateStep(STEPS.address);\r\n    }\r\n\r\n    getFormData(): FormData {\r\n        // Return the entire Form Data\r\n        return this.formData;\r\n    }\r\n\r\n    resetFormData(): FormData {\r\n        // Reset the workflow\r\n        this.workflowService.resetSteps();\r\n        // Return the form data after all this.* members had been reset\r\n        this.formData.clear();\r\n        this.isPersonalFormValid = this.isWorkFormValid = this.isAddressFormValid = false;\r\n        return this.formData;\r\n    }\r\n\r\n    isFormValid() {\r\n        // Return true if all forms had been validated successfully; otherwise, return false\r\n        return this.isPersonalFormValid &&\r\n            this.isWorkFormValid &&\r\n            this.isAddressFormValid;\r\n    }\r\n}","export const STEPS = {\r\n    personal: 'personal',\r\n    work: 'work',\r\n    address: 'address',\r\n    result: 'result'\r\n}\r\n","import { Injectable }         from '@angular/core';\r\nimport { STEPS }              from './workflow.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class WorkflowService {\r\n    private workflow = [\r\n        { step: STEPS.personal, valid: false },\r\n        { step: STEPS.work, valid: false },\r\n        { step: STEPS.address, valid: false },\r\n        { step: STEPS.result, valid: false }\r\n    ];\r\n    \r\n    validateStep(step: string) {\r\n        // If the state is found, set the valid field to true \r\n        var found = false;\r\n        for (var i = 0; i < this.workflow.length && !found; i++) {\r\n            if (this.workflow[i].step === step) {\r\n                found = this.workflow[i].valid = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    resetSteps() {\r\n        // Reset all the steps in the Workflow to be invalid\r\n        this.workflow.forEach(element => {\r\n            element.valid = false;\r\n        });\r\n    }\r\n\r\n    getFirstInvalidStep(step: string) : string {\r\n        // If all the previous steps are validated, return blank\r\n        // Otherwise, return the first invalid step\r\n        var found = false;\r\n        var valid = true;\r\n        var redirectToStep = '';\r\n        for (var i = 0; i < this.workflow.length && !found && valid; i++) {\r\n            let item = this.workflow[i];\r\n            if (item.step === step) {\r\n                found = true;\r\n                redirectToStep = '';\r\n            }\r\n            else {\r\n                valid = item.valid;\r\n                redirectToStep = item.step\r\n            }\r\n        }\r\n        return redirectToStep;\r\n    }\r\n}"],"sourceRoot":"webpack:///"}